
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      22    1       3       java.lang.Object::<init> (1 bytes)
 total in heap  [0x0000775055200010,0x0000775055200320] = 784
 relocation     [0x0000775055200170,0x00007750552001a0] = 48
 main code      [0x00007750552001a0,0x0000775055200280] = 224
 stub code      [0x0000775055200280,0x00007750552002b0] = 48
 metadata       [0x00007750552002b0,0x00007750552002c0] = 16
 scopes data    [0x00007750552002c0,0x00007750552002d8] = 24
 scopes pcs     [0x00007750552002d8,0x0000775055200318] = 64
 dependencies   [0x0000775055200318,0x0000775055200320] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007750552001a0:   mov    0x8(%rsi),%r10d
  0x00007750552001a4:   movabs $0x800000000,%r11
  0x00007750552001ae:   add    %r11,%r10
  0x00007750552001b1:   cmp    %rax,%r10
  0x00007750552001b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552001ba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552001c0:   mov    %eax,-0x14000(%rsp)
  0x00007750552001c7:   push   %rbp
  0x00007750552001c8:   sub    $0x30,%rsp
  0x00007750552001cc:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552001d6:   mov    0xf4(%rdi),%ebx
  0x00007750552001dc:   add    $0x2,%ebx
  0x00007750552001df:   mov    %ebx,0xf4(%rdi)
  0x00007750552001e5:   and    $0x7fe,%ebx
  0x00007750552001eb:   cmp    $0x0,%ebx
  0x00007750552001ee:   je     0x0000775055200207           ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Object::<init>@0 (line 44)
  0x00007750552001f4:   add    $0x30,%rsp
  0x00007750552001f8:   pop    %rbp
  0x00007750552001f9:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055200200:   ja     0x0000775055200225
  0x0000775055200206:   ret
  0x0000775055200207:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055200211:   mov    %r10,0x8(%rsp)
  0x0000775055200216:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520021e:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055200223:   jmp    0x00007750552001f4
  0x0000775055200225:   movabs $0x7750552001f9,%r10         ;   {internal_word}
  0x000077505520022f:   mov    %r10,0x360(%r15)
  0x0000775055200236:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520023b:   nop
  0x000077505520023c:   nop
  0x000077505520023d:   mov    0x3d8(%r15),%rax
  0x0000775055200244:   movq   $0x0,0x3d8(%r15)
  0x000077505520024f:   movq   $0x0,0x3e0(%r15)
  0x000077505520025a:   add    $0x30,%rsp
  0x000077505520025e:   pop    %rbp
  0x000077505520025f:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055200264:   hlt
  0x0000775055200265:   hlt
  0x0000775055200266:   hlt
  0x0000775055200267:   hlt
  0x0000775055200268:   hlt
  0x0000775055200269:   hlt
  0x000077505520026a:   hlt
  0x000077505520026b:   hlt
  0x000077505520026c:   hlt
  0x000077505520026d:   hlt
  0x000077505520026e:   hlt
  0x000077505520026f:   hlt
  0x0000775055200270:   hlt
  0x0000775055200271:   hlt
  0x0000775055200272:   hlt
  0x0000775055200273:   hlt
  0x0000775055200274:   hlt
  0x0000775055200275:   hlt
  0x0000775055200276:   hlt
  0x0000775055200277:   hlt
  0x0000775055200278:   hlt
  0x0000775055200279:   hlt
  0x000077505520027a:   hlt
  0x000077505520027b:   hlt
  0x000077505520027c:   hlt
  0x000077505520027d:   hlt
  0x000077505520027e:   hlt
  0x000077505520027f:   hlt
[Exception Handler]
  0x0000775055200280:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055200285:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520028f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055200293:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055200298:   hlt
[Deopt Handler Code]
  0x0000775055200299:   movabs $0x775055200299,%r10         ;   {section_word}
  0x00007750552002a3:   push   %r10
  0x00007750552002a5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552002aa:   hlt
  0x00007750552002ab:   hlt
  0x00007750552002ac:   hlt
  0x00007750552002ad:   hlt
  0x00007750552002ae:   hlt
  0x00007750552002af:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      25    2       3       java.lang.String::hashCode (60 bytes)
 total in heap  [0x0000775055200390,0x0000775055200b30] = 1952
 relocation     [0x00007750552004f0,0x0000775055200550] = 96
 main code      [0x0000775055200560,0x0000775055200860] = 768
 stub code      [0x0000775055200860,0x00007750552008b0] = 80
 metadata       [0x00007750552008b0,0x00007750552008c0] = 16
 scopes data    [0x00007750552008c0,0x0000775055200978] = 184
 scopes pcs     [0x0000775055200978,0x0000775055200b28] = 432
 dependencies   [0x0000775055200b28,0x0000775055200b30] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x0000775055200560:   mov    0x8(%rsi),%r10d
  0x0000775055200564:   movabs $0x800000000,%r11
  0x000077505520056e:   add    %r11,%r10
  0x0000775055200571:   cmp    %rax,%r10
  0x0000775055200574:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520057a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055200580:   mov    %eax,-0x14000(%rsp)
  0x0000775055200587:   push   %rbp
  0x0000775055200588:   sub    $0x40,%rsp
  0x000077505520058c:   mov    %rsi,0x28(%rsp)
  0x0000775055200591:   movabs $0x775020293828,%rdi         ;   {metadata(method data for {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x000077505520059b:   mov    0xf4(%rdi),%ebx
  0x00007750552005a1:   add    $0x2,%ebx
  0x00007750552005a4:   mov    %ebx,0xf4(%rdi)
  0x00007750552005aa:   and    $0x7fe,%ebx
  0x00007750552005b0:   cmp    $0x0,%ebx
  0x00007750552005b3:   je     0x00007750552007da           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@0 (line 2342)
  0x00007750552005b9:   mov    0xc(%rsi),%edi               ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@1 (line 2342)
  0x00007750552005bc:   cmp    $0x0,%edi
  0x00007750552005bf:   movabs $0x775020293828,%rbx         ;   {metadata(method data for {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x00007750552005c9:   movabs $0x138,%rax
  0x00007750552005d3:   jne    0x00007750552005e3
  0x00007750552005d9:   movabs $0x148,%rax
  0x00007750552005e3:   mov    (%rbx,%rax,1),%rdx
  0x00007750552005e7:   lea    0x1(%rdx),%rdx
  0x00007750552005eb:   mov    %rdx,(%rbx,%rax,1)
  0x00007750552005ef:   jne    0x00007750552007c4           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@6 (line 2343)
  0x00007750552005f5:   movsbl 0x11(%rsi),%ebx              ;*getfield hashIsZero {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@10 (line 2343)
  0x00007750552005f9:   cmp    $0x0,%ebx
  0x00007750552005fc:   movabs $0x775020293828,%rbx         ;   {metadata(method data for {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x0000775055200606:   movabs $0x158,%rax
  0x0000775055200610:   jne    0x0000775055200620
  0x0000775055200616:   movabs $0x168,%rax
  0x0000775055200620:   mov    (%rbx,%rax,1),%rdx
  0x0000775055200624:   lea    0x1(%rdx),%rdx
  0x0000775055200628:   mov    %rdx,(%rbx,%rax,1)
  0x000077505520062c:   jne    0x00007750552007c4           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@13 (line 2343)
  0x0000775055200632:   mov    %rsi,%rdi
  0x0000775055200635:   movabs $0x775020293828,%rbx         ;   {metadata(method data for {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x000077505520063f:   addq   $0x1,0x178(%rbx)
  0x0000775055200647:   movabs $0x775020293aa8,%rdi         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x0000775055200651:   mov    0xf4(%rdi),%ebx
  0x0000775055200657:   add    $0x2,%ebx
  0x000077505520065a:   mov    %ebx,0xf4(%rdi)
  0x0000775055200660:   and    $0x1ffffe,%ebx
  0x0000775055200666:   cmp    $0x0,%ebx
  0x0000775055200669:   je     0x00007750552007fb
  0x000077505520066f:   movabs $0x775020293aa8,%rdi         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x0000775055200679:   incl   0x148(%rdi)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@3 (line 4553)
                                                            ; - java.lang.String::hashCode@17 (line 2344)
  0x000077505520067f:   movsbl 0x10(%rsi),%edi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@7 (line 4553)
                                                            ; - java.lang.String::hashCode@17 (line 2344)
  0x0000775055200683:   cmp    $0x0,%edi
  0x0000775055200686:   movabs $0x775020293aa8,%rdi         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x0000775055200690:   movabs $0x158,%rbx
  0x000077505520069a:   jne    0x00007750552006aa
  0x00007750552006a0:   movabs $0x168,%rbx
  0x00007750552006aa:   mov    (%rdi,%rbx,1),%rax
  0x00007750552006ae:   lea    0x1(%rax),%rax
  0x00007750552006b2:   mov    %rax,(%rdi,%rbx,1)
  0x00007750552006b6:   jne    0x00007750552006d6           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@10 (line 4553)
                                                            ; - java.lang.String::hashCode@17 (line 2344)
  0x00007750552006bc:   movabs $0x775020293aa8,%rdi         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007750552006c6:   incl   0x178(%rdi)
  0x00007750552006cc:   mov    $0x1,%edi
  0x00007750552006d1:   jmp    0x00007750552006db           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@14 (line 4553)
                                                            ; - java.lang.String::hashCode@17 (line 2344)
  0x00007750552006d6:   mov    $0x0,%edi                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@18 (line 4553)
                                                            ; - java.lang.String::hashCode@17 (line 2344)
  0x00007750552006db:   and    $0x1,%edi
  0x00007750552006de:   cmp    $0x0,%edi
  0x00007750552006e1:   movabs $0x775020293828,%rdi         ;   {metadata(method data for {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x00007750552006eb:   movabs $0x1b0,%rbx
  0x00007750552006f5:   je     0x0000775055200705
  0x00007750552006fb:   movabs $0x1c0,%rbx
  0x0000775055200705:   mov    (%rdi,%rbx,1),%rax
  0x0000775055200709:   lea    0x1(%rax),%rax
  0x000077505520070d:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055200711:   je     0x0000775055200751           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@20 (line 2344)
  0x0000775055200717:   mov    0x14(%rsi),%edi
  0x000077505520071a:   shl    $0x3,%rdi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@24 (line 2344)
  0x000077505520071e:   movabs $0x775020293828,%rbx         ;   {metadata(method data for {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x0000775055200728:   addq   $0x1,0x1d0(%rbx)
  0x0000775055200730:   mov    %rdi,%rsi                    ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@27 (line 2344)
  0x0000775055200733:   nopl   0x0(%rax)
  0x0000775055200737:   call   0x000077505c788680           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@27 (line 2344)
                                                            ;   {static_call}
  0x000077505520073c:   movabs $0x775020293828,%rsi         ;   {metadata(method data for {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x0000775055200746:   incl   0x1e0(%rsi)
  0x000077505520074c:   jmp    0x0000775055200764           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@30 (line 2344)
  0x0000775055200751:   mov    0x14(%rsi),%edi
  0x0000775055200754:   shl    $0x3,%rdi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@34 (line 2345)
  0x0000775055200758:   mov    %rdi,%rsi                    ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@37 (line 2345)
  0x000077505520075b:   nopl   0x0(%rax)
  0x000077505520075f:   call   0x000077505c788680           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@37 (line 2345)
                                                            ;   {static_call}
  0x0000775055200764:   cmp    $0x0,%eax
  0x0000775055200767:   movabs $0x775020293828,%rsi         ;   {metadata(method data for {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x0000775055200771:   movabs $0x208,%rdi
  0x000077505520077b:   jne    0x000077505520078b
  0x0000775055200781:   movabs $0x218,%rdi
  0x000077505520078b:   mov    (%rsi,%rdi,1),%rbx
  0x000077505520078f:   lea    0x1(%rbx),%rbx
  0x0000775055200793:   mov    %rbx,(%rsi,%rdi,1)
  0x0000775055200797:   mov    0x28(%rsp),%rsi
  0x000077505520079c:   jne    0x00007750552007be           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@42 (line 2346)
  0x00007750552007a2:   movb   $0x1,0x11(%rsi)              ;*putfield hashIsZero {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@47 (line 2347)
  0x00007750552007a6:   movabs $0x775020293828,%rsi         ;   {metadata(method data for {method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x00007750552007b0:   incl   0x228(%rsi)
  0x00007750552007b6:   mov    %rax,%rdi
  0x00007750552007b9:   jmp    0x00007750552007c4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@50 (line 2347)
  0x00007750552007be:   mov    %eax,0xc(%rsi)               ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@55 (line 2349)
  0x00007750552007c1:   mov    %rax,%rdi                    ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::hashCode@58 (line 2352)
  0x00007750552007c4:   mov    %rdi,%rax
  0x00007750552007c7:   add    $0x40,%rsp
  0x00007750552007cb:   pop    %rbp
  0x00007750552007cc:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552007d3:   ja     0x000077505520081c
  0x00007750552007d9:   ret
  0x00007750552007da:   movabs $0x77502000b0c0,%r10         ;   {metadata({method} {0x000077502000b0c0} 'hashCode' '()I' in 'java/lang/String')}
  0x00007750552007e4:   mov    %r10,0x8(%rsp)
  0x00007750552007e9:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552007f1:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::hashCode@-1 (line 2342)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552007f6:   jmp    0x00007750552005b9
  0x00007750552007fb:   movabs $0x77502000f248,%r10         ;   {metadata({method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x0000775055200805:   mov    %r10,0x8(%rsp)
  0x000077505520080a:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055200812:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::isLatin1@-1 (line 4553)
                                                            ; - java.lang.String::hashCode@17 (line 2344)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055200817:   jmp    0x000077505520066f
  0x000077505520081c:   movabs $0x7750552007cc,%r10         ;   {internal_word}
  0x0000775055200826:   mov    %r10,0x360(%r15)
  0x000077505520082d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055200832:   nop
  0x0000775055200833:   nop
  0x0000775055200834:   mov    0x3d8(%r15),%rax
  0x000077505520083b:   movq   $0x0,0x3d8(%r15)
  0x0000775055200846:   movq   $0x0,0x3e0(%r15)
  0x0000775055200851:   add    $0x40,%rsp
  0x0000775055200855:   pop    %rbp
  0x0000775055200856:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505520085b:   hlt
  0x000077505520085c:   hlt
  0x000077505520085d:   hlt
  0x000077505520085e:   hlt
  0x000077505520085f:   hlt
[Stub Code]
  0x0000775055200860:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055200865:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520086f:   jmp    0x000077505520086f           ;   {runtime_call}
  0x0000775055200874:   nop
  0x0000775055200875:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520087f:   jmp    0x000077505520087f           ;   {runtime_call}
[Exception Handler]
  0x0000775055200884:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055200889:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055200893:   and    $0xfffffffffffffff0,%rsp
  0x0000775055200897:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520089c:   hlt
[Deopt Handler Code]
  0x000077505520089d:   movabs $0x77505520089d,%r10         ;   {section_word}
  0x00007750552008a7:   push   %r10
  0x00007750552008a9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552008ae:   hlt
  0x00007750552008af:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      28    3       3       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x0000775055200b90,0x0000775055201048] = 1208
 relocation     [0x0000775055200cf0,0x0000775055200d28] = 56
 main code      [0x0000775055200d40,0x0000775055200ec0] = 384
 stub code      [0x0000775055200ec0,0x0000775055200ef0] = 48
 metadata       [0x0000775055200ef0,0x0000775055200ef8] = 8
 scopes data    [0x0000775055200ef8,0x0000775055200f60] = 104
 scopes pcs     [0x0000775055200f60,0x0000775055201030] = 208
 dependencies   [0x0000775055201030,0x0000775055201038] = 8
 nul chk table  [0x0000775055201038,0x0000775055201048] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020176538} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x0000775055200d40:   mov    %eax,-0x14000(%rsp)
  0x0000775055200d47:   push   %rbp
  0x0000775055200d48:   sub    $0x30,%rsp
  0x0000775055200d4c:   movabs $0x775020293c68,%rax         ;   {metadata(method data for {method} {0x0000775020176538} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x0000775055200d56:   mov    0xf4(%rax),%edi
  0x0000775055200d5c:   add    $0x2,%edi
  0x0000775055200d5f:   mov    %edi,0xf4(%rax)
  0x0000775055200d65:   and    $0x7fe,%edi
  0x0000775055200d6b:   cmp    $0x0,%edi
  0x0000775055200d6e:   je     0x0000775055200e32           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@0 (line 195)
  0x0000775055200d74:   mov    0xc(%rsi),%eax               ; implicit exception: dispatches to 0x0000775055200e53
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@5 (line 196)
  0x0000775055200d77:   mov    $0x0,%edi
  0x0000775055200d7c:   mov    $0x0,%ebx
  0x0000775055200d81:   jmp    0x0000775055200de4           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@10 (line 196)
  0x0000775055200d86:   xchg   %ax,%ax
  0x0000775055200d88:   movslq %edi,%rdx
  0x0000775055200d8b:   movsbl 0x10(%rsi,%rdx,1),%edx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@19 (line 196)
  0x0000775055200d90:   mov    %rbx,%rcx
  0x0000775055200d93:   shl    $0x5,%ebx
  0x0000775055200d96:   sub    %ecx,%ebx
  0x0000775055200d98:   and    $0xff,%edx
  0x0000775055200d9e:   add    %edx,%ebx
  0x0000775055200da0:   inc    %edi
  0x0000775055200da2:   movabs $0x775020293c68,%rdx         ;   {metadata(method data for {method} {0x0000775020176538} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x0000775055200dac:   mov    0xf8(%rdx),%ecx
  0x0000775055200db2:   add    $0x2,%ecx
  0x0000775055200db5:   mov    %ecx,0xf8(%rdx)
  0x0000775055200dbb:   and    $0x3ffe,%ecx
  0x0000775055200dc1:   cmp    $0x0,%ecx
  0x0000775055200dc4:   je     0x0000775055200e58           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@37 (line 196)
  0x0000775055200dca:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::hashCode@37 (line 196)
  0x0000775055200dd1:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055200dd4:   movabs $0x775020293c68,%rdx         ;   {metadata(method data for {method} {0x0000775020176538} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x0000775055200dde:   incl   0x158(%rdx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@37 (line 196)
  0x0000775055200de4:   cmp    %eax,%edi
  0x0000775055200de6:   movabs $0x775020293c68,%rdx         ;   {metadata(method data for {method} {0x0000775020176538} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x0000775055200df0:   movabs $0x148,%rcx
  0x0000775055200dfa:   jl     0x0000775055200e0a
  0x0000775055200e00:   movabs $0x138,%rcx
  0x0000775055200e0a:   mov    (%rdx,%rcx,1),%r8
  0x0000775055200e0e:   lea    0x1(%r8),%r8
  0x0000775055200e12:   mov    %r8,(%rdx,%rcx,1)
  0x0000775055200e16:   jl     0x0000775055200d88           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@13 (line 196)
  0x0000775055200e1c:   mov    %rbx,%rax
  0x0000775055200e1f:   add    $0x30,%rsp
  0x0000775055200e23:   pop    %rbp
  0x0000775055200e24:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055200e2b:   ja     0x0000775055200e79
  0x0000775055200e31:   ret
  0x0000775055200e32:   movabs $0x775020176538,%r10         ;   {metadata({method} {0x0000775020176538} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x0000775055200e3c:   mov    %r10,0x8(%rsp)
  0x0000775055200e41:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055200e49:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::hashCode@-1 (line 195)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055200e4e:   jmp    0x0000775055200d74
  0x0000775055200e53:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@5 (line 196)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055200e58:   movabs $0x775020176538,%r10         ;   {metadata({method} {0x0000775020176538} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x0000775055200e62:   mov    %r10,0x8(%rsp)
  0x0000775055200e67:   movq   $0x25,(%rsp)
  0x0000775055200e6f:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::hashCode@37 (line 196)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055200e74:   jmp    0x0000775055200dca
  0x0000775055200e79:   movabs $0x775055200e24,%r10         ;   {internal_word}
  0x0000775055200e83:   mov    %r10,0x360(%r15)
  0x0000775055200e8a:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055200e8f:   nop
  0x0000775055200e90:   nop
  0x0000775055200e91:   mov    0x3d8(%r15),%rax
  0x0000775055200e98:   movq   $0x0,0x3d8(%r15)
  0x0000775055200ea3:   movq   $0x0,0x3e0(%r15)
  0x0000775055200eae:   add    $0x30,%rsp
  0x0000775055200eb2:   pop    %rbp
  0x0000775055200eb3:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055200eb8:   hlt
  0x0000775055200eb9:   hlt
  0x0000775055200eba:   hlt
  0x0000775055200ebb:   hlt
  0x0000775055200ebc:   hlt
  0x0000775055200ebd:   hlt
  0x0000775055200ebe:   hlt
  0x0000775055200ebf:   hlt
[Exception Handler]
  0x0000775055200ec0:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055200ec5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055200ecf:   and    $0xfffffffffffffff0,%rsp
  0x0000775055200ed3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055200ed8:   hlt
[Deopt Handler Code]
  0x0000775055200ed9:   movabs $0x775055200ed9,%r10         ;   {section_word}
  0x0000775055200ee3:   push   %r10
  0x0000775055200ee5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055200eea:   hlt
  0x0000775055200eeb:   hlt
  0x0000775055200eec:   hlt
  0x0000775055200eed:   hlt
  0x0000775055200eee:   hlt
  0x0000775055200eef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      30    4       3       java.lang.Math::floorMod (20 bytes)
 total in heap  [0x0000775055201090,0x0000775055201488] = 1016
 relocation     [0x00007750552011f0,0x0000775055201220] = 48
 main code      [0x0000775055201220,0x0000775055201380] = 352
 stub code      [0x0000775055201380,0x00007750552013b0] = 48
 metadata       [0x00007750552013b0,0x00007750552013b8] = 8
 scopes data    [0x00007750552013b8,0x00007750552013f0] = 56
 scopes pcs     [0x00007750552013f0,0x0000775055201470] = 128
 dependencies   [0x0000775055201470,0x0000775055201478] = 8
 nul chk table  [0x0000775055201478,0x0000775055201488] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000775055201220:   mov    %eax,-0x14000(%rsp)
  0x0000775055201227:   push   %rbp
  0x0000775055201228:   sub    $0x30,%rsp
  0x000077505520122c:   mov    %rdx,%rdi
  0x000077505520122f:   movabs $0x775020295760,%rax         ;   {metadata(method data for {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x0000775055201239:   mov    0xf4(%rax),%edx
  0x000077505520123f:   add    $0x2,%edx
  0x0000775055201242:   mov    %edx,0xf4(%rax)
  0x0000775055201248:   and    $0x7fe,%edx
  0x000077505520124e:   cmp    $0x0,%edx
  0x0000775055201251:   je     0x0000775055201304           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@0 (line 1342)
  0x0000775055201257:   mov    %rsi,%rax
  0x000077505520125a:   cmp    $0x80000000,%eax
  0x0000775055201260:   jne    0x0000775055201271
  0x0000775055201266:   xor    %edx,%edx
  0x0000775055201268:   cmp    $0xffffffff,%edi
  0x000077505520126b:   je     0x0000775055201274
  0x0000775055201271:   cltd
  0x0000775055201272:   idiv   %edi                         ; implicit exception: dispatches to 0x0000775055201325
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@2 (line 1342)
  0x0000775055201274:   mov    %rdx,%rax
  0x0000775055201277:   xor    %rdi,%rax
  0x000077505520127a:   cmp    $0x0,%eax
  0x000077505520127d:   movabs $0x775020295760,%rax         ;   {metadata(method data for {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x0000775055201287:   movabs $0x138,%rsi
  0x0000775055201291:   jge    0x00007750552012a1
  0x0000775055201297:   movabs $0x148,%rsi
  0x00007750552012a1:   mov    (%rax,%rsi,1),%rbx
  0x00007750552012a5:   lea    0x1(%rbx),%rbx
  0x00007750552012a9:   mov    %rbx,(%rax,%rsi,1)
  0x00007750552012ad:   jge    0x00007750552012ee           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@7 (line 1344)
  0x00007750552012b3:   cmp    $0x0,%edx
  0x00007750552012b6:   movabs $0x775020295760,%rax         ;   {metadata(method data for {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x00007750552012c0:   movabs $0x158,%rsi
  0x00007750552012ca:   je     0x00007750552012da
  0x00007750552012d0:   movabs $0x168,%rsi
  0x00007750552012da:   mov    (%rax,%rsi,1),%rbx
  0x00007750552012de:   lea    0x1(%rbx),%rbx
  0x00007750552012e2:   mov    %rbx,(%rax,%rsi,1)
  0x00007750552012e6:   je     0x00007750552012ee           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@11 (line 1344)
  0x00007750552012ec:   add    %edi,%edx
  0x00007750552012ee:   mov    %rdx,%rax
  0x00007750552012f1:   add    $0x30,%rsp
  0x00007750552012f5:   pop    %rbp
  0x00007750552012f6:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552012fd:   ja     0x000077505520132a
  0x0000775055201303:   ret
  0x0000775055201304:   movabs $0x775020189b08,%r10         ;   {metadata({method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000077505520130e:   mov    %r10,0x8(%rsp)
  0x0000775055201313:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520131b:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.lang.Math::floorMod@-1 (line 1342)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055201320:   jmp    0x0000775055201257
  0x0000775055201325:   call   0x000077505c8292a0           ; ImmutableOopMap {}
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@2 (line 1342)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000077505520132a:   movabs $0x7750552012f6,%r10         ;   {internal_word}
  0x0000775055201334:   mov    %r10,0x360(%r15)
  0x000077505520133b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055201340:   nop
  0x0000775055201341:   nop
  0x0000775055201342:   mov    0x3d8(%r15),%rax
  0x0000775055201349:   movq   $0x0,0x3d8(%r15)
  0x0000775055201354:   movq   $0x0,0x3e0(%r15)
  0x000077505520135f:   add    $0x30,%rsp
  0x0000775055201363:   pop    %rbp
  0x0000775055201364:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055201369:   hlt
  0x000077505520136a:   hlt
  0x000077505520136b:   hlt
  0x000077505520136c:   hlt
  0x000077505520136d:   hlt
  0x000077505520136e:   hlt
  0x000077505520136f:   hlt
  0x0000775055201370:   hlt
  0x0000775055201371:   hlt
  0x0000775055201372:   hlt
  0x0000775055201373:   hlt
  0x0000775055201374:   hlt
  0x0000775055201375:   hlt
  0x0000775055201376:   hlt
  0x0000775055201377:   hlt
  0x0000775055201378:   hlt
  0x0000775055201379:   hlt
  0x000077505520137a:   hlt
  0x000077505520137b:   hlt
  0x000077505520137c:   hlt
  0x000077505520137d:   hlt
  0x000077505520137e:   hlt
  0x000077505520137f:   hlt
[Exception Handler]
  0x0000775055201380:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055201385:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520138f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055201393:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055201398:   hlt
[Deopt Handler Code]
  0x0000775055201399:   movabs $0x775055201399,%r10         ;   {section_word}
  0x00007750552013a3:   push   %r10
  0x00007750552013a5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552013aa:   hlt
  0x00007750552013ab:   hlt
  0x00007750552013ac:   hlt
  0x00007750552013ad:   hlt
  0x00007750552013ae:   hlt
  0x00007750552013af:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      32    5       3       java.util.ImmutableCollections$SetN::probe (56 bytes)
 total in heap  [0x0000775055201510,0x0000775055201fa0] = 2704
 relocation     [0x0000775055201670,0x00007750552016f0] = 128
 main code      [0x0000775055201700,0x0000775055201c00] = 1280
 stub code      [0x0000775055201c00,0x0000775055201c50] = 80
 metadata       [0x0000775055201c50,0x0000775055201c60] = 16
 scopes data    [0x0000775055201c60,0x0000775055201d68] = 264
 scopes pcs     [0x0000775055201d68,0x0000775055201f68] = 512
 dependencies   [0x0000775055201f68,0x0000775055201f70] = 8
 nul chk table  [0x0000775055201f70,0x0000775055201fa0] = 48

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN'
  # this:     rsi:rsi   = 'java/util/ImmutableCollections$SetN'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x0000775055201700:   mov    0x8(%rsi),%r10d
  0x0000775055201704:   movabs $0x800000000,%r11
  0x000077505520170e:   add    %r11,%r10
  0x0000775055201711:   cmp    %rax,%r10
  0x0000775055201714:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520171a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055201720:   mov    %eax,-0x14000(%rsp)
  0x0000775055201727:   push   %rbp
  0x0000775055201728:   sub    $0x50,%rsp
  0x000077505520172c:   mov    %rsi,0x30(%rsp)
  0x0000775055201731:   mov    %rdx,0x38(%rsp)
  0x0000775055201736:   movabs $0x775020295900,%rdi         ;   {metadata(method data for {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055201740:   mov    0xf4(%rdi),%ebx
  0x0000775055201746:   add    $0x2,%ebx
  0x0000775055201749:   mov    %ebx,0xf4(%rdi)
  0x000077505520174f:   and    $0x7fe,%ebx
  0x0000775055201755:   cmp    $0x0,%ebx
  0x0000775055201758:   je     0x0000775055201b0a           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@0 (line 1007)
  0x000077505520175e:   cmp    (%rdx),%rax                  ; implicit exception: dispatches to 0x0000775055201b2b
  0x0000775055201761:   mov    %rdx,%rdi
  0x0000775055201764:   movabs $0x775020295900,%rbx         ;   {metadata(method data for {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000077505520176e:   mov    0x8(%rdi),%edi
  0x0000775055201771:   movabs $0x800000000,%r10
  0x000077505520177b:   add    %r10,%rdi
  0x000077505520177e:   cmp    0x148(%rbx),%rdi
  0x0000775055201785:   jne    0x0000775055201794
  0x0000775055201787:   addq   $0x1,0x150(%rbx)
  0x000077505520178f:   jmp    0x00007750552017fa
  0x0000775055201794:   cmp    0x158(%rbx),%rdi
  0x000077505520179b:   jne    0x00007750552017aa
  0x000077505520179d:   addq   $0x1,0x160(%rbx)
  0x00007750552017a5:   jmp    0x00007750552017fa
  0x00007750552017aa:   cmpq   $0x0,0x148(%rbx)
  0x00007750552017b5:   jne    0x00007750552017ce
  0x00007750552017b7:   mov    %rdi,0x148(%rbx)
  0x00007750552017be:   movq   $0x1,0x150(%rbx)
  0x00007750552017c9:   jmp    0x00007750552017fa
  0x00007750552017ce:   cmpq   $0x0,0x158(%rbx)
  0x00007750552017d9:   jne    0x00007750552017f2
  0x00007750552017db:   mov    %rdi,0x158(%rbx)
  0x00007750552017e2:   movq   $0x1,0x160(%rbx)
  0x00007750552017ed:   jmp    0x00007750552017fa
  0x00007750552017f2:   addq   $0x1,0x138(%rbx)
  0x00007750552017fa:   mov    %rdx,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@1 (line 1007)
  0x00007750552017fd:   movabs $0xffffffffffffffff,%rax
  0x0000775055201807:   call   0x000077505c788380           ; ImmutableOopMap {[48]=Oop [56]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@1 (line 1007)
                                                            ;   {virtual_call}
  0x000077505520180c:   mov    0x30(%rsp),%rsi
  0x0000775055201811:   mov    0x10(%rsi),%edx
  0x0000775055201814:   shl    $0x3,%rdx                    ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@5 (line 1007)
  0x0000775055201818:   mov    0xc(%rdx),%edi               ; implicit exception: dispatches to 0x0000775055201b30
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@8 (line 1007)
  0x000077505520181b:   movabs $0x775020295900,%rdx         ;   {metadata(method data for {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055201825:   addq   $0x1,0x170(%rdx)
  0x000077505520182d:   movabs $0x775020295760,%rdx         ;   {metadata(method data for {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x0000775055201837:   mov    0xf4(%rdx),%ebx
  0x000077505520183d:   add    $0x2,%ebx
  0x0000775055201840:   mov    %ebx,0xf4(%rdx)
  0x0000775055201846:   and    $0x1ffffe,%ebx
  0x000077505520184c:   cmp    $0x0,%ebx
  0x000077505520184f:   je     0x0000775055201b35
  0x0000775055201855:   cmp    $0x80000000,%eax
  0x000077505520185b:   jne    0x000077505520186c
  0x0000775055201861:   xor    %edx,%edx
  0x0000775055201863:   cmp    $0xffffffff,%edi
  0x0000775055201866:   je     0x000077505520186f
  0x000077505520186c:   cltd
  0x000077505520186d:   idiv   %edi                         ; implicit exception: dispatches to 0x0000775055201b56
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@2 (line 1342)
                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1007)
  0x000077505520186f:   mov    %rdx,%rbx
  0x0000775055201872:   xor    %rdi,%rbx
  0x0000775055201875:   cmp    $0x0,%ebx
  0x0000775055201878:   movabs $0x775020295760,%rbx         ;   {metadata(method data for {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x0000775055201882:   movabs $0x138,%rax
  0x000077505520188c:   jge    0x000077505520189c
  0x0000775055201892:   movabs $0x148,%rax
  0x000077505520189c:   mov    (%rbx,%rax,1),%rcx
  0x00007750552018a0:   lea    0x1(%rcx),%rcx
  0x00007750552018a4:   mov    %rcx,(%rbx,%rax,1)
  0x00007750552018a8:   jge    0x00007750552018f0           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@7 (line 1344)
                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1007)
  0x00007750552018ae:   cmp    $0x0,%edx
  0x00007750552018b1:   movabs $0x775020295760,%rbx         ;   {metadata(method data for {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x00007750552018bb:   movabs $0x158,%rax
  0x00007750552018c5:   je     0x00007750552018d5
  0x00007750552018cb:   movabs $0x168,%rax
  0x00007750552018d5:   mov    (%rbx,%rax,1),%rcx
  0x00007750552018d9:   lea    0x1(%rcx),%rcx
  0x00007750552018dd:   mov    %rcx,(%rbx,%rax,1)
  0x00007750552018e1:   je     0x00007750552018f0           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@11 (line 1344)
                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1007)
  0x00007750552018e7:   add    %edi,%edx
  0x00007750552018e9:   nopl   0x0(%rax)
  0x00007750552018f0:   mov    0x38(%rsp),%rdi
  0x00007750552018f5:   mov    0x10(%rsi),%ebx
  0x00007750552018f8:   shl    $0x3,%rbx                    ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@14 (line 1009)
  0x00007750552018fc:   mov    0xc(%rbx),%eax               ; implicit exception: dispatches to 0x0000775055201b5b
  0x00007750552018ff:   cmp    %edx,%eax
  0x0000775055201901:   jbe    0x0000775055201b60
  0x0000775055201907:   movslq %edx,%rax
  0x000077505520190a:   mov    0x10(%rbx,%rax,4),%ebx
  0x000077505520190e:   shl    $0x3,%rbx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@18 (line 1009)
  0x0000775055201912:   cmp    $0x0,%rbx
  0x0000775055201916:   movabs $0x775020295900,%rax         ;   {metadata(method data for {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055201920:   movabs $0x190,%rcx
  0x000077505520192a:   je     0x000077505520193a
  0x0000775055201930:   movabs $0x180,%rcx
  0x000077505520193a:   mov    (%rax,%rcx,1),%r8
  0x000077505520193e:   lea    0x1(%r8),%r8
  0x0000775055201942:   mov    %r8,(%rax,%rcx,1)
  0x0000775055201946:   je     0x0000775055201af0           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@21 (line 1010)
  0x000077505520194c:   mov    %edx,0x40(%rsp)
  0x0000775055201950:   mov    %rdi,%rax
  0x0000775055201953:   movabs $0x775020295900,%rcx         ;   {metadata(method data for {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000077505520195d:   mov    0x8(%rax),%eax
  0x0000775055201960:   movabs $0x800000000,%r10
  0x000077505520196a:   add    %r10,%rax
  0x000077505520196d:   cmp    0x1b0(%rcx),%rax
  0x0000775055201974:   jne    0x0000775055201983
  0x0000775055201976:   addq   $0x1,0x1b8(%rcx)
  0x000077505520197e:   jmp    0x00007750552019e9
  0x0000775055201983:   cmp    0x1c0(%rcx),%rax
  0x000077505520198a:   jne    0x0000775055201999
  0x000077505520198c:   addq   $0x1,0x1c8(%rcx)
  0x0000775055201994:   jmp    0x00007750552019e9
  0x0000775055201999:   cmpq   $0x0,0x1b0(%rcx)
  0x00007750552019a4:   jne    0x00007750552019bd
  0x00007750552019a6:   mov    %rax,0x1b0(%rcx)
  0x00007750552019ad:   movq   $0x1,0x1b8(%rcx)
  0x00007750552019b8:   jmp    0x00007750552019e9
  0x00007750552019bd:   cmpq   $0x0,0x1c0(%rcx)
  0x00007750552019c8:   jne    0x00007750552019e1
  0x00007750552019ca:   mov    %rax,0x1c0(%rcx)
  0x00007750552019d1:   movq   $0x1,0x1c8(%rcx)
  0x00007750552019dc:   jmp    0x00007750552019e9
  0x00007750552019e1:   addq   $0x1,0x1a0(%rcx)
  0x00007750552019e9:   mov    %rbx,%rdx
  0x00007750552019ec:   mov    %rdi,%rsi                    ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@31 (line 1012)
  0x00007750552019ef:   nopw   0x0(%rax,%rax,1)
  0x00007750552019f5:   movabs $0xffffffffffffffff,%rax
  0x00007750552019ff:   call   0x000077505c788380           ; ImmutableOopMap {[48]=Oop [56]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@31 (line 1012)
                                                            ;   {virtual_call}
  0x0000775055201a04:   cmp    $0x0,%eax
  0x0000775055201a07:   movabs $0x775020295900,%rax         ;   {metadata(method data for {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055201a11:   movabs $0x1e8,%rsi
  0x0000775055201a1b:   jne    0x0000775055201a2b
  0x0000775055201a21:   movabs $0x1d8,%rsi
  0x0000775055201a2b:   mov    (%rax,%rsi,1),%rdi
  0x0000775055201a2f:   lea    0x1(%rdi),%rdi
  0x0000775055201a33:   mov    %rdi,(%rax,%rsi,1)
  0x0000775055201a37:   jne    0x0000775055201ad6           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@34 (line 1012)
  0x0000775055201a3d:   mov    0x30(%rsp),%rsi
  0x0000775055201a42:   mov    0x40(%rsp),%edx
  0x0000775055201a46:   inc    %edx
  0x0000775055201a48:   mov    0x10(%rsi),%eax
  0x0000775055201a4b:   shl    $0x3,%rax                    ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@44 (line 1014)
  0x0000775055201a4f:   mov    0xc(%rax),%eax               ; implicit exception: dispatches to 0x0000775055201b6e
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@47 (line 1014)
  0x0000775055201a52:   cmp    %eax,%edx
  0x0000775055201a54:   movabs $0x775020295900,%rax         ;   {metadata(method data for {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055201a5e:   movabs $0x1f8,%rdi
  0x0000775055201a68:   jne    0x0000775055201a78
  0x0000775055201a6e:   movabs $0x208,%rdi
  0x0000775055201a78:   mov    (%rax,%rdi,1),%rbx
  0x0000775055201a7c:   lea    0x1(%rbx),%rbx
  0x0000775055201a80:   mov    %rbx,(%rax,%rdi,1)
  0x0000775055201a84:   jne    0x0000775055201a8f           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@48 (line 1014)
  0x0000775055201a8a:   mov    $0x0,%edx
  0x0000775055201a8f:   movabs $0x775020295900,%rax         ;   {metadata(method data for {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055201a99:   mov    0xf8(%rax),%edi
  0x0000775055201a9f:   add    $0x2,%edi
  0x0000775055201aa2:   mov    %edi,0xf8(%rax)
  0x0000775055201aa8:   and    $0x3ffe,%edi
  0x0000775055201aae:   cmp    $0x0,%edi
  0x0000775055201ab1:   je     0x0000775055201b73           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@53 (line 1017)
  0x0000775055201ab7:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[56]=Oop rsi=Oop [48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$SetN::probe@53 (line 1017)
  0x0000775055201abe:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055201ac1:   movabs $0x775020295900,%rax         ;   {metadata(method data for {method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055201acb:   incl   0x218(%rax)
  0x0000775055201ad1:   jmp    0x00007750552018f0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@53 (line 1017)
  0x0000775055201ad6:   mov    0x40(%rsp),%edx
  0x0000775055201ada:   mov    %rdx,%rax
  0x0000775055201add:   add    $0x50,%rsp
  0x0000775055201ae1:   pop    %rbp
  0x0000775055201ae2:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055201ae9:   ja     0x0000775055201b94
  0x0000775055201aef:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@38 (line 1013)
  0x0000775055201af0:   neg    %edx
  0x0000775055201af2:   mov    %rdx,%rax
  0x0000775055201af5:   dec    %eax
  0x0000775055201af7:   add    $0x50,%rsp
  0x0000775055201afb:   pop    %rbp
  0x0000775055201afc:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055201b03:   ja     0x0000775055201baa
  0x0000775055201b09:   ret
  0x0000775055201b0a:   movabs $0x775020154ab8,%r10         ;   {metadata({method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055201b14:   mov    %r10,0x8(%rsp)
  0x0000775055201b19:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055201b21:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [48]=Oop rdx=Oop [56]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$SetN::probe@-1 (line 1007)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055201b26:   jmp    0x000077505520175e
  0x0000775055201b2b:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop [56]=Oop [48]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@1 (line 1007)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055201b30:   call   0x000077505c8295a0           ; ImmutableOopMap {[56]=Oop rsi=Oop [48]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@8 (line 1007)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055201b35:   movabs $0x775020189b08,%r10         ;   {metadata({method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x0000775055201b3f:   mov    %r10,0x8(%rsp)
  0x0000775055201b44:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055201b4c:   call   0x000077505c82e680           ; ImmutableOopMap {[56]=Oop rsi=Oop [48]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Math::floorMod@-1 (line 1342)
                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1007)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055201b51:   jmp    0x0000775055201855
  0x0000775055201b56:   call   0x000077505c8292a0           ; ImmutableOopMap {[56]=Oop rsi=Oop [48]=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@2 (line 1342)
                                                            ; - java.util.ImmutableCollections$SetN::probe@9 (line 1007)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x0000775055201b5b:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [48]=Oop rdi=Oop [56]=Oop rbx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@18 (line 1009)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055201b60:   mov    %rdx,(%rsp)
  0x0000775055201b64:   mov    %rbx,0x8(%rsp)
  0x0000775055201b69:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [48]=Oop rdi=Oop [56]=Oop rbx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@18 (line 1009)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055201b6e:   call   0x000077505c8295a0           ; ImmutableOopMap {[56]=Oop rsi=Oop [48]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::probe@47 (line 1014)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055201b73:   movabs $0x775020154ab8,%r10         ;   {metadata({method} {0x0000775020154ab8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055201b7d:   mov    %r10,0x8(%rsp)
  0x0000775055201b82:   movq   $0x35,(%rsp)
  0x0000775055201b8a:   call   0x000077505c82e680           ; ImmutableOopMap {[56]=Oop rsi=Oop [48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$SetN::probe@53 (line 1017)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055201b8f:   jmp    0x0000775055201ab7
  0x0000775055201b94:   movabs $0x775055201ae2,%r10         ;   {internal_word}
  0x0000775055201b9e:   mov    %r10,0x360(%r15)
  0x0000775055201ba5:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055201baa:   movabs $0x775055201afc,%r10         ;   {internal_word}
  0x0000775055201bb4:   mov    %r10,0x360(%r15)
  0x0000775055201bbb:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055201bc0:   nop
  0x0000775055201bc1:   nop
  0x0000775055201bc2:   mov    0x3d8(%r15),%rax
  0x0000775055201bc9:   movq   $0x0,0x3d8(%r15)
  0x0000775055201bd4:   movq   $0x0,0x3e0(%r15)
  0x0000775055201bdf:   add    $0x50,%rsp
  0x0000775055201be3:   pop    %rbp
  0x0000775055201be4:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055201be9:   hlt
  0x0000775055201bea:   hlt
  0x0000775055201beb:   hlt
  0x0000775055201bec:   hlt
  0x0000775055201bed:   hlt
  0x0000775055201bee:   hlt
  0x0000775055201bef:   hlt
  0x0000775055201bf0:   hlt
  0x0000775055201bf1:   hlt
  0x0000775055201bf2:   hlt
  0x0000775055201bf3:   hlt
  0x0000775055201bf4:   hlt
  0x0000775055201bf5:   hlt
  0x0000775055201bf6:   hlt
  0x0000775055201bf7:   hlt
  0x0000775055201bf8:   hlt
  0x0000775055201bf9:   hlt
  0x0000775055201bfa:   hlt
  0x0000775055201bfb:   hlt
  0x0000775055201bfc:   hlt
  0x0000775055201bfd:   hlt
  0x0000775055201bfe:   hlt
  0x0000775055201bff:   hlt
[Stub Code]
  0x0000775055201c00:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055201c05:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055201c0f:   jmp    0x0000775055201c0f           ;   {runtime_call}
  0x0000775055201c14:   nop
  0x0000775055201c15:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055201c1f:   jmp    0x0000775055201c1f           ;   {runtime_call}
[Exception Handler]
  0x0000775055201c24:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055201c29:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055201c33:   and    $0xfffffffffffffff0,%rsp
  0x0000775055201c37:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055201c3c:   hlt
[Deopt Handler Code]
  0x0000775055201c3d:   movabs $0x775055201c3d,%r10         ;   {section_word}
  0x0000775055201c47:   push   %r10
  0x0000775055201c49:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055201c4e:   hlt
  0x0000775055201c4f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      37    6       3       java.lang.String::equals (56 bytes)
 total in heap  [0x0000775055202010,0x0000775055202850] = 2112
 relocation     [0x0000775055202170,0x00007750552021d0] = 96
 main code      [0x00007750552021e0,0x0000775055202620] = 1088
 stub code      [0x0000775055202620,0x0000775055202660] = 64
 metadata       [0x0000775055202660,0x0000775055202668] = 8
 scopes data    [0x0000775055202668,0x00007750552026e8] = 128
 scopes pcs     [0x00007750552026e8,0x0000775055202838] = 336
 dependencies   [0x0000775055202838,0x0000775055202840] = 8
 nul chk table  [0x0000775055202840,0x0000775055202850] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007750552021e0:   mov    0x8(%rsi),%r10d
  0x00007750552021e4:   movabs $0x800000000,%r11
  0x00007750552021ee:   add    %r11,%r10
  0x00007750552021f1:   cmp    %rax,%r10
  0x00007750552021f4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552021fa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055202200:   mov    %eax,-0x14000(%rsp)
  0x0000775055202207:   push   %rbp
  0x0000775055202208:   sub    $0x30,%rsp
  0x000077505520220c:   movabs $0x77502029d218,%rdi         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000775055202216:   mov    0xf4(%rdi),%ebx
  0x000077505520221c:   add    $0x2,%ebx
  0x000077505520221f:   mov    %ebx,0xf4(%rdi)
  0x0000775055202225:   and    $0x7fe,%ebx
  0x000077505520222b:   cmp    $0x0,%ebx
  0x000077505520222e:   je     0x0000775055202592           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@0 (line 1827)
  0x0000775055202234:   cmp    %rdx,%rsi
  0x0000775055202237:   movabs $0x77502029d218,%rdi         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000775055202241:   movabs $0x148,%rbx
  0x000077505520224b:   je     0x000077505520225b
  0x0000775055202251:   movabs $0x138,%rbx
  0x000077505520225b:   mov    (%rdi,%rbx,1),%rax
  0x000077505520225f:   lea    0x1(%rax),%rax
  0x0000775055202263:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055202267:   je     0x000077505520257a           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@2 (line 1827)
  0x000077505520226d:   cmp    $0x0,%rdx
  0x0000775055202271:   jne    0x0000775055202289
  0x0000775055202273:   movabs $0x77502029d218,%rax         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000077505520227d:   orb    $0x1,0x151(%rax)
  0x0000775055202284:   jmp    0x000077505520235b
  0x0000775055202289:   movabs $0x800041bc8,%rcx            ;   {metadata('java/lang/String')}
  0x0000775055202293:   mov    0x8(%rdx),%ebx
  0x0000775055202296:   movabs $0x800000000,%r10
  0x00007750552022a0:   add    %r10,%rbx
  0x00007750552022a3:   cmp    %rbx,%rcx
  0x00007750552022a6:   jne    0x000077505520233f
  0x00007750552022ac:   movabs $0x77502029d218,%rax         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007750552022b6:   mov    0x8(%rdx),%ecx
  0x00007750552022b9:   movabs $0x800000000,%r10
  0x00007750552022c3:   add    %r10,%rcx
  0x00007750552022c6:   cmp    0x168(%rax),%rcx
  0x00007750552022cd:   jne    0x00007750552022dc
  0x00007750552022cf:   addq   $0x1,0x170(%rax)
  0x00007750552022d7:   jmp    0x0000775055202360
  0x00007750552022dc:   cmp    0x178(%rax),%rcx
  0x00007750552022e3:   jne    0x00007750552022f2
  0x00007750552022e5:   addq   $0x1,0x180(%rax)
  0x00007750552022ed:   jmp    0x0000775055202360
  0x00007750552022f2:   cmpq   $0x0,0x168(%rax)
  0x00007750552022fd:   jne    0x0000775055202316
  0x00007750552022ff:   mov    %rcx,0x168(%rax)
  0x0000775055202306:   movq   $0x1,0x170(%rax)
  0x0000775055202311:   jmp    0x0000775055202360
  0x0000775055202316:   cmpq   $0x0,0x178(%rax)
  0x0000775055202321:   jne    0x000077505520233a
  0x0000775055202323:   mov    %rcx,0x178(%rax)
  0x000077505520232a:   movq   $0x1,0x180(%rax)
  0x0000775055202335:   jmp    0x0000775055202360
  0x000077505520233a:   jmp    0x0000775055202360
  0x000077505520233f:   movabs $0x77502029d218,%rax         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000775055202349:   subq   $0x1,0x158(%rax)
  0x0000775055202351:   jmp    0x000077505520235b
  0x0000775055202356:   jmp    0x0000775055202360
  0x000077505520235b:   xor    %rdi,%rdi
  0x000077505520235e:   jmp    0x000077505520236a
  0x0000775055202360:   movabs $0x1,%rdi                    ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@8 (line 1832)
  0x000077505520236a:   cmp    $0x0,%edi
  0x000077505520236d:   movabs $0x77502029d218,%rdi         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000775055202377:   movabs $0x190,%rbx
  0x0000775055202381:   je     0x0000775055202391
  0x0000775055202387:   movabs $0x1a0,%rbx
  0x0000775055202391:   mov    (%rdi,%rbx,1),%rax
  0x0000775055202395:   lea    0x1(%rax),%rax
  0x0000775055202399:   mov    %rax,(%rdi,%rbx,1)
  0x000077505520239d:   je     0x0000775055202545           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@11 (line 1832)
  0x00007750552023a3:   cmp    $0x0,%rdx
  0x00007750552023a7:   jne    0x00007750552023bf
  0x00007750552023a9:   movabs $0x77502029d218,%rbx         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007750552023b3:   orb    $0x1,0x1a9(%rbx)
  0x00007750552023ba:   jmp    0x0000775055202491
  0x00007750552023bf:   movabs $0x800041bc8,%rax            ;   {metadata('java/lang/String')}
  0x00007750552023c9:   mov    0x8(%rdx),%edi
  0x00007750552023cc:   movabs $0x800000000,%r10
  0x00007750552023d6:   add    %r10,%rdi
  0x00007750552023d9:   cmp    %rdi,%rax
  0x00007750552023dc:   jne    0x0000775055202475
  0x00007750552023e2:   movabs $0x77502029d218,%rbx         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007750552023ec:   mov    0x8(%rdx),%eax
  0x00007750552023ef:   movabs $0x800000000,%r10
  0x00007750552023f9:   add    %r10,%rax
  0x00007750552023fc:   cmp    0x1c0(%rbx),%rax
  0x0000775055202403:   jne    0x0000775055202412
  0x0000775055202405:   addq   $0x1,0x1c8(%rbx)
  0x000077505520240d:   jmp    0x0000775055202491
  0x0000775055202412:   cmp    0x1d0(%rbx),%rax
  0x0000775055202419:   jne    0x0000775055202428
  0x000077505520241b:   addq   $0x1,0x1d8(%rbx)
  0x0000775055202423:   jmp    0x0000775055202491
  0x0000775055202428:   cmpq   $0x0,0x1c0(%rbx)
  0x0000775055202433:   jne    0x000077505520244c
  0x0000775055202435:   mov    %rax,0x1c0(%rbx)
  0x000077505520243c:   movq   $0x1,0x1c8(%rbx)
  0x0000775055202447:   jmp    0x0000775055202491
  0x000077505520244c:   cmpq   $0x0,0x1d0(%rbx)
  0x0000775055202457:   jne    0x0000775055202470
  0x0000775055202459:   mov    %rax,0x1d0(%rbx)
  0x0000775055202460:   movq   $0x1,0x1d8(%rbx)
  0x000077505520246b:   jmp    0x0000775055202491
  0x0000775055202470:   jmp    0x0000775055202491
  0x0000775055202475:   movabs $0x77502029d218,%rbx         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000077505520247f:   subq   $0x1,0x1b0(%rbx)
  0x0000775055202487:   jmp    0x00007750552025b3
  0x000077505520248c:   jmp    0x0000775055202491           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@15 (line 1830)
  0x0000775055202491:   movabs $0x77502029d218,%rdi         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000077505520249b:   incl   0x1f8(%rdi)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@22 (line 1830)
  0x00007750552024a1:   movsbl 0x10(%rsi),%edi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@26 (line 1830)
  0x00007750552024a5:   movsbl 0x10(%rdx),%ebx              ; implicit exception: dispatches to 0x00007750552025bc
                                                            ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@30 (line 1830)
  0x00007750552024a9:   cmp    %ebx,%edi
  0x00007750552024ab:   movabs $0x77502029d218,%rdi         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007750552024b5:   movabs $0x208,%rbx
  0x00007750552024bf:   jne    0x00007750552024cf
  0x00007750552024c5:   movabs $0x218,%rbx
  0x00007750552024cf:   mov    (%rdi,%rbx,1),%rax
  0x00007750552024d3:   lea    0x1(%rax),%rax
  0x00007750552024d7:   mov    %rax,(%rdi,%rbx,1)
  0x00007750552024db:   jne    0x0000775055202545           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@33 (line 1830)
  0x00007750552024e1:   mov    0x14(%rsi),%esi
  0x00007750552024e4:   shl    $0x3,%rsi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@37 (line 1830)
  0x00007750552024e8:   mov    0x14(%rdx),%edx
  0x00007750552024eb:   shl    $0x3,%rdx                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@41 (line 1830)
  0x00007750552024ef:   movabs $0x77502029d218,%rdi         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007750552024f9:   addq   $0x1,0x228(%rdi)
  0x0000775055202501:   nopw   0x0(%rax,%rax,1)
  0x0000775055202507:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@44 (line 1832)
                                                            ;   {static_call}
  0x000077505520250c:   cmp    $0x0,%eax
  0x000077505520250f:   movabs $0x77502029d218,%rax         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000775055202519:   movabs $0x248,%rsi
  0x0000775055202523:   jne    0x0000775055202533
  0x0000775055202529:   movabs $0x238,%rsi
  0x0000775055202533:   mov    (%rax,%rsi,1),%rdi
  0x0000775055202537:   lea    0x1(%rdi),%rdi
  0x000077505520253b:   mov    %rdi,(%rax,%rsi,1)
  0x000077505520253f:   jne    0x000077505520254f           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@47 (line 1832)
  0x0000775055202545:   mov    $0x0,%eax
  0x000077505520254a:   jmp    0x0000775055202564           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@55 (line 1830)
  0x000077505520254f:   movabs $0x77502029d218,%rax         ;   {metadata(method data for {method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000775055202559:   incl   0x258(%rax)
  0x000077505520255f:   mov    $0x1,%eax                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@51 (line 1832)
  0x0000775055202564:   and    $0x1,%eax
  0x0000775055202567:   add    $0x30,%rsp
  0x000077505520256b:   pop    %rbp
  0x000077505520256c:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055202573:   ja     0x00007750552025c1
  0x0000775055202579:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@55 (line 1830)
  0x000077505520257a:   mov    $0x1,%eax
  0x000077505520257f:   add    $0x30,%rsp
  0x0000775055202583:   pop    %rbp
  0x0000775055202584:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520258b:   ja     0x00007750552025d7
  0x0000775055202591:   ret
  0x0000775055202592:   movabs $0x77502000a320,%r10         ;   {metadata({method} {0x000077502000a320} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000077505520259c:   mov    %r10,0x8(%rsp)
  0x00007750552025a1:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552025a9:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::equals@-1 (line 1827)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552025ae:   jmp    0x0000775055202234
  0x00007750552025b3:   mov    %rdx,(%rsp)
  0x00007750552025b7:   call   0x000077505c82b9a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::equals@15 (line 1830)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007750552025bc:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*getfield coder {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.String::equals@30 (line 1830)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552025c1:   movabs $0x77505520256c,%r10         ;   {internal_word}
  0x00007750552025cb:   mov    %r10,0x360(%r15)
  0x00007750552025d2:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552025d7:   movabs $0x775055202584,%r10         ;   {internal_word}
  0x00007750552025e1:   mov    %r10,0x360(%r15)
  0x00007750552025e8:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552025ed:   nop
  0x00007750552025ee:   nop
  0x00007750552025ef:   mov    0x3d8(%r15),%rax
  0x00007750552025f6:   movq   $0x0,0x3d8(%r15)
  0x0000775055202601:   movq   $0x0,0x3e0(%r15)
  0x000077505520260c:   add    $0x30,%rsp
  0x0000775055202610:   pop    %rbp
  0x0000775055202611:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055202616:   hlt
  0x0000775055202617:   hlt
  0x0000775055202618:   hlt
  0x0000775055202619:   hlt
  0x000077505520261a:   hlt
  0x000077505520261b:   hlt
  0x000077505520261c:   hlt
  0x000077505520261d:   hlt
  0x000077505520261e:   hlt
  0x000077505520261f:   hlt
[Stub Code]
  0x0000775055202620:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055202625:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520262f:   jmp    0x000077505520262f           ;   {runtime_call}
[Exception Handler]
  0x0000775055202634:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055202639:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055202643:   and    $0xfffffffffffffff0,%rsp
  0x0000775055202647:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520264c:   hlt
[Deopt Handler Code]
  0x000077505520264d:   movabs $0x77505520264d,%r10         ;   {section_word}
  0x0000775055202657:   push   %r10
  0x0000775055202659:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520265e:   hlt
  0x000077505520265f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      40    7       3       java.util.Objects::equals (23 bytes)
 total in heap  [0x0000775055202890,0x0000775055202de8] = 1368
 relocation     [0x00007750552029f0,0x0000775055202a38] = 72
 main code      [0x0000775055202a40,0x0000775055202c80] = 576
 stub code      [0x0000775055202c80,0x0000775055202cc0] = 64
 metadata       [0x0000775055202cc0,0x0000775055202cc8] = 8
 scopes data    [0x0000775055202cc8,0x0000775055202d10] = 72
 scopes pcs     [0x0000775055202d10,0x0000775055202dd0] = 192
 dependencies   [0x0000775055202dd0,0x0000775055202dd8] = 8
 nul chk table  [0x0000775055202dd8,0x0000775055202de8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502014e260} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x0000775055202a40:   mov    %eax,-0x14000(%rsp)
  0x0000775055202a47:   push   %rbp
  0x0000775055202a48:   sub    $0x30,%rsp
  0x0000775055202a4c:   movabs $0x77502029e480,%rdi         ;   {metadata(method data for {method} {0x000077502014e260} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x0000775055202a56:   mov    0xf4(%rdi),%ebx
  0x0000775055202a5c:   add    $0x2,%ebx
  0x0000775055202a5f:   mov    %ebx,0xf4(%rdi)
  0x0000775055202a65:   and    $0x7fe,%ebx
  0x0000775055202a6b:   cmp    $0x0,%ebx
  0x0000775055202a6e:   je     0x0000775055202c02           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@0 (line 64)
  0x0000775055202a74:   cmp    %rdx,%rsi
  0x0000775055202a77:   movabs $0x77502029e480,%rdi         ;   {metadata(method data for {method} {0x000077502014e260} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x0000775055202a81:   movabs $0x138,%rbx
  0x0000775055202a8b:   je     0x0000775055202a9b
  0x0000775055202a91:   movabs $0x148,%rbx
  0x0000775055202a9b:   mov    (%rdi,%rbx,1),%rax
  0x0000775055202a9f:   lea    0x1(%rax),%rax
  0x0000775055202aa3:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055202aa7:   je     0x0000775055202bd7           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@2 (line 64)
  0x0000775055202aad:   cmp    $0x0,%rsi
  0x0000775055202ab1:   movabs $0x77502029e480,%rdi         ;   {metadata(method data for {method} {0x000077502014e260} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x0000775055202abb:   movabs $0x158,%rbx
  0x0000775055202ac5:   je     0x0000775055202ad5
  0x0000775055202acb:   movabs $0x168,%rbx
  0x0000775055202ad5:   mov    (%rdi,%rbx,1),%rax
  0x0000775055202ad9:   lea    0x1(%rax),%rax
  0x0000775055202add:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055202ae1:   je     0x0000775055202bcd           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@6 (line 64)
  0x0000775055202ae7:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x0000775055202c23
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@11 (line 64)
  0x0000775055202aea:   mov    %rsi,%rdi
  0x0000775055202aed:   movabs $0x77502029e480,%rbx         ;   {metadata(method data for {method} {0x000077502014e260} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x0000775055202af7:   mov    0x8(%rdi),%edi
  0x0000775055202afa:   movabs $0x800000000,%r10
  0x0000775055202b04:   add    %r10,%rdi
  0x0000775055202b07:   cmp    0x188(%rbx),%rdi
  0x0000775055202b0e:   jne    0x0000775055202b1d
  0x0000775055202b10:   addq   $0x1,0x190(%rbx)
  0x0000775055202b18:   jmp    0x0000775055202b83
  0x0000775055202b1d:   cmp    0x198(%rbx),%rdi
  0x0000775055202b24:   jne    0x0000775055202b33
  0x0000775055202b26:   addq   $0x1,0x1a0(%rbx)
  0x0000775055202b2e:   jmp    0x0000775055202b83
  0x0000775055202b33:   cmpq   $0x0,0x188(%rbx)
  0x0000775055202b3e:   jne    0x0000775055202b57
  0x0000775055202b40:   mov    %rdi,0x188(%rbx)
  0x0000775055202b47:   movq   $0x1,0x190(%rbx)
  0x0000775055202b52:   jmp    0x0000775055202b83
  0x0000775055202b57:   cmpq   $0x0,0x198(%rbx)
  0x0000775055202b62:   jne    0x0000775055202b7b
  0x0000775055202b64:   mov    %rdi,0x198(%rbx)
  0x0000775055202b6b:   movq   $0x1,0x1a0(%rbx)
  0x0000775055202b76:   jmp    0x0000775055202b83
  0x0000775055202b7b:   addq   $0x1,0x178(%rbx)
  0x0000775055202b83:   xchg   %ax,%ax
  0x0000775055202b85:   movabs $0xffffffffffffffff,%rax
  0x0000775055202b8f:   call   0x000077505c788380           ; ImmutableOopMap {}
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@11 (line 64)
                                                            ;   {virtual_call}
  0x0000775055202b94:   cmp    $0x0,%eax
  0x0000775055202b97:   movabs $0x77502029e480,%rax         ;   {metadata(method data for {method} {0x000077502014e260} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x0000775055202ba1:   movabs $0x1c0,%rsi
  0x0000775055202bab:   jne    0x0000775055202bbb
  0x0000775055202bb1:   movabs $0x1b0,%rsi
  0x0000775055202bbb:   mov    (%rax,%rsi,1),%rdi
  0x0000775055202bbf:   lea    0x1(%rdi),%rdi
  0x0000775055202bc3:   mov    %rdi,(%rax,%rsi,1)
  0x0000775055202bc7:   jne    0x0000775055202bd7           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@14 (line 64)
  0x0000775055202bcd:   mov    $0x0,%eax
  0x0000775055202bd2:   jmp    0x0000775055202bec           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@22 (line 64)
  0x0000775055202bd7:   movabs $0x77502029e480,%rax         ;   {metadata(method data for {method} {0x000077502014e260} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x0000775055202be1:   incl   0x1d0(%rax)
  0x0000775055202be7:   mov    $0x1,%eax                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@18 (line 64)
  0x0000775055202bec:   and    $0x1,%eax
  0x0000775055202bef:   add    $0x30,%rsp
  0x0000775055202bf3:   pop    %rbp
  0x0000775055202bf4:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055202bfb:   ja     0x0000775055202c28
  0x0000775055202c01:   ret
  0x0000775055202c02:   movabs $0x77502014e260,%r10         ;   {metadata({method} {0x000077502014e260} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x0000775055202c0c:   mov    %r10,0x8(%rsp)
  0x0000775055202c11:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055202c19:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::equals@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055202c1e:   jmp    0x0000775055202a74
  0x0000775055202c23:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::equals@11 (line 64)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055202c28:   movabs $0x775055202bf4,%r10         ;   {internal_word}
  0x0000775055202c32:   mov    %r10,0x360(%r15)
  0x0000775055202c39:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055202c3e:   nop
  0x0000775055202c3f:   nop
  0x0000775055202c40:   mov    0x3d8(%r15),%rax
  0x0000775055202c47:   movq   $0x0,0x3d8(%r15)
  0x0000775055202c52:   movq   $0x0,0x3e0(%r15)
  0x0000775055202c5d:   add    $0x30,%rsp
  0x0000775055202c61:   pop    %rbp
  0x0000775055202c62:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055202c67:   hlt
  0x0000775055202c68:   hlt
  0x0000775055202c69:   hlt
  0x0000775055202c6a:   hlt
  0x0000775055202c6b:   hlt
  0x0000775055202c6c:   hlt
  0x0000775055202c6d:   hlt
  0x0000775055202c6e:   hlt
  0x0000775055202c6f:   hlt
  0x0000775055202c70:   hlt
  0x0000775055202c71:   hlt
  0x0000775055202c72:   hlt
  0x0000775055202c73:   hlt
  0x0000775055202c74:   hlt
  0x0000775055202c75:   hlt
  0x0000775055202c76:   hlt
  0x0000775055202c77:   hlt
  0x0000775055202c78:   hlt
  0x0000775055202c79:   hlt
  0x0000775055202c7a:   hlt
  0x0000775055202c7b:   hlt
  0x0000775055202c7c:   hlt
  0x0000775055202c7d:   hlt
  0x0000775055202c7e:   hlt
  0x0000775055202c7f:   hlt
[Stub Code]
  0x0000775055202c80:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055202c85:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055202c8f:   jmp    0x0000775055202c8f           ;   {runtime_call}
[Exception Handler]
  0x0000775055202c94:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055202c99:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055202ca3:   and    $0xfffffffffffffff0,%rsp
  0x0000775055202ca7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055202cac:   hlt
[Deopt Handler Code]
  0x0000775055202cad:   movabs $0x775055202cad,%r10         ;   {section_word}
  0x0000775055202cb7:   push   %r10
  0x0000775055202cb9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055202cbe:   hlt
  0x0000775055202cbf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      42    8       3       java.lang.StringLatin1::equals (36 bytes)
 total in heap  [0x0000775055202e10,0x0000775055203448] = 1592
 relocation     [0x0000775055202f70,0x0000775055202fc0] = 80
 main code      [0x0000775055202fc0,0x0000775055203220] = 608
 stub code      [0x0000775055203220,0x0000775055203250] = 48
 metadata       [0x0000775055203250,0x0000775055203258] = 8
 scopes data    [0x0000775055203258,0x00007750552032d8] = 128
 scopes pcs     [0x00007750552032d8,0x0000775055203428] = 336
 dependencies   [0x0000775055203428,0x0000775055203430] = 8
 nul chk table  [0x0000775055203430,0x0000775055203448] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020175c58} 'equals' '([B[B)Z' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x0000775055202fc0:   mov    %eax,-0x14000(%rsp)
  0x0000775055202fc7:   push   %rbp
  0x0000775055202fc8:   sub    $0x30,%rsp
  0x0000775055202fcc:   movabs $0x77502029d4d0,%rax         ;   {metadata(method data for {method} {0x0000775020175c58} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x0000775055202fd6:   mov    0xf4(%rax),%edi
  0x0000775055202fdc:   add    $0x2,%edi
  0x0000775055202fdf:   mov    %edi,0xf4(%rax)
  0x0000775055202fe5:   and    $0x7fe,%edi
  0x0000775055202feb:   cmp    $0x0,%edi
  0x0000775055202fee:   je     0x000077505520315a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@0 (line 95)
  0x0000775055202ff4:   mov    0xc(%rsi),%eax               ; implicit exception: dispatches to 0x000077505520317b
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@1 (line 95)
  0x0000775055202ff7:   mov    0xc(%rdx),%edi               ; implicit exception: dispatches to 0x0000775055203180
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@3 (line 95)
  0x0000775055202ffa:   cmp    %edi,%eax
  0x0000775055202ffc:   movabs $0x77502029d4d0,%rdi         ;   {metadata(method data for {method} {0x0000775020175c58} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x0000775055203006:   movabs $0x138,%rbx
  0x0000775055203010:   jne    0x0000775055203020
  0x0000775055203016:   movabs $0x148,%rbx
  0x0000775055203020:   mov    (%rdi,%rbx,1),%rcx
  0x0000775055203024:   lea    0x1(%rcx),%rcx
  0x0000775055203028:   mov    %rcx,(%rdi,%rbx,1)
  0x000077505520302c:   jne    0x0000775055203142           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@4 (line 95)
  0x0000775055203032:   mov    $0x0,%edi
  0x0000775055203037:   jmp    0x00007750552030d5           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@9 (line 96)
  0x000077505520303c:   nopl   0x0(%rax)
  0x0000775055203040:   movslq %edi,%rbx
  0x0000775055203043:   movsbl 0x10(%rsi,%rbx,1),%ebx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@17 (line 97)
  0x0000775055203048:   cmp    0xc(%rdx),%edi
  0x000077505520304b:   jae    0x0000775055203185
  0x0000775055203051:   movslq %edi,%rcx
  0x0000775055203054:   movsbl 0x10(%rdx,%rcx,1),%ecx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@20 (line 97)
  0x0000775055203059:   cmp    %ecx,%ebx
  0x000077505520305b:   movabs $0x77502029d4d0,%rbx         ;   {metadata(method data for {method} {0x0000775020175c58} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x0000775055203065:   movabs $0x188,%rcx
  0x000077505520306f:   jne    0x000077505520307f
  0x0000775055203075:   movabs $0x178,%rcx
  0x000077505520307f:   mov    (%rbx,%rcx,1),%r8
  0x0000775055203083:   lea    0x1(%r8),%r8
  0x0000775055203087:   mov    %r8,(%rbx,%rcx,1)
  0x000077505520308b:   jne    0x0000775055203112           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@21 (line 97)
  0x0000775055203091:   inc    %edi
  0x0000775055203093:   movabs $0x77502029d4d0,%rbx         ;   {metadata(method data for {method} {0x0000775020175c58} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000077505520309d:   mov    0xf8(%rbx),%ecx
  0x00007750552030a3:   add    $0x2,%ecx
  0x00007750552030a6:   mov    %ecx,0xf8(%rbx)
  0x00007750552030ac:   and    $0x3ffe,%ecx
  0x00007750552030b2:   cmp    $0x0,%ecx
  0x00007750552030b5:   je     0x0000775055203193           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@29 (line 96)
  0x00007750552030bb:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::equals@29 (line 96)
  0x00007750552030c2:   test   %eax,(%r10)                  ;   {poll}
  0x00007750552030c5:   movabs $0x77502029d4d0,%rbx         ;   {metadata(method data for {method} {0x0000775020175c58} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007750552030cf:   incl   0x198(%rbx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@29 (line 96)
  0x00007750552030d5:   cmp    %eax,%edi
  0x00007750552030d7:   movabs $0x77502029d4d0,%rbx         ;   {metadata(method data for {method} {0x0000775020175c58} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007750552030e1:   movabs $0x158,%rcx
  0x00007750552030eb:   jge    0x00007750552030fb
  0x00007750552030f1:   movabs $0x168,%rcx
  0x00007750552030fb:   mov    (%rbx,%rcx,1),%r8
  0x00007750552030ff:   lea    0x1(%r8),%r8
  0x0000775055203103:   mov    %r8,(%rbx,%rcx,1)
  0x0000775055203107:   jge    0x000077505520312a
  0x000077505520310d:   jmp    0x0000775055203040           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@12 (line 96)
  0x0000775055203112:   mov    $0x0,%eax
  0x0000775055203117:   add    $0x30,%rsp
  0x000077505520311b:   pop    %rbp
  0x000077505520311c:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055203123:   ja     0x00007750552031b4
  0x0000775055203129:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@25 (line 98)
  0x000077505520312a:   mov    $0x1,%eax
  0x000077505520312f:   add    $0x30,%rsp
  0x0000775055203133:   pop    %rbp
  0x0000775055203134:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520313b:   ja     0x00007750552031ca
  0x0000775055203141:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@33 (line 101)
  0x0000775055203142:   mov    $0x0,%eax
  0x0000775055203147:   add    $0x30,%rsp
  0x000077505520314b:   pop    %rbp
  0x000077505520314c:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055203153:   ja     0x00007750552031e0
  0x0000775055203159:   ret
  0x000077505520315a:   movabs $0x775020175c58,%r10         ;   {metadata({method} {0x0000775020175c58} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x0000775055203164:   mov    %r10,0x8(%rsp)
  0x0000775055203169:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055203171:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::equals@-1 (line 95)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055203176:   jmp    0x0000775055202ff4
  0x000077505520317b:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@1 (line 95)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055203180:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@3 (line 95)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055203185:   mov    %rdi,(%rsp)
  0x0000775055203189:   mov    %rdx,0x8(%rsp)
  0x000077505520318e:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::equals@20 (line 97)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055203193:   movabs $0x775020175c58,%r10         ;   {metadata({method} {0x0000775020175c58} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000077505520319d:   mov    %r10,0x8(%rsp)
  0x00007750552031a2:   movq   $0x1d,(%rsp)
  0x00007750552031aa:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::equals@29 (line 96)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552031af:   jmp    0x00007750552030bb
  0x00007750552031b4:   movabs $0x77505520311c,%r10         ;   {internal_word}
  0x00007750552031be:   mov    %r10,0x360(%r15)
  0x00007750552031c5:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552031ca:   movabs $0x775055203134,%r10         ;   {internal_word}
  0x00007750552031d4:   mov    %r10,0x360(%r15)
  0x00007750552031db:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552031e0:   movabs $0x77505520314c,%r10         ;   {internal_word}
  0x00007750552031ea:   mov    %r10,0x360(%r15)
  0x00007750552031f1:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552031f6:   nop
  0x00007750552031f7:   nop
  0x00007750552031f8:   mov    0x3d8(%r15),%rax
  0x00007750552031ff:   movq   $0x0,0x3d8(%r15)
  0x000077505520320a:   movq   $0x0,0x3e0(%r15)
  0x0000775055203215:   add    $0x30,%rsp
  0x0000775055203219:   pop    %rbp
  0x000077505520321a:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505520321f:   hlt
[Exception Handler]
  0x0000775055203220:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055203225:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520322f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055203233:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055203238:   hlt
[Deopt Handler Code]
  0x0000775055203239:   movabs $0x775055203239,%r10         ;   {section_word}
  0x0000775055203243:   push   %r10
  0x0000775055203245:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520324a:   hlt
  0x000077505520324b:   hlt
  0x000077505520324c:   hlt
  0x000077505520324d:   hlt
  0x000077505520324e:   hlt
  0x000077505520324f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      44    9       3       java.util.Set::of (4 bytes)
 total in heap  [0x0000775055203490,0x0000775055203770] = 736
 relocation     [0x00007750552035f0,0x0000775055203620] = 48
 main code      [0x0000775055203620,0x00007750552036e0] = 192
 stub code      [0x00007750552036e0,0x0000775055203710] = 48
 metadata       [0x0000775055203710,0x0000775055203718] = 8
 scopes data    [0x0000775055203718,0x0000775055203728] = 16
 scopes pcs     [0x0000775055203728,0x0000775055203768] = 64
 dependencies   [0x0000775055203768,0x0000775055203770] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502014a2c0} 'of' '()Ljava/util/Set;' in 'java/util/Set'
  #           [sp+0x40]  (sp of caller)
  0x0000775055203620:   mov    %eax,-0x14000(%rsp)
  0x0000775055203627:   push   %rbp
  0x0000775055203628:   sub    $0x30,%rsp
  0x000077505520362c:   movabs $0x77502029e6b0,%rax         ;   {metadata(method data for {method} {0x000077502014a2c0} 'of' '()Ljava/util/Set;' in 'java/util/Set')}
  0x0000775055203636:   mov    0xf4(%rax),%esi
  0x000077505520363c:   add    $0x2,%esi
  0x000077505520363f:   mov    %esi,0xf4(%rax)
  0x0000775055203645:   and    $0x7fe,%esi
  0x000077505520364b:   cmp    $0x0,%esi
  0x000077505520364e:   je     0x0000775055203671           ;*getstatic EMPTY_SET {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@0 (line 455)
  0x0000775055203654:   movabs $0x62ac08be8,%rax            ;   {oop(a 'java/util/ImmutableCollections$SetN'{0x000000062ac08be8})}
  0x000077505520365e:   add    $0x30,%rsp
  0x0000775055203662:   pop    %rbp
  0x0000775055203663:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520366a:   ja     0x000077505520368f
  0x0000775055203670:   ret
  0x0000775055203671:   movabs $0x77502014a2c0,%r10         ;   {metadata({method} {0x000077502014a2c0} 'of' '()Ljava/util/Set;' in 'java/util/Set')}
  0x000077505520367b:   mov    %r10,0x8(%rsp)
  0x0000775055203680:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055203688:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.util.Set::of@-1 (line 455)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520368d:   jmp    0x0000775055203654
  0x000077505520368f:   movabs $0x775055203663,%r10         ;   {internal_word}
  0x0000775055203699:   mov    %r10,0x360(%r15)
  0x00007750552036a0:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552036a5:   nop
  0x00007750552036a6:   nop
  0x00007750552036a7:   mov    0x3d8(%r15),%rax
  0x00007750552036ae:   movq   $0x0,0x3d8(%r15)
  0x00007750552036b9:   movq   $0x0,0x3e0(%r15)
  0x00007750552036c4:   add    $0x30,%rsp
  0x00007750552036c8:   pop    %rbp
  0x00007750552036c9:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552036ce:   hlt
  0x00007750552036cf:   hlt
  0x00007750552036d0:   hlt
  0x00007750552036d1:   hlt
  0x00007750552036d2:   hlt
  0x00007750552036d3:   hlt
  0x00007750552036d4:   hlt
  0x00007750552036d5:   hlt
  0x00007750552036d6:   hlt
  0x00007750552036d7:   hlt
  0x00007750552036d8:   hlt
  0x00007750552036d9:   hlt
  0x00007750552036da:   hlt
  0x00007750552036db:   hlt
  0x00007750552036dc:   hlt
  0x00007750552036dd:   hlt
  0x00007750552036de:   hlt
  0x00007750552036df:   hlt
[Exception Handler]
  0x00007750552036e0:   call   0x000077505c82b380           ;   {no_reloc}
  0x00007750552036e5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552036ef:   and    $0xfffffffffffffff0,%rsp
  0x00007750552036f3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552036f8:   hlt
[Deopt Handler Code]
  0x00007750552036f9:   movabs $0x7750552036f9,%r10         ;   {section_word}
  0x0000775055203703:   push   %r10
  0x0000775055203705:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520370a:   hlt
  0x000077505520370b:   hlt
  0x000077505520370c:   hlt
  0x000077505520370d:   hlt
  0x000077505520370e:   hlt
  0x000077505520370f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      45   10       3       java.lang.module.ModuleDescriptor$Exports::<init> (20 bytes)
 total in heap  [0x0000775055203790,0x0000775055203cb8] = 1320
 relocation     [0x00007750552038f0,0x0000775055203930] = 64
 main code      [0x0000775055203940,0x0000775055203ba0] = 608
 stub code      [0x0000775055203ba0,0x0000775055203bd0] = 48
 metadata       [0x0000775055203bd0,0x0000775055203be0] = 16
 scopes data    [0x0000775055203be0,0x0000775055203c30] = 80
 scopes pcs     [0x0000775055203c30,0x0000775055203cb0] = 128
 dependencies   [0x0000775055203cb0,0x0000775055203cb8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020292b70} '<init>' '(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;Z)V' in 'java/lang/module/ModuleDescriptor$Exports'
  # this:     rsi:rsi   = 'java/lang/module/ModuleDescriptor$Exports'
  # parm0:    rdx:rdx   = 'java/util/Set'
  # parm1:    rcx:rcx   = 'java/lang/String'
  # parm2:    r8:r8     = 'java/util/Set'
  # parm3:    r9        = boolean
  #           [sp+0x40]  (sp of caller)
  0x0000775055203940:   mov    0x8(%rsi),%r10d
  0x0000775055203944:   movabs $0x800000000,%r11
  0x000077505520394e:   add    %r11,%r10
  0x0000775055203951:   cmp    %rax,%r10
  0x0000775055203954:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520395a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055203960:   mov    %eax,-0x14000(%rsp)
  0x0000775055203967:   push   %rbp
  0x0000775055203968:   sub    $0x30,%rsp
  0x000077505520396c:   movabs $0x77502029e800,%rdi         ;   {metadata(method data for {method} {0x0000775020292b70} '<init>' '(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;Z)V' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x0000775055203976:   mov    0xf4(%rdi),%ebx
  0x000077505520397c:   add    $0x2,%ebx
  0x000077505520397f:   mov    %ebx,0xf4(%rdi)
  0x0000775055203985:   and    $0x7fe,%ebx
  0x000077505520398b:   cmp    $0x0,%ebx
  0x000077505520398e:   je     0x0000775055203a6b           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::<init>@0 (line 405)
  0x0000775055203994:   mov    %rsi,%rdi
  0x0000775055203997:   movabs $0x77502029e800,%rbx         ;   {metadata(method data for {method} {0x0000775020292b70} '<init>' '(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;Z)V' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x00007750552039a1:   addq   $0x1,0x138(%rbx)
  0x00007750552039a9:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552039b3:   mov    0xf4(%rdi),%ebx
  0x00007750552039b9:   add    $0x2,%ebx
  0x00007750552039bc:   mov    %ebx,0xf4(%rdi)
  0x00007750552039c2:   and    $0x1ffffe,%ebx
  0x00007750552039c8:   cmp    $0x0,%ebx
  0x00007750552039cb:   je     0x0000775055203a8c
  0x00007750552039d1:   movsbl 0x38(%r15),%edi
  0x00007750552039d6:   cmp    $0x0,%edi
  0x00007750552039d9:   jne    0x0000775055203aad
  0x00007750552039df:   mov    %rdx,%r10
  0x00007750552039e2:   shr    $0x3,%r10
  0x00007750552039e6:   mov    %r10d,0xc(%rsi)
  0x00007750552039ea:   mov    %rsi,%rdi
  0x00007750552039ed:   xor    %rdx,%rdi
  0x00007750552039f0:   shr    $0x16,%rdi
  0x00007750552039f4:   cmp    $0x0,%rdi
  0x00007750552039f8:   jne    0x0000775055203acc           ;*putfield mods {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::<init>@6 (line 406)
  0x00007750552039fe:   movsbl 0x38(%r15),%edi
  0x0000775055203a03:   cmp    $0x0,%edi
  0x0000775055203a06:   jne    0x0000775055203ae4
  0x0000775055203a0c:   mov    %rcx,%r10
  0x0000775055203a0f:   shr    $0x3,%r10
  0x0000775055203a13:   mov    %r10d,0x10(%rsi)
  0x0000775055203a17:   mov    %rsi,%rdi
  0x0000775055203a1a:   xor    %rcx,%rdi
  0x0000775055203a1d:   shr    $0x16,%rdi
  0x0000775055203a21:   cmp    $0x0,%rdi
  0x0000775055203a25:   jne    0x0000775055203b03           ;*putfield source {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::<init>@11 (line 407)
  0x0000775055203a2b:   movsbl 0x38(%r15),%edi
  0x0000775055203a30:   cmp    $0x0,%edi
  0x0000775055203a33:   jne    0x0000775055203b1b
  0x0000775055203a39:   mov    %r8,%r10
  0x0000775055203a3c:   shr    $0x3,%r10
  0x0000775055203a40:   mov    %r10d,0x14(%rsi)
  0x0000775055203a44:   mov    %rsi,%rdi
  0x0000775055203a47:   xor    %r8,%rdi
  0x0000775055203a4a:   shr    $0x16,%rdi
  0x0000775055203a4e:   cmp    $0x0,%rdi
  0x0000775055203a52:   jne    0x0000775055203b3a           ;*putfield targets {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::<init>@16 (line 408)
  0x0000775055203a58:   add    $0x30,%rsp
  0x0000775055203a5c:   pop    %rbp
  0x0000775055203a5d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055203a64:   ja     0x0000775055203b52
  0x0000775055203a6a:   ret
  0x0000775055203a6b:   movabs $0x775020292b70,%r10         ;   {metadata({method} {0x0000775020292b70} '<init>' '(Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;Z)V' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x0000775055203a75:   mov    %r10,0x8(%rsp)
  0x0000775055203a7a:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055203a82:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.module.ModuleDescriptor$Exports::<init>@-1 (line 405)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055203a87:   jmp    0x0000775055203994
  0x0000775055203a8c:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055203a96:   mov    %r10,0x8(%rsp)
  0x0000775055203a9b:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055203aa3:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.lang.module.ModuleDescriptor$Exports::<init>@1 (line 405)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055203aa8:   jmp    0x00007750552039d1
  0x0000775055203aad:   mov    0xc(%rsi),%edi
  0x0000775055203ab0:   shl    $0x3,%rdi
  0x0000775055203ab4:   cmp    $0x0,%rdi
  0x0000775055203ab8:   je     0x00007750552039df
  0x0000775055203abe:   mov    %rdi,(%rsp)
  0x0000775055203ac2:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055203ac7:   jmp    0x00007750552039df
  0x0000775055203acc:   cmp    $0x0,%rdx
  0x0000775055203ad0:   je     0x00007750552039fe
  0x0000775055203ad6:   mov    %rsi,(%rsp)
  0x0000775055203ada:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055203adf:   jmp    0x00007750552039fe
  0x0000775055203ae4:   mov    0x10(%rsi),%edi
  0x0000775055203ae7:   shl    $0x3,%rdi
  0x0000775055203aeb:   cmp    $0x0,%rdi
  0x0000775055203aef:   je     0x0000775055203a0c
  0x0000775055203af5:   mov    %rdi,(%rsp)
  0x0000775055203af9:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055203afe:   jmp    0x0000775055203a0c
  0x0000775055203b03:   cmp    $0x0,%rcx
  0x0000775055203b07:   je     0x0000775055203a2b
  0x0000775055203b0d:   mov    %rsi,(%rsp)
  0x0000775055203b11:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055203b16:   jmp    0x0000775055203a2b
  0x0000775055203b1b:   mov    0x14(%rsi),%edi
  0x0000775055203b1e:   shl    $0x3,%rdi
  0x0000775055203b22:   cmp    $0x0,%rdi
  0x0000775055203b26:   je     0x0000775055203a39
  0x0000775055203b2c:   mov    %rdi,(%rsp)
  0x0000775055203b30:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055203b35:   jmp    0x0000775055203a39
  0x0000775055203b3a:   cmp    $0x0,%r8
  0x0000775055203b3e:   je     0x0000775055203a58
  0x0000775055203b44:   mov    %rsi,(%rsp)
  0x0000775055203b48:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055203b4d:   jmp    0x0000775055203a58
  0x0000775055203b52:   movabs $0x775055203a5d,%r10         ;   {internal_word}
  0x0000775055203b5c:   mov    %r10,0x360(%r15)
  0x0000775055203b63:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055203b68:   nop
  0x0000775055203b69:   nop
  0x0000775055203b6a:   mov    0x3d8(%r15),%rax
  0x0000775055203b71:   movq   $0x0,0x3d8(%r15)
  0x0000775055203b7c:   movq   $0x0,0x3e0(%r15)
  0x0000775055203b87:   add    $0x30,%rsp
  0x0000775055203b8b:   pop    %rbp
  0x0000775055203b8c:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055203b91:   hlt
  0x0000775055203b92:   hlt
  0x0000775055203b93:   hlt
  0x0000775055203b94:   hlt
  0x0000775055203b95:   hlt
  0x0000775055203b96:   hlt
  0x0000775055203b97:   hlt
  0x0000775055203b98:   hlt
  0x0000775055203b99:   hlt
  0x0000775055203b9a:   hlt
  0x0000775055203b9b:   hlt
  0x0000775055203b9c:   hlt
  0x0000775055203b9d:   hlt
  0x0000775055203b9e:   hlt
  0x0000775055203b9f:   hlt
[Exception Handler]
  0x0000775055203ba0:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055203ba5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055203baf:   and    $0xfffffffffffffff0,%rsp
  0x0000775055203bb3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055203bb8:   hlt
[Deopt Handler Code]
  0x0000775055203bb9:   movabs $0x775055203bb9,%r10         ;   {section_word}
  0x0000775055203bc3:   push   %r10
  0x0000775055203bc5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055203bca:   hlt
  0x0000775055203bcb:   hlt
  0x0000775055203bcc:   hlt
  0x0000775055203bcd:   hlt
  0x0000775055203bce:   hlt
  0x0000775055203bcf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      48   11       3       java.lang.module.ModuleDescriptor::modsHashCode (46 bytes)
 total in heap  [0x0000775055203d10,0x0000775055204850] = 2880
 relocation     [0x0000775055203e70,0x0000775055203f08] = 152
 main code      [0x0000775055203f20,0x00007750552044c0] = 1440
 stub code      [0x00007750552044c0,0x0000775055204530] = 112
 metadata       [0x0000775055204530,0x0000775055204548] = 24
 scopes data    [0x0000775055204548,0x0000775055204640] = 248
 scopes pcs     [0x0000775055204640,0x0000775055204820] = 480
 dependencies   [0x0000775055204820,0x0000775055204828] = 8
 nul chk table  [0x0000775055204828,0x0000775055204850] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor'
  # parm0:    rsi:rsi   = 'java/lang/Iterable'
  #           [sp+0x50]  (sp of caller)
  0x0000775055203f20:   mov    %eax,-0x14000(%rsp)
  0x0000775055203f27:   push   %rbp
  0x0000775055203f28:   sub    $0x40,%rsp
  0x0000775055203f2c:   movabs $0x77502029e998,%rdi         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x0000775055203f36:   mov    0xf4(%rdi),%ebx
  0x0000775055203f3c:   add    $0x2,%ebx
  0x0000775055203f3f:   mov    %ebx,0xf4(%rdi)
  0x0000775055203f45:   and    $0x7fe,%ebx
  0x0000775055203f4b:   cmp    $0x0,%ebx
  0x0000775055203f4e:   je     0x00007750552043f9           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@0 (line 2554)
  0x0000775055203f54:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x000077505520441a
                                                            ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@3 (line 2555)
  0x0000775055203f57:   mov    %rsi,%rdi
  0x0000775055203f5a:   movabs $0x77502029e998,%rbx         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x0000775055203f64:   mov    0x8(%rdi),%edi
  0x0000775055203f67:   movabs $0x800000000,%r10
  0x0000775055203f71:   add    %r10,%rdi
  0x0000775055203f74:   cmp    0x148(%rbx),%rdi
  0x0000775055203f7b:   jne    0x0000775055203f8a
  0x0000775055203f7d:   addq   $0x1,0x150(%rbx)
  0x0000775055203f85:   jmp    0x0000775055203ff0
  0x0000775055203f8a:   cmp    0x158(%rbx),%rdi
  0x0000775055203f91:   jne    0x0000775055203fa0
  0x0000775055203f93:   addq   $0x1,0x160(%rbx)
  0x0000775055203f9b:   jmp    0x0000775055203ff0
  0x0000775055203fa0:   cmpq   $0x0,0x148(%rbx)
  0x0000775055203fab:   jne    0x0000775055203fc4
  0x0000775055203fad:   mov    %rdi,0x148(%rbx)
  0x0000775055203fb4:   movq   $0x1,0x150(%rbx)
  0x0000775055203fbf:   jmp    0x0000775055203ff0
  0x0000775055203fc4:   cmpq   $0x0,0x158(%rbx)
  0x0000775055203fcf:   jne    0x0000775055203fe8
  0x0000775055203fd1:   mov    %rdi,0x158(%rbx)
  0x0000775055203fd8:   movq   $0x1,0x160(%rbx)
  0x0000775055203fe3:   jmp    0x0000775055203ff0
  0x0000775055203fe8:   addq   $0x1,0x138(%rbx)
  0x0000775055203ff0:   nopl   0x0(%rax,%rax,1)
  0x0000775055203ff5:   movabs $0xffffffffffffffff,%rax
  0x0000775055203fff:   call   0x000077505c788380           ; ImmutableOopMap {}
                                                            ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@3 (line 2555)
                                                            ;   {virtual_call}
  0x0000775055204004:   mov    %rax,0x28(%rsp)
  0x0000775055204009:   mov    $0x0,%edi                    ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@9 (line 2555)
  0x000077505520400e:   mov    %edi,0x30(%rsp)
  0x0000775055204012:   nopw   0x0(%rax,%rax,1)
  0x0000775055204018:   cmp    (%rax),%rax                  ; implicit exception: dispatches to 0x000077505520441f
  0x000077505520401b:   mov    %rax,%rsi
  0x000077505520401e:   movabs $0x77502029e998,%rbx         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x0000775055204028:   mov    0x8(%rsi),%esi
  0x000077505520402b:   movabs $0x800000000,%r10
  0x0000775055204035:   add    %r10,%rsi
  0x0000775055204038:   cmp    0x180(%rbx),%rsi
  0x000077505520403f:   jne    0x000077505520404e
  0x0000775055204041:   addq   $0x1,0x188(%rbx)
  0x0000775055204049:   jmp    0x00007750552040b4
  0x000077505520404e:   cmp    0x190(%rbx),%rsi
  0x0000775055204055:   jne    0x0000775055204064
  0x0000775055204057:   addq   $0x1,0x198(%rbx)
  0x000077505520405f:   jmp    0x00007750552040b4
  0x0000775055204064:   cmpq   $0x0,0x180(%rbx)
  0x000077505520406f:   jne    0x0000775055204088
  0x0000775055204071:   mov    %rsi,0x180(%rbx)
  0x0000775055204078:   movq   $0x1,0x188(%rbx)
  0x0000775055204083:   jmp    0x00007750552040b4
  0x0000775055204088:   cmpq   $0x0,0x190(%rbx)
  0x0000775055204093:   jne    0x00007750552040ac
  0x0000775055204095:   mov    %rsi,0x190(%rbx)
  0x000077505520409c:   movq   $0x1,0x198(%rbx)
  0x00007750552040a7:   jmp    0x00007750552040b4
  0x00007750552040ac:   addq   $0x1,0x170(%rbx)
  0x00007750552040b4:   mov    %rax,%rsi                    ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@10 (line 2555)
  0x00007750552040b7:   nopw   0x0(%rax,%rax,1)
  0x00007750552040bd:   movabs $0xffffffffffffffff,%rax
  0x00007750552040c7:   call   0x000077505c788380           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@10 (line 2555)
                                                            ;   {virtual_call}
  0x00007750552040cc:   cmp    $0x0,%eax
  0x00007750552040cf:   movabs $0x77502029e998,%rsi         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x00007750552040d9:   movabs $0x1a8,%rdi
  0x00007750552040e3:   je     0x00007750552040f3
  0x00007750552040e9:   movabs $0x1b8,%rdi
  0x00007750552040f3:   mov    (%rsi,%rdi,1),%rbx
  0x00007750552040f7:   lea    0x1(%rbx),%rbx
  0x00007750552040fb:   mov    %rbx,(%rsi,%rdi,1)
  0x00007750552040ff:   je     0x00007750552043df           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@15 (line 2555)
  0x0000775055204105:   mov    0x28(%rsp),%rax
  0x000077505520410a:   movabs $0x77502029e998,%rsi         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x0000775055204114:   mov    0x8(%rax),%eax
  0x0000775055204117:   movabs $0x800000000,%r10
  0x0000775055204121:   add    %r10,%rax
  0x0000775055204124:   cmp    0x1d8(%rsi),%rax
  0x000077505520412b:   jne    0x000077505520413a
  0x000077505520412d:   addq   $0x1,0x1e0(%rsi)
  0x0000775055204135:   jmp    0x00007750552041a0
  0x000077505520413a:   cmp    0x1e8(%rsi),%rax
  0x0000775055204141:   jne    0x0000775055204150
  0x0000775055204143:   addq   $0x1,0x1f0(%rsi)
  0x000077505520414b:   jmp    0x00007750552041a0
  0x0000775055204150:   cmpq   $0x0,0x1d8(%rsi)
  0x000077505520415b:   jne    0x0000775055204174
  0x000077505520415d:   mov    %rax,0x1d8(%rsi)
  0x0000775055204164:   movq   $0x1,0x1e0(%rsi)
  0x000077505520416f:   jmp    0x00007750552041a0
  0x0000775055204174:   cmpq   $0x0,0x1e8(%rsi)
  0x000077505520417f:   jne    0x0000775055204198
  0x0000775055204181:   mov    %rax,0x1e8(%rsi)
  0x0000775055204188:   movq   $0x1,0x1f0(%rsi)
  0x0000775055204193:   jmp    0x00007750552041a0
  0x0000775055204198:   addq   $0x1,0x1c8(%rsi)
  0x00007750552041a0:   mov    0x28(%rsp),%rsi              ;*invokeinterface next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@19 (line 2555)
  0x00007750552041a5:   movabs $0xffffffffffffffff,%rax
  0x00007750552041af:   call   0x000077505c788380           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokeinterface next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@19 (line 2555)
                                                            ;   {virtual_call}
  0x00007750552041b4:   cmp    $0x0,%rax
  0x00007750552041b8:   jne    0x00007750552041d0
  0x00007750552041ba:   movabs $0x77502029e998,%rbx         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x00007750552041c4:   orb    $0x1,0x1f9(%rbx)
  0x00007750552041cb:   jmp    0x00007750552042a3
  0x00007750552041d0:   movabs $0x800074b40,%rsi            ;   {metadata('java/lang/Enum')}
  0x00007750552041da:   mov    0x8(%rax),%ebx
  0x00007750552041dd:   movabs $0x800000000,%r10
  0x00007750552041e7:   add    %r10,%rbx
  0x00007750552041ea:   cmp    0x38(%rbx),%rsi
  0x00007750552041ee:   jne    0x0000775055204287
  0x00007750552041f4:   movabs $0x77502029e998,%rbx         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x00007750552041fe:   mov    0x8(%rax),%esi
  0x0000775055204201:   movabs $0x800000000,%r10
  0x000077505520420b:   add    %r10,%rsi
  0x000077505520420e:   cmp    0x210(%rbx),%rsi
  0x0000775055204215:   jne    0x0000775055204224
  0x0000775055204217:   addq   $0x1,0x218(%rbx)
  0x000077505520421f:   jmp    0x00007750552042a3
  0x0000775055204224:   cmp    0x220(%rbx),%rsi
  0x000077505520422b:   jne    0x000077505520423a
  0x000077505520422d:   addq   $0x1,0x228(%rbx)
  0x0000775055204235:   jmp    0x00007750552042a3
  0x000077505520423a:   cmpq   $0x0,0x210(%rbx)
  0x0000775055204245:   jne    0x000077505520425e
  0x0000775055204247:   mov    %rsi,0x210(%rbx)
  0x000077505520424e:   movq   $0x1,0x218(%rbx)
  0x0000775055204259:   jmp    0x00007750552042a3
  0x000077505520425e:   cmpq   $0x0,0x220(%rbx)
  0x0000775055204269:   jne    0x0000775055204282
  0x000077505520426b:   mov    %rsi,0x220(%rbx)
  0x0000775055204272:   movq   $0x1,0x228(%rbx)
  0x000077505520427d:   jmp    0x00007750552042a3
  0x0000775055204282:   jmp    0x00007750552042a3
  0x0000775055204287:   movabs $0x77502029e998,%rbx         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x0000775055204291:   subq   $0x1,0x200(%rbx)
  0x0000775055204299:   jmp    0x0000775055204424
  0x000077505520429e:   jmp    0x00007750552042a3
  0x00007750552042a3:   mov    %rax,%rsi                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@24 (line 2555)
  0x00007750552042a6:   mov    $0x2b,%edi
  0x00007750552042ab:   mov    0x30(%rsp),%ebx
  0x00007750552042af:   imul   %edi,%ebx
  0x00007750552042b2:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x000077505520442d
                                                            ;*invokevirtual name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@33 (line 2556)
  0x00007750552042b5:   mov    %rsi,%rdi
  0x00007750552042b8:   movabs $0x77502029e998,%rax         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x00007750552042c2:   addq   $0x1,0x238(%rax)
  0x00007750552042ca:   mov    0x10(%rsi),%esi
  0x00007750552042cd:   shl    $0x3,%rsi                    ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Enum::name@1 (line 97)
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@33 (line 2556)
  0x00007750552042d1:   movabs $0x77502029e998,%rdi         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x00007750552042db:   addq   $0x1,0x270(%rdi)
  0x00007750552042e3:   movabs $0x77502029ec70,%rdi         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x00007750552042ed:   mov    0xf4(%rdi),%eax
  0x00007750552042f3:   add    $0x2,%eax
  0x00007750552042f6:   mov    %eax,0xf4(%rdi)
  0x00007750552042fc:   and    $0x1ffffe,%eax
  0x0000775055204302:   cmp    $0x0,%eax
  0x0000775055204305:   je     0x0000775055204432
  0x000077505520430b:   cmp    $0x0,%rsi
  0x000077505520430f:   movabs $0x77502029ec70,%rdi         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x0000775055204319:   movabs $0x138,%rax
  0x0000775055204323:   je     0x0000775055204333
  0x0000775055204329:   movabs $0x148,%rax
  0x0000775055204333:   mov    (%rdi,%rax,1),%rdx
  0x0000775055204337:   lea    0x1(%rdx),%rdx
  0x000077505520433b:   mov    %rdx,(%rdi,%rax,1)
  0x000077505520433f:   mov    %ebx,0x34(%rsp)
  0x0000775055204343:   je     0x0000775055204381           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@1 (line 103)
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@36 (line 2556)
  0x0000775055204349:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x0000775055204453
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@5 (line 103)
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@36 (line 2556)
  0x000077505520434c:   mov    %rsi,%rdi
  0x000077505520434f:   movabs $0x77502029ec70,%rax         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x0000775055204359:   addq   $0x1,0x158(%rax)
  0x0000775055204361:   nopw   0x0(%rax,%rax,1)
  0x0000775055204367:   call   0x000077505c788080           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@5 (line 103)
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@36 (line 2556)
                                                            ;   {optimized virtual_call}
  0x000077505520436c:   movabs $0x77502029ec70,%rsi         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x0000775055204376:   incl   0x190(%rsi)
  0x000077505520437c:   jmp    0x0000775055204386           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@8 (line 103)
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@36 (line 2556)
  0x0000775055204381:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@12 (line 103)
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@36 (line 2556)
  0x0000775055204386:   mov    0x34(%rsp),%ebx
  0x000077505520438a:   add    %ebx,%eax
  0x000077505520438c:   movabs $0x77502029e998,%rsi         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x0000775055204396:   mov    0xf8(%rsi),%edi
  0x000077505520439c:   add    $0x2,%edi
  0x000077505520439f:   mov    %edi,0xf8(%rsi)
  0x00007750552043a5:   and    $0x3ffe,%edi
  0x00007750552043ab:   cmp    $0x0,%edi
  0x00007750552043ae:   je     0x0000775055204458           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@41 (line 2557)
  0x00007750552043b4:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.module.ModuleDescriptor::modsHashCode@41 (line 2557)
  0x00007750552043bb:   test   %eax,(%r10)                  ;   {poll}
  0x00007750552043be:   movabs $0x77502029e998,%rsi         ;   {metadata(method data for {method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x00007750552043c8:   incl   0x280(%rsi)
  0x00007750552043ce:   mov    %rax,%rdi
  0x00007750552043d1:   mov    %edi,0x30(%rsp)
  0x00007750552043d5:   mov    0x28(%rsp),%rax
  0x00007750552043da:   jmp    0x0000775055204018           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@41 (line 2557)
  0x00007750552043df:   mov    0x30(%rsp),%edi
  0x00007750552043e3:   mov    %rdi,%rax
  0x00007750552043e6:   add    $0x40,%rsp
  0x00007750552043ea:   pop    %rbp
  0x00007750552043eb:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552043f2:   ja     0x0000775055204479
  0x00007750552043f8:   ret
  0x00007750552043f9:   movabs $0x775020257d18,%r10         ;   {metadata({method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x0000775055204403:   mov    %r10,0x8(%rsp)
  0x0000775055204408:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055204410:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@-1 (line 2554)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055204415:   jmp    0x0000775055203f54
  0x000077505520441a:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokeinterface iterator {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@3 (line 2555)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520441f:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop [40]=Oop }
                                                            ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@10 (line 2555)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055204424:   mov    %rax,(%rsp)
  0x0000775055204428:   call   0x000077505c82b9a0           ; ImmutableOopMap {[40]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@24 (line 2555)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000077505520442d:   call   0x000077505c8295a0           ; ImmutableOopMap {[40]=Oop rsi=Oop }
                                                            ;*invokevirtual name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@33 (line 2556)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055204432:   movabs $0x77502014e3d0,%r10         ;   {metadata({method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520443c:   mov    %r10,0x8(%rsp)
  0x0000775055204441:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055204449:   call   0x000077505c82e680           ; ImmutableOopMap {[40]=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::hashCode@-1 (line 103)
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@36 (line 2556)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520444e:   jmp    0x000077505520430b
  0x0000775055204453:   call   0x000077505c8295a0           ; ImmutableOopMap {[40]=Oop rsi=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@5 (line 103)
                                                            ; - java.lang.module.ModuleDescriptor::modsHashCode@36 (line 2556)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055204458:   movabs $0x775020257d18,%r10         ;   {metadata({method} {0x0000775020257d18} 'modsHashCode' '(Ljava/lang/Iterable;)I' in 'java/lang/module/ModuleDescriptor')}
  0x0000775055204462:   mov    %r10,0x8(%rsp)
  0x0000775055204467:   movq   $0x29,(%rsp)
  0x000077505520446f:   call   0x000077505c82e680           ; ImmutableOopMap {[40]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.module.ModuleDescriptor::modsHashCode@41 (line 2557)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055204474:   jmp    0x00007750552043b4
  0x0000775055204479:   movabs $0x7750552043eb,%r10         ;   {internal_word}
  0x0000775055204483:   mov    %r10,0x360(%r15)
  0x000077505520448a:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520448f:   nop
  0x0000775055204490:   nop
  0x0000775055204491:   mov    0x3d8(%r15),%rax
  0x0000775055204498:   movq   $0x0,0x3d8(%r15)
  0x00007750552044a3:   movq   $0x0,0x3e0(%r15)
  0x00007750552044ae:   add    $0x40,%rsp
  0x00007750552044b2:   pop    %rbp
  0x00007750552044b3:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552044b8:   hlt
  0x00007750552044b9:   hlt
  0x00007750552044ba:   hlt
  0x00007750552044bb:   hlt
  0x00007750552044bc:   hlt
  0x00007750552044bd:   hlt
  0x00007750552044be:   hlt
  0x00007750552044bf:   hlt
[Stub Code]
  0x00007750552044c0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x00007750552044c5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552044cf:   jmp    0x00007750552044cf           ;   {runtime_call}
  0x00007750552044d4:   nop
  0x00007750552044d5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552044df:   jmp    0x00007750552044df           ;   {runtime_call}
  0x00007750552044e4:   nop
  0x00007750552044e5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552044ef:   jmp    0x00007750552044ef           ;   {runtime_call}
  0x00007750552044f4:   nop
  0x00007750552044f5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552044ff:   jmp    0x00007750552044ff           ;   {runtime_call}
[Exception Handler]
  0x0000775055204504:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055204509:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055204513:   and    $0xfffffffffffffff0,%rsp
  0x0000775055204517:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520451c:   hlt
[Deopt Handler Code]
  0x000077505520451d:   movabs $0x77505520451d,%r10         ;   {section_word}
  0x0000775055204527:   push   %r10
  0x0000775055204529:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520452e:   hlt
  0x000077505520452f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      52   12       3       java.util.ImmutableCollections$SetN::iterator (9 bytes)
 total in heap  [0x0000775055204890,0x0000775055204c90] = 1024
 relocation     [0x00007750552049f0,0x0000775055204a30] = 64
 main code      [0x0000775055204a40,0x0000775055204ba0] = 352
 stub code      [0x0000775055204ba0,0x0000775055204be0] = 64
 metadata       [0x0000775055204be0,0x0000775055204be8] = 8
 scopes data    [0x0000775055204be8,0x0000775055204c18] = 48
 scopes pcs     [0x0000775055204c18,0x0000775055204c88] = 112
 dependencies   [0x0000775055204c88,0x0000775055204c90] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750201548d0} 'iterator' '()Ljava/util/Iterator;' in 'java/util/ImmutableCollections$SetN'
  #           [sp+0x40]  (sp of caller)
  0x0000775055204a40:   mov    0x8(%rsi),%r10d
  0x0000775055204a44:   movabs $0x800000000,%r11
  0x0000775055204a4e:   add    %r11,%r10
  0x0000775055204a51:   cmp    %rax,%r10
  0x0000775055204a54:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055204a5a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055204a60:   mov    %eax,-0x14000(%rsp)
  0x0000775055204a67:   push   %rbp
  0x0000775055204a68:   sub    $0x30,%rsp
  0x0000775055204a6c:   mov    %rsi,%rbx
  0x0000775055204a6f:   movabs $0x77502029ee58,%rdx         ;   {metadata(method data for {method} {0x00007750201548d0} 'iterator' '()Ljava/util/Iterator;' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055204a79:   mov    0xf4(%rdx),%esi
  0x0000775055204a7f:   add    $0x2,%esi
  0x0000775055204a82:   mov    %esi,0xf4(%rdx)
  0x0000775055204a88:   and    $0x7fe,%esi
  0x0000775055204a8e:   cmp    $0x0,%esi
  0x0000775055204a91:   je     0x0000775055204b24
  0x0000775055204a97:   movabs $0x8000739b0,%rdx            ;   {metadata('java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055204aa1:   mov    0x108(%r15),%rax
  0x0000775055204aa8:   lea    0x18(%rax),%rdi
  0x0000775055204aac:   cmp    0x118(%r15),%rdi
  0x0000775055204ab3:   ja     0x0000775055204b45
  0x0000775055204ab9:   mov    %rdi,0x108(%r15)
  0x0000775055204ac0:   movq   $0x1,(%rax)
  0x0000775055204ac7:   mov    %rdx,%rcx
  0x0000775055204aca:   movabs $0x800000000,%r10
  0x0000775055204ad4:   sub    %r10,%rcx
  0x0000775055204ad7:   mov    %ecx,0x8(%rax)
  0x0000775055204ada:   xor    %rcx,%rcx
  0x0000775055204add:   mov    %ecx,0xc(%rax)
  0x0000775055204ae0:   xor    %rcx,%rcx
  0x0000775055204ae3:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::iterator@0 (line 988)
  0x0000775055204ae7:   mov    %rax,%rdx
  0x0000775055204aea:   movabs $0x77502029ee58,%rsi         ;   {metadata(method data for {method} {0x00007750201548d0} 'iterator' '()Ljava/util/Iterator;' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055204af4:   addq   $0x1,0x138(%rsi)
  0x0000775055204afc:   mov    %rbx,%rdx
  0x0000775055204aff:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::iterator@5 (line 988)
  0x0000775055204b02:   mov    %rax,0x20(%rsp)
  0x0000775055204b07:   call   0x000077505c788080           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::iterator@5 (line 988)
                                                            ;   {optimized virtual_call}
  0x0000775055204b0c:   mov    0x20(%rsp),%rax
  0x0000775055204b11:   add    $0x30,%rsp
  0x0000775055204b15:   pop    %rbp
  0x0000775055204b16:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055204b1d:   ja     0x0000775055204b4f
  0x0000775055204b23:   ret
  0x0000775055204b24:   movabs $0x7750201548d0,%r10         ;   {metadata({method} {0x00007750201548d0} 'iterator' '()Ljava/util/Iterator;' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055204b2e:   mov    %r10,0x8(%rsp)
  0x0000775055204b33:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055204b3b:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$SetN::iterator@-1 (line 988)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055204b40:   jmp    0x0000775055204a97
  0x0000775055204b45:   mov    %rdx,%rdx
  0x0000775055204b48:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::iterator@0 (line 988)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055204b4d:   jmp    0x0000775055204ae7
  0x0000775055204b4f:   movabs $0x775055204b16,%r10         ;   {internal_word}
  0x0000775055204b59:   mov    %r10,0x360(%r15)
  0x0000775055204b60:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055204b65:   nop
  0x0000775055204b66:   nop
  0x0000775055204b67:   mov    0x3d8(%r15),%rax
  0x0000775055204b6e:   movq   $0x0,0x3d8(%r15)
  0x0000775055204b79:   movq   $0x0,0x3e0(%r15)
  0x0000775055204b84:   add    $0x30,%rsp
  0x0000775055204b88:   pop    %rbp
  0x0000775055204b89:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055204b8e:   hlt
  0x0000775055204b8f:   hlt
  0x0000775055204b90:   hlt
  0x0000775055204b91:   hlt
  0x0000775055204b92:   hlt
  0x0000775055204b93:   hlt
  0x0000775055204b94:   hlt
  0x0000775055204b95:   hlt
  0x0000775055204b96:   hlt
  0x0000775055204b97:   hlt
  0x0000775055204b98:   hlt
  0x0000775055204b99:   hlt
  0x0000775055204b9a:   hlt
  0x0000775055204b9b:   hlt
  0x0000775055204b9c:   hlt
  0x0000775055204b9d:   hlt
  0x0000775055204b9e:   hlt
  0x0000775055204b9f:   hlt
[Stub Code]
  0x0000775055204ba0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055204ba5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055204baf:   jmp    0x0000775055204baf           ;   {runtime_call}
[Exception Handler]
  0x0000775055204bb4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055204bb9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055204bc3:   and    $0xfffffffffffffff0,%rsp
  0x0000775055204bc7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055204bcc:   hlt
[Deopt Handler Code]
  0x0000775055204bcd:   movabs $0x775055204bcd,%r10         ;   {section_word}
  0x0000775055204bd7:   push   %r10
  0x0000775055204bd9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055204bde:   hlt
  0x0000775055204bdf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      53   13       3       java.util.ImmutableCollections$SetN$SetNIterator::hasNext (13 bytes)
 total in heap  [0x0000775055204d10,0x00007750552050d0] = 960
 relocation     [0x0000775055204e70,0x0000775055204ea0] = 48
 main code      [0x0000775055204ea0,0x0000775055204fe0] = 320
 stub code      [0x0000775055204fe0,0x0000775055205010] = 48
 metadata       [0x0000775055205010,0x0000775055205018] = 8
 scopes data    [0x0000775055205018,0x0000775055205048] = 48
 scopes pcs     [0x0000775055205048,0x00007750552050c8] = 128
 dependencies   [0x00007750552050c8,0x00007750552050d0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020294398} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator'
  #           [sp+0x40]  (sp of caller)
  0x0000775055204ea0:   mov    0x8(%rsi),%r10d
  0x0000775055204ea4:   movabs $0x800000000,%r11
  0x0000775055204eae:   add    %r11,%r10
  0x0000775055204eb1:   cmp    %rax,%r10
  0x0000775055204eb4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055204eba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055204ec0:   mov    %eax,-0x14000(%rsp)
  0x0000775055204ec7:   push   %rbp
  0x0000775055204ec8:   sub    $0x30,%rsp
  0x0000775055204ecc:   movabs $0x77502029f148,%rax         ;   {metadata(method data for {method} {0x0000775020294398} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055204ed6:   mov    0xf4(%rax),%edi
  0x0000775055204edc:   add    $0x2,%edi
  0x0000775055204edf:   mov    %edi,0xf4(%rax)
  0x0000775055204ee5:   and    $0x7fe,%edi
  0x0000775055204eeb:   cmp    $0x0,%edi
  0x0000775055204eee:   je     0x0000775055204f65           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@0 (line 956)
  0x0000775055204ef4:   mov    0xc(%rsi),%eax               ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@1 (line 956)
  0x0000775055204ef7:   cmp    $0x0,%eax
  0x0000775055204efa:   movabs $0x77502029f148,%rax         ;   {metadata(method data for {method} {0x0000775020294398} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055204f04:   movabs $0x138,%rsi
  0x0000775055204f0e:   jle    0x0000775055204f1e
  0x0000775055204f14:   movabs $0x148,%rsi
  0x0000775055204f1e:   mov    (%rax,%rsi,1),%rdi
  0x0000775055204f22:   lea    0x1(%rdi),%rdi
  0x0000775055204f26:   mov    %rdi,(%rax,%rsi,1)
  0x0000775055204f2a:   jle    0x0000775055204f4a           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@4 (line 956)
  0x0000775055204f30:   movabs $0x77502029f148,%rax         ;   {metadata(method data for {method} {0x0000775020294398} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055204f3a:   incl   0x158(%rax)
  0x0000775055204f40:   mov    $0x1,%eax
  0x0000775055204f45:   jmp    0x0000775055204f4f           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@8 (line 956)
  0x0000775055204f4a:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@12 (line 956)
  0x0000775055204f4f:   and    $0x1,%eax
  0x0000775055204f52:   add    $0x30,%rsp
  0x0000775055204f56:   pop    %rbp
  0x0000775055204f57:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055204f5e:   ja     0x0000775055204f86
  0x0000775055204f64:   ret
  0x0000775055204f65:   movabs $0x775020294398,%r10         ;   {metadata({method} {0x0000775020294398} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055204f6f:   mov    %r10,0x8(%rsp)
  0x0000775055204f74:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055204f7c:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@-1 (line 956)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055204f81:   jmp    0x0000775055204ef4
  0x0000775055204f86:   movabs $0x775055204f57,%r10         ;   {internal_word}
  0x0000775055204f90:   mov    %r10,0x360(%r15)
  0x0000775055204f97:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055204f9c:   nop
  0x0000775055204f9d:   nop
  0x0000775055204f9e:   mov    0x3d8(%r15),%rax
  0x0000775055204fa5:   movq   $0x0,0x3d8(%r15)
  0x0000775055204fb0:   movq   $0x0,0x3e0(%r15)
  0x0000775055204fbb:   add    $0x30,%rsp
  0x0000775055204fbf:   pop    %rbp
  0x0000775055204fc0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055204fc5:   hlt
  0x0000775055204fc6:   hlt
  0x0000775055204fc7:   hlt
  0x0000775055204fc8:   hlt
  0x0000775055204fc9:   hlt
  0x0000775055204fca:   hlt
  0x0000775055204fcb:   hlt
  0x0000775055204fcc:   hlt
  0x0000775055204fcd:   hlt
  0x0000775055204fce:   hlt
  0x0000775055204fcf:   hlt
  0x0000775055204fd0:   hlt
  0x0000775055204fd1:   hlt
  0x0000775055204fd2:   hlt
  0x0000775055204fd3:   hlt
  0x0000775055204fd4:   hlt
  0x0000775055204fd5:   hlt
  0x0000775055204fd6:   hlt
  0x0000775055204fd7:   hlt
  0x0000775055204fd8:   hlt
  0x0000775055204fd9:   hlt
  0x0000775055204fda:   hlt
  0x0000775055204fdb:   hlt
  0x0000775055204fdc:   hlt
  0x0000775055204fdd:   hlt
  0x0000775055204fde:   hlt
  0x0000775055204fdf:   hlt
[Exception Handler]
  0x0000775055204fe0:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055204fe5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055204fef:   and    $0xfffffffffffffff0,%rsp
  0x0000775055204ff3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055204ff8:   hlt
[Deopt Handler Code]
  0x0000775055204ff9:   movabs $0x775055204ff9,%r10         ;   {section_word}
  0x0000775055205003:   push   %r10
  0x0000775055205005:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520500a:   hlt
  0x000077505520500b:   hlt
  0x000077505520500c:   hlt
  0x000077505520500d:   hlt
  0x000077505520500e:   hlt
  0x000077505520500f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      55   14       3       java.lang.module.ModuleDescriptor$Exports::hashCode (36 bytes)
 total in heap  [0x0000775055205110,0x00007750552056e0] = 1488
 relocation     [0x0000775055205270,0x00007750552052d0] = 96
 main code      [0x00007750552052e0,0x0000775055205500] = 544
 stub code      [0x0000775055205500,0x0000775055205560] = 96
 metadata       [0x0000775055205560,0x0000775055205568] = 8
 scopes data    [0x0000775055205568,0x00007750552055d0] = 104
 scopes pcs     [0x00007750552055d0,0x00007750552056c0] = 240
 dependencies   [0x00007750552056c0,0x00007750552056c8] = 8
 nul chk table  [0x00007750552056c8,0x00007750552056e0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020293008} 'hashCode' '()I' in 'java/lang/module/ModuleDescriptor$Exports'
  #           [sp+0x50]  (sp of caller)
  0x00007750552052e0:   mov    0x8(%rsi),%r10d
  0x00007750552052e4:   movabs $0x800000000,%r11
  0x00007750552052ee:   add    %r11,%r10
  0x00007750552052f1:   cmp    %rax,%r10
  0x00007750552052f4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552052fa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055205300:   mov    %eax,-0x14000(%rsp)
  0x0000775055205307:   push   %rbp
  0x0000775055205308:   sub    $0x40,%rsp
  0x000077505520530c:   mov    %rsi,0x20(%rsp)
  0x0000775055205311:   movabs $0x77502029f2e0,%rdi         ;   {metadata(method data for {method} {0x0000775020293008} 'hashCode' '()I' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x000077505520531b:   mov    0xf4(%rdi),%ebx
  0x0000775055205321:   add    $0x2,%ebx
  0x0000775055205324:   mov    %ebx,0xf4(%rdi)
  0x000077505520532a:   and    $0x7fe,%ebx
  0x0000775055205330:   cmp    $0x0,%ebx
  0x0000775055205333:   je     0x0000775055205480           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@0 (line 508)
  0x0000775055205339:   mov    0xc(%rsi),%edi
  0x000077505520533c:   shl    $0x3,%rdi                    ;*getfield mods {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@1 (line 508)
  0x0000775055205340:   movabs $0x77502029f2e0,%rbx         ;   {metadata(method data for {method} {0x0000775020293008} 'hashCode' '()I' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x000077505520534a:   addq   $0x1,0x138(%rbx)
  0x0000775055205352:   mov    %rdi,%rsi                    ;*invokestatic modsHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@4 (line 508)
  0x0000775055205355:   xchg   %ax,%ax
  0x0000775055205357:   call   0x000077505c788680           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokestatic modsHashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@4 (line 508)
                                                            ;   {static_call}
  0x000077505520535c:   mov    0x20(%rsp),%rsi
  0x0000775055205361:   mov    0x10(%rsi),%edi
  0x0000775055205364:   shl    $0x3,%rdi                    ;*getfield source {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@13 (line 509)
  0x0000775055205368:   cmp    (%rdi),%rax                  ; implicit exception: dispatches to 0x00007750552054a1
  0x000077505520536b:   mov    %rdi,%rbx
  0x000077505520536e:   movabs $0x77502029f2e0,%rdx         ;   {metadata(method data for {method} {0x0000775020293008} 'hashCode' '()I' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x0000775055205378:   addq   $0x1,0x148(%rdx)
  0x0000775055205380:   mov    $0x2b,%ebx
  0x0000775055205385:   imul   %ebx,%eax
  0x0000775055205388:   mov    %rdi,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@16 (line 509)
  0x000077505520538b:   mov    %eax,0x28(%rsp)
  0x000077505520538f:   call   0x000077505c788080           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@16 (line 509)
                                                            ;   {optimized virtual_call}
  0x0000775055205394:   mov    0x28(%rsp),%esi
  0x0000775055205398:   add    %eax,%esi
  0x000077505520539a:   mov    0x20(%rsp),%rdi
  0x000077505520539f:   mov    0x14(%rdi),%edi
  0x00007750552053a2:   shl    $0x3,%rdi                    ;*getfield targets {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@26 (line 510)
  0x00007750552053a6:   cmp    (%rdi),%rax                  ; implicit exception: dispatches to 0x00007750552054a6
  0x00007750552053a9:   mov    %rdi,%rbx
  0x00007750552053ac:   movabs $0x77502029f2e0,%rax         ;   {metadata(method data for {method} {0x0000775020293008} 'hashCode' '()I' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x00007750552053b6:   mov    0x8(%rbx),%ebx
  0x00007750552053b9:   movabs $0x800000000,%r10
  0x00007750552053c3:   add    %r10,%rbx
  0x00007750552053c6:   cmp    0x190(%rax),%rbx
  0x00007750552053cd:   jne    0x00007750552053dc
  0x00007750552053cf:   addq   $0x1,0x198(%rax)
  0x00007750552053d7:   jmp    0x0000775055205442
  0x00007750552053dc:   cmp    0x1a0(%rax),%rbx
  0x00007750552053e3:   jne    0x00007750552053f2
  0x00007750552053e5:   addq   $0x1,0x1a8(%rax)
  0x00007750552053ed:   jmp    0x0000775055205442
  0x00007750552053f2:   cmpq   $0x0,0x190(%rax)
  0x00007750552053fd:   jne    0x0000775055205416
  0x00007750552053ff:   mov    %rbx,0x190(%rax)
  0x0000775055205406:   movq   $0x1,0x198(%rax)
  0x0000775055205411:   jmp    0x0000775055205442
  0x0000775055205416:   cmpq   $0x0,0x1a0(%rax)
  0x0000775055205421:   jne    0x000077505520543a
  0x0000775055205423:   mov    %rbx,0x1a0(%rax)
  0x000077505520542a:   movq   $0x1,0x1a8(%rax)
  0x0000775055205435:   jmp    0x0000775055205442
  0x000077505520543a:   addq   $0x1,0x180(%rax)
  0x0000775055205442:   mov    $0x2b,%ebx
  0x0000775055205447:   imul   %ebx,%esi
  0x000077505520544a:   mov    %esi,0x2c(%rsp)
  0x000077505520544e:   mov    %rdi,%rsi                    ;*invokeinterface hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@29 (line 510)
  0x0000775055205451:   nopl   0x0(%rax)
  0x0000775055205455:   movabs $0xffffffffffffffff,%rax
  0x000077505520545f:   call   0x000077505c788380           ; ImmutableOopMap {}
                                                            ;*invokeinterface hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@29 (line 510)
                                                            ;   {virtual_call}
  0x0000775055205464:   mov    0x2c(%rsp),%esi
  0x0000775055205468:   add    %eax,%esi
  0x000077505520546a:   mov    %rsi,%rax
  0x000077505520546d:   add    $0x40,%rsp
  0x0000775055205471:   pop    %rbp
  0x0000775055205472:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055205479:   ja     0x00007750552054ab
  0x000077505520547f:   ret
  0x0000775055205480:   movabs $0x775020293008,%r10         ;   {metadata({method} {0x0000775020293008} 'hashCode' '()I' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x000077505520548a:   mov    %r10,0x8(%rsp)
  0x000077505520548f:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055205497:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [32]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@-1 (line 508)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520549c:   jmp    0x0000775055205339
  0x00007750552054a1:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [32]=Oop rdi=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@16 (line 509)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552054a6:   call   0x000077505c8295a0           ; ImmutableOopMap {rdi=Oop }
                                                            ;*invokeinterface hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::hashCode@29 (line 510)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552054ab:   movabs $0x775055205472,%r10         ;   {internal_word}
  0x00007750552054b5:   mov    %r10,0x360(%r15)
  0x00007750552054bc:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552054c1:   nop
  0x00007750552054c2:   nop
  0x00007750552054c3:   mov    0x3d8(%r15),%rax
  0x00007750552054ca:   movq   $0x0,0x3d8(%r15)
  0x00007750552054d5:   movq   $0x0,0x3e0(%r15)
  0x00007750552054e0:   add    $0x40,%rsp
  0x00007750552054e4:   pop    %rbp
  0x00007750552054e5:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552054ea:   hlt
  0x00007750552054eb:   hlt
  0x00007750552054ec:   hlt
  0x00007750552054ed:   hlt
  0x00007750552054ee:   hlt
  0x00007750552054ef:   hlt
  0x00007750552054f0:   hlt
  0x00007750552054f1:   hlt
  0x00007750552054f2:   hlt
  0x00007750552054f3:   hlt
  0x00007750552054f4:   hlt
  0x00007750552054f5:   hlt
  0x00007750552054f6:   hlt
  0x00007750552054f7:   hlt
  0x00007750552054f8:   hlt
  0x00007750552054f9:   hlt
  0x00007750552054fa:   hlt
  0x00007750552054fb:   hlt
  0x00007750552054fc:   hlt
  0x00007750552054fd:   hlt
  0x00007750552054fe:   hlt
  0x00007750552054ff:   hlt
[Stub Code]
  0x0000775055205500:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055205505:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520550f:   jmp    0x000077505520550f           ;   {runtime_call}
  0x0000775055205514:   nop
  0x0000775055205515:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520551f:   jmp    0x000077505520551f           ;   {runtime_call}
  0x0000775055205524:   nop
  0x0000775055205525:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520552f:   jmp    0x000077505520552f           ;   {runtime_call}
[Exception Handler]
  0x0000775055205534:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055205539:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055205543:   and    $0xfffffffffffffff0,%rsp
  0x0000775055205547:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520554c:   hlt
[Deopt Handler Code]
  0x000077505520554d:   movabs $0x77505520554d,%r10         ;   {section_word}
  0x0000775055205557:   push   %r10
  0x0000775055205559:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520555e:   hlt
  0x000077505520555f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)      59   15       4       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x000077505ccc9010,0x000077505ccc9500] = 1264
 relocation     [0x000077505ccc9170,0x000077505ccc9188] = 24
 main code      [0x000077505ccc91a0,0x000077505ccc9300] = 352
 stub code      [0x000077505ccc9300,0x000077505ccc9318] = 24
 metadata       [0x000077505ccc9318,0x000077505ccc9320] = 8
 scopes data    [0x000077505ccc9320,0x000077505ccc93a8] = 136
 scopes pcs     [0x000077505ccc93a8,0x000077505ccc94e8] = 320
 dependencies   [0x000077505ccc94e8,0x000077505ccc94f0] = 8
 nul chk table  [0x000077505ccc94f0,0x000077505ccc9500] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020176538} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  #           [sp+0x30]  (sp of caller)
  0x000077505ccc91a0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccc91a7:   push   %rbp
  0x000077505ccc91a8:   sub    $0x20,%rsp                   ;*synchronization entry
                                                            ; - java.lang.StringLatin1::hashCode@-1 (line 195)
  0x000077505ccc91ac:   mov    0xc(%rsi),%ebp               ; implicit exception: dispatches to 0x000077505ccc92d4
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@5 (line 196)
  0x000077505ccc91af:   xor    %eax,%eax
  0x000077505ccc91b1:   test   %ebp,%ebp
  0x000077505ccc91b3:   jbe    0x000077505ccc92ad           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@13 (line 196)
  0x000077505ccc91b9:   mov    %ebp,%r9d
  0x000077505ccc91bc:   dec    %r9d
  0x000077505ccc91bf:   cmp    %ebp,%r9d
  0x000077505ccc91c2:   jae    0x000077505ccc92c5
  0x000077505ccc91c8:   movzbl 0x10(%rsi),%r10d             ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@31 (line 197)
  0x000077505ccc91cd:   mov    %ebp,%r11d
  0x000077505ccc91d0:   add    $0xfffffffd,%r11d
  0x000077505ccc91d4:   mov    $0x80000000,%ecx
  0x000077505ccc91d9:   cmp    %r11d,%r9d
  0x000077505ccc91dc:   cmovl  %ecx,%r11d
  0x000077505ccc91e0:   mov    $0x1,%r9d
  0x000077505ccc91e6:   cmp    $0x1,%r11d
  0x000077505ccc91ea:   jle    0x000077505ccc9289
  0x000077505ccc91f0:   mov    %r10d,%ecx
  0x000077505ccc91f3:   shl    $0x5,%ecx
  0x000077505ccc91f6:   sub    %r10d,%ecx
  0x000077505ccc91f9:   mov    $0xfa0,%edi
  0x000077505ccc91fe:   mov    %r11d,%ebx
  0x000077505ccc9201:   sub    %r9d,%ebx
  0x000077505ccc9204:   cmp    %r9d,%r11d
  0x000077505ccc9207:   cmovl  %eax,%ebx
  0x000077505ccc920a:   cmp    $0xfa0,%ebx
  0x000077505ccc9210:   cmova  %edi,%ebx
  0x000077505ccc9213:   add    %r9d,%ebx
  0x000077505ccc9216:   data16 nopw 0x0(%rax,%rax,1)        ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@25 (line 197)
  0x000077505ccc9220:   movslq %r9d,%rdx                    ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@19 (line 196)
  0x000077505ccc9223:   movzbl 0x10(%rsi,%rdx,1),%r10d
  0x000077505ccc9229:   movzbl 0x13(%rsi,%rdx,1),%r13d
  0x000077505ccc922f:   movzbl 0x11(%rsi,%rdx,1),%r8d
  0x000077505ccc9235:   movzbl 0x12(%rsi,%rdx,1),%edx
  0x000077505ccc923a:   add    %r10d,%ecx
  0x000077505ccc923d:   mov    %ecx,%r14d
  0x000077505ccc9240:   shl    $0x5,%r14d
  0x000077505ccc9244:   sub    %ecx,%r14d
  0x000077505ccc9247:   add    %r8d,%r14d
  0x000077505ccc924a:   mov    %r14d,%r8d
  0x000077505ccc924d:   shl    $0x5,%r8d
  0x000077505ccc9251:   sub    %r14d,%r8d
  0x000077505ccc9254:   add    %edx,%r8d
  0x000077505ccc9257:   mov    %r8d,%r10d
  0x000077505ccc925a:   shl    $0x5,%r10d
  0x000077505ccc925e:   sub    %r8d,%r10d
  0x000077505ccc9261:   add    %r13d,%r10d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@32 (line 197)
  0x000077505ccc9264:   mov    %r10d,%ecx
  0x000077505ccc9267:   shl    $0x5,%ecx
  0x000077505ccc926a:   sub    %r10d,%ecx                   ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@25 (line 197)
  0x000077505ccc926d:   add    $0x4,%r9d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@34 (line 196)
  0x000077505ccc9271:   cmp    %ebx,%r9d
  0x000077505ccc9274:   jl     0x000077505ccc9220           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@13 (line 196)
  0x000077505ccc9276:   mov    0x350(%r15),%r8              ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::hashCode@37 (line 196)
  0x000077505ccc927d:   test   %eax,(%r8)                   ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@37 (line 196)
                                                            ;   {poll}
  0x000077505ccc9280:   cmp    %r11d,%r9d
  0x000077505ccc9283:   jl     0x000077505ccc91fe
  0x000077505ccc9289:   cmp    %ebp,%r9d
  0x000077505ccc928c:   jge    0x000077505ccc92c0           ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@16 (line 196)
  0x000077505ccc928e:   movzbl 0x10(%rsi,%r9,1),%r11d
  0x000077505ccc9294:   mov    %r10d,%eax
  0x000077505ccc9297:   shl    $0x5,%eax
  0x000077505ccc929a:   sub    %r10d,%eax
  0x000077505ccc929d:   add    %r11d,%eax                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@32 (line 197)
  0x000077505ccc92a0:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@34 (line 196)
  0x000077505ccc92a3:   cmp    %ebp,%r9d
  0x000077505ccc92a6:   jge    0x000077505ccc92ad
  0x000077505ccc92a8:   mov    %eax,%r10d
  0x000077505ccc92ab:   jmp    0x000077505ccc928e           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@13 (line 196)
  0x000077505ccc92ad:   add    $0x20,%rsp
  0x000077505ccc92b1:   pop    %rbp
  0x000077505ccc92b2:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccc92b9:   ja     0x000077505ccc92e0
  0x000077505ccc92bf:   ret
  0x000077505ccc92c0:   mov    %r10d,%eax
  0x000077505ccc92c3:   jmp    0x000077505ccc92ad
  0x000077505ccc92c5:   mov    %rsi,(%rsp)
  0x000077505ccc92c9:   mov    $0xffffff76,%esi
  0x000077505ccc92ce:   nop
  0x000077505ccc92cf:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::hashCode@13 (line 196)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccc92d4:   mov    $0xfffffff6,%esi
  0x000077505ccc92d9:   xchg   %ax,%ax
  0x000077505ccc92db:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::hashCode@5 (line 196)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccc92e0:   movabs $0x77505ccc92b2,%r10         ;   {internal_word}
  0x000077505ccc92ea:   mov    %r10,0x360(%r15)
  0x000077505ccc92f1:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccc92f6:   hlt
  0x000077505ccc92f7:   hlt
  0x000077505ccc92f8:   hlt
  0x000077505ccc92f9:   hlt
  0x000077505ccc92fa:   hlt
  0x000077505ccc92fb:   hlt
  0x000077505ccc92fc:   hlt
  0x000077505ccc92fd:   hlt
  0x000077505ccc92fe:   hlt
  0x000077505ccc92ff:   hlt
[Exception Handler]
  0x000077505ccc9300:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccc9305:   call   0x000077505ccc930a
  0x000077505ccc930a:   subq   $0x5,(%rsp)
  0x000077505ccc930f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccc9314:   hlt
  0x000077505ccc9315:   hlt
  0x000077505ccc9316:   hlt
  0x000077505ccc9317:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      61   16       3       java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x0000775055205710,0x0000775055205ba0] = 1168
 relocation     [0x0000775055205870,0x00007750552058b0] = 64
 main code      [0x00007750552058c0,0x0000775055205a60] = 416
 stub code      [0x0000775055205a60,0x0000775055205aa0] = 64
 metadata       [0x0000775055205aa0,0x0000775055205aa8] = 8
 scopes data    [0x0000775055205aa8,0x0000775055205ae8] = 64
 scopes pcs     [0x0000775055205ae8,0x0000775055205b98] = 176
 dependencies   [0x0000775055205b98,0x0000775055205ba0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007750552058c0:   mov    %eax,-0x14000(%rsp)
  0x00007750552058c7:   push   %rbp
  0x00007750552058c8:   sub    $0x30,%rsp
  0x00007750552058cc:   movabs $0x77502029f510,%rax         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00007750552058d6:   mov    0xf4(%rax),%edx
  0x00007750552058dc:   add    $0x2,%edx
  0x00007750552058df:   mov    %edx,0xf4(%rax)
  0x00007750552058e5:   and    $0x7fe,%edx
  0x00007750552058eb:   cmp    $0x0,%edx
  0x00007750552058ee:   je     0x00007750552059d6           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@0 (line 208)
  0x00007750552058f4:   cmp    $0x0,%rsi
  0x00007750552058f8:   movabs $0x77502029f510,%rax         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x0000775055205902:   movabs $0x148,%rdx
  0x000077505520590c:   je     0x000077505520591c
  0x0000775055205912:   movabs $0x138,%rdx
  0x000077505520591c:   mov    (%rax,%rdx,1),%rdi
  0x0000775055205920:   lea    0x1(%rdi),%rdi
  0x0000775055205924:   mov    %rdi,(%rax,%rdx,1)
  0x0000775055205928:   je     0x0000775055205944           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@1 (line 208)
  0x000077505520592e:   mov    %rsi,%rax
  0x0000775055205931:   add    $0x30,%rsp
  0x0000775055205935:   pop    %rbp
  0x0000775055205936:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520593d:   ja     0x00007750552059f7
  0x0000775055205943:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@13 (line 210)
  0x0000775055205944:   nopl   0x0(%rax)
  0x0000775055205948:   jmp    0x0000775055205a1c           ;   {no_reloc}
  0x000077505520594d:   add    %al,(%rax)
  0x000077505520594f:   add    %al,(%rax)
  0x0000775055205951:   add    %cl,-0x75(%rcx)
  0x0000775055205954:   xchg   %ecx,(%rax)
  0x0000775055205956:   add    %eax,(%rax)
  0x0000775055205958:   add    %cl,-0x73(%rax)
  0x000077505520595b:   js     0x000077505520598d
  0x000077505520595d:   cmp    0x118(%r15),%rdi
  0x0000775055205964:   ja     0x0000775055205a26
  0x000077505520596a:   mov    %rdi,0x108(%r15)
  0x0000775055205971:   movq   $0x1,(%rax)
  0x0000775055205978:   mov    %rdx,%rcx
  0x000077505520597b:   movabs $0x800000000,%r10
  0x0000775055205985:   sub    %r10,%rcx
  0x0000775055205988:   mov    %ecx,0x8(%rax)
  0x000077505520598b:   xor    %rcx,%rcx
  0x000077505520598e:   mov    %ecx,0xc(%rax)
  0x0000775055205991:   xor    %rcx,%rcx
  0x0000775055205994:   mov    %rcx,0x10(%rax)
  0x0000775055205998:   mov    %rcx,0x18(%rax)
  0x000077505520599c:   mov    %rcx,0x20(%rax)
  0x00007750552059a0:   mov    %rcx,0x28(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
  0x00007750552059a4:   mov    %rax,%rsi
  0x00007750552059a7:   movabs $0x77502029f510,%rdi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00007750552059b1:   addq   $0x1,0x158(%rdi)
  0x00007750552059b9:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
  0x00007750552059bc:   mov    %rax,0x20(%rsp)
  0x00007750552059c1:   nopw   0x0(%rax,%rax,1)
  0x00007750552059c7:   call   0x000077505c788080           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
                                                            ;   {optimized virtual_call}
  0x00007750552059cc:   mov    0x20(%rsp),%rax
  0x00007750552059d1:   jmp    0x0000775055205a52
  0x00007750552059d6:   movabs $0x77502014e748,%r10         ;   {metadata({method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00007750552059e0:   mov    %r10,0x8(%rsp)
  0x00007750552059e5:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552059ed:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::requireNonNull@-1 (line 208)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552059f2:   jmp    0x00007750552058f4
  0x00007750552059f7:   movabs $0x775055205936,%r10         ;   {internal_word}
  0x0000775055205a01:   mov    %r10,0x360(%r15)
  0x0000775055205a08:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055205a0d:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x0000775055205a17:   mov    $0xa050f00,%eax
  0x0000775055205a1c:   call   0x000077505c82d600           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Objects::requireNonNull@4 (line 209)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x0000775055205a21:   jmp    0x0000775055205948
  0x0000775055205a26:   mov    %rdx,%rdx
  0x0000775055205a29:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055205a2e:   jmp    0x00007750552059a4
  0x0000775055205a33:   nop
  0x0000775055205a34:   nop
  0x0000775055205a35:   mov    0x3d8(%r15),%rax
  0x0000775055205a3c:   movq   $0x0,0x3d8(%r15)
  0x0000775055205a47:   movq   $0x0,0x3e0(%r15)
  0x0000775055205a52:   add    $0x30,%rsp
  0x0000775055205a56:   pop    %rbp
  0x0000775055205a57:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055205a5c:   hlt
  0x0000775055205a5d:   hlt
  0x0000775055205a5e:   hlt
  0x0000775055205a5f:   hlt
[Stub Code]
  0x0000775055205a60:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055205a65:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055205a6f:   jmp    0x0000775055205a6f           ;   {runtime_call}
[Exception Handler]
  0x0000775055205a74:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055205a79:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055205a83:   and    $0xfffffffffffffff0,%rsp
  0x0000775055205a87:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055205a8c:   hlt
[Deopt Handler Code]
  0x0000775055205a8d:   movabs $0x775055205a8d,%r10         ;   {section_word}
  0x0000775055205a97:   push   %r10
  0x0000775055205a99:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055205a9e:   hlt
  0x0000775055205a9f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)      63   17       4       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000077505ccc9510,0x000077505ccc9748] = 568
 relocation     [0x000077505ccc9670,0x000077505ccc9680] = 16
 main code      [0x000077505ccc9680,0x000077505ccc96e0] = 96
 stub code      [0x000077505ccc96e0,0x000077505ccc96f8] = 24
 metadata       [0x000077505ccc96f8,0x000077505ccc9708] = 16
 scopes data    [0x000077505ccc9708,0x000077505ccc9710] = 8
 scopes pcs     [0x000077505ccc9710,0x000077505ccc9740] = 48
 dependencies   [0x000077505ccc9740,0x000077505ccc9748] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x000077505ccc9680:   mov    0x8(%rsi),%r10d
  0x000077505ccc9684:   movabs $0x800000000,%r11
  0x000077505ccc968e:   add    %r11,%r10
  0x000077505ccc9691:   cmp    %r10,%rax
  0x000077505ccc9694:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccc969a:   xchg   %ax,%ax
  0x000077505ccc969c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccc96a0:   sub    $0x18,%rsp
  0x000077505ccc96a7:   mov    %rbp,0x10(%rsp)              ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
  0x000077505ccc96ac:   add    $0x10,%rsp
  0x000077505ccc96b0:   pop    %rbp
  0x000077505ccc96b1:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccc96b8:   ja     0x000077505ccc96bf
  0x000077505ccc96be:   ret
  0x000077505ccc96bf:   movabs $0x77505ccc96b1,%r10         ;   {internal_word}
  0x000077505ccc96c9:   mov    %r10,0x360(%r15)
  0x000077505ccc96d0:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccc96d5:   hlt
  0x000077505ccc96d6:   hlt
  0x000077505ccc96d7:   hlt
  0x000077505ccc96d8:   hlt
  0x000077505ccc96d9:   hlt
  0x000077505ccc96da:   hlt
  0x000077505ccc96db:   hlt
  0x000077505ccc96dc:   hlt
  0x000077505ccc96dd:   hlt
  0x000077505ccc96de:   hlt
  0x000077505ccc96df:   hlt
[Exception Handler]
  0x000077505ccc96e0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccc96e5:   call   0x000077505ccc96ea
  0x000077505ccc96ea:   subq   $0x5,(%rsp)
  0x000077505ccc96ef:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccc96f4:   hlt
  0x000077505ccc96f5:   hlt
  0x000077505ccc96f6:   hlt
  0x000077505ccc96f7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      63   18       3       java.util.AbstractCollection::<init> (5 bytes)
 total in heap  [0x0000775055205c10,0x0000775055205fa0] = 912
 relocation     [0x0000775055205d70,0x0000775055205da8] = 56
 main code      [0x0000775055205dc0,0x0000775055205ee0] = 288
 stub code      [0x0000775055205ee0,0x0000775055205f10] = 48
 metadata       [0x0000775055205f10,0x0000775055205f28] = 24
 scopes data    [0x0000775055205f28,0x0000775055205f48] = 32
 scopes pcs     [0x0000775055205f48,0x0000775055205f98] = 80
 dependencies   [0x0000775055205f98,0x0000775055205fa0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection'
  #           [sp+0x40]  (sp of caller)
  0x0000775055205dc0:   mov    0x8(%rsi),%r10d
  0x0000775055205dc4:   movabs $0x800000000,%r11
  0x0000775055205dce:   add    %r11,%r10
  0x0000775055205dd1:   cmp    %rax,%r10
  0x0000775055205dd4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055205dda:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055205de0:   mov    %eax,-0x14000(%rsp)
  0x0000775055205de7:   push   %rbp
  0x0000775055205de8:   sub    $0x30,%rsp
  0x0000775055205dec:   movabs $0x77502029f820,%rdi         ;   {metadata(method data for {method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x0000775055205df6:   mov    0xf4(%rdi),%ebx
  0x0000775055205dfc:   add    $0x2,%ebx
  0x0000775055205dff:   mov    %ebx,0xf4(%rdi)
  0x0000775055205e05:   and    $0x7fe,%ebx
  0x0000775055205e0b:   cmp    $0x0,%ebx
  0x0000775055205e0e:   je     0x0000775055205e64           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.AbstractCollection::<init>@0 (line 68)
  0x0000775055205e14:   mov    %rsi,%rdi
  0x0000775055205e17:   movabs $0x77502029f820,%rbx         ;   {metadata(method data for {method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x0000775055205e21:   addq   $0x1,0x138(%rbx)
  0x0000775055205e29:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055205e33:   mov    0xf4(%rdi),%ebx
  0x0000775055205e39:   add    $0x2,%ebx
  0x0000775055205e3c:   mov    %ebx,0xf4(%rdi)
  0x0000775055205e42:   and    $0x1ffffe,%ebx
  0x0000775055205e48:   cmp    $0x0,%ebx
  0x0000775055205e4b:   je     0x0000775055205e82
  0x0000775055205e51:   add    $0x30,%rsp
  0x0000775055205e55:   pop    %rbp
  0x0000775055205e56:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055205e5d:   ja     0x0000775055205ea0
  0x0000775055205e63:   ret
  0x0000775055205e64:   movabs $0x775020102bb8,%r10         ;   {metadata({method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x0000775055205e6e:   mov    %r10,0x8(%rsp)
  0x0000775055205e73:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055205e7b:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.AbstractCollection::<init>@-1 (line 68)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055205e80:   jmp    0x0000775055205e14
  0x0000775055205e82:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055205e8c:   mov    %r10,0x8(%rsp)
  0x0000775055205e91:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055205e99:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.AbstractCollection::<init>@1 (line 68)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055205e9e:   jmp    0x0000775055205e51
  0x0000775055205ea0:   movabs $0x775055205e56,%r10         ;   {internal_word}
  0x0000775055205eaa:   mov    %r10,0x360(%r15)
  0x0000775055205eb1:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055205eb6:   nop
  0x0000775055205eb7:   nop
  0x0000775055205eb8:   mov    0x3d8(%r15),%rax
  0x0000775055205ebf:   movq   $0x0,0x3d8(%r15)
  0x0000775055205eca:   movq   $0x0,0x3e0(%r15)
  0x0000775055205ed5:   add    $0x30,%rsp
  0x0000775055205ed9:   pop    %rbp
  0x0000775055205eda:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055205edf:   hlt
[Exception Handler]
  0x0000775055205ee0:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055205ee5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055205eef:   and    $0xfffffffffffffff0,%rsp
  0x0000775055205ef3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055205ef8:   hlt
[Deopt Handler Code]
  0x0000775055205ef9:   movabs $0x775055205ef9,%r10         ;   {section_word}
  0x0000775055205f03:   push   %r10
  0x0000775055205f05:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055205f0a:   hlt
  0x0000775055205f0b:   hlt
  0x0000775055205f0c:   hlt
  0x0000775055205f0d:   hlt
  0x0000775055205f0e:   hlt
  0x0000775055205f0f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      64   19       3       java.util.ImmutableCollections$AbstractImmutableCollection::<init> (5 bytes)
 total in heap  [0x0000775055206010,0x0000775055206428] = 1048
 relocation     [0x0000775055206170,0x00007750552061b0] = 64
 main code      [0x00007750552061c0,0x0000775055206340] = 384
 stub code      [0x0000775055206340,0x0000775055206370] = 48
 metadata       [0x0000775055206370,0x0000775055206390] = 32
 scopes data    [0x0000775055206390,0x00007750552063c0] = 48
 scopes pcs     [0x00007750552063c0,0x0000775055206420] = 96
 dependencies   [0x0000775055206420,0x0000775055206428] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection'
  #           [sp+0x40]  (sp of caller)
  0x00007750552061c0:   mov    0x8(%rsi),%r10d
  0x00007750552061c4:   movabs $0x800000000,%r11
  0x00007750552061ce:   add    %r11,%r10
  0x00007750552061d1:   cmp    %rax,%r10
  0x00007750552061d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552061da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552061e0:   mov    %eax,-0x14000(%rsp)
  0x00007750552061e7:   push   %rbp
  0x00007750552061e8:   sub    $0x30,%rsp
  0x00007750552061ec:   movabs $0x77502029f988,%rdi         ;   {metadata(method data for {method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection')}
  0x00007750552061f6:   mov    0xf4(%rdi),%ebx
  0x00007750552061fc:   add    $0x2,%ebx
  0x00007750552061ff:   mov    %ebx,0xf4(%rdi)
  0x0000775055206205:   and    $0x7fe,%ebx
  0x000077505520620b:   cmp    $0x0,%ebx
  0x000077505520620e:   je     0x00007750552062a1           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@0 (line 145)
  0x0000775055206214:   mov    %rsi,%rdi
  0x0000775055206217:   movabs $0x77502029f988,%rbx         ;   {metadata(method data for {method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection')}
  0x0000775055206221:   addq   $0x1,0x138(%rbx)
  0x0000775055206229:   movabs $0x77502029f820,%rdi         ;   {metadata(method data for {method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x0000775055206233:   mov    0xf4(%rdi),%ebx
  0x0000775055206239:   add    $0x2,%ebx
  0x000077505520623c:   mov    %ebx,0xf4(%rdi)
  0x0000775055206242:   and    $0x1ffffe,%ebx
  0x0000775055206248:   cmp    $0x0,%ebx
  0x000077505520624b:   je     0x00007750552062c2
  0x0000775055206251:   mov    %rsi,%rdi
  0x0000775055206254:   movabs $0x77502029f820,%rbx         ;   {metadata(method data for {method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x000077505520625e:   addq   $0x1,0x138(%rbx)
  0x0000775055206266:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055206270:   mov    0xf4(%rdi),%ebx
  0x0000775055206276:   add    $0x2,%ebx
  0x0000775055206279:   mov    %ebx,0xf4(%rdi)
  0x000077505520627f:   and    $0x1ffffe,%ebx
  0x0000775055206285:   cmp    $0x0,%ebx
  0x0000775055206288:   je     0x00007750552062e3
  0x000077505520628e:   add    $0x30,%rsp
  0x0000775055206292:   pop    %rbp
  0x0000775055206293:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520629a:   ja     0x0000775055206301
  0x00007750552062a0:   ret
  0x00007750552062a1:   movabs $0x77502014cbd8,%r10         ;   {metadata({method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection')}
  0x00007750552062ab:   mov    %r10,0x8(%rsp)
  0x00007750552062b0:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552062b8:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@-1 (line 145)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552062bd:   jmp    0x0000775055206214
  0x00007750552062c2:   movabs $0x775020102bb8,%r10         ;   {metadata({method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x00007750552062cc:   mov    %r10,0x8(%rsp)
  0x00007750552062d1:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552062d9:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.AbstractCollection::<init>@-1 (line 68)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@1 (line 145)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552062de:   jmp    0x0000775055206251
  0x00007750552062e3:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552062ed:   mov    %r10,0x8(%rsp)
  0x00007750552062f2:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552062fa:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.AbstractCollection::<init>@1 (line 68)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@1 (line 145)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552062ff:   jmp    0x000077505520628e
  0x0000775055206301:   movabs $0x775055206293,%r10         ;   {internal_word}
  0x000077505520630b:   mov    %r10,0x360(%r15)
  0x0000775055206312:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055206317:   nop
  0x0000775055206318:   nop
  0x0000775055206319:   mov    0x3d8(%r15),%rax
  0x0000775055206320:   movq   $0x0,0x3d8(%r15)
  0x000077505520632b:   movq   $0x0,0x3e0(%r15)
  0x0000775055206336:   add    $0x30,%rsp
  0x000077505520633a:   pop    %rbp
  0x000077505520633b:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
  0x0000775055206340:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055206345:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520634f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055206353:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055206358:   hlt
[Deopt Handler Code]
  0x0000775055206359:   movabs $0x775055206359,%r10         ;   {section_word}
  0x0000775055206363:   push   %r10
  0x0000775055206365:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520636a:   hlt
  0x000077505520636b:   hlt
  0x000077505520636c:   hlt
  0x000077505520636d:   hlt
  0x000077505520636e:   hlt
  0x000077505520636f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      66   20       3       java.util.ImmutableCollections$AbstractImmutableSet::<init> (5 bytes)
 total in heap  [0x0000775055206490,0x0000775055206948] = 1208
 relocation     [0x00007750552065f0,0x0000775055206638] = 72
 main code      [0x0000775055206640,0x0000775055206840] = 512
 stub code      [0x0000775055206840,0x0000775055206870] = 48
 metadata       [0x0000775055206870,0x0000775055206898] = 40
 scopes data    [0x0000775055206898,0x00007750552068d0] = 56
 scopes pcs     [0x00007750552068d0,0x0000775055206940] = 112
 dependencies   [0x0000775055206940,0x0000775055206948] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502014c680} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableSet'
  #           [sp+0x50]  (sp of caller)
  0x0000775055206640:   mov    0x8(%rsi),%r10d
  0x0000775055206644:   movabs $0x800000000,%r11
  0x000077505520664e:   add    %r11,%r10
  0x0000775055206651:   cmp    %rax,%r10
  0x0000775055206654:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520665a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055206660:   mov    %eax,-0x14000(%rsp)
  0x0000775055206667:   push   %rbp
  0x0000775055206668:   sub    $0x40,%rsp
  0x000077505520666c:   movabs $0x77502029fb28,%rdi         ;   {metadata(method data for {method} {0x000077502014c680} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableSet')}
  0x0000775055206676:   mov    0xf4(%rdi),%ebx
  0x000077505520667c:   add    $0x2,%ebx
  0x000077505520667f:   mov    %ebx,0xf4(%rdi)
  0x0000775055206685:   and    $0x7fe,%ebx
  0x000077505520668b:   cmp    $0x0,%ebx
  0x000077505520668e:   je     0x000077505520675e           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$AbstractImmutableSet::<init>@0 (line 745)
  0x0000775055206694:   mov    %rsi,%rdi
  0x0000775055206697:   movabs $0x77502029fb28,%rbx         ;   {metadata(method data for {method} {0x000077502014c680} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableSet')}
  0x00007750552066a1:   addq   $0x1,0x138(%rbx)
  0x00007750552066a9:   movabs $0x77502029f988,%rdi         ;   {metadata(method data for {method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection')}
  0x00007750552066b3:   mov    0xf4(%rdi),%ebx
  0x00007750552066b9:   add    $0x2,%ebx
  0x00007750552066bc:   mov    %ebx,0xf4(%rdi)
  0x00007750552066c2:   and    $0x1ffffe,%ebx
  0x00007750552066c8:   cmp    $0x0,%ebx
  0x00007750552066cb:   je     0x000077505520677f
  0x00007750552066d1:   mov    %rsi,%rdi
  0x00007750552066d4:   movabs $0x77502029f988,%rbx         ;   {metadata(method data for {method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection')}
  0x00007750552066de:   addq   $0x1,0x138(%rbx)
  0x00007750552066e6:   movabs $0x77502029f820,%rdi         ;   {metadata(method data for {method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x00007750552066f0:   mov    0xf4(%rdi),%ebx
  0x00007750552066f6:   add    $0x2,%ebx
  0x00007750552066f9:   mov    %ebx,0xf4(%rdi)
  0x00007750552066ff:   and    $0x1ffffe,%ebx
  0x0000775055206705:   cmp    $0x0,%ebx
  0x0000775055206708:   je     0x00007750552067a0
  0x000077505520670e:   mov    %rsi,%rdi
  0x0000775055206711:   movabs $0x77502029f820,%rbx         ;   {metadata(method data for {method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x000077505520671b:   addq   $0x1,0x138(%rbx)
  0x0000775055206723:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505520672d:   mov    0xf4(%rdi),%ebx
  0x0000775055206733:   add    $0x2,%ebx
  0x0000775055206736:   mov    %ebx,0xf4(%rdi)
  0x000077505520673c:   and    $0x1ffffe,%ebx
  0x0000775055206742:   cmp    $0x0,%ebx
  0x0000775055206745:   je     0x00007750552067c1
  0x000077505520674b:   add    $0x40,%rsp
  0x000077505520674f:   pop    %rbp
  0x0000775055206750:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055206757:   ja     0x00007750552067e2
  0x000077505520675d:   ret
  0x000077505520675e:   movabs $0x77502014c680,%r10         ;   {metadata({method} {0x000077502014c680} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableSet')}
  0x0000775055206768:   mov    %r10,0x8(%rsp)
  0x000077505520676d:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055206775:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$AbstractImmutableSet::<init>@-1 (line 745)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520677a:   jmp    0x0000775055206694
  0x000077505520677f:   movabs $0x77502014cbd8,%r10         ;   {metadata({method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection')}
  0x0000775055206789:   mov    %r10,0x8(%rsp)
  0x000077505520678e:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055206796:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@-1 (line 145)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableSet::<init>@1 (line 745)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520679b:   jmp    0x00007750552066d1
  0x00007750552067a0:   movabs $0x775020102bb8,%r10         ;   {metadata({method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x00007750552067aa:   mov    %r10,0x8(%rsp)
  0x00007750552067af:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552067b7:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.AbstractCollection::<init>@-1 (line 68)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@1 (line 145)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableSet::<init>@1 (line 745)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552067bc:   jmp    0x000077505520670e
  0x00007750552067c1:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552067cb:   mov    %r10,0x8(%rsp)
  0x00007750552067d0:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552067d8:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.AbstractCollection::<init>@1 (line 68)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@1 (line 145)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableSet::<init>@1 (line 745)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552067dd:   jmp    0x000077505520674b
  0x00007750552067e2:   movabs $0x775055206750,%r10         ;   {internal_word}
  0x00007750552067ec:   mov    %r10,0x360(%r15)
  0x00007750552067f3:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552067f8:   nop
  0x00007750552067f9:   nop
  0x00007750552067fa:   mov    0x3d8(%r15),%rax
  0x0000775055206801:   movq   $0x0,0x3d8(%r15)
  0x000077505520680c:   movq   $0x0,0x3e0(%r15)
  0x0000775055206817:   add    $0x40,%rsp
  0x000077505520681b:   pop    %rbp
  0x000077505520681c:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055206821:   hlt
  0x0000775055206822:   hlt
  0x0000775055206823:   hlt
  0x0000775055206824:   hlt
  0x0000775055206825:   hlt
  0x0000775055206826:   hlt
  0x0000775055206827:   hlt
  0x0000775055206828:   hlt
  0x0000775055206829:   hlt
  0x000077505520682a:   hlt
  0x000077505520682b:   hlt
  0x000077505520682c:   hlt
  0x000077505520682d:   hlt
  0x000077505520682e:   hlt
  0x000077505520682f:   hlt
  0x0000775055206830:   hlt
  0x0000775055206831:   hlt
  0x0000775055206832:   hlt
  0x0000775055206833:   hlt
  0x0000775055206834:   hlt
  0x0000775055206835:   hlt
  0x0000775055206836:   hlt
  0x0000775055206837:   hlt
  0x0000775055206838:   hlt
  0x0000775055206839:   hlt
  0x000077505520683a:   hlt
  0x000077505520683b:   hlt
  0x000077505520683c:   hlt
  0x000077505520683d:   hlt
  0x000077505520683e:   hlt
  0x000077505520683f:   hlt
[Exception Handler]
  0x0000775055206840:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055206845:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520684f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055206853:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055206858:   hlt
[Deopt Handler Code]
  0x0000775055206859:   movabs $0x775055206859,%r10         ;   {section_word}
  0x0000775055206863:   push   %r10
  0x0000775055206865:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520686a:   hlt
  0x000077505520686b:   hlt
  0x000077505520686c:   hlt
  0x000077505520686d:   hlt
  0x000077505520686e:   hlt
  0x000077505520686f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      68   21       3       java.util.Set::of (68 bytes)
 total in heap  [0x0000775055206990,0x0000775055207850] = 3776
 relocation     [0x0000775055206af0,0x0000775055206bb8] = 200
 main code      [0x0000775055206bc0,0x00007750552073a0] = 2016
 stub code      [0x00007750552073a0,0x0000775055207400] = 96
 metadata       [0x0000775055207400,0x0000775055207438] = 56
 scopes data    [0x0000775055207438,0x00007750552075a8] = 368
 scopes pcs     [0x00007750552075a8,0x0000775055207838] = 656
 dependencies   [0x0000775055207838,0x0000775055207840] = 8
 nul chk table  [0x0000775055207840,0x0000775055207850] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502014ad80} 'of' '([Ljava/lang/Object;)Ljava/util/Set;' in 'java/util/Set'
  # parm0:    rsi:rsi   = '[Ljava/lang/Object;'
  #           [sp+0xc0]  (sp of caller)
  0x0000775055206bc0:   mov    %eax,-0x14000(%rsp)
  0x0000775055206bc7:   push   %rbp
  0x0000775055206bc8:   sub    $0xb0,%rsp
  0x0000775055206bcf:   mov    %rsi,%rbx
  0x0000775055206bd2:   movabs $0x77502029fd38,%rdx         ;   {metadata(method data for {method} {0x000077502014ad80} 'of' '([Ljava/lang/Object;)Ljava/util/Set;' in 'java/util/Set')}
  0x0000775055206bdc:   mov    0xf4(%rdx),%esi
  0x0000775055206be2:   add    $0x2,%esi
  0x0000775055206be5:   mov    %esi,0xf4(%rdx)
  0x0000775055206beb:   and    $0x7fe,%esi
  0x0000775055206bf1:   cmp    $0x0,%esi
  0x0000775055206bf4:   je     0x0000775055207121           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@0 (line 696)
  0x0000775055206bfa:   mov    0xc(%rbx),%edx               ; implicit exception: dispatches to 0x0000775055207142
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@1 (line 696)
  0x0000775055206bfd:   movabs $0x77502029fd38,%rsi         ;   {metadata(method data for {method} {0x000077502014ad80} 'of' '([Ljava/lang/Object;)Ljava/util/Set;' in 'java/util/Set')}
  0x0000775055206c07:   movabs $0x140,%rdi
  0x0000775055206c11:   cmp    $0x0,%edx
  0x0000775055206c14:   mov    %rdi,%rax
  0x0000775055206c17:   movabs $0x150,%rdi
  0x0000775055206c21:   cmovne %rax,%rdi
  0x0000775055206c25:   cmp    $0x1,%edx
  0x0000775055206c28:   mov    %rdi,%rax
  0x0000775055206c2b:   movabs $0x160,%rdi
  0x0000775055206c35:   cmovne %rax,%rdi
  0x0000775055206c39:   cmp    $0x2,%edx
  0x0000775055206c3c:   mov    %rdi,%rax
  0x0000775055206c3f:   movabs $0x170,%rdi
  0x0000775055206c49:   cmovne %rax,%rdi
  0x0000775055206c4d:   mov    (%rsi,%rdi,1),%rax
  0x0000775055206c51:   movabs $0x1,%r10
  0x0000775055206c5b:   add    %r10,%rax
  0x0000775055206c5e:   mov    %rax,(%rsi,%rdi,1)
  0x0000775055206c62:   cmp    $0x0,%edx
  0x0000775055206c65:   je     0x0000775055207062
  0x0000775055206c6b:   cmp    $0x1,%edx
  0x0000775055206c6e:   je     0x0000775055206c82
  0x0000775055206c74:   cmp    $0x2,%edx
  0x0000775055206c77:   je     0x0000775055206fa2
  0x0000775055206c7d:   jmp    0x0000775055206f0c           ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@2 (line 696)
  0x0000775055206c82:   movabs $0x80005bdf0,%rdx            ;   {metadata('java/util/ImmutableCollections$Set12')}
  0x0000775055206c8c:   mov    0x108(%r15),%rax
  0x0000775055206c93:   lea    0x18(%rax),%rdi
  0x0000775055206c97:   cmp    0x118(%r15),%rdi
  0x0000775055206c9e:   ja     0x0000775055207147
  0x0000775055206ca4:   mov    %rdi,0x108(%r15)
  0x0000775055206cab:   movq   $0x1,(%rax)
  0x0000775055206cb2:   mov    %rdx,%rcx
  0x0000775055206cb5:   movabs $0x800000000,%r10
  0x0000775055206cbf:   sub    %r10,%rcx
  0x0000775055206cc2:   mov    %ecx,0x8(%rax)
  0x0000775055206cc5:   xor    %rcx,%rcx
  0x0000775055206cc8:   mov    %ecx,0xc(%rax)
  0x0000775055206ccb:   xor    %rcx,%rcx
  0x0000775055206cce:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@34 (line 702)
  0x0000775055206cd2:   cmpl   $0x0,0xc(%rbx)
  0x0000775055206cd9:   jbe    0x0000775055207154
  0x0000775055206cdf:   mov    0x10(%rbx),%edx
  0x0000775055206ce2:   shl    $0x3,%rdx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@40 (line 702)
  0x0000775055206ce6:   mov    %rax,%rsi
  0x0000775055206ce9:   movabs $0x77502029fd38,%rdi         ;   {metadata(method data for {method} {0x000077502014ad80} 'of' '([Ljava/lang/Object;)Ljava/util/Set;' in 'java/util/Set')}
  0x0000775055206cf3:   addq   $0x1,0x188(%rdi)
  0x0000775055206cfb:   movabs $0x77502029ff28,%rsi         ;   {metadata(method data for {method} {0x000077502014ba48} '<init>' '(Ljava/lang/Object;)V' in 'java/util/ImmutableCollections$Set12')}
  0x0000775055206d05:   mov    0xf4(%rsi),%edi
  0x0000775055206d0b:   add    $0x2,%edi
  0x0000775055206d0e:   mov    %edi,0xf4(%rsi)
  0x0000775055206d14:   and    $0x1ffffe,%edi
  0x0000775055206d1a:   cmp    $0x0,%edi
  0x0000775055206d1d:   je     0x0000775055207166
  0x0000775055206d23:   mov    %rax,%rsi
  0x0000775055206d26:   movabs $0x77502029ff28,%rdi         ;   {metadata(method data for {method} {0x000077502014ba48} '<init>' '(Ljava/lang/Object;)V' in 'java/util/ImmutableCollections$Set12')}
  0x0000775055206d30:   addq   $0x1,0x138(%rdi)
  0x0000775055206d38:   movabs $0x77502029fb28,%rsi         ;   {metadata(method data for {method} {0x000077502014c680} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableSet')}
  0x0000775055206d42:   mov    0xf4(%rsi),%edi
  0x0000775055206d48:   add    $0x2,%edi
  0x0000775055206d4b:   mov    %edi,0xf4(%rsi)
  0x0000775055206d51:   and    $0x1ffffe,%edi
  0x0000775055206d57:   cmp    $0x0,%edi
  0x0000775055206d5a:   je     0x0000775055207187
  0x0000775055206d60:   mov    %rax,%rsi
  0x0000775055206d63:   movabs $0x77502029fb28,%rdi         ;   {metadata(method data for {method} {0x000077502014c680} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableSet')}
  0x0000775055206d6d:   addq   $0x1,0x138(%rdi)
  0x0000775055206d75:   movabs $0x77502029f988,%rsi         ;   {metadata(method data for {method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection')}
  0x0000775055206d7f:   mov    0xf4(%rsi),%edi
  0x0000775055206d85:   add    $0x2,%edi
  0x0000775055206d88:   mov    %edi,0xf4(%rsi)
  0x0000775055206d8e:   and    $0x1ffffe,%edi
  0x0000775055206d94:   cmp    $0x0,%edi
  0x0000775055206d97:   je     0x00007750552071a8
  0x0000775055206d9d:   mov    %rax,%rsi
  0x0000775055206da0:   movabs $0x77502029f988,%rdi         ;   {metadata(method data for {method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection')}
  0x0000775055206daa:   addq   $0x1,0x138(%rdi)
  0x0000775055206db2:   movabs $0x77502029f820,%rsi         ;   {metadata(method data for {method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x0000775055206dbc:   mov    0xf4(%rsi),%edi
  0x0000775055206dc2:   add    $0x2,%edi
  0x0000775055206dc5:   mov    %edi,0xf4(%rsi)
  0x0000775055206dcb:   and    $0x1ffffe,%edi
  0x0000775055206dd1:   cmp    $0x0,%edi
  0x0000775055206dd4:   je     0x00007750552071c9
  0x0000775055206dda:   mov    %rax,%rsi
  0x0000775055206ddd:   movabs $0x77502029f820,%rdi         ;   {metadata(method data for {method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x0000775055206de7:   addq   $0x1,0x138(%rdi)
  0x0000775055206def:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055206df9:   mov    0xf4(%rsi),%edi
  0x0000775055206dff:   add    $0x2,%edi
  0x0000775055206e02:   mov    %edi,0xf4(%rsi)
  0x0000775055206e08:   and    $0x1ffffe,%edi
  0x0000775055206e0e:   cmp    $0x0,%edi
  0x0000775055206e11:   je     0x00007750552071ea
  0x0000775055206e17:   movabs $0x77502029ff28,%rsi         ;   {metadata(method data for {method} {0x000077502014ba48} '<init>' '(Ljava/lang/Object;)V' in 'java/util/ImmutableCollections$Set12')}
  0x0000775055206e21:   addq   $0x1,0x148(%rsi)
  0x0000775055206e29:   movabs $0x77502029f510,%rsi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x0000775055206e33:   mov    0xf4(%rsi),%edi
  0x0000775055206e39:   add    $0x2,%edi
  0x0000775055206e3c:   mov    %edi,0xf4(%rsi)
  0x0000775055206e42:   and    $0x1ffffe,%edi
  0x0000775055206e48:   cmp    $0x0,%edi
  0x0000775055206e4b:   je     0x000077505520720b
  0x0000775055206e51:   cmp    $0x0,%rdx
  0x0000775055206e55:   movabs $0x77502029f510,%rsi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x0000775055206e5f:   movabs $0x148,%rdi
  0x0000775055206e69:   je     0x0000775055206e79
  0x0000775055206e6f:   movabs $0x138,%rdi
  0x0000775055206e79:   mov    (%rsi,%rdi,1),%rcx
  0x0000775055206e7d:   lea    0x1(%rcx),%rcx
  0x0000775055206e81:   mov    %rcx,(%rsi,%rdi,1)
  0x0000775055206e85:   je     0x0000775055207082           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@1 (line 208)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@6 (line 783)
                                                            ; - java.util.Set::of@41 (line 702)
  0x0000775055206e8b:   movsbl 0x38(%r15),%esi
  0x0000775055206e90:   cmp    $0x0,%esi
  0x0000775055206e93:   jne    0x000077505520722c
  0x0000775055206e99:   mov    %rdx,%r10
  0x0000775055206e9c:   shr    $0x3,%r10
  0x0000775055206ea0:   mov    %r10d,0xc(%rax)
  0x0000775055206ea4:   mov    %rax,%rsi
  0x0000775055206ea7:   xor    %rdx,%rsi
  0x0000775055206eaa:   shr    $0x16,%rsi
  0x0000775055206eae:   cmp    $0x0,%rsi
  0x0000775055206eb2:   jne    0x000077505520724b           ;*putfield e0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12::<init>@9 (line 783)
                                                            ; - java.util.Set::of@41 (line 702)
  0x0000775055206eb8:   movsbl 0x38(%r15),%edx
  0x0000775055206ebd:   cmp    $0x0,%edx
  0x0000775055206ec0:   jne    0x0000775055207263
  0x0000775055206ec6:   movabs $0x62ac089a0,%r10            ;   {oop(a 'java/lang/Object'{0x000000062ac089a0})}
  0x0000775055206ed0:   shr    $0x3,%r10
  0x0000775055206ed4:   mov    %r10d,0x10(%rax)
  0x0000775055206ed8:   movabs $0x62ac089a0,%rdx            ;   {oop(a 'java/lang/Object'{0x000000062ac089a0})}
  0x0000775055206ee2:   mov    %rax,%rsi
  0x0000775055206ee5:   xor    %rdx,%rsi
  0x0000775055206ee8:   shr    $0x16,%rsi
  0x0000775055206eec:   cmp    $0x0,%rsi
  0x0000775055206ef0:   jne    0x0000775055207282           ;*putfield e1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12::<init>@16 (line 786)
                                                            ; - java.util.Set::of@41 (line 702)
  0x0000775055206ef6:   add    $0xb0,%rsp
  0x0000775055206efd:   pop    %rbp
  0x0000775055206efe:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055206f05:   ja     0x000077505520729a
  0x0000775055206f0b:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@44 (line 702)
  0x0000775055206f0c:   movabs $0x80005cfb8,%rdx            ;   {metadata('java/util/ImmutableCollections$SetN')}
  0x0000775055206f16:   mov    0x108(%r15),%rax
  0x0000775055206f1d:   lea    0x18(%rax),%rdi
  0x0000775055206f21:   cmp    0x118(%r15),%rdi
  0x0000775055206f28:   ja     0x00007750552072b0
  0x0000775055206f2e:   mov    %rdi,0x108(%r15)
  0x0000775055206f35:   movq   $0x1,(%rax)
  0x0000775055206f3c:   mov    %rdx,%rcx
  0x0000775055206f3f:   movabs $0x800000000,%r10
  0x0000775055206f49:   sub    %r10,%rcx
  0x0000775055206f4c:   mov    %ecx,0x8(%rax)
  0x0000775055206f4f:   xor    %rcx,%rcx
  0x0000775055206f52:   mov    %ecx,0xc(%rax)
  0x0000775055206f55:   xor    %rcx,%rcx
  0x0000775055206f58:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@59 (line 706)
  0x0000775055206f5c:   mov    %rax,%rdx
  0x0000775055206f5f:   movabs $0x77502029fd38,%rsi         ;   {metadata(method data for {method} {0x000077502014ad80} 'of' '([Ljava/lang/Object;)Ljava/util/Set;' in 'java/util/Set')}
  0x0000775055206f69:   addq   $0x1,0x1a8(%rsi)
  0x0000775055206f71:   mov    %rbx,%rdx
  0x0000775055206f74:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@64 (line 706)
  0x0000775055206f77:   mov    %rax,0x80(%rsp)
  0x0000775055206f7f:   call   0x000077505c788080           ; ImmutableOopMap {[128]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@64 (line 706)
                                                            ;   {optimized virtual_call}
  0x0000775055206f84:   mov    0x80(%rsp),%rax
  0x0000775055206f8c:   add    $0xb0,%rsp
  0x0000775055206f93:   pop    %rbp
  0x0000775055206f94:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055206f9b:   ja     0x00007750552072bd
  0x0000775055206fa1:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@67 (line 706)
  0x0000775055206fa2:   movabs $0x80005bdf0,%rdx            ;   {metadata('java/util/ImmutableCollections$Set12')}
  0x0000775055206fac:   mov    0x108(%r15),%rax
  0x0000775055206fb3:   lea    0x18(%rax),%rdi
  0x0000775055206fb7:   cmp    0x118(%r15),%rdi
  0x0000775055206fbe:   ja     0x00007750552072d3
  0x0000775055206fc4:   mov    %rdi,0x108(%r15)
  0x0000775055206fcb:   movq   $0x1,(%rax)
  0x0000775055206fd2:   mov    %rdx,%rcx
  0x0000775055206fd5:   movabs $0x800000000,%r10
  0x0000775055206fdf:   sub    %r10,%rcx
  0x0000775055206fe2:   mov    %ecx,0x8(%rax)
  0x0000775055206fe5:   xor    %rcx,%rcx
  0x0000775055206fe8:   mov    %ecx,0xc(%rax)
  0x0000775055206feb:   xor    %rcx,%rcx
  0x0000775055206fee:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@45 (line 704)
  0x0000775055206ff2:   cmpl   $0x0,0xc(%rbx)
  0x0000775055206ff9:   jbe    0x00007750552072e0
  0x0000775055206fff:   mov    0x10(%rbx),%edx
  0x0000775055207002:   shl    $0x3,%rdx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@51 (line 704)
  0x0000775055207006:   cmpl   $0x1,0xc(%rbx)
  0x000077505520700d:   jbe    0x00007750552072f2
  0x0000775055207013:   mov    0x14(%rbx),%ecx
  0x0000775055207016:   shl    $0x3,%rcx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@54 (line 704)
  0x000077505520701a:   mov    %rax,%rsi
  0x000077505520701d:   movabs $0x77502029fd38,%rdi         ;   {metadata(method data for {method} {0x000077502014ad80} 'of' '([Ljava/lang/Object;)Ljava/util/Set;' in 'java/util/Set')}
  0x0000775055207027:   addq   $0x1,0x198(%rdi)
  0x000077505520702f:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@55 (line 704)
  0x0000775055207032:   mov    %rax,0x88(%rsp)
  0x000077505520703a:   nopl   0x0(%rax,%rax,1)
  0x000077505520703f:   call   0x000077505c788080           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@55 (line 704)
                                                            ;   {optimized virtual_call}
  0x0000775055207044:   mov    0x88(%rsp),%rax
  0x000077505520704c:   add    $0xb0,%rsp
  0x0000775055207053:   pop    %rbp
  0x0000775055207054:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520705b:   ja     0x0000775055207304
  0x0000775055207061:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@58 (line 704)
  0x0000775055207062:   movabs $0x62ac08be8,%rax            ;   {oop(a 'java/util/ImmutableCollections$SetN'{0x000000062ac08be8})}
  0x000077505520706c:   add    $0xb0,%rsp
  0x0000775055207073:   pop    %rbp
  0x0000775055207074:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520707b:   ja     0x000077505520731a
  0x0000775055207081:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@33 (line 700)
  0x0000775055207082:   mov    %rax,0x98(%rsp)
  0x000077505520708a:   nopw   0x0(%rax,%rax,1)
  0x0000775055207090:   jmp    0x000077505520733f           ;   {no_reloc}
  0x0000775055207095:   add    %al,(%rax)
  0x0000775055207097:   add    %al,(%rax)
  0x0000775055207099:   add    %cl,-0x75(%rcx)
  0x000077505520709c:   xchg   %ecx,(%rax)
  0x000077505520709e:   add    %eax,(%rax)
  0x00007750552070a0:   add    %cl,-0x73(%rax)
  0x00007750552070a3:   js     0x00007750552070d5
  0x00007750552070a5:   cmp    0x118(%r15),%rdi
  0x00007750552070ac:   ja     0x0000775055207349
  0x00007750552070b2:   mov    %rdi,0x108(%r15)
  0x00007750552070b9:   movq   $0x1,(%rax)
  0x00007750552070c0:   mov    %rdx,%rcx
  0x00007750552070c3:   movabs $0x800000000,%r10
  0x00007750552070cd:   sub    %r10,%rcx
  0x00007750552070d0:   mov    %ecx,0x8(%rax)
  0x00007750552070d3:   xor    %rcx,%rcx
  0x00007750552070d6:   mov    %ecx,0xc(%rax)
  0x00007750552070d9:   xor    %rcx,%rcx
  0x00007750552070dc:   mov    %rcx,0x10(%rax)
  0x00007750552070e0:   mov    %rcx,0x18(%rax)
  0x00007750552070e4:   mov    %rcx,0x20(%rax)
  0x00007750552070e8:   mov    %rcx,0x28(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@6 (line 783)
                                                            ; - java.util.Set::of@41 (line 702)
  0x00007750552070ec:   mov    %rax,%rsi
  0x00007750552070ef:   movabs $0x77502029f510,%rdi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00007750552070f9:   addq   $0x1,0x158(%rdi)
  0x0000775055207101:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@6 (line 783)
                                                            ; - java.util.Set::of@41 (line 702)
  0x0000775055207104:   mov    %rax,0x90(%rsp)
  0x000077505520710c:   data16 xchg %ax,%ax
  0x000077505520710f:   call   0x000077505c788080           ; ImmutableOopMap {[144]=Oop [152]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@6 (line 783)
                                                            ; - java.util.Set::of@41 (line 702)
                                                            ;   {optimized virtual_call}
  0x0000775055207114:   mov    0x90(%rsp),%rax
  0x000077505520711c:   jmp    0x0000775055207375
  0x0000775055207121:   movabs $0x77502014ad80,%r10         ;   {metadata({method} {0x000077502014ad80} 'of' '([Ljava/lang/Object;)Ljava/util/Set;' in 'java/util/Set')}
  0x000077505520712b:   mov    %r10,0x8(%rsp)
  0x0000775055207130:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055207138:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Set::of@-1 (line 696)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520713d:   jmp    0x0000775055206bfa
  0x0000775055207142:   call   0x000077505c8295a0           ; ImmutableOopMap {rbx=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@1 (line 696)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055207147:   mov    %rdx,%rdx
  0x000077505520714a:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@34 (line 702)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505520714f:   jmp    0x0000775055206cd2
  0x0000775055207154:   movq   $0x0,(%rsp)
  0x000077505520715c:   mov    %rbx,0x8(%rsp)
  0x0000775055207161:   call   0x000077505c828ca0           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@40 (line 702)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055207166:   movabs $0x77502014ba48,%r10         ;   {metadata({method} {0x000077502014ba48} '<init>' '(Ljava/lang/Object;)V' in 'java/util/ImmutableCollections$Set12')}
  0x0000775055207170:   mov    %r10,0x8(%rsp)
  0x0000775055207175:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520717d:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$Set12::<init>@-1 (line 782)
                                                            ; - java.util.Set::of@41 (line 702)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055207182:   jmp    0x0000775055206d23
  0x0000775055207187:   movabs $0x77502014c680,%r10         ;   {metadata({method} {0x000077502014c680} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableSet')}
  0x0000775055207191:   mov    %r10,0x8(%rsp)
  0x0000775055207196:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520719e:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$AbstractImmutableSet::<init>@-1 (line 745)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@1 (line 782)
                                                            ; - java.util.Set::of@41 (line 702)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552071a3:   jmp    0x0000775055206d60
  0x00007750552071a8:   movabs $0x77502014cbd8,%r10         ;   {metadata({method} {0x000077502014cbd8} '<init>' '()V' in 'java/util/ImmutableCollections$AbstractImmutableCollection')}
  0x00007750552071b2:   mov    %r10,0x8(%rsp)
  0x00007750552071b7:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552071bf:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@-1 (line 145)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableSet::<init>@1 (line 745)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@1 (line 782)
                                                            ; - java.util.Set::of@41 (line 702)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552071c4:   jmp    0x0000775055206d9d
  0x00007750552071c9:   movabs $0x775020102bb8,%r10         ;   {metadata({method} {0x0000775020102bb8} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x00007750552071d3:   mov    %r10,0x8(%rsp)
  0x00007750552071d8:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552071e0:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.AbstractCollection::<init>@-1 (line 68)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@1 (line 145)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableSet::<init>@1 (line 745)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@1 (line 782)
                                                            ; - java.util.Set::of@41 (line 702)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552071e5:   jmp    0x0000775055206dda
  0x00007750552071ea:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552071f4:   mov    %r10,0x8(%rsp)
  0x00007750552071f9:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055207201:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.AbstractCollection::<init>@1 (line 68)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableCollection::<init>@1 (line 145)
                                                            ; - java.util.ImmutableCollections$AbstractImmutableSet::<init>@1 (line 745)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@1 (line 782)
                                                            ; - java.util.Set::of@41 (line 702)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055207206:   jmp    0x0000775055206e17
  0x000077505520720b:   movabs $0x77502014e748,%r10         ;   {metadata({method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x0000775055207215:   mov    %r10,0x8(%rsp)
  0x000077505520721a:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055207222:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::requireNonNull@-1 (line 208)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@6 (line 783)
                                                            ; - java.util.Set::of@41 (line 702)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055207227:   jmp    0x0000775055206e51
  0x000077505520722c:   mov    0xc(%rax),%esi
  0x000077505520722f:   shl    $0x3,%rsi
  0x0000775055207233:   cmp    $0x0,%rsi
  0x0000775055207237:   je     0x0000775055206e99
  0x000077505520723d:   mov    %rsi,(%rsp)
  0x0000775055207241:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055207246:   jmp    0x0000775055206e99
  0x000077505520724b:   cmp    $0x0,%rdx
  0x000077505520724f:   je     0x0000775055206eb8
  0x0000775055207255:   mov    %rax,(%rsp)
  0x0000775055207259:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520725e:   jmp    0x0000775055206eb8
  0x0000775055207263:   mov    0x10(%rax),%edx
  0x0000775055207266:   shl    $0x3,%rdx
  0x000077505520726a:   cmp    $0x0,%rdx
  0x000077505520726e:   je     0x0000775055206ec6
  0x0000775055207274:   mov    %rdx,(%rsp)
  0x0000775055207278:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520727d:   jmp    0x0000775055206ec6
  0x0000775055207282:   cmp    $0x0,%rdx
  0x0000775055207286:   je     0x0000775055206ef6
  0x000077505520728c:   mov    %rax,(%rsp)
  0x0000775055207290:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055207295:   jmp    0x0000775055206ef6
  0x000077505520729a:   movabs $0x775055206efe,%r10         ;   {internal_word}
  0x00007750552072a4:   mov    %r10,0x360(%r15)
  0x00007750552072ab:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552072b0:   mov    %rdx,%rdx
  0x00007750552072b3:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@59 (line 706)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007750552072b8:   jmp    0x0000775055206f5c
  0x00007750552072bd:   movabs $0x775055206f94,%r10         ;   {internal_word}
  0x00007750552072c7:   mov    %r10,0x360(%r15)
  0x00007750552072ce:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552072d3:   mov    %rdx,%rdx
  0x00007750552072d6:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@45 (line 704)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007750552072db:   jmp    0x0000775055206ff2
  0x00007750552072e0:   movq   $0x0,(%rsp)
  0x00007750552072e8:   mov    %rbx,0x8(%rsp)
  0x00007750552072ed:   call   0x000077505c828ca0           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@51 (line 704)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007750552072f2:   movq   $0x1,(%rsp)
  0x00007750552072fa:   mov    %rbx,0x8(%rsp)
  0x00007750552072ff:   call   0x000077505c828ca0           ; ImmutableOopMap {rbx=Oop rax=Oop rdx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Set::of@54 (line 704)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055207304:   movabs $0x775055207054,%r10         ;   {internal_word}
  0x000077505520730e:   mov    %r10,0x360(%r15)
  0x0000775055207315:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520731a:   movabs $0x775055207074,%r10         ;   {internal_word}
  0x0000775055207324:   mov    %r10,0x360(%r15)
  0x000077505520732b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055207330:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505520733a:   mov    $0xa050f00,%eax
  0x000077505520733f:   call   0x000077505c82d600           ; ImmutableOopMap {[152]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@6 (line 783)
                                                            ; - java.util.Set::of@41 (line 702)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x0000775055207344:   jmp    0x0000775055207090
  0x0000775055207349:   mov    %rdx,%rdx
  0x000077505520734c:   call   0x000077505c829e80           ; ImmutableOopMap {[152]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.ImmutableCollections$Set12::<init>@6 (line 783)
                                                            ; - java.util.Set::of@41 (line 702)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055207351:   jmp    0x00007750552070ec
  0x0000775055207356:   nop
  0x0000775055207357:   nop
  0x0000775055207358:   mov    0x3d8(%r15),%rax
  0x000077505520735f:   movq   $0x0,0x3d8(%r15)
  0x000077505520736a:   movq   $0x0,0x3e0(%r15)
  0x0000775055207375:   add    $0xb0,%rsp
  0x000077505520737c:   pop    %rbp
  0x000077505520737d:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055207382:   hlt
  0x0000775055207383:   hlt
  0x0000775055207384:   hlt
  0x0000775055207385:   hlt
  0x0000775055207386:   hlt
  0x0000775055207387:   hlt
  0x0000775055207388:   hlt
  0x0000775055207389:   hlt
  0x000077505520738a:   hlt
  0x000077505520738b:   hlt
  0x000077505520738c:   hlt
  0x000077505520738d:   hlt
  0x000077505520738e:   hlt
  0x000077505520738f:   hlt
  0x0000775055207390:   hlt
  0x0000775055207391:   hlt
  0x0000775055207392:   hlt
  0x0000775055207393:   hlt
  0x0000775055207394:   hlt
  0x0000775055207395:   hlt
  0x0000775055207396:   hlt
  0x0000775055207397:   hlt
  0x0000775055207398:   hlt
  0x0000775055207399:   hlt
  0x000077505520739a:   hlt
  0x000077505520739b:   hlt
  0x000077505520739c:   hlt
  0x000077505520739d:   hlt
  0x000077505520739e:   hlt
  0x000077505520739f:   hlt
[Stub Code]
  0x00007750552073a0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x00007750552073a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552073af:   jmp    0x00007750552073af           ;   {runtime_call}
  0x00007750552073b4:   nop
  0x00007750552073b5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552073bf:   jmp    0x00007750552073bf           ;   {runtime_call}
  0x00007750552073c4:   nop
  0x00007750552073c5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552073cf:   jmp    0x00007750552073cf           ;   {runtime_call}
[Exception Handler]
  0x00007750552073d4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007750552073d9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552073e3:   and    $0xfffffffffffffff0,%rsp
  0x00007750552073e7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552073ec:   hlt
[Deopt Handler Code]
  0x00007750552073ed:   movabs $0x7750552073ed,%r10         ;   {section_word}
  0x00007750552073f7:   push   %r10
  0x00007750552073f9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552073fe:   hlt
  0x00007750552073ff:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      75   22       3       java.lang.String::coder (15 bytes)
 total in heap  [0x0000775055207890,0x0000775055207bf8] = 872
 relocation     [0x00007750552079f0,0x0000775055207a20] = 48
 main code      [0x0000775055207a20,0x0000775055207b20] = 256
 stub code      [0x0000775055207b20,0x0000775055207b50] = 48
 metadata       [0x0000775055207b50,0x0000775055207b58] = 8
 scopes data    [0x0000775055207b58,0x0000775055207b80] = 40
 scopes pcs     [0x0000775055207b80,0x0000775055207bf0] = 112
 dependencies   [0x0000775055207bf0,0x0000775055207bf8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000775055207a20:   mov    0x8(%rsi),%r10d
  0x0000775055207a24:   movabs $0x800000000,%r11
  0x0000775055207a2e:   add    %r11,%r10
  0x0000775055207a31:   cmp    %rax,%r10
  0x0000775055207a34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055207a3a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055207a40:   mov    %eax,-0x14000(%rsp)
  0x0000775055207a47:   push   %rbp
  0x0000775055207a48:   sub    $0x30,%rsp
  0x0000775055207a4c:   movabs $0x7750202a8de0,%rax         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055207a56:   mov    0xf4(%rax),%edi
  0x0000775055207a5c:   add    $0x2,%edi
  0x0000775055207a5f:   mov    %edi,0xf4(%rax)
  0x0000775055207a65:   and    $0x7fe,%edi
  0x0000775055207a6b:   cmp    $0x0,%edi
  0x0000775055207a6e:   je     0x0000775055207ab1           ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@0 (line 4545)
  0x0000775055207a74:   movabs $0x7750202a8de0,%rax         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055207a7e:   incl   0x148(%rax)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4545)
  0x0000775055207a84:   movsbl 0x10(%rsi),%eax              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4545)
  0x0000775055207a88:   movabs $0x7750202a8de0,%rsi         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055207a92:   incl   0x158(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4545)
  0x0000775055207a98:   shl    $0x18,%eax
  0x0000775055207a9b:   sar    $0x18,%eax
  0x0000775055207a9e:   add    $0x30,%rsp
  0x0000775055207aa2:   pop    %rbp
  0x0000775055207aa3:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055207aaa:   ja     0x0000775055207acf
  0x0000775055207ab0:   ret
  0x0000775055207ab1:   movabs $0x77502000f0f8,%r10         ;   {metadata({method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055207abb:   mov    %r10,0x8(%rsp)
  0x0000775055207ac0:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055207ac8:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4545)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055207acd:   jmp    0x0000775055207a74
  0x0000775055207acf:   movabs $0x775055207aa3,%r10         ;   {internal_word}
  0x0000775055207ad9:   mov    %r10,0x360(%r15)
  0x0000775055207ae0:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055207ae5:   nop
  0x0000775055207ae6:   nop
  0x0000775055207ae7:   mov    0x3d8(%r15),%rax
  0x0000775055207aee:   movq   $0x0,0x3d8(%r15)
  0x0000775055207af9:   movq   $0x0,0x3e0(%r15)
  0x0000775055207b04:   add    $0x30,%rsp
  0x0000775055207b08:   pop    %rbp
  0x0000775055207b09:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055207b0e:   hlt
  0x0000775055207b0f:   hlt
  0x0000775055207b10:   hlt
  0x0000775055207b11:   hlt
  0x0000775055207b12:   hlt
  0x0000775055207b13:   hlt
  0x0000775055207b14:   hlt
  0x0000775055207b15:   hlt
  0x0000775055207b16:   hlt
  0x0000775055207b17:   hlt
  0x0000775055207b18:   hlt
  0x0000775055207b19:   hlt
  0x0000775055207b1a:   hlt
  0x0000775055207b1b:   hlt
  0x0000775055207b1c:   hlt
  0x0000775055207b1d:   hlt
  0x0000775055207b1e:   hlt
  0x0000775055207b1f:   hlt
[Exception Handler]
  0x0000775055207b20:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055207b25:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055207b2f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055207b33:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055207b38:   hlt
[Deopt Handler Code]
  0x0000775055207b39:   movabs $0x775055207b39,%r10         ;   {section_word}
  0x0000775055207b43:   push   %r10
  0x0000775055207b45:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055207b4a:   hlt
  0x0000775055207b4b:   hlt
  0x0000775055207b4c:   hlt
  0x0000775055207b4d:   hlt
  0x0000775055207b4e:   hlt
  0x0000775055207b4f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      76   23       1       java.lang.module.ModuleDescriptor::name (5 bytes)
 total in heap  [0x000077505ccc9810,0x000077505ccc9ad0] = 704
 relocation     [0x000077505ccc9970,0x000077505ccc9998] = 40
 main code      [0x000077505ccc99a0,0x000077505ccc9a40] = 160
 stub code      [0x000077505ccc9a40,0x000077505ccc9a70] = 48
 metadata       [0x000077505ccc9a70,0x000077505ccc9a78] = 8
 scopes data    [0x000077505ccc9a78,0x000077505ccc9a88] = 16
 scopes pcs     [0x000077505ccc9a88,0x000077505ccc9ac8] = 64
 dependencies   [0x000077505ccc9ac8,0x000077505ccc9ad0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020256610} 'name' '()Ljava/lang/String;' in 'java/lang/module/ModuleDescriptor'
  #           [sp+0x40]  (sp of caller)
  0x000077505ccc99a0:   mov    0x8(%rsi),%r10d
  0x000077505ccc99a4:   movabs $0x800000000,%r11
  0x000077505ccc99ae:   add    %r11,%r10
  0x000077505ccc99b1:   cmp    %rax,%r10
  0x000077505ccc99b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccc99ba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505ccc99c0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccc99c7:   push   %rbp
  0x000077505ccc99c8:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::name@0 (line 1286)
  0x000077505ccc99cc:   mov    0x14(%rsi),%eax
  0x000077505ccc99cf:   shl    $0x3,%rax                    ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::name@1 (line 1286)
  0x000077505ccc99d3:   add    $0x30,%rsp
  0x000077505ccc99d7:   pop    %rbp
  0x000077505ccc99d8:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccc99df:   ja     0x000077505ccc99e6
  0x000077505ccc99e5:   ret
  0x000077505ccc99e6:   movabs $0x77505ccc99d8,%r10         ;   {internal_word}
  0x000077505ccc99f0:   mov    %r10,0x360(%r15)
  0x000077505ccc99f7:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccc99fc:   nop
  0x000077505ccc99fd:   nop
  0x000077505ccc99fe:   mov    0x3d8(%r15),%rax
  0x000077505ccc9a05:   movq   $0x0,0x3d8(%r15)
  0x000077505ccc9a10:   movq   $0x0,0x3e0(%r15)
  0x000077505ccc9a1b:   add    $0x30,%rsp
  0x000077505ccc9a1f:   pop    %rbp
  0x000077505ccc9a20:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505ccc9a25:   hlt
  0x000077505ccc9a26:   hlt
  0x000077505ccc9a27:   hlt
  0x000077505ccc9a28:   hlt
  0x000077505ccc9a29:   hlt
  0x000077505ccc9a2a:   hlt
  0x000077505ccc9a2b:   hlt
  0x000077505ccc9a2c:   hlt
  0x000077505ccc9a2d:   hlt
  0x000077505ccc9a2e:   hlt
  0x000077505ccc9a2f:   hlt
  0x000077505ccc9a30:   hlt
  0x000077505ccc9a31:   hlt
  0x000077505ccc9a32:   hlt
  0x000077505ccc9a33:   hlt
  0x000077505ccc9a34:   hlt
  0x000077505ccc9a35:   hlt
  0x000077505ccc9a36:   hlt
  0x000077505ccc9a37:   hlt
  0x000077505ccc9a38:   hlt
  0x000077505ccc9a39:   hlt
  0x000077505ccc9a3a:   hlt
  0x000077505ccc9a3b:   hlt
  0x000077505ccc9a3c:   hlt
  0x000077505ccc9a3d:   hlt
  0x000077505ccc9a3e:   hlt
  0x000077505ccc9a3f:   hlt
[Exception Handler]
  0x000077505ccc9a40:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505ccc9a45:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505ccc9a4f:   and    $0xfffffffffffffff0,%rsp
  0x000077505ccc9a53:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505ccc9a58:   hlt
[Deopt Handler Code]
  0x000077505ccc9a59:   movabs $0x77505ccc9a59,%r10         ;   {section_word}
  0x000077505ccc9a63:   push   %r10
  0x000077505ccc9a65:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccc9a6a:   hlt
  0x000077505ccc9a6b:   hlt
  0x000077505ccc9a6c:   hlt
  0x000077505ccc9a6d:   hlt
  0x000077505ccc9a6e:   hlt
  0x000077505ccc9a6f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      77   24       3       java.lang.String::length (11 bytes)
 total in heap  [0x0000775055207c10,0x0000775055208078] = 1128
 relocation     [0x0000775055207d70,0x0000775055207da8] = 56
 main code      [0x0000775055207dc0,0x0000775055207f20] = 352
 stub code      [0x0000775055207f20,0x0000775055207f50] = 48
 metadata       [0x0000775055207f50,0x0000775055207f60] = 16
 scopes data    [0x0000775055207f60,0x0000775055207fb0] = 80
 scopes pcs     [0x0000775055207fb0,0x0000775055208060] = 176
 dependencies   [0x0000775055208060,0x0000775055208068] = 8
 nul chk table  [0x0000775055208068,0x0000775055208078] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000775055207dc0:   mov    0x8(%rsi),%r10d
  0x0000775055207dc4:   movabs $0x800000000,%r11
  0x0000775055207dce:   add    %r11,%r10
  0x0000775055207dd1:   cmp    %rax,%r10
  0x0000775055207dd4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055207dda:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055207de0:   mov    %eax,-0x14000(%rsp)
  0x0000775055207de7:   push   %rbp
  0x0000775055207de8:   sub    $0x30,%rsp
  0x0000775055207dec:   movabs $0x7750202a8f80,%rcx         ;   {metadata(method data for {method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String')}
  0x0000775055207df6:   mov    0xf4(%rcx),%eax
  0x0000775055207dfc:   add    $0x2,%eax
  0x0000775055207dff:   mov    %eax,0xf4(%rcx)
  0x0000775055207e05:   and    $0x7fe,%eax
  0x0000775055207e0b:   cmp    $0x0,%eax
  0x0000775055207e0e:   je     0x0000775055207e9a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@0 (line 1481)
  0x0000775055207e14:   mov    0x14(%rsi),%ecx
  0x0000775055207e17:   shl    $0x3,%rcx                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@1 (line 1481)
  0x0000775055207e1b:   mov    0xc(%rcx),%eax               ; implicit exception: dispatches to 0x0000775055207ebb
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1481)
  0x0000775055207e1e:   mov    %rsi,%rcx
  0x0000775055207e21:   movabs $0x7750202a8f80,%rdi         ;   {metadata(method data for {method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String')}
  0x0000775055207e2b:   addq   $0x1,0x138(%rdi)
  0x0000775055207e33:   movabs $0x7750202a8de0,%rcx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055207e3d:   mov    0xf4(%rcx),%edi
  0x0000775055207e43:   add    $0x2,%edi
  0x0000775055207e46:   mov    %edi,0xf4(%rcx)
  0x0000775055207e4c:   and    $0x1ffffe,%edi
  0x0000775055207e52:   cmp    $0x0,%edi
  0x0000775055207e55:   je     0x0000775055207ec0
  0x0000775055207e5b:   movabs $0x7750202a8de0,%rcx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055207e65:   incl   0x148(%rcx)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
  0x0000775055207e6b:   movsbl 0x10(%rsi),%ecx              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
  0x0000775055207e6f:   movabs $0x7750202a8de0,%rsi         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055207e79:   incl   0x158(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
  0x0000775055207e7f:   shl    $0x18,%ecx
  0x0000775055207e82:   sar    $0x18,%ecx
  0x0000775055207e85:   sar    %cl,%eax
  0x0000775055207e87:   add    $0x30,%rsp
  0x0000775055207e8b:   pop    %rbp
  0x0000775055207e8c:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055207e93:   ja     0x0000775055207ee1
  0x0000775055207e99:   ret
  0x0000775055207e9a:   movabs $0x7750200098a0,%r10         ;   {metadata({method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String')}
  0x0000775055207ea4:   mov    %r10,0x8(%rsp)
  0x0000775055207ea9:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055207eb1:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::length@-1 (line 1481)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055207eb6:   jmp    0x0000775055207e14
  0x0000775055207ebb:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1481)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055207ec0:   movabs $0x77502000f0f8,%r10         ;   {metadata({method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055207eca:   mov    %r10,0x8(%rsp)
  0x0000775055207ecf:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055207ed7:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055207edc:   jmp    0x0000775055207e5b
  0x0000775055207ee1:   movabs $0x775055207e8c,%r10         ;   {internal_word}
  0x0000775055207eeb:   mov    %r10,0x360(%r15)
  0x0000775055207ef2:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055207ef7:   nop
  0x0000775055207ef8:   nop
  0x0000775055207ef9:   mov    0x3d8(%r15),%rax
  0x0000775055207f00:   movq   $0x0,0x3d8(%r15)
  0x0000775055207f0b:   movq   $0x0,0x3e0(%r15)
  0x0000775055207f16:   add    $0x30,%rsp
  0x0000775055207f1a:   pop    %rbp
  0x0000775055207f1b:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
  0x0000775055207f20:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055207f25:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055207f2f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055207f33:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055207f38:   hlt
[Deopt Handler Code]
  0x0000775055207f39:   movabs $0x775055207f39,%r10         ;   {section_word}
  0x0000775055207f43:   push   %r10
  0x0000775055207f45:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055207f4a:   hlt
  0x0000775055207f4b:   hlt
  0x0000775055207f4c:   hlt
  0x0000775055207f4d:   hlt
  0x0000775055207f4e:   hlt
  0x0000775055207f4f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      79   25       3       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x0000775055208090,0x0000775055208460] = 976
 relocation     [0x00007750552081f0,0x0000775055208220] = 48
 main code      [0x0000775055208220,0x0000775055208360] = 320
 stub code      [0x0000775055208360,0x0000775055208390] = 48
 metadata       [0x0000775055208390,0x0000775055208398] = 8
 scopes data    [0x0000775055208398,0x00007750552083c8] = 48
 scopes pcs     [0x00007750552083c8,0x0000775055208458] = 144
 dependencies   [0x0000775055208458,0x0000775055208460] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000775055208220:   mov    0x8(%rsi),%r10d
  0x0000775055208224:   movabs $0x800000000,%r11
  0x000077505520822e:   add    %r11,%r10
  0x0000775055208231:   cmp    %rax,%r10
  0x0000775055208234:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520823a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055208240:   mov    %eax,-0x14000(%rsp)
  0x0000775055208247:   push   %rbp
  0x0000775055208248:   sub    $0x30,%rsp
  0x000077505520824c:   movabs $0x775020293aa8,%rax         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x0000775055208256:   mov    0xf4(%rax),%edi
  0x000077505520825c:   add    $0x2,%edi
  0x000077505520825f:   mov    %edi,0xf4(%rax)
  0x0000775055208265:   and    $0x7fe,%edi
  0x000077505520826b:   cmp    $0x0,%edi
  0x000077505520826e:   je     0x00007750552082f6           ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@0 (line 4553)
  0x0000775055208274:   movabs $0x775020293aa8,%rax         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000077505520827e:   incl   0x148(%rax)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@3 (line 4553)
  0x0000775055208284:   movsbl 0x10(%rsi),%eax              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@7 (line 4553)
  0x0000775055208288:   cmp    $0x0,%eax
  0x000077505520828b:   movabs $0x775020293aa8,%rax         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x0000775055208295:   movabs $0x158,%rsi
  0x000077505520829f:   jne    0x00007750552082af
  0x00007750552082a5:   movabs $0x168,%rsi
  0x00007750552082af:   mov    (%rax,%rsi,1),%rdi
  0x00007750552082b3:   lea    0x1(%rdi),%rdi
  0x00007750552082b7:   mov    %rdi,(%rax,%rsi,1)
  0x00007750552082bb:   jne    0x00007750552082db           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@10 (line 4553)
  0x00007750552082c1:   movabs $0x775020293aa8,%rax         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007750552082cb:   incl   0x178(%rax)
  0x00007750552082d1:   mov    $0x1,%eax
  0x00007750552082d6:   jmp    0x00007750552082e0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@14 (line 4553)
  0x00007750552082db:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@18 (line 4553)
  0x00007750552082e0:   and    $0x1,%eax
  0x00007750552082e3:   add    $0x30,%rsp
  0x00007750552082e7:   pop    %rbp
  0x00007750552082e8:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552082ef:   ja     0x0000775055208317
  0x00007750552082f5:   ret
  0x00007750552082f6:   movabs $0x77502000f248,%r10         ;   {metadata({method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x0000775055208300:   mov    %r10,0x8(%rsp)
  0x0000775055208305:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520830d:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::isLatin1@-1 (line 4553)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055208312:   jmp    0x0000775055208274
  0x0000775055208317:   movabs $0x7750552082e8,%r10         ;   {internal_word}
  0x0000775055208321:   mov    %r10,0x360(%r15)
  0x0000775055208328:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520832d:   nop
  0x000077505520832e:   nop
  0x000077505520832f:   mov    0x3d8(%r15),%rax
  0x0000775055208336:   movq   $0x0,0x3d8(%r15)
  0x0000775055208341:   movq   $0x0,0x3e0(%r15)
  0x000077505520834c:   add    $0x30,%rsp
  0x0000775055208350:   pop    %rbp
  0x0000775055208351:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055208356:   hlt
  0x0000775055208357:   hlt
  0x0000775055208358:   hlt
  0x0000775055208359:   hlt
  0x000077505520835a:   hlt
  0x000077505520835b:   hlt
  0x000077505520835c:   hlt
  0x000077505520835d:   hlt
  0x000077505520835e:   hlt
  0x000077505520835f:   hlt
[Exception Handler]
  0x0000775055208360:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055208365:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520836f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055208373:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055208378:   hlt
[Deopt Handler Code]
  0x0000775055208379:   movabs $0x775055208379,%r10         ;   {section_word}
  0x0000775055208383:   push   %r10
  0x0000775055208385:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520838a:   hlt
  0x000077505520838b:   hlt
  0x000077505520838c:   hlt
  0x000077505520838d:   hlt
  0x000077505520838e:   hlt
  0x000077505520838f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      80   26       1       java.lang.module.ModuleReference::descriptor (5 bytes)
 total in heap  [0x000077505ccc9b10,0x000077505ccc9dd0] = 704
 relocation     [0x000077505ccc9c70,0x000077505ccc9c98] = 40
 main code      [0x000077505ccc9ca0,0x000077505ccc9d40] = 160
 stub code      [0x000077505ccc9d40,0x000077505ccc9d70] = 48
 metadata       [0x000077505ccc9d70,0x000077505ccc9d78] = 8
 scopes data    [0x000077505ccc9d78,0x000077505ccc9d88] = 16
 scopes pcs     [0x000077505ccc9d88,0x000077505ccc9dc8] = 64
 dependencies   [0x000077505ccc9dc8,0x000077505ccc9dd0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202a66f8} 'descriptor' '()Ljava/lang/module/ModuleDescriptor;' in 'java/lang/module/ModuleReference'
  #           [sp+0x40]  (sp of caller)
  0x000077505ccc9ca0:   mov    0x8(%rsi),%r10d
  0x000077505ccc9ca4:   movabs $0x800000000,%r11
  0x000077505ccc9cae:   add    %r11,%r10
  0x000077505ccc9cb1:   cmp    %rax,%r10
  0x000077505ccc9cb4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccc9cba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505ccc9cc0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccc9cc7:   push   %rbp
  0x000077505ccc9cc8:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleReference::descriptor@0 (line 73)
  0x000077505ccc9ccc:   mov    0xc(%rsi),%eax
  0x000077505ccc9ccf:   shl    $0x3,%rax                    ;*getfield descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleReference::descriptor@1 (line 73)
  0x000077505ccc9cd3:   add    $0x30,%rsp
  0x000077505ccc9cd7:   pop    %rbp
  0x000077505ccc9cd8:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccc9cdf:   ja     0x000077505ccc9ce6
  0x000077505ccc9ce5:   ret
  0x000077505ccc9ce6:   movabs $0x77505ccc9cd8,%r10         ;   {internal_word}
  0x000077505ccc9cf0:   mov    %r10,0x360(%r15)
  0x000077505ccc9cf7:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccc9cfc:   nop
  0x000077505ccc9cfd:   nop
  0x000077505ccc9cfe:   mov    0x3d8(%r15),%rax
  0x000077505ccc9d05:   movq   $0x0,0x3d8(%r15)
  0x000077505ccc9d10:   movq   $0x0,0x3e0(%r15)
  0x000077505ccc9d1b:   add    $0x30,%rsp
  0x000077505ccc9d1f:   pop    %rbp
  0x000077505ccc9d20:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505ccc9d25:   hlt
  0x000077505ccc9d26:   hlt
  0x000077505ccc9d27:   hlt
  0x000077505ccc9d28:   hlt
  0x000077505ccc9d29:   hlt
  0x000077505ccc9d2a:   hlt
  0x000077505ccc9d2b:   hlt
  0x000077505ccc9d2c:   hlt
  0x000077505ccc9d2d:   hlt
  0x000077505ccc9d2e:   hlt
  0x000077505ccc9d2f:   hlt
  0x000077505ccc9d30:   hlt
  0x000077505ccc9d31:   hlt
  0x000077505ccc9d32:   hlt
  0x000077505ccc9d33:   hlt
  0x000077505ccc9d34:   hlt
  0x000077505ccc9d35:   hlt
  0x000077505ccc9d36:   hlt
  0x000077505ccc9d37:   hlt
  0x000077505ccc9d38:   hlt
  0x000077505ccc9d39:   hlt
  0x000077505ccc9d3a:   hlt
  0x000077505ccc9d3b:   hlt
  0x000077505ccc9d3c:   hlt
  0x000077505ccc9d3d:   hlt
  0x000077505ccc9d3e:   hlt
  0x000077505ccc9d3f:   hlt
[Exception Handler]
  0x000077505ccc9d40:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505ccc9d45:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505ccc9d4f:   and    $0xfffffffffffffff0,%rsp
  0x000077505ccc9d53:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505ccc9d58:   hlt
[Deopt Handler Code]
  0x000077505ccc9d59:   movabs $0x77505ccc9d59,%r10         ;   {section_word}
  0x000077505ccc9d63:   push   %r10
  0x000077505ccc9d65:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccc9d6a:   hlt
  0x000077505ccc9d6b:   hlt
  0x000077505ccc9d6c:   hlt
  0x000077505ccc9d6d:   hlt
  0x000077505ccc9d6e:   hlt
  0x000077505ccc9d6f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      83   27       3       java.lang.String::charAt (25 bytes)
 total in heap  [0x0000775055208490,0x0000775055208d10] = 2176
 relocation     [0x00007750552085f0,0x0000775055208668] = 120
 main code      [0x0000775055208680,0x0000775055208a00] = 896
 stub code      [0x0000775055208a00,0x0000775055208a50] = 80
 metadata       [0x0000775055208a50,0x0000775055208a68] = 24
 scopes data    [0x0000775055208a68,0x0000775055208b38] = 208
 scopes pcs     [0x0000775055208b38,0x0000775055208cf8] = 448
 dependencies   [0x0000775055208cf8,0x0000775055208d00] = 8
 nul chk table  [0x0000775055208d00,0x0000775055208d10] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020009a18} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x0000775055208680:   mov    0x8(%rsi),%r10d
  0x0000775055208684:   movabs $0x800000000,%r11
  0x000077505520868e:   add    %r11,%r10
  0x0000775055208691:   cmp    %rax,%r10
  0x0000775055208694:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520869a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552086a0:   mov    %eax,-0x14000(%rsp)
  0x00007750552086a7:   push   %rbp
  0x00007750552086a8:   sub    $0x50,%rsp
  0x00007750552086ac:   mov    %rdx,%rdi
  0x00007750552086af:   movabs $0x7750202d8e88,%rax         ;   {metadata(method data for {method} {0x0000775020009a18} 'charAt' '(I)C' in 'java/lang/String')}
  0x00007750552086b9:   mov    0xf4(%rax),%edx
  0x00007750552086bf:   add    $0x2,%edx
  0x00007750552086c2:   mov    %edx,0xf4(%rax)
  0x00007750552086c8:   and    $0x7fe,%edx
  0x00007750552086ce:   cmp    $0x0,%edx
  0x00007750552086d1:   je     0x000077505520890e           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@0 (line 1516)
  0x00007750552086d7:   mov    %rsi,%rax
  0x00007750552086da:   movabs $0x7750202d8e88,%rdx         ;   {metadata(method data for {method} {0x0000775020009a18} 'charAt' '(I)C' in 'java/lang/String')}
  0x00007750552086e4:   addq   $0x1,0x138(%rdx)
  0x00007750552086ec:   movabs $0x775020293aa8,%rax         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007750552086f6:   mov    0xf4(%rax),%edx
  0x00007750552086fc:   add    $0x2,%edx
  0x00007750552086ff:   mov    %edx,0xf4(%rax)
  0x0000775055208705:   and    $0x1ffffe,%edx
  0x000077505520870b:   cmp    $0x0,%edx
  0x000077505520870e:   je     0x000077505520892f
  0x0000775055208714:   movabs $0x775020293aa8,%rax         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000077505520871e:   incl   0x148(%rax)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@3 (line 4553)
                                                            ; - java.lang.String::charAt@1 (line 1516)
  0x0000775055208724:   movsbl 0x10(%rsi),%eax              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@7 (line 4553)
                                                            ; - java.lang.String::charAt@1 (line 1516)
  0x0000775055208728:   cmp    $0x0,%eax
  0x000077505520872b:   movabs $0x775020293aa8,%rax         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x0000775055208735:   movabs $0x158,%rdx
  0x000077505520873f:   jne    0x000077505520874f
  0x0000775055208745:   movabs $0x168,%rdx
  0x000077505520874f:   mov    (%rax,%rdx,1),%rbx
  0x0000775055208753:   lea    0x1(%rbx),%rbx
  0x0000775055208757:   mov    %rbx,(%rax,%rdx,1)
  0x000077505520875b:   jne    0x000077505520877b           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@10 (line 4553)
                                                            ; - java.lang.String::charAt@1 (line 1516)
  0x0000775055208761:   movabs $0x775020293aa8,%rax         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000077505520876b:   incl   0x178(%rax)
  0x0000775055208771:   mov    $0x1,%eax
  0x0000775055208776:   jmp    0x0000775055208780           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@14 (line 4553)
                                                            ; - java.lang.String::charAt@1 (line 1516)
  0x000077505520877b:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@18 (line 4553)
                                                            ; - java.lang.String::charAt@1 (line 1516)
  0x0000775055208780:   and    $0x1,%eax
  0x0000775055208783:   cmp    $0x0,%eax
  0x0000775055208786:   movabs $0x7750202d8e88,%rax         ;   {metadata(method data for {method} {0x0000775020009a18} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000775055208790:   movabs $0x170,%rdx
  0x000077505520879a:   je     0x00007750552087aa
  0x00007750552087a0:   movabs $0x180,%rdx
  0x00007750552087aa:   mov    (%rax,%rdx,1),%rbx
  0x00007750552087ae:   lea    0x1(%rbx),%rbx
  0x00007750552087b2:   mov    %rbx,(%rax,%rdx,1)
  0x00007750552087b6:   je     0x000077505520889e           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@4 (line 1516)
  0x00007750552087bc:   mov    0x14(%rsi),%eax
  0x00007750552087bf:   shl    $0x3,%rax                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@8 (line 1517)
  0x00007750552087c3:   movabs $0x7750202d8e88,%rsi         ;   {metadata(method data for {method} {0x0000775020009a18} 'charAt' '(I)C' in 'java/lang/String')}
  0x00007750552087cd:   addq   $0x1,0x190(%rsi)
  0x00007750552087d5:   movabs $0x7750202d9080,%rsi         ;   {metadata(method data for {method} {0x00007750201754c8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00007750552087df:   mov    0xf4(%rsi),%edx
  0x00007750552087e5:   add    $0x2,%edx
  0x00007750552087e8:   mov    %edx,0xf4(%rsi)
  0x00007750552087ee:   and    $0x1ffffe,%edx
  0x00007750552087f4:   cmp    $0x0,%edx
  0x00007750552087f7:   je     0x0000775055208950
  0x00007750552087fd:   cmp    $0x0,%edi
  0x0000775055208800:   movabs $0x7750202d9080,%rsi         ;   {metadata(method data for {method} {0x00007750201754c8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000077505520880a:   movabs $0x138,%rdx
  0x0000775055208814:   jl     0x0000775055208824
  0x000077505520881a:   movabs $0x148,%rdx
  0x0000775055208824:   mov    (%rsi,%rdx,1),%rbx
  0x0000775055208828:   lea    0x1(%rbx),%rbx
  0x000077505520882c:   mov    %rbx,(%rsi,%rdx,1)
  0x0000775055208830:   jl     0x00007750552088cd           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1517)
  0x0000775055208836:   mov    0xc(%rax),%esi               ; implicit exception: dispatches to 0x0000775055208971
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@6 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1517)
  0x0000775055208839:   cmp    %esi,%edi
  0x000077505520883b:   movabs $0x7750202d9080,%rsi         ;   {metadata(method data for {method} {0x00007750201754c8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x0000775055208845:   movabs $0x168,%rdx
  0x000077505520884f:   jge    0x000077505520885f
  0x0000775055208855:   movabs $0x158,%rdx
  0x000077505520885f:   mov    (%rsi,%rdx,1),%rbx
  0x0000775055208863:   lea    0x1(%rbx),%rbx
  0x0000775055208867:   mov    %rbx,(%rsi,%rdx,1)
  0x000077505520886b:   jge    0x00007750552088cd           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@7 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1517)
  0x0000775055208871:   movslq %edi,%rdi
  0x0000775055208874:   movsbl 0x10(%rax,%rdi,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@21 (line 50)
                                                            ; - java.lang.String::charAt@12 (line 1517)
  0x0000775055208879:   and    $0xff,%eax
  0x000077505520887f:   and    $0xffff,%eax
  0x0000775055208885:   and    $0xffff,%eax
  0x000077505520888b:   add    $0x50,%rsp
  0x000077505520888f:   pop    %rbp
  0x0000775055208890:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055208897:   ja     0x0000775055208976
  0x000077505520889d:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@15 (line 1517)
  0x000077505520889e:   mov    0x14(%rsi),%esi
  0x00007750552088a1:   shl    $0x3,%rsi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@17 (line 1519)
  0x00007750552088a5:   mov    %rdi,%rdx                    ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@21 (line 1519)
  0x00007750552088a8:   nopl   0x0(%rax)
  0x00007750552088af:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@21 (line 1519)
                                                            ;   {static_call}
  0x00007750552088b4:   and    $0xffff,%eax
  0x00007750552088ba:   add    $0x50,%rsp
  0x00007750552088be:   pop    %rbp
  0x00007750552088bf:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552088c6:   ja     0x000077505520898c
  0x00007750552088cc:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::charAt@24 (line 1519)
  0x00007750552088cd:   data16 xchg %ax,%ax
  0x00007750552088d0:   jmp    0x00007750552089b1           ;   {no_reloc}
  0x00007750552088d5:   add    %al,(%rax)
  0x00007750552088d7:   add    %al,(%rax)
  0x00007750552088d9:   add    %ch,%cl
  0x00007750552088db:   faddl  (%rax)
  0x00007750552088dd:   add    %al,(%rax)                   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@10 (line 48)
                                                            ; - java.lang.String::charAt@12 (line 1517)
  0x00007750552088df:   mov    %rax,%rdx
  0x00007750552088e2:   movabs $0x7750202d9080,%rsi         ;   {metadata(method data for {method} {0x00007750201754c8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00007750552088ec:   addq   $0x1,0x178(%rsi)
  0x00007750552088f4:   mov    %rdi,%rdx
  0x00007750552088f7:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@15 (line 48)
                                                            ; - java.lang.String::charAt@12 (line 1517)
  0x00007750552088fa:   mov    %rax,0x38(%rsp)
  0x00007750552088ff:   call   0x000077505c788080           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@15 (line 48)
                                                            ; - java.lang.String::charAt@12 (line 1517)
                                                            ;   {optimized virtual_call}
  0x0000775055208904:   mov    0x38(%rsp),%rax
  0x0000775055208909:   jmp    0x00007750552089e7
  0x000077505520890e:   movabs $0x775020009a18,%r10         ;   {metadata({method} {0x0000775020009a18} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000775055208918:   mov    %r10,0x8(%rsp)
  0x000077505520891d:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055208925:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::charAt@-1 (line 1516)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520892a:   jmp    0x00007750552086d7
  0x000077505520892f:   movabs $0x77502000f248,%r10         ;   {metadata({method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x0000775055208939:   mov    %r10,0x8(%rsp)
  0x000077505520893e:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055208946:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::isLatin1@-1 (line 4553)
                                                            ; - java.lang.String::charAt@1 (line 1516)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520894b:   jmp    0x0000775055208714
  0x0000775055208950:   movabs $0x7750201754c8,%r10         ;   {metadata({method} {0x00007750201754c8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000077505520895a:   mov    %r10,0x8(%rsp)
  0x000077505520895f:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055208967:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::charAt@-1 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1517)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520896c:   jmp    0x00007750552087fd
  0x0000775055208971:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@6 (line 47)
                                                            ; - java.lang.String::charAt@12 (line 1517)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055208976:   movabs $0x775055208890,%r10         ;   {internal_word}
  0x0000775055208980:   mov    %r10,0x360(%r15)
  0x0000775055208987:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520898c:   movabs $0x7750552088bf,%r10         ;   {internal_word}
  0x0000775055208996:   mov    %r10,0x360(%r15)
  0x000077505520899d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552089a2:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x00007750552089ac:   mov    $0xa050f00,%eax
  0x00007750552089b1:   call   0x000077505c82d600           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::charAt@10 (line 48)
                                                            ; - java.lang.String::charAt@12 (line 1517)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007750552089b6:   jmp    0x00007750552088d0
  0x00007750552089bb:   mov    %rdx,%rdx
  0x00007750552089be:   call   0x000077505c829b80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::charAt@10 (line 48)
                                                            ; - java.lang.String::charAt@12 (line 1517)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x00007750552089c3:   jmp    0x00007750552088df
  0x00007750552089c8:   nop
  0x00007750552089c9:   nop
  0x00007750552089ca:   mov    0x3d8(%r15),%rax
  0x00007750552089d1:   movq   $0x0,0x3d8(%r15)
  0x00007750552089dc:   movq   $0x0,0x3e0(%r15)
  0x00007750552089e7:   add    $0x50,%rsp
  0x00007750552089eb:   pop    %rbp
  0x00007750552089ec:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552089f1:   hlt
  0x00007750552089f2:   hlt
  0x00007750552089f3:   hlt
  0x00007750552089f4:   hlt
  0x00007750552089f5:   hlt
  0x00007750552089f6:   hlt
  0x00007750552089f7:   hlt
  0x00007750552089f8:   hlt
  0x00007750552089f9:   hlt
  0x00007750552089fa:   hlt
  0x00007750552089fb:   hlt
  0x00007750552089fc:   hlt
  0x00007750552089fd:   hlt
  0x00007750552089fe:   hlt
  0x00007750552089ff:   hlt
[Stub Code]
  0x0000775055208a00:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055208a05:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055208a0f:   jmp    0x0000775055208a0f           ;   {runtime_call}
  0x0000775055208a14:   nop
  0x0000775055208a15:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055208a1f:   jmp    0x0000775055208a1f           ;   {runtime_call}
[Exception Handler]
  0x0000775055208a24:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055208a29:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055208a33:   and    $0xfffffffffffffff0,%rsp
  0x0000775055208a37:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055208a3c:   hlt
[Deopt Handler Code]
  0x0000775055208a3d:   movabs $0x775055208a3d,%r10         ;   {section_word}
  0x0000775055208a47:   push   %r10
  0x0000775055208a49:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055208a4e:   hlt
  0x0000775055208a4f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      87   28       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x0000775055208d90,0x0000775055209300] = 1392
 relocation     [0x0000775055208ef0,0x0000775055208f30] = 64
 main code      [0x0000775055208f40,0x0000775055209200] = 704
 stub code      [0x0000775055209200,0x0000775055209230] = 48
 oops           [0x0000775055209230,0x0000775055209238] = 8
 metadata       [0x0000775055209238,0x0000775055209248] = 16
 scopes data    [0x0000775055209248,0x0000775055209288] = 64
 scopes pcs     [0x0000775055209288,0x00007750552092f8] = 112
 dependencies   [0x00007750552092f8,0x0000775055209300] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007750200ee638} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi:rsi   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x0000775055208f40:   mov    %eax,-0x14000(%rsp)
  0x0000775055208f47:   push   %rbp
  0x0000775055208f48:   sub    $0x70,%rsp
  0x0000775055208f4c:   movabs $0x7750202e76a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ee638} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055208f56:   mov    0xf4(%rcx),%eax
  0x0000775055208f5c:   add    $0x2,%eax
  0x0000775055208f5f:   mov    %eax,0xf4(%rcx)
  0x0000775055208f65:   and    $0x7fe,%eax
  0x0000775055208f6b:   cmp    $0x0,%eax
  0x0000775055208f6e:   je     0x0000775055209159           ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 760)
  0x0000775055208f74:   movabs $0x7750202e76a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ee638} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055208f7e:   lea    0x170(%rcx),%rcx
  0x0000775055208f85:   mov    %rsi,%rax
  0x0000775055208f88:   test   %rax,%rax
  0x0000775055208f8b:   jne    0x0000775055208f94
  0x0000775055208f8d:   orq    $0x1,0x8(%rcx)
  0x0000775055208f92:   jmp    0x0000775055208fe6
  0x0000775055208f94:   mov    0x8(%rax),%eax
  0x0000775055208f97:   movabs $0x800000000,%r10
  0x0000775055208fa1:   add    %r10,%rax
  0x0000775055208fa4:   xor    0x8(%rcx),%rax
  0x0000775055208fa8:   test   $0xfffffffffffffffc,%rax
  0x0000775055208faf:   je     0x0000775055208fe6
  0x0000775055208fb1:   test   $0x2,%rax
  0x0000775055208fb8:   jne    0x0000775055208fe6
  0x0000775055208fba:   cmpq   $0x0,0x8(%rcx)
  0x0000775055208fc2:   je     0x0000775055208fe2
  0x0000775055208fc4:   cmpq   $0x1,0x8(%rcx)
  0x0000775055208fcc:   je     0x0000775055208fe2
  0x0000775055208fce:   xor    0x8(%rcx),%rax
  0x0000775055208fd2:   test   $0xfffffffffffffffc,%rax
  0x0000775055208fd9:   je     0x0000775055208fe6
  0x0000775055208fdb:   orq    $0x2,0x8(%rcx)
  0x0000775055208fe0:   jmp    0x0000775055208fe6
  0x0000775055208fe2:   mov    %rax,0x8(%rcx)
  0x0000775055208fe6:   movabs $0x62ac0b240,%rcx            ;   {oop(a 'jdk/internal/misc/Unsafe'{0x000000062ac0b240})}
  0x0000775055208ff0:   movabs $0x7750202e76a0,%rax         ;   {metadata(method data for {method} {0x00007750200ee638} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055208ffa:   addq   $0x1,0x138(%rax)
  0x0000775055209002:   movslq %edx,%rdx
  0x0000775055209005:   mov    $0x2,%ecx
  0x000077505520900a:   shl    %cl,%rdx
  0x000077505520900d:   movabs $0x10,%r10
  0x0000775055209017:   add    %r10,%rdx
  0x000077505520901a:   movabs $0x7750202e78a8,%rax         ;   {metadata(method data for {method} {0x00007750200c6d30} 'getReferenceAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x0000775055209024:   mov    0xf4(%rax),%edi
  0x000077505520902a:   add    $0x2,%edi
  0x000077505520902d:   mov    %edi,0xf4(%rax)
  0x0000775055209033:   and    $0x1ffffe,%edi
  0x0000775055209039:   cmp    $0x0,%edi
  0x000077505520903c:   je     0x000077505520917a
  0x0000775055209042:   mov    (%rsi,%rdx,1),%eax
  0x0000775055209045:   shl    $0x3,%rax
  0x0000775055209049:   movsbl 0x38(%r15),%esi
  0x000077505520904e:   cmp    $0x0,%esi
  0x0000775055209051:   jne    0x000077505520919b
  0x0000775055209057:   cmp    $0x0,%rax
  0x000077505520905b:   jne    0x0000775055209073
  0x000077505520905d:   movabs $0x7750202e76a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ee638} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055209067:   orb    $0x1,0x181(%rdi)
  0x000077505520906e:   jmp    0x0000775055209146
  0x0000775055209073:   movabs $0x800062960,%rbx            ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000077505520907d:   mov    0x8(%rax),%edi
  0x0000775055209080:   movabs $0x800000000,%r10
  0x000077505520908a:   add    %r10,%rdi
  0x000077505520908d:   cmp    0x38(%rdi),%rbx
  0x0000775055209091:   jne    0x000077505520912a
  0x0000775055209097:   movabs $0x7750202e76a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ee638} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007750552090a1:   mov    0x8(%rax),%ebx
  0x00007750552090a4:   movabs $0x800000000,%r10
  0x00007750552090ae:   add    %r10,%rbx
  0x00007750552090b1:   cmp    0x198(%rdi),%rbx
  0x00007750552090b8:   jne    0x00007750552090c7
  0x00007750552090ba:   addq   $0x1,0x1a0(%rdi)
  0x00007750552090c2:   jmp    0x0000775055209146
  0x00007750552090c7:   cmp    0x1a8(%rdi),%rbx
  0x00007750552090ce:   jne    0x00007750552090dd
  0x00007750552090d0:   addq   $0x1,0x1b0(%rdi)
  0x00007750552090d8:   jmp    0x0000775055209146
  0x00007750552090dd:   cmpq   $0x0,0x198(%rdi)
  0x00007750552090e8:   jne    0x0000775055209101
  0x00007750552090ea:   mov    %rbx,0x198(%rdi)
  0x00007750552090f1:   movq   $0x1,0x1a0(%rdi)
  0x00007750552090fc:   jmp    0x0000775055209146
  0x0000775055209101:   cmpq   $0x0,0x1a8(%rdi)
  0x000077505520910c:   jne    0x0000775055209125
  0x000077505520910e:   mov    %rbx,0x1a8(%rdi)
  0x0000775055209115:   movq   $0x1,0x1b0(%rdi)
  0x0000775055209120:   jmp    0x0000775055209146
  0x0000775055209125:   jmp    0x0000775055209146
  0x000077505520912a:   movabs $0x7750202e76a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ee638} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055209134:   subq   $0x1,0x188(%rdi)
  0x000077505520913c:   jmp    0x00007750552091b3
  0x0000775055209141:   jmp    0x0000775055209146           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
  0x0000775055209146:   add    $0x70,%rsp
  0x000077505520914a:   pop    %rbp
  0x000077505520914b:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055209152:   ja     0x00007750552091bc
  0x0000775055209158:   ret
  0x0000775055209159:   movabs $0x7750200ee638,%r10         ;   {metadata({method} {0x00007750200ee638} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055209163:   mov    %r10,0x8(%rsp)
  0x0000775055209168:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055209170:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055209175:   jmp    0x0000775055208f74
  0x000077505520917a:   movabs $0x7750200c6d30,%r10         ;   {metadata({method} {0x00007750200c6d30} 'getReferenceAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x0000775055209184:   mov    %r10,0x8(%rsp)
  0x0000775055209189:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055209191:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.misc.Unsafe::getReferenceAcquire@-1 (line 2148)
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055209196:   jmp    0x0000775055209042
  0x000077505520919b:   cmp    $0x0,%rax
  0x000077505520919f:   je     0x0000775055209057
  0x00007750552091a5:   mov    %rax,(%rsp)
  0x00007750552091a9:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552091ae:   jmp    0x0000775055209057
  0x00007750552091b3:   mov    %rax,(%rsp)
  0x00007750552091b7:   call   0x000077505c82b9a0           ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007750552091bc:   movabs $0x77505520914b,%r10         ;   {internal_word}
  0x00007750552091c6:   mov    %r10,0x360(%r15)
  0x00007750552091cd:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552091d2:   nop
  0x00007750552091d3:   nop
  0x00007750552091d4:   mov    0x3d8(%r15),%rax
  0x00007750552091db:   movq   $0x0,0x3d8(%r15)
  0x00007750552091e6:   movq   $0x0,0x3e0(%r15)
  0x00007750552091f1:   add    $0x70,%rsp
  0x00007750552091f5:   pop    %rbp
  0x00007750552091f6:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552091fb:   hlt
  0x00007750552091fc:   hlt
  0x00007750552091fd:   hlt
  0x00007750552091fe:   hlt
  0x00007750552091ff:   hlt
[Exception Handler]
  0x0000775055209200:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055209205:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520920f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055209213:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055209218:   hlt
[Deopt Handler Code]
  0x0000775055209219:   movabs $0x775055209219,%r10         ;   {section_word}
  0x0000775055209223:   push   %r10
  0x0000775055209225:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520922a:   hlt
  0x000077505520922b:   hlt
  0x000077505520922c:   hlt
  0x000077505520922d:   hlt
  0x000077505520922e:   hlt
  0x000077505520922f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

Compiled method (n/a)      90   29     n 0       jdk.internal.misc.Unsafe::getReferenceVolatile (native)
 total in heap  [0x000077505ccc9e10,0x000077505ccca230] = 1056
 relocation     [0x000077505ccc9f70,0x000077505ccc9fa8] = 56
 main code      [0x000077505ccc9fc0,0x000077505ccca230] = 624

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200c6098} 'getReferenceVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x000077505ccc9fc0:   mov    0x8(%rsi),%r10d
  0x000077505ccc9fc4:   movabs $0x800000000,%r11
  0x000077505ccc9fce:   add    %r11,%r10
  0x000077505ccc9fd1:   cmp    %r10,%rax
  0x000077505ccc9fd4:   je     0x000077505ccc9fe0
  0x000077505ccc9fda:   jmp    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccc9fdf:   nop
[Verified Entry Point]
  0x000077505ccc9fe0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccc9fe7:   push   %rbp
  0x000077505ccc9fe8:   mov    %rsp,%rbp
  0x000077505ccc9feb:   sub    $0x40,%rsp
  0x000077505ccc9fef:   mov    %rdx,0x8(%rsp)
  0x000077505ccc9ff4:   cmp    $0x0,%rdx
  0x000077505ccc9ff8:   lea    0x8(%rsp),%rdx
  0x000077505ccc9ffd:   cmove  0x8(%rsp),%rdx
  0x000077505ccca003:   mov    %rsi,(%rsp)
  0x000077505ccca007:   cmp    $0x0,%rsi
  0x000077505ccca00b:   lea    (%rsp),%rsi
  0x000077505ccca00f:   cmove  (%rsp),%rsi
  0x000077505ccca014:   vzeroupper
  0x000077505ccca017:   movabs $0x77505ccca014,%r10         ;   {internal_word}
  0x000077505ccca021:   mov    %r10,0x298(%r15)
  0x000077505ccca028:   mov    %rsp,0x290(%r15)
  0x000077505ccca02f:   cmpb   $0x0,0x1787c06f(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505ccca036:   je     0x000077505ccca072
  0x000077505ccca03c:   push   %rsi
  0x000077505ccca03d:   push   %rdx
  0x000077505ccca03e:   push   %rcx
  0x000077505ccca03f:   movabs $0x7750200c6098,%rsi         ;   {metadata({method} {0x00007750200c6098} 'getReferenceVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000077505ccca049:   mov    %r15,%rdi
  0x000077505ccca04c:   test   $0xf,%esp
  0x000077505ccca052:   je     0x000077505ccca06a
  0x000077505ccca058:   sub    $0x8,%rsp
  0x000077505ccca05c:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505ccca061:   add    $0x8,%rsp
  0x000077505ccca065:   jmp    0x000077505ccca06f
  0x000077505ccca06a:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505ccca06f:   pop    %rcx
  0x000077505ccca070:   pop    %rdx
  0x000077505ccca071:   pop    %rsi
  0x000077505ccca072:   lea    0x2b0(%r15),%rdi
  0x000077505ccca079:   movl   $0x4,0x340(%r15)
  0x000077505ccca084:   call   0x00007750740e7720           ;   {runtime_call}
  0x000077505ccca089:   vzeroupper
  0x000077505ccca08c:   movl   $0x5,0x340(%r15)
  0x000077505ccca097:   lock addl $0x0,-0x40(%rsp)
  0x000077505ccca09d:   cmp    0x348(%r15),%rbp
  0x000077505ccca0a4:   ja     0x000077505ccca0bb
  0x000077505ccca0aa:   cmpl   $0x0,0x330(%r15)
  0x000077505ccca0b5:   je     0x000077505ccca0df
  0x000077505ccca0bb:   vzeroupper
  0x000077505ccca0be:   mov    %rax,-0x8(%rbp)
  0x000077505ccca0c2:   mov    %r15,%rdi
  0x000077505ccca0c5:   mov    %rsp,%r12
  0x000077505ccca0c8:   sub    $0x0,%rsp
  0x000077505ccca0cc:   and    $0xfffffffffffffff0,%rsp
  0x000077505ccca0d0:   call   0x00007750740b8f10           ;   {runtime_call}
  0x000077505ccca0d5:   mov    %r12,%rsp
  0x000077505ccca0d8:   xor    %r12,%r12
  0x000077505ccca0db:   mov    -0x8(%rbp),%rax
  0x000077505ccca0df:   movl   $0x8,0x340(%r15)
  0x000077505ccca0ea:   cmpl   $0x2,0x3b0(%r15)
  0x000077505ccca0f5:   je     0x000077505ccca203
  0x000077505ccca0fb:   cmpb   $0x0,0x1787bfa3(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505ccca102:   je     0x000077505ccca140
  0x000077505ccca108:   mov    %rax,-0x8(%rbp)
  0x000077505ccca10c:   movabs $0x7750200c6098,%rsi         ;   {metadata({method} {0x00007750200c6098} 'getReferenceVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000077505ccca116:   mov    %r15,%rdi
  0x000077505ccca119:   test   $0xf,%esp
  0x000077505ccca11f:   je     0x000077505ccca137
  0x000077505ccca125:   sub    $0x8,%rsp
  0x000077505ccca129:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505ccca12e:   add    $0x8,%rsp
  0x000077505ccca132:   jmp    0x000077505ccca13c
  0x000077505ccca137:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505ccca13c:   mov    -0x8(%rbp),%rax
  0x000077505ccca140:   movq   $0x0,0x290(%r15)
  0x000077505ccca14b:   movq   $0x0,0x298(%r15)
  0x000077505ccca156:   vzeroupper
  0x000077505ccca159:   test   %rax,%rax
  0x000077505ccca15c:   je     0x000077505ccca1dd
  0x000077505ccca162:   test   $0x1,%rax
  0x000077505ccca169:   je     0x000077505ccca1da
  0x000077505ccca16f:   mov    -0x1(%rax),%rax
  0x000077505ccca173:   cmpb   $0x0,0x38(%r15)
  0x000077505ccca178:   je     0x000077505ccca1d5
  0x000077505ccca17e:   cmp    $0x0,%rax
  0x000077505ccca182:   je     0x000077505ccca1d5
  0x000077505ccca188:   mov    0x20(%r15),%rcx
  0x000077505ccca18c:   cmp    $0x0,%rcx
  0x000077505ccca190:   je     0x000077505ccca1aa
  0x000077505ccca196:   sub    $0x8,%rcx
  0x000077505ccca19a:   mov    %rcx,0x20(%r15)
  0x000077505ccca19e:   add    0x30(%r15),%rcx
  0x000077505ccca1a2:   mov    %rax,(%rcx)
  0x000077505ccca1a5:   jmp    0x000077505ccca1d5
  0x000077505ccca1aa:   push   %rax
  0x000077505ccca1ab:   mov    %r15,%rsi
  0x000077505ccca1ae:   mov    %rax,%rdi
  0x000077505ccca1b1:   test   $0xf,%esp
  0x000077505ccca1b7:   je     0x000077505ccca1cf
  0x000077505ccca1bd:   sub    $0x8,%rsp
  0x000077505ccca1c1:   call   0x00007750738f1730           ;   {runtime_call}
  0x000077505ccca1c6:   add    $0x8,%rsp
  0x000077505ccca1ca:   jmp    0x000077505ccca1d4
  0x000077505ccca1cf:   call   0x00007750738f1730           ;   {runtime_call}
  0x000077505ccca1d4:   pop    %rax
  0x000077505ccca1d5:   jmp    0x000077505ccca1dd
  0x000077505ccca1da:   mov    (%rax),%rax
  0x000077505ccca1dd:   mov    0xd8(%r15),%rcx
  0x000077505ccca1e4:   movl   $0x0,0x100(%rcx)
  0x000077505ccca1ee:   leave
  0x000077505ccca1ef:   cmpq   $0x0,0x8(%r15)
  0x000077505ccca1f7:   jne    0x000077505ccca1fe
  0x000077505ccca1fd:   ret
  0x000077505ccca1fe:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000077505ccca203:   vzeroupper
  0x000077505ccca206:   mov    %rax,-0x8(%rbp)
  0x000077505ccca20a:   mov    %rsp,%r12
  0x000077505ccca20d:   sub    $0x0,%rsp
  0x000077505ccca211:   and    $0xfffffffffffffff0,%rsp
  0x000077505ccca215:   call   0x0000775073f21c80           ;   {runtime_call}
  0x000077505ccca21a:   mov    %r12,%rsp
  0x000077505ccca21d:   xor    %r12,%r12
  0x000077505ccca220:   mov    -0x8(%rbp),%rax
  0x000077505ccca224:   jmp    0x000077505ccca0fb
  0x000077505ccca229:   hlt
  0x000077505ccca22a:   hlt
  0x000077505ccca22b:   hlt
  0x000077505ccca22c:   hlt
  0x000077505ccca22d:   hlt
  0x000077505ccca22e:   hlt
  0x000077505ccca22f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      92   30       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
 total in heap  [0x0000775055209310,0x00007750552095f8] = 744
 relocation     [0x0000775055209470,0x0000775055209498] = 40
 main code      [0x00007750552094a0,0x0000775055209560] = 192
 stub code      [0x0000775055209560,0x0000775055209590] = 48
 metadata       [0x0000775055209590,0x0000775055209598] = 8
 scopes data    [0x0000775055209598,0x00007750552095b0] = 24
 scopes pcs     [0x00007750552095b0,0x00007750552095f0] = 64
 dependencies   [0x00007750552095f0,0x00007750552095f8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007750200ee278} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007750552094a0:   mov    %eax,-0x14000(%rsp)
  0x00007750552094a7:   push   %rbp
  0x00007750552094a8:   sub    $0x30,%rsp
  0x00007750552094ac:   movabs $0x7750202e7a88,%rax         ;   {metadata(method data for {method} {0x00007750200ee278} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007750552094b6:   mov    0xf4(%rax),%edi
  0x00007750552094bc:   add    $0x2,%edi
  0x00007750552094bf:   mov    %edi,0xf4(%rax)
  0x00007750552094c5:   and    $0x7fe,%edi
  0x00007750552094cb:   cmp    $0x0,%edi
  0x00007750552094ce:   je     0x00007750552094f6           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 697)
  0x00007750552094d4:   mov    %rsi,%rax
  0x00007750552094d7:   shr    $0x10,%eax
  0x00007750552094da:   xor    %rsi,%rax
  0x00007750552094dd:   and    $0x7fffffff,%eax
  0x00007750552094e3:   add    $0x30,%rsp
  0x00007750552094e7:   pop    %rbp
  0x00007750552094e8:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552094ef:   ja     0x0000775055209514
  0x00007750552094f5:   ret
  0x00007750552094f6:   movabs $0x7750200ee278,%r10         ;   {metadata({method} {0x00007750200ee278} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055209500:   mov    %r10,0x8(%rsp)
  0x0000775055209505:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520950d:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055209512:   jmp    0x00007750552094d4
  0x0000775055209514:   movabs $0x7750552094e8,%r10         ;   {internal_word}
  0x000077505520951e:   mov    %r10,0x360(%r15)
  0x0000775055209525:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520952a:   nop
  0x000077505520952b:   nop
  0x000077505520952c:   mov    0x3d8(%r15),%rax
  0x0000775055209533:   movq   $0x0,0x3d8(%r15)
  0x000077505520953e:   movq   $0x0,0x3e0(%r15)
  0x0000775055209549:   add    $0x30,%rsp
  0x000077505520954d:   pop    %rbp
  0x000077505520954e:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055209553:   hlt
  0x0000775055209554:   hlt
  0x0000775055209555:   hlt
  0x0000775055209556:   hlt
  0x0000775055209557:   hlt
  0x0000775055209558:   hlt
  0x0000775055209559:   hlt
  0x000077505520955a:   hlt
  0x000077505520955b:   hlt
  0x000077505520955c:   hlt
  0x000077505520955d:   hlt
  0x000077505520955e:   hlt
  0x000077505520955f:   hlt
[Exception Handler]
  0x0000775055209560:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055209565:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520956f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055209573:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055209578:   hlt
[Deopt Handler Code]
  0x0000775055209579:   movabs $0x775055209579,%r10         ;   {section_word}
  0x0000775055209583:   push   %r10
  0x0000775055209585:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520958a:   hlt
  0x000077505520958b:   hlt
  0x000077505520958c:   hlt
  0x000077505520958d:   hlt
  0x000077505520958e:   hlt
  0x000077505520958f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      93   31       3       java.util.ImmutableCollections$SetN$SetNIterator::next (90 bytes)
 total in heap  [0x0000775055209610,0x0000775055209db0] = 1952
 relocation     [0x0000775055209770,0x00007750552097c8] = 88
 main code      [0x00007750552097e0,0x0000775055209ac0] = 736
 stub code      [0x0000775055209ac0,0x0000775055209b00] = 64
 metadata       [0x0000775055209b00,0x0000775055209b08] = 8
 scopes data    [0x0000775055209b08,0x0000775055209bc0] = 184
 scopes pcs     [0x0000775055209bc0,0x0000775055209d90] = 464
 dependencies   [0x0000775055209d90,0x0000775055209d98] = 8
 nul chk table  [0x0000775055209d98,0x0000775055209db0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator'
  #           [sp+0x40]  (sp of caller)
  0x00007750552097e0:   mov    0x8(%rsi),%r10d
  0x00007750552097e4:   movabs $0x800000000,%r11
  0x00007750552097ee:   add    %r11,%r10
  0x00007750552097f1:   cmp    %rax,%r10
  0x00007750552097f4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552097fa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055209800:   mov    %eax,-0x14000(%rsp)
  0x0000775055209807:   push   %rbp
  0x0000775055209808:   sub    $0x30,%rsp
  0x000077505520980c:   movabs $0x7750202e8a88,%rax         ;   {metadata(method data for {method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055209816:   mov    0xf4(%rax),%edx
  0x000077505520981c:   add    $0x2,%edx
  0x000077505520981f:   mov    %edx,0xf4(%rax)
  0x0000775055209825:   and    $0x7fe,%edx
  0x000077505520982b:   cmp    $0x0,%edx
  0x000077505520982e:   je     0x00007750552099ee           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@0 (line 961)
  0x0000775055209834:   mov    0xc(%rsi),%eax               ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 961)
  0x0000775055209837:   cmp    $0x0,%eax
  0x000077505520983a:   movabs $0x7750202e8a88,%rdx         ;   {metadata(method data for {method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055209844:   movabs $0x138,%rdi
  0x000077505520984e:   jle    0x000077505520985e
  0x0000775055209854:   movabs $0x148,%rdi
  0x000077505520985e:   mov    (%rdx,%rdi,1),%rbx
  0x0000775055209862:   lea    0x1(%rbx),%rbx
  0x0000775055209866:   mov    %rbx,(%rdx,%rdi,1)
  0x000077505520986a:   jle    0x00007750552099ae           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@4 (line 961)
  0x0000775055209870:   mov    0x10(%rsi),%edx              ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@8 (line 963)
  0x0000775055209873:   mov    0x14(%rsi),%edi
  0x0000775055209876:   shl    $0x3,%rdi                    ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@13 (line 964)
  0x000077505520987a:   mov    0x10(%rdi),%edi              ; implicit exception: dispatches to 0x0000775055209a0f
  0x000077505520987d:   shl    $0x3,%rdi                    ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@16 (line 964)
  0x0000775055209881:   mov    0xc(%rdi),%ebx               ; implicit exception: dispatches to 0x0000775055209a14
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@19 (line 964)
  0x0000775055209884:   nopl   0x0(%rax)
  0x0000775055209888:   movabs $0x7750202e8a88,%rcx         ;   {metadata(method data for {method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055209892:   incl   0x168(%rcx)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 967)
  0x0000775055209898:   inc    %edx
  0x000077505520989a:   cmp    %ebx,%edx
  0x000077505520989c:   movabs $0x7750202e8a88,%rcx         ;   {metadata(method data for {method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007750552098a6:   movabs $0x178,%r8
  0x00007750552098b0:   jl     0x00007750552098c0
  0x00007750552098b6:   movabs $0x188,%r8
  0x00007750552098c0:   mov    (%rcx,%r8,1),%r9
  0x00007750552098c4:   lea    0x1(%r9),%r9
  0x00007750552098c8:   mov    %r9,(%rcx,%r8,1)
  0x00007750552098cc:   jl     0x00007750552098e7           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@32 (line 968)
  0x00007750552098d2:   movabs $0x7750202e8a88,%rdx         ;   {metadata(method data for {method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007750552098dc:   incl   0x198(%rdx)
  0x00007750552098e2:   mov    $0x0,%edx                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@37 (line 969)
  0x00007750552098e7:   cmp    %edx,%ebx
  0x00007750552098e9:   jbe    0x0000775055209a19
  0x00007750552098ef:   movslq %edx,%rcx
  0x00007750552098f2:   mov    0x10(%rdi,%rcx,4),%ecx
  0x00007750552098f6:   shl    $0x3,%rcx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@59 (line 976)
  0x00007750552098fa:   cmp    $0x0,%rcx
  0x00007750552098fe:   mov    $0x2,%r8d
  0x0000775055209904:   je     0x0000775055209910
  0x000077505520990a:   mov    $0x0,%r8d
  0x0000775055209910:   movabs $0x7750202e8a88,%r9          ;   {metadata(method data for {method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x000077505520991a:   mov    0xf8(%r9),%r11d
  0x0000775055209921:   add    %r8d,%r11d
  0x0000775055209924:   mov    %r11d,0xf8(%r9)
  0x000077505520992b:   cmp    $0x0,%r8d
  0x000077505520992f:   jne    0x000077505520993b
  0x0000775055209935:   mov    $0x2,%r11d
  0x000077505520993b:   and    $0x3ffe,%r11d
  0x0000775055209942:   cmp    $0x0,%r11d
  0x0000775055209946:   je     0x0000775055209a27           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@62 (line 976)
  0x000077505520994c:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rsi=Oop rdi=Oop rcx=Oop }
                                                            ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$SetN$SetNIterator::next@62 (line 976)
  0x0000775055209953:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055209956:   cmp    $0x0,%rcx
  0x000077505520995a:   movabs $0x7750202e8a88,%r8          ;   {metadata(method data for {method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055209964:   movabs $0x1d0,%r9
  0x000077505520996e:   je     0x000077505520997e
  0x0000775055209974:   movabs $0x1e0,%r9
  0x000077505520997e:   mov    (%r8,%r9,1),%r11
  0x0000775055209982:   lea    0x1(%r11),%r11
  0x0000775055209986:   mov    %r11,(%r8,%r9,1)
  0x000077505520998a:   je     0x0000775055209888           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@62 (line 976)
  0x0000775055209990:   mov    %edx,0x10(%rsi)              ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@67 (line 977)
  0x0000775055209993:   dec    %eax
  0x0000775055209995:   mov    %eax,0xc(%rsi)               ;*putfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@77 (line 978)
  0x0000775055209998:   mov    %rcx,%rax
  0x000077505520999b:   add    $0x30,%rsp
  0x000077505520999f:   pop    %rbp
  0x00007750552099a0:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552099a7:   ja     0x0000775055209a48
  0x00007750552099ad:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@81 (line 979)
  0x00007750552099ae:   xchg   %ax,%ax
  0x00007750552099b0:   jmp    0x0000775055209a6d           ;   {no_reloc}
  0x00007750552099b5:   add    %al,(%rax)
  0x00007750552099b7:   add    %al,(%rax)
  0x00007750552099b9:   add    %ch,%cl
  0x00007750552099bb:   mov    $0x48000000,%eax             ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@82 (line 981)
  0x00007750552099c0:   mov    %eax,%esi
  0x00007750552099c2:   movabs $0x7750202e8a88,%rdi         ;   {metadata(method data for {method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007750552099cc:   addq   $0x1,0x1f0(%rdi)
  0x00007750552099d4:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@86 (line 981)
  0x00007750552099d7:   mov    %rax,0x20(%rsp)
  0x00007750552099dc:   data16 xchg %ax,%ax
  0x00007750552099df:   call   0x000077505c788080           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@86 (line 981)
                                                            ;   {optimized virtual_call}
  0x00007750552099e4:   mov    0x20(%rsp),%rax
  0x00007750552099e9:   jmp    0x0000775055209aa3
  0x00007750552099ee:   movabs $0x7750202944c0,%r10         ;   {metadata({method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007750552099f8:   mov    %r10,0x8(%rsp)
  0x00007750552099fd:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055209a05:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@-1 (line 961)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055209a0a:   jmp    0x0000775055209834
  0x0000775055209a0f:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$SetN$SetNIterator::next@16 (line 964)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055209a14:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rdi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@19 (line 964)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055209a19:   mov    %rdx,(%rsp)
  0x0000775055209a1d:   mov    %rdi,0x8(%rsp)
  0x0000775055209a22:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop rdi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@59 (line 976)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055209a27:   movabs $0x7750202944c0,%r10         ;   {metadata({method} {0x00007750202944c0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x0000775055209a31:   mov    %r10,0x8(%rsp)
  0x0000775055209a36:   movq   $0x3e,(%rsp)
  0x0000775055209a3e:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdi=Oop rcx=Oop }
                                                            ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$SetN$SetNIterator::next@62 (line 976)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055209a43:   jmp    0x000077505520994c
  0x0000775055209a48:   movabs $0x7750552099a0,%r10         ;   {internal_word}
  0x0000775055209a52:   mov    %r10,0x360(%r15)
  0x0000775055209a59:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055209a5e:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x0000775055209a68:   mov    $0xa050f00,%eax
  0x0000775055209a6d:   call   0x000077505c82d600           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$SetN$SetNIterator::next@82 (line 981)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x0000775055209a72:   jmp    0x00007750552099b0
  0x0000775055209a77:   mov    %rdx,%rdx
  0x0000775055209a7a:   call   0x000077505c829b80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::next@82 (line 981)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x0000775055209a7f:   jmp    0x00007750552099bf
  0x0000775055209a84:   nop
  0x0000775055209a85:   nop
  0x0000775055209a86:   mov    0x3d8(%r15),%rax
  0x0000775055209a8d:   movq   $0x0,0x3d8(%r15)
  0x0000775055209a98:   movq   $0x0,0x3e0(%r15)
  0x0000775055209aa3:   add    $0x30,%rsp
  0x0000775055209aa7:   pop    %rbp
  0x0000775055209aa8:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055209aad:   hlt
  0x0000775055209aae:   hlt
  0x0000775055209aaf:   hlt
  0x0000775055209ab0:   hlt
  0x0000775055209ab1:   hlt
  0x0000775055209ab2:   hlt
  0x0000775055209ab3:   hlt
  0x0000775055209ab4:   hlt
  0x0000775055209ab5:   hlt
  0x0000775055209ab6:   hlt
  0x0000775055209ab7:   hlt
  0x0000775055209ab8:   hlt
  0x0000775055209ab9:   hlt
  0x0000775055209aba:   hlt
  0x0000775055209abb:   hlt
  0x0000775055209abc:   hlt
  0x0000775055209abd:   hlt
  0x0000775055209abe:   hlt
  0x0000775055209abf:   hlt
[Stub Code]
  0x0000775055209ac0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055209ac5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055209acf:   jmp    0x0000775055209acf           ;   {runtime_call}
[Exception Handler]
  0x0000775055209ad4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055209ad9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055209ae3:   and    $0xfffffffffffffff0,%rsp
  0x0000775055209ae7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055209aec:   hlt
[Deopt Handler Code]
  0x0000775055209aed:   movabs $0x775055209aed,%r10         ;   {section_word}
  0x0000775055209af7:   push   %r10
  0x0000775055209af9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055209afe:   hlt
  0x0000775055209aff:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      96   32       1       java.util.KeyValueHolder::getKey (5 bytes)
 total in heap  [0x000077505ccca290,0x000077505ccca550] = 704
 relocation     [0x000077505ccca3f0,0x000077505ccca418] = 40
 main code      [0x000077505ccca420,0x000077505ccca4c0] = 160
 stub code      [0x000077505ccca4c0,0x000077505ccca4f0] = 48
 metadata       [0x000077505ccca4f0,0x000077505ccca4f8] = 8
 scopes data    [0x000077505ccca4f8,0x000077505ccca508] = 16
 scopes pcs     [0x000077505ccca508,0x000077505ccca548] = 64
 dependencies   [0x000077505ccca548,0x000077505ccca550] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020197968} 'getKey' '()Ljava/lang/Object;' in 'java/util/KeyValueHolder'
  #           [sp+0x40]  (sp of caller)
  0x000077505ccca420:   mov    0x8(%rsi),%r10d
  0x000077505ccca424:   movabs $0x800000000,%r11
  0x000077505ccca42e:   add    %r11,%r10
  0x000077505ccca431:   cmp    %rax,%r10
  0x000077505ccca434:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccca43a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505ccca440:   mov    %eax,-0x14000(%rsp)
  0x000077505ccca447:   push   %rbp
  0x000077505ccca448:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.KeyValueHolder::getKey@0 (line 72)
  0x000077505ccca44c:   mov    0xc(%rsi),%eax
  0x000077505ccca44f:   shl    $0x3,%rax                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.KeyValueHolder::getKey@1 (line 72)
  0x000077505ccca453:   add    $0x30,%rsp
  0x000077505ccca457:   pop    %rbp
  0x000077505ccca458:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccca45f:   ja     0x000077505ccca466
  0x000077505ccca465:   ret
  0x000077505ccca466:   movabs $0x77505ccca458,%r10         ;   {internal_word}
  0x000077505ccca470:   mov    %r10,0x360(%r15)
  0x000077505ccca477:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccca47c:   nop
  0x000077505ccca47d:   nop
  0x000077505ccca47e:   mov    0x3d8(%r15),%rax
  0x000077505ccca485:   movq   $0x0,0x3d8(%r15)
  0x000077505ccca490:   movq   $0x0,0x3e0(%r15)
  0x000077505ccca49b:   add    $0x30,%rsp
  0x000077505ccca49f:   pop    %rbp
  0x000077505ccca4a0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505ccca4a5:   hlt
  0x000077505ccca4a6:   hlt
  0x000077505ccca4a7:   hlt
  0x000077505ccca4a8:   hlt
  0x000077505ccca4a9:   hlt
  0x000077505ccca4aa:   hlt
  0x000077505ccca4ab:   hlt
  0x000077505ccca4ac:   hlt
  0x000077505ccca4ad:   hlt
  0x000077505ccca4ae:   hlt
  0x000077505ccca4af:   hlt
  0x000077505ccca4b0:   hlt
  0x000077505ccca4b1:   hlt
  0x000077505ccca4b2:   hlt
  0x000077505ccca4b3:   hlt
  0x000077505ccca4b4:   hlt
  0x000077505ccca4b5:   hlt
  0x000077505ccca4b6:   hlt
  0x000077505ccca4b7:   hlt
  0x000077505ccca4b8:   hlt
  0x000077505ccca4b9:   hlt
  0x000077505ccca4ba:   hlt
  0x000077505ccca4bb:   hlt
  0x000077505ccca4bc:   hlt
  0x000077505ccca4bd:   hlt
  0x000077505ccca4be:   hlt
  0x000077505ccca4bf:   hlt
[Exception Handler]
  0x000077505ccca4c0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505ccca4c5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505ccca4cf:   and    $0xfffffffffffffff0,%rsp
  0x000077505ccca4d3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505ccca4d8:   hlt
[Deopt Handler Code]
  0x000077505ccca4d9:   movabs $0x77505ccca4d9,%r10         ;   {section_word}
  0x000077505ccca4e3:   push   %r10
  0x000077505ccca4e5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccca4ea:   hlt
  0x000077505ccca4eb:   hlt
  0x000077505ccca4ec:   hlt
  0x000077505ccca4ed:   hlt
  0x000077505ccca4ee:   hlt
  0x000077505ccca4ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      97   33       1       java.util.KeyValueHolder::getValue (5 bytes)
 total in heap  [0x000077505ccca590,0x000077505ccca850] = 704
 relocation     [0x000077505ccca6f0,0x000077505ccca718] = 40
 main code      [0x000077505ccca720,0x000077505ccca7c0] = 160
 stub code      [0x000077505ccca7c0,0x000077505ccca7f0] = 48
 metadata       [0x000077505ccca7f0,0x000077505ccca7f8] = 8
 scopes data    [0x000077505ccca7f8,0x000077505ccca808] = 16
 scopes pcs     [0x000077505ccca808,0x000077505ccca848] = 64
 dependencies   [0x000077505ccca848,0x000077505ccca850] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020197a10} 'getValue' '()Ljava/lang/Object;' in 'java/util/KeyValueHolder'
  #           [sp+0x40]  (sp of caller)
  0x000077505ccca720:   mov    0x8(%rsi),%r10d
  0x000077505ccca724:   movabs $0x800000000,%r11
  0x000077505ccca72e:   add    %r11,%r10
  0x000077505ccca731:   cmp    %rax,%r10
  0x000077505ccca734:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccca73a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505ccca740:   mov    %eax,-0x14000(%rsp)
  0x000077505ccca747:   push   %rbp
  0x000077505ccca748:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.KeyValueHolder::getValue@0 (line 82)
  0x000077505ccca74c:   mov    0x10(%rsi),%eax
  0x000077505ccca74f:   shl    $0x3,%rax                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.KeyValueHolder::getValue@1 (line 82)
  0x000077505ccca753:   add    $0x30,%rsp
  0x000077505ccca757:   pop    %rbp
  0x000077505ccca758:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccca75f:   ja     0x000077505ccca766
  0x000077505ccca765:   ret
  0x000077505ccca766:   movabs $0x77505ccca758,%r10         ;   {internal_word}
  0x000077505ccca770:   mov    %r10,0x360(%r15)
  0x000077505ccca777:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccca77c:   nop
  0x000077505ccca77d:   nop
  0x000077505ccca77e:   mov    0x3d8(%r15),%rax
  0x000077505ccca785:   movq   $0x0,0x3d8(%r15)
  0x000077505ccca790:   movq   $0x0,0x3e0(%r15)
  0x000077505ccca79b:   add    $0x30,%rsp
  0x000077505ccca79f:   pop    %rbp
  0x000077505ccca7a0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505ccca7a5:   hlt
  0x000077505ccca7a6:   hlt
  0x000077505ccca7a7:   hlt
  0x000077505ccca7a8:   hlt
  0x000077505ccca7a9:   hlt
  0x000077505ccca7aa:   hlt
  0x000077505ccca7ab:   hlt
  0x000077505ccca7ac:   hlt
  0x000077505ccca7ad:   hlt
  0x000077505ccca7ae:   hlt
  0x000077505ccca7af:   hlt
  0x000077505ccca7b0:   hlt
  0x000077505ccca7b1:   hlt
  0x000077505ccca7b2:   hlt
  0x000077505ccca7b3:   hlt
  0x000077505ccca7b4:   hlt
  0x000077505ccca7b5:   hlt
  0x000077505ccca7b6:   hlt
  0x000077505ccca7b7:   hlt
  0x000077505ccca7b8:   hlt
  0x000077505ccca7b9:   hlt
  0x000077505ccca7ba:   hlt
  0x000077505ccca7bb:   hlt
  0x000077505ccca7bc:   hlt
  0x000077505ccca7bd:   hlt
  0x000077505ccca7be:   hlt
  0x000077505ccca7bf:   hlt
[Exception Handler]
  0x000077505ccca7c0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505ccca7c5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505ccca7cf:   and    $0xfffffffffffffff0,%rsp
  0x000077505ccca7d3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505ccca7d8:   hlt
[Deopt Handler Code]
  0x000077505ccca7d9:   movabs $0x77505ccca7d9,%r10         ;   {section_word}
  0x000077505ccca7e3:   push   %r10
  0x000077505ccca7e5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccca7ea:   hlt
  0x000077505ccca7eb:   hlt
  0x000077505ccca7ec:   hlt
  0x000077505ccca7ed:   hlt
  0x000077505ccca7ee:   hlt
  0x000077505ccca7ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      99   34       3       java.util.KeyValueHolder::<init> (21 bytes)
 total in heap  [0x0000775055209e10,0x000077505520a758] = 2376
 relocation     [0x0000775055209f70,0x0000775055209ff0] = 128
 main code      [0x000077505520a000,0x000077505520a4a0] = 1184
 stub code      [0x000077505520a4a0,0x000077505520a4f0] = 80
 metadata       [0x000077505520a4f0,0x000077505520a508] = 24
 scopes data    [0x000077505520a508,0x000077505520a5e0] = 216
 scopes pcs     [0x000077505520a5e0,0x000077505520a750] = 368
 dependencies   [0x000077505520a750,0x000077505520a758] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750201978c0} '<init>' '(Ljava/lang/Object;Ljava/lang/Object;)V' in 'java/util/KeyValueHolder'
  # this:     rsi:rsi   = 'java/util/KeyValueHolder'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x70]  (sp of caller)
  0x000077505520a000:   mov    0x8(%rsi),%r10d
  0x000077505520a004:   movabs $0x800000000,%r11
  0x000077505520a00e:   add    %r11,%r10
  0x000077505520a011:   cmp    %rax,%r10
  0x000077505520a014:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520a01a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505520a020:   mov    %eax,-0x14000(%rsp)
  0x000077505520a027:   push   %rbp
  0x000077505520a028:   sub    $0x60,%rsp
  0x000077505520a02c:   mov    %rsi,0x38(%rsp)
  0x000077505520a031:   movabs $0x7750202ede28,%rdi         ;   {metadata(method data for {method} {0x00007750201978c0} '<init>' '(Ljava/lang/Object;Ljava/lang/Object;)V' in 'java/util/KeyValueHolder')}
  0x000077505520a03b:   mov    0xf4(%rdi),%eax
  0x000077505520a041:   add    $0x2,%eax
  0x000077505520a044:   mov    %eax,0xf4(%rdi)
  0x000077505520a04a:   and    $0x7fe,%eax
  0x000077505520a050:   cmp    $0x0,%eax
  0x000077505520a053:   je     0x000077505520a316           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.KeyValueHolder::<init>@0 (line 60)
  0x000077505520a059:   mov    %rsi,%rdi
  0x000077505520a05c:   movabs $0x7750202ede28,%rax         ;   {metadata(method data for {method} {0x00007750201978c0} '<init>' '(Ljava/lang/Object;Ljava/lang/Object;)V' in 'java/util/KeyValueHolder')}
  0x000077505520a066:   addq   $0x1,0x138(%rax)
  0x000077505520a06e:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505520a078:   mov    0xf4(%rdi),%eax
  0x000077505520a07e:   add    $0x2,%eax
  0x000077505520a081:   mov    %eax,0xf4(%rdi)
  0x000077505520a087:   and    $0x1ffffe,%eax
  0x000077505520a08d:   cmp    $0x0,%eax
  0x000077505520a090:   je     0x000077505520a337
  0x000077505520a096:   movabs $0x7750202ede28,%rdi         ;   {metadata(method data for {method} {0x00007750201978c0} '<init>' '(Ljava/lang/Object;Ljava/lang/Object;)V' in 'java/util/KeyValueHolder')}
  0x000077505520a0a0:   addq   $0x1,0x148(%rdi)
  0x000077505520a0a8:   movabs $0x77502029f510,%rdi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520a0b2:   mov    0xf4(%rdi),%eax
  0x000077505520a0b8:   add    $0x2,%eax
  0x000077505520a0bb:   mov    %eax,0xf4(%rdi)
  0x000077505520a0c1:   and    $0x1ffffe,%eax
  0x000077505520a0c7:   cmp    $0x0,%eax
  0x000077505520a0ca:   je     0x000077505520a358
  0x000077505520a0d0:   cmp    $0x0,%rdx
  0x000077505520a0d4:   movabs $0x77502029f510,%rdi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520a0de:   movabs $0x148,%rax
  0x000077505520a0e8:   je     0x000077505520a0f8
  0x000077505520a0ee:   movabs $0x138,%rax
  0x000077505520a0f8:   mov    (%rdi,%rax,1),%rbx
  0x000077505520a0fc:   lea    0x1(%rbx),%rbx
  0x000077505520a100:   mov    %rbx,(%rdi,%rax,1)
  0x000077505520a104:   je     0x000077505520a27e           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@1 (line 208)
                                                            ; - java.util.KeyValueHolder::<init>@6 (line 61)
  0x000077505520a10a:   movsbl 0x38(%r15),%edi
  0x000077505520a10f:   cmp    $0x0,%edi
  0x000077505520a112:   jne    0x000077505520a379
  0x000077505520a118:   mov    %rdx,%r10
  0x000077505520a11b:   shr    $0x3,%r10
  0x000077505520a11f:   mov    %r10d,0xc(%rsi)
  0x000077505520a123:   mov    %rsi,%rdi
  0x000077505520a126:   xor    %rdx,%rdi
  0x000077505520a129:   shr    $0x16,%rdi
  0x000077505520a12d:   cmp    $0x0,%rdi
  0x000077505520a131:   jne    0x000077505520a398           ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.KeyValueHolder::<init>@9 (line 61)
  0x000077505520a137:   movabs $0x7750202ede28,%rdx         ;   {metadata(method data for {method} {0x00007750201978c0} '<init>' '(Ljava/lang/Object;Ljava/lang/Object;)V' in 'java/util/KeyValueHolder')}
  0x000077505520a141:   addq   $0x1,0x158(%rdx)
  0x000077505520a149:   movabs $0x77502029f510,%rdx         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520a153:   mov    0xf4(%rdx),%edi
  0x000077505520a159:   add    $0x2,%edi
  0x000077505520a15c:   mov    %edi,0xf4(%rdx)
  0x000077505520a162:   and    $0x1ffffe,%edi
  0x000077505520a168:   cmp    $0x0,%edi
  0x000077505520a16b:   je     0x000077505520a3b0
  0x000077505520a171:   cmp    $0x0,%rcx
  0x000077505520a175:   movabs $0x77502029f510,%rdx         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520a17f:   movabs $0x148,%rdi
  0x000077505520a189:   je     0x000077505520a199
  0x000077505520a18f:   movabs $0x138,%rdi
  0x000077505520a199:   mov    (%rdx,%rdi,1),%rax
  0x000077505520a19d:   lea    0x1(%rax),%rax
  0x000077505520a1a1:   mov    %rax,(%rdx,%rdi,1)
  0x000077505520a1a5:   je     0x000077505520a1eb           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@1 (line 208)
                                                            ; - java.util.KeyValueHolder::<init>@14 (line 62)
  0x000077505520a1ab:   movsbl 0x38(%r15),%edx
  0x000077505520a1b0:   cmp    $0x0,%edx
  0x000077505520a1b3:   jne    0x000077505520a3d1
  0x000077505520a1b9:   mov    %rcx,%r10
  0x000077505520a1bc:   shr    $0x3,%r10
  0x000077505520a1c0:   mov    %r10d,0x10(%rsi)
  0x000077505520a1c4:   mov    %rsi,%rdx
  0x000077505520a1c7:   xor    %rcx,%rdx
  0x000077505520a1ca:   shr    $0x16,%rdx
  0x000077505520a1ce:   cmp    $0x0,%rdx
  0x000077505520a1d2:   jne    0x000077505520a3f0           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.KeyValueHolder::<init>@17 (line 62)
  0x000077505520a1d8:   add    $0x60,%rsp
  0x000077505520a1dc:   pop    %rbp
  0x000077505520a1dd:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520a1e4:   ja     0x000077505520a408
  0x000077505520a1ea:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.KeyValueHolder::<init>@20 (line 63)
  0x000077505520a1eb:   nopl   0x0(%rax,%rax,1)
  0x000077505520a1f0:   jmp    0x000077505520a42d           ;   {no_reloc}
  0x000077505520a1f5:   add    %al,(%rax)
  0x000077505520a1f7:   add    %al,(%rax)
  0x000077505520a1f9:   add    %cl,-0x75(%rcx)
  0x000077505520a1fc:   xchg   %ecx,(%rax)
  0x000077505520a1fe:   add    %eax,(%rax)
  0x000077505520a200:   add    %cl,-0x73(%rax)
  0x000077505520a203:   js     0x000077505520a235
  0x000077505520a205:   cmp    0x118(%r15),%rdi
  0x000077505520a20c:   ja     0x000077505520a437
  0x000077505520a212:   mov    %rdi,0x108(%r15)
  0x000077505520a219:   movq   $0x1,(%rax)
  0x000077505520a220:   mov    %rdx,%rcx
  0x000077505520a223:   movabs $0x800000000,%r10
  0x000077505520a22d:   sub    %r10,%rcx
  0x000077505520a230:   mov    %ecx,0x8(%rax)
  0x000077505520a233:   xor    %rcx,%rcx
  0x000077505520a236:   mov    %ecx,0xc(%rax)
  0x000077505520a239:   xor    %rcx,%rcx
  0x000077505520a23c:   mov    %rcx,0x10(%rax)
  0x000077505520a240:   mov    %rcx,0x18(%rax)
  0x000077505520a244:   mov    %rcx,0x20(%rax)
  0x000077505520a248:   mov    %rcx,0x28(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@14 (line 62)
  0x000077505520a24c:   mov    %rax,%rsi
  0x000077505520a24f:   movabs $0x77502029f510,%rdi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520a259:   addq   $0x1,0x158(%rdi)
  0x000077505520a261:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@14 (line 62)
  0x000077505520a264:   mov    %rax,0x30(%rsp)
  0x000077505520a269:   nopw   0x0(%rax,%rax,1)
  0x000077505520a26f:   call   0x000077505c788080           ; ImmutableOopMap {[48]=Oop [56]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@14 (line 62)
                                                            ;   {optimized virtual_call}
  0x000077505520a274:   mov    0x30(%rsp),%rax
  0x000077505520a279:   jmp    0x000077505520a489           ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@11 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@14 (line 62)
  0x000077505520a27e:   mov    %rcx,0x48(%rsp)
  0x000077505520a283:   nopl   0x0(%rax,%rax,1)
  0x000077505520a288:   jmp    0x000077505520a453           ;   {no_reloc}
  0x000077505520a28d:   add    %al,(%rax)
  0x000077505520a28f:   add    %al,(%rax)
  0x000077505520a291:   add    %cl,-0x75(%rcx)
  0x000077505520a294:   xchg   %ecx,(%rax)
  0x000077505520a296:   add    %eax,(%rax)
  0x000077505520a298:   add    %cl,-0x73(%rax)
  0x000077505520a29b:   js     0x000077505520a2cd
  0x000077505520a29d:   cmp    0x118(%r15),%rdi
  0x000077505520a2a4:   ja     0x000077505520a45d
  0x000077505520a2aa:   mov    %rdi,0x108(%r15)
  0x000077505520a2b1:   movq   $0x1,(%rax)
  0x000077505520a2b8:   mov    %rdx,%rcx
  0x000077505520a2bb:   movabs $0x800000000,%r10
  0x000077505520a2c5:   sub    %r10,%rcx
  0x000077505520a2c8:   mov    %ecx,0x8(%rax)
  0x000077505520a2cb:   xor    %rcx,%rcx
  0x000077505520a2ce:   mov    %ecx,0xc(%rax)
  0x000077505520a2d1:   xor    %rcx,%rcx
  0x000077505520a2d4:   mov    %rcx,0x10(%rax)
  0x000077505520a2d8:   mov    %rcx,0x18(%rax)
  0x000077505520a2dc:   mov    %rcx,0x20(%rax)
  0x000077505520a2e0:   mov    %rcx,0x28(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@6 (line 61)
  0x000077505520a2e4:   mov    %rax,%rsi
  0x000077505520a2e7:   movabs $0x77502029f510,%rdi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520a2f1:   addq   $0x1,0x158(%rdi)
  0x000077505520a2f9:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@6 (line 61)
  0x000077505520a2fc:   mov    %rax,0x40(%rsp)
  0x000077505520a301:   nopw   0x0(%rax,%rax,1)
  0x000077505520a307:   call   0x000077505c788080           ; ImmutableOopMap {[64]=Oop [56]=Oop [72]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@6 (line 61)
                                                            ;   {optimized virtual_call}
  0x000077505520a30c:   mov    0x40(%rsp),%rax
  0x000077505520a311:   jmp    0x000077505520a489
  0x000077505520a316:   movabs $0x7750201978c0,%r10         ;   {metadata({method} {0x00007750201978c0} '<init>' '(Ljava/lang/Object;Ljava/lang/Object;)V' in 'java/util/KeyValueHolder')}
  0x000077505520a320:   mov    %r10,0x8(%rsp)
  0x000077505520a325:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520a32d:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [56]=Oop rdx=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.KeyValueHolder::<init>@-1 (line 60)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520a332:   jmp    0x000077505520a059
  0x000077505520a337:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505520a341:   mov    %r10,0x8(%rsp)
  0x000077505520a346:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520a34e:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [56]=Oop rdx=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.KeyValueHolder::<init>@1 (line 60)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520a353:   jmp    0x000077505520a096
  0x000077505520a358:   movabs $0x77502014e748,%r10         ;   {metadata({method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520a362:   mov    %r10,0x8(%rsp)
  0x000077505520a367:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520a36f:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [56]=Oop rdx=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::requireNonNull@-1 (line 208)
                                                            ; - java.util.KeyValueHolder::<init>@6 (line 61)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520a374:   jmp    0x000077505520a0d0
  0x000077505520a379:   mov    0xc(%rsi),%edi
  0x000077505520a37c:   shl    $0x3,%rdi
  0x000077505520a380:   cmp    $0x0,%rdi
  0x000077505520a384:   je     0x000077505520a118
  0x000077505520a38a:   mov    %rdi,(%rsp)
  0x000077505520a38e:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520a393:   jmp    0x000077505520a118
  0x000077505520a398:   cmp    $0x0,%rdx
  0x000077505520a39c:   je     0x000077505520a137
  0x000077505520a3a2:   mov    %rsi,(%rsp)
  0x000077505520a3a6:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520a3ab:   jmp    0x000077505520a137
  0x000077505520a3b0:   movabs $0x77502014e748,%r10         ;   {metadata({method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520a3ba:   mov    %r10,0x8(%rsp)
  0x000077505520a3bf:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520a3c7:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [56]=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::requireNonNull@-1 (line 208)
                                                            ; - java.util.KeyValueHolder::<init>@14 (line 62)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520a3cc:   jmp    0x000077505520a171
  0x000077505520a3d1:   mov    0x10(%rsi),%edx
  0x000077505520a3d4:   shl    $0x3,%rdx
  0x000077505520a3d8:   cmp    $0x0,%rdx
  0x000077505520a3dc:   je     0x000077505520a1b9
  0x000077505520a3e2:   mov    %rdx,(%rsp)
  0x000077505520a3e6:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520a3eb:   jmp    0x000077505520a1b9
  0x000077505520a3f0:   cmp    $0x0,%rcx
  0x000077505520a3f4:   je     0x000077505520a1d8
  0x000077505520a3fa:   mov    %rsi,(%rsp)
  0x000077505520a3fe:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520a403:   jmp    0x000077505520a1d8
  0x000077505520a408:   movabs $0x77505520a1dd,%r10         ;   {internal_word}
  0x000077505520a412:   mov    %r10,0x360(%r15)
  0x000077505520a419:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520a41e:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505520a428:   mov    $0xa050f00,%eax
  0x000077505520a42d:   call   0x000077505c82d600           ; ImmutableOopMap {[56]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@14 (line 62)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505520a432:   jmp    0x000077505520a1f0
  0x000077505520a437:   mov    %rdx,%rdx
  0x000077505520a43a:   call   0x000077505c829e80           ; ImmutableOopMap {[56]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@14 (line 62)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505520a43f:   jmp    0x000077505520a24c
  0x000077505520a444:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505520a44e:   mov    $0xa050f00,%eax
  0x000077505520a453:   call   0x000077505c82d600           ; ImmutableOopMap {[56]=Oop [72]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@6 (line 61)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505520a458:   jmp    0x000077505520a288
  0x000077505520a45d:   mov    %rdx,%rdx
  0x000077505520a460:   call   0x000077505c829e80           ; ImmutableOopMap {[72]=Oop [56]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.KeyValueHolder::<init>@6 (line 61)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505520a465:   jmp    0x000077505520a2e4
  0x000077505520a46a:   nop
  0x000077505520a46b:   nop
  0x000077505520a46c:   mov    0x3d8(%r15),%rax
  0x000077505520a473:   movq   $0x0,0x3d8(%r15)
  0x000077505520a47e:   movq   $0x0,0x3e0(%r15)
  0x000077505520a489:   add    $0x60,%rsp
  0x000077505520a48d:   pop    %rbp
  0x000077505520a48e:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505520a493:   hlt
  0x000077505520a494:   hlt
  0x000077505520a495:   hlt
  0x000077505520a496:   hlt
  0x000077505520a497:   hlt
  0x000077505520a498:   hlt
  0x000077505520a499:   hlt
  0x000077505520a49a:   hlt
  0x000077505520a49b:   hlt
  0x000077505520a49c:   hlt
  0x000077505520a49d:   hlt
  0x000077505520a49e:   hlt
  0x000077505520a49f:   hlt
[Stub Code]
  0x000077505520a4a0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505520a4a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520a4af:   jmp    0x000077505520a4af           ;   {runtime_call}
  0x000077505520a4b4:   nop
  0x000077505520a4b5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520a4bf:   jmp    0x000077505520a4bf           ;   {runtime_call}
[Exception Handler]
  0x000077505520a4c4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505520a4c9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520a4d3:   and    $0xfffffffffffffff0,%rsp
  0x000077505520a4d7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520a4dc:   hlt
[Deopt Handler Code]
  0x000077505520a4dd:   movabs $0x77505520a4dd,%r10         ;   {section_word}
  0x000077505520a4e7:   push   %r10
  0x000077505520a4e9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520a4ee:   hlt
  0x000077505520a4ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     103   35       3       java.util.ImmutableCollections$MapN::probe (60 bytes)
 total in heap  [0x000077505520a790,0x000077505520b220] = 2704
 relocation     [0x000077505520a8f0,0x000077505520a970] = 128
 main code      [0x000077505520a980,0x000077505520ae80] = 1280
 stub code      [0x000077505520ae80,0x000077505520aed0] = 80
 metadata       [0x000077505520aed0,0x000077505520aee0] = 16
 scopes data    [0x000077505520aee0,0x000077505520afe8] = 264
 scopes pcs     [0x000077505520afe8,0x000077505520b1e8] = 512
 dependencies   [0x000077505520b1e8,0x000077505520b1f0] = 8
 nul chk table  [0x000077505520b1f0,0x000077505520b220] = 48

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN'
  # this:     rsi:rsi   = 'java/util/ImmutableCollections$MapN'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x70]  (sp of caller)
  0x000077505520a980:   mov    0x8(%rsi),%r10d
  0x000077505520a984:   movabs $0x800000000,%r11
  0x000077505520a98e:   add    %r11,%r10
  0x000077505520a991:   cmp    %rax,%r10
  0x000077505520a994:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520a99a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505520a9a0:   mov    %eax,-0x14000(%rsp)
  0x000077505520a9a7:   push   %rbp
  0x000077505520a9a8:   sub    $0x60,%rsp
  0x000077505520a9ac:   mov    %rsi,0x38(%rsp)
  0x000077505520a9b1:   mov    %rdx,0x40(%rsp)
  0x000077505520a9b6:   movabs $0x7750202edfe0,%rdi         ;   {metadata(method data for {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520a9c0:   mov    0xf4(%rdi),%ebx
  0x000077505520a9c6:   add    $0x2,%ebx
  0x000077505520a9c9:   mov    %ebx,0xf4(%rdi)
  0x000077505520a9cf:   and    $0x7fe,%ebx
  0x000077505520a9d5:   cmp    $0x0,%ebx
  0x000077505520a9d8:   je     0x000077505520ad8b           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@0 (line 1321)
  0x000077505520a9de:   cmp    (%rdx),%rax                  ; implicit exception: dispatches to 0x000077505520adac
  0x000077505520a9e1:   mov    %rdx,%rdi
  0x000077505520a9e4:   movabs $0x7750202edfe0,%rbx         ;   {metadata(method data for {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520a9ee:   mov    0x8(%rdi),%edi
  0x000077505520a9f1:   movabs $0x800000000,%r10
  0x000077505520a9fb:   add    %r10,%rdi
  0x000077505520a9fe:   cmp    0x148(%rbx),%rdi
  0x000077505520aa05:   jne    0x000077505520aa14
  0x000077505520aa07:   addq   $0x1,0x150(%rbx)
  0x000077505520aa0f:   jmp    0x000077505520aa7a
  0x000077505520aa14:   cmp    0x158(%rbx),%rdi
  0x000077505520aa1b:   jne    0x000077505520aa2a
  0x000077505520aa1d:   addq   $0x1,0x160(%rbx)
  0x000077505520aa25:   jmp    0x000077505520aa7a
  0x000077505520aa2a:   cmpq   $0x0,0x148(%rbx)
  0x000077505520aa35:   jne    0x000077505520aa4e
  0x000077505520aa37:   mov    %rdi,0x148(%rbx)
  0x000077505520aa3e:   movq   $0x1,0x150(%rbx)
  0x000077505520aa49:   jmp    0x000077505520aa7a
  0x000077505520aa4e:   cmpq   $0x0,0x158(%rbx)
  0x000077505520aa59:   jne    0x000077505520aa72
  0x000077505520aa5b:   mov    %rdi,0x158(%rbx)
  0x000077505520aa62:   movq   $0x1,0x160(%rbx)
  0x000077505520aa6d:   jmp    0x000077505520aa7a
  0x000077505520aa72:   addq   $0x1,0x138(%rbx)
  0x000077505520aa7a:   mov    %rdx,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@1 (line 1321)
  0x000077505520aa7d:   movabs $0xffffffffffffffff,%rax
  0x000077505520aa87:   call   0x000077505c788380           ; ImmutableOopMap {[56]=Oop [64]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@1 (line 1321)
                                                            ;   {virtual_call}
  0x000077505520aa8c:   mov    0x38(%rsp),%rsi
  0x000077505520aa91:   mov    0x18(%rsi),%edx
  0x000077505520aa94:   shl    $0x3,%rdx                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@5 (line 1321)
  0x000077505520aa98:   mov    0xc(%rdx),%edx               ; implicit exception: dispatches to 0x000077505520adb1
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@8 (line 1321)
  0x000077505520aa9b:   mov    %rdx,%rdi
  0x000077505520aa9e:   sar    %edi
  0x000077505520aaa0:   movabs $0x7750202edfe0,%rdx         ;   {metadata(method data for {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520aaaa:   addq   $0x1,0x170(%rdx)
  0x000077505520aab2:   movabs $0x775020295760,%rdx         ;   {metadata(method data for {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000077505520aabc:   mov    0xf4(%rdx),%ebx
  0x000077505520aac2:   add    $0x2,%ebx
  0x000077505520aac5:   mov    %ebx,0xf4(%rdx)
  0x000077505520aacb:   and    $0x1ffffe,%ebx
  0x000077505520aad1:   cmp    $0x0,%ebx
  0x000077505520aad4:   je     0x000077505520adb6
  0x000077505520aada:   cmp    $0x80000000,%eax
  0x000077505520aae0:   jne    0x000077505520aaf1
  0x000077505520aae6:   xor    %edx,%edx
  0x000077505520aae8:   cmp    $0xffffffff,%edi
  0x000077505520aaeb:   je     0x000077505520aaf4
  0x000077505520aaf1:   cltd
  0x000077505520aaf2:   idiv   %edi                         ; implicit exception: dispatches to 0x000077505520add7
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@2 (line 1342)
                                                            ; - java.util.ImmutableCollections$MapN::probe@11 (line 1321)
  0x000077505520aaf4:   mov    %rdx,%rbx
  0x000077505520aaf7:   xor    %rdi,%rbx
  0x000077505520aafa:   cmp    $0x0,%ebx
  0x000077505520aafd:   movabs $0x775020295760,%rbx         ;   {metadata(method data for {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000077505520ab07:   movabs $0x138,%rax
  0x000077505520ab11:   jge    0x000077505520ab21
  0x000077505520ab17:   movabs $0x148,%rax
  0x000077505520ab21:   mov    (%rbx,%rax,1),%rcx
  0x000077505520ab25:   lea    0x1(%rcx),%rcx
  0x000077505520ab29:   mov    %rcx,(%rbx,%rax,1)
  0x000077505520ab2d:   jge    0x000077505520ab6e           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@7 (line 1344)
                                                            ; - java.util.ImmutableCollections$MapN::probe@11 (line 1321)
  0x000077505520ab33:   cmp    $0x0,%edx
  0x000077505520ab36:   movabs $0x775020295760,%rbx         ;   {metadata(method data for {method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000077505520ab40:   movabs $0x158,%rax
  0x000077505520ab4a:   je     0x000077505520ab5a
  0x000077505520ab50:   movabs $0x168,%rax
  0x000077505520ab5a:   mov    (%rbx,%rax,1),%rcx
  0x000077505520ab5e:   lea    0x1(%rcx),%rcx
  0x000077505520ab62:   mov    %rcx,(%rbx,%rax,1)
  0x000077505520ab66:   je     0x000077505520ab6e           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@11 (line 1344)
                                                            ; - java.util.ImmutableCollections$MapN::probe@11 (line 1321)
  0x000077505520ab6c:   add    %edi,%edx
  0x000077505520ab6e:   shl    %edx
  0x000077505520ab70:   mov    0x40(%rsp),%rdi
  0x000077505520ab75:   mov    0x18(%rsi),%ebx
  0x000077505520ab78:   shl    $0x3,%rbx                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@18 (line 1324)
  0x000077505520ab7c:   mov    0xc(%rbx),%eax               ; implicit exception: dispatches to 0x000077505520addc
  0x000077505520ab7f:   cmp    %edx,%eax
  0x000077505520ab81:   jbe    0x000077505520ade1
  0x000077505520ab87:   movslq %edx,%rax
  0x000077505520ab8a:   mov    0x10(%rbx,%rax,4),%ebx
  0x000077505520ab8e:   shl    $0x3,%rbx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@22 (line 1324)
  0x000077505520ab92:   cmp    $0x0,%rbx
  0x000077505520ab96:   movabs $0x7750202edfe0,%rax         ;   {metadata(method data for {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520aba0:   movabs $0x190,%rcx
  0x000077505520abaa:   je     0x000077505520abba
  0x000077505520abb0:   movabs $0x180,%rcx
  0x000077505520abba:   mov    (%rax,%rcx,1),%r8
  0x000077505520abbe:   lea    0x1(%r8),%r8
  0x000077505520abc2:   mov    %r8,(%rax,%rcx,1)
  0x000077505520abc6:   je     0x000077505520ad71           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@25 (line 1325)
  0x000077505520abcc:   mov    %edx,0x48(%rsp)
  0x000077505520abd0:   mov    %rdi,%rax
  0x000077505520abd3:   movabs $0x7750202edfe0,%rcx         ;   {metadata(method data for {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520abdd:   mov    0x8(%rax),%eax
  0x000077505520abe0:   movabs $0x800000000,%r10
  0x000077505520abea:   add    %r10,%rax
  0x000077505520abed:   cmp    0x1b0(%rcx),%rax
  0x000077505520abf4:   jne    0x000077505520ac03
  0x000077505520abf6:   addq   $0x1,0x1b8(%rcx)
  0x000077505520abfe:   jmp    0x000077505520ac69
  0x000077505520ac03:   cmp    0x1c0(%rcx),%rax
  0x000077505520ac0a:   jne    0x000077505520ac19
  0x000077505520ac0c:   addq   $0x1,0x1c8(%rcx)
  0x000077505520ac14:   jmp    0x000077505520ac69
  0x000077505520ac19:   cmpq   $0x0,0x1b0(%rcx)
  0x000077505520ac24:   jne    0x000077505520ac3d
  0x000077505520ac26:   mov    %rax,0x1b0(%rcx)
  0x000077505520ac2d:   movq   $0x1,0x1b8(%rcx)
  0x000077505520ac38:   jmp    0x000077505520ac69
  0x000077505520ac3d:   cmpq   $0x0,0x1c0(%rcx)
  0x000077505520ac48:   jne    0x000077505520ac61
  0x000077505520ac4a:   mov    %rax,0x1c0(%rcx)
  0x000077505520ac51:   movq   $0x1,0x1c8(%rcx)
  0x000077505520ac5c:   jmp    0x000077505520ac69
  0x000077505520ac61:   addq   $0x1,0x1a0(%rcx)
  0x000077505520ac69:   mov    %rbx,%rdx
  0x000077505520ac6c:   mov    %rdi,%rsi                    ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@35 (line 1327)
  0x000077505520ac6f:   nopw   0x0(%rax,%rax,1)
  0x000077505520ac75:   movabs $0xffffffffffffffff,%rax
  0x000077505520ac7f:   call   0x000077505c788380           ; ImmutableOopMap {[56]=Oop [64]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@35 (line 1327)
                                                            ;   {virtual_call}
  0x000077505520ac84:   cmp    $0x0,%eax
  0x000077505520ac87:   movabs $0x7750202edfe0,%rax         ;   {metadata(method data for {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520ac91:   movabs $0x1e8,%rsi
  0x000077505520ac9b:   jne    0x000077505520acab
  0x000077505520aca1:   movabs $0x1d8,%rsi
  0x000077505520acab:   mov    (%rax,%rsi,1),%rdi
  0x000077505520acaf:   lea    0x1(%rdi),%rdi
  0x000077505520acb3:   mov    %rdi,(%rax,%rsi,1)
  0x000077505520acb7:   jne    0x000077505520ad57           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@38 (line 1327)
  0x000077505520acbd:   mov    0x38(%rsp),%rsi
  0x000077505520acc2:   mov    0x48(%rsp),%edx
  0x000077505520acc6:   add    $0x2,%edx
  0x000077505520acc9:   mov    0x18(%rsi),%eax
  0x000077505520accc:   shl    $0x3,%rax                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@48 (line 1329)
  0x000077505520acd0:   mov    0xc(%rax),%eax               ; implicit exception: dispatches to 0x000077505520adef
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@51 (line 1329)
  0x000077505520acd3:   cmp    %eax,%edx
  0x000077505520acd5:   movabs $0x7750202edfe0,%rax         ;   {metadata(method data for {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520acdf:   movabs $0x1f8,%rdi
  0x000077505520ace9:   jne    0x000077505520acf9
  0x000077505520acef:   movabs $0x208,%rdi
  0x000077505520acf9:   mov    (%rax,%rdi,1),%rbx
  0x000077505520acfd:   lea    0x1(%rbx),%rbx
  0x000077505520ad01:   mov    %rbx,(%rax,%rdi,1)
  0x000077505520ad05:   jne    0x000077505520ad10           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@52 (line 1329)
  0x000077505520ad0b:   mov    $0x0,%edx
  0x000077505520ad10:   movabs $0x7750202edfe0,%rax         ;   {metadata(method data for {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520ad1a:   mov    0xf8(%rax),%edi
  0x000077505520ad20:   add    $0x2,%edi
  0x000077505520ad23:   mov    %edi,0xf8(%rax)
  0x000077505520ad29:   and    $0x3ffe,%edi
  0x000077505520ad2f:   cmp    $0x0,%edi
  0x000077505520ad32:   je     0x000077505520adf4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@57 (line 1332)
  0x000077505520ad38:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[64]=Oop rsi=Oop [56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$MapN::probe@57 (line 1332)
  0x000077505520ad3f:   test   %eax,(%r10)                  ;   {poll}
  0x000077505520ad42:   movabs $0x7750202edfe0,%rax         ;   {metadata(method data for {method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520ad4c:   incl   0x218(%rax)
  0x000077505520ad52:   jmp    0x000077505520ab70           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@57 (line 1332)
  0x000077505520ad57:   mov    0x48(%rsp),%edx
  0x000077505520ad5b:   mov    %rdx,%rax
  0x000077505520ad5e:   add    $0x60,%rsp
  0x000077505520ad62:   pop    %rbp
  0x000077505520ad63:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520ad6a:   ja     0x000077505520ae15
  0x000077505520ad70:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@42 (line 1328)
  0x000077505520ad71:   neg    %edx
  0x000077505520ad73:   mov    %rdx,%rax
  0x000077505520ad76:   dec    %eax
  0x000077505520ad78:   add    $0x60,%rsp
  0x000077505520ad7c:   pop    %rbp
  0x000077505520ad7d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520ad84:   ja     0x000077505520ae2b
  0x000077505520ad8a:   ret
  0x000077505520ad8b:   movabs $0x775020156190,%r10         ;   {metadata({method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520ad95:   mov    %r10,0x8(%rsp)
  0x000077505520ad9a:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520ada2:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [56]=Oop rdx=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$MapN::probe@-1 (line 1321)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520ada7:   jmp    0x000077505520a9de
  0x000077505520adac:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop [64]=Oop [56]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@1 (line 1321)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520adb1:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop rsi=Oop [56]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@8 (line 1321)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520adb6:   movabs $0x775020189b08,%r10         ;   {metadata({method} {0x0000775020189b08} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000077505520adc0:   mov    %r10,0x8(%rsp)
  0x000077505520adc5:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520adcd:   call   0x000077505c82e680           ; ImmutableOopMap {[64]=Oop rsi=Oop [56]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Math::floorMod@-1 (line 1342)
                                                            ; - java.util.ImmutableCollections$MapN::probe@11 (line 1321)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520add2:   jmp    0x000077505520aada
  0x000077505520add7:   call   0x000077505c8292a0           ; ImmutableOopMap {[64]=Oop rsi=Oop [56]=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::floorMod@2 (line 1342)
                                                            ; - java.util.ImmutableCollections$MapN::probe@11 (line 1321)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000077505520addc:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [56]=Oop rdi=Oop [64]=Oop rbx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@22 (line 1324)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520ade1:   mov    %rdx,(%rsp)
  0x000077505520ade5:   mov    %rbx,0x8(%rsp)
  0x000077505520adea:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [56]=Oop rdi=Oop [64]=Oop rbx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@22 (line 1324)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505520adef:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop rsi=Oop [56]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::probe@51 (line 1329)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520adf4:   movabs $0x775020156190,%r10         ;   {metadata({method} {0x0000775020156190} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520adfe:   mov    %r10,0x8(%rsp)
  0x000077505520ae03:   movq   $0x39,(%rsp)
  0x000077505520ae0b:   call   0x000077505c82e680           ; ImmutableOopMap {[64]=Oop rsi=Oop [56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$MapN::probe@57 (line 1332)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520ae10:   jmp    0x000077505520ad38
  0x000077505520ae15:   movabs $0x77505520ad63,%r10         ;   {internal_word}
  0x000077505520ae1f:   mov    %r10,0x360(%r15)
  0x000077505520ae26:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520ae2b:   movabs $0x77505520ad7d,%r10         ;   {internal_word}
  0x000077505520ae35:   mov    %r10,0x360(%r15)
  0x000077505520ae3c:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520ae41:   nop
  0x000077505520ae42:   nop
  0x000077505520ae43:   mov    0x3d8(%r15),%rax
  0x000077505520ae4a:   movq   $0x0,0x3d8(%r15)
  0x000077505520ae55:   movq   $0x0,0x3e0(%r15)
  0x000077505520ae60:   add    $0x60,%rsp
  0x000077505520ae64:   pop    %rbp
  0x000077505520ae65:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505520ae6a:   hlt
  0x000077505520ae6b:   hlt
  0x000077505520ae6c:   hlt
  0x000077505520ae6d:   hlt
  0x000077505520ae6e:   hlt
  0x000077505520ae6f:   hlt
  0x000077505520ae70:   hlt
  0x000077505520ae71:   hlt
  0x000077505520ae72:   hlt
  0x000077505520ae73:   hlt
  0x000077505520ae74:   hlt
  0x000077505520ae75:   hlt
  0x000077505520ae76:   hlt
  0x000077505520ae77:   hlt
  0x000077505520ae78:   hlt
  0x000077505520ae79:   hlt
  0x000077505520ae7a:   hlt
  0x000077505520ae7b:   hlt
  0x000077505520ae7c:   hlt
  0x000077505520ae7d:   hlt
  0x000077505520ae7e:   hlt
  0x000077505520ae7f:   hlt
[Stub Code]
  0x000077505520ae80:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505520ae85:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520ae8f:   jmp    0x000077505520ae8f           ;   {runtime_call}
  0x000077505520ae94:   nop
  0x000077505520ae95:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520ae9f:   jmp    0x000077505520ae9f           ;   {runtime_call}
[Exception Handler]
  0x000077505520aea4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505520aea9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520aeb3:   and    $0xfffffffffffffff0,%rsp
  0x000077505520aeb7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520aebc:   hlt
[Deopt Handler Code]
  0x000077505520aebd:   movabs $0x77505520aebd,%r10         ;   {section_word}
  0x000077505520aec7:   push   %r10
  0x000077505520aec9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520aece:   hlt
  0x000077505520aecf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     107   36       3       java.util.ImmutableCollections$MapN::get (35 bytes)
 total in heap  [0x000077505520b290,0x000077505520ba68] = 2008
 relocation     [0x000077505520b3f0,0x000077505520b468] = 120
 main code      [0x000077505520b480,0x000077505520b7e0] = 864
 stub code      [0x000077505520b7e0,0x000077505520b830] = 80
 metadata       [0x000077505520b830,0x000077505520b840] = 16
 scopes data    [0x000077505520b840,0x000077505520b8e0] = 160
 scopes pcs     [0x000077505520b8e0,0x000077505520ba50] = 368
 dependencies   [0x000077505520ba50,0x000077505520ba58] = 8
 nul chk table  [0x000077505520ba58,0x000077505520ba68] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020155e98} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/ImmutableCollections$MapN'
  # this:     rsi:rsi   = 'java/util/ImmutableCollections$MapN'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x000077505520b480:   mov    0x8(%rsi),%r10d
  0x000077505520b484:   movabs $0x800000000,%r11
  0x000077505520b48e:   add    %r11,%r10
  0x000077505520b491:   cmp    %rax,%r10
  0x000077505520b494:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520b49a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505520b4a0:   mov    %eax,-0x14000(%rsp)
  0x000077505520b4a7:   push   %rbp
  0x000077505520b4a8:   sub    $0x50,%rsp
  0x000077505520b4ac:   movabs $0x7750202ee370,%rdi         ;   {metadata(method data for {method} {0x0000775020155e98} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520b4b6:   mov    0xf4(%rdi),%ebx
  0x000077505520b4bc:   add    $0x2,%ebx
  0x000077505520b4bf:   mov    %ebx,0xf4(%rdi)
  0x000077505520b4c5:   and    $0x7fe,%ebx
  0x000077505520b4cb:   cmp    $0x0,%ebx
  0x000077505520b4ce:   je     0x000077505520b6ee           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@0 (line 1231)
  0x000077505520b4d4:   mov    0x14(%rsi),%edi              ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@1 (line 1231)
  0x000077505520b4d7:   cmp    $0x0,%edi
  0x000077505520b4da:   movabs $0x7750202ee370,%rdi         ;   {metadata(method data for {method} {0x0000775020155e98} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520b4e4:   movabs $0x138,%rbx
  0x000077505520b4ee:   jne    0x000077505520b4fe
  0x000077505520b4f4:   movabs $0x148,%rbx
  0x000077505520b4fe:   mov    (%rdi,%rbx,1),%rax
  0x000077505520b502:   lea    0x1(%rax),%rax
  0x000077505520b506:   mov    %rax,(%rdi,%rbx,1)
  0x000077505520b50a:   jne    0x000077505520b589           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@4 (line 1231)
  0x000077505520b510:   movabs $0x7750202ee370,%rsi         ;   {metadata(method data for {method} {0x0000775020155e98} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520b51a:   addq   $0x1,0x158(%rsi)
  0x000077505520b522:   movabs $0x77502029f510,%rsi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520b52c:   mov    0xf4(%rsi),%edi
  0x000077505520b532:   add    $0x2,%edi
  0x000077505520b535:   mov    %edi,0xf4(%rsi)
  0x000077505520b53b:   and    $0x1ffffe,%edi
  0x000077505520b541:   cmp    $0x0,%edi
  0x000077505520b544:   je     0x000077505520b70f
  0x000077505520b54a:   cmp    $0x0,%rdx
  0x000077505520b54e:   movabs $0x77502029f510,%rdx         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520b558:   movabs $0x138,%rsi
  0x000077505520b562:   jne    0x000077505520b572
  0x000077505520b568:   movabs $0x148,%rsi
  0x000077505520b572:   mov    (%rdx,%rsi,1),%rdi
  0x000077505520b576:   lea    0x1(%rdi),%rdi
  0x000077505520b57a:   mov    %rdi,(%rdx,%rsi,1)
  0x000077505520b57e:   jne    0x000077505520b641
  0x000077505520b584:   jmp    0x000077505520b65e           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@1 (line 208)
                                                            ; - java.util.ImmutableCollections$MapN::get@8 (line 1232)
  0x000077505520b589:   mov    %rsi,%rdi
  0x000077505520b58c:   movabs $0x7750202ee370,%rbx         ;   {metadata(method data for {method} {0x0000775020155e98} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520b596:   addq   $0x1,0x168(%rbx)
  0x000077505520b59e:   mov    %rsi,%rdi
  0x000077505520b5a1:   mov    %rdi,%rsi                    ;*invokevirtual probe {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@16 (line 1235)
  0x000077505520b5a4:   mov    %rdi,0x38(%rsp)
  0x000077505520b5a9:   nopw   0x0(%rax,%rax,1)
  0x000077505520b5af:   call   0x000077505c788080           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokevirtual probe {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@16 (line 1235)
                                                            ;   {optimized virtual_call}
  0x000077505520b5b4:   cmp    $0x0,%eax
  0x000077505520b5b7:   movabs $0x7750202ee370,%rdx         ;   {metadata(method data for {method} {0x0000775020155e98} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520b5c1:   movabs $0x1a0,%rsi
  0x000077505520b5cb:   jl     0x000077505520b5db
  0x000077505520b5d1:   movabs $0x1b0,%rsi
  0x000077505520b5db:   mov    (%rdx,%rsi,1),%rdi
  0x000077505520b5df:   lea    0x1(%rdi),%rdi
  0x000077505520b5e3:   mov    %rdi,(%rdx,%rsi,1)
  0x000077505520b5e7:   jl     0x000077505520b624           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@21 (line 1236)
  0x000077505520b5ed:   mov    0x38(%rsp),%rsi
  0x000077505520b5f2:   mov    0x18(%rsi),%edx
  0x000077505520b5f5:   shl    $0x3,%rdx                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@25 (line 1237)
  0x000077505520b5f9:   mov    0xc(%rdx),%esi               ; implicit exception: dispatches to 0x000077505520b730
  0x000077505520b5fc:   inc    %eax
  0x000077505520b5fe:   cmp    %eax,%esi
  0x000077505520b600:   jbe    0x000077505520b735
  0x000077505520b606:   movslq %eax,%rax
  0x000077505520b609:   mov    0x10(%rdx,%rax,4),%eax
  0x000077505520b60d:   shl    $0x3,%rax                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@31 (line 1237)
  0x000077505520b611:   add    $0x50,%rsp
  0x000077505520b615:   pop    %rbp
  0x000077505520b616:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520b61d:   ja     0x000077505520b743
  0x000077505520b623:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@32 (line 1237)
  0x000077505520b624:   movabs $0x0,%rax                    ;   {oop(NULL)}
  0x000077505520b62e:   add    $0x50,%rsp
  0x000077505520b632:   pop    %rbp
  0x000077505520b633:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520b63a:   ja     0x000077505520b759
  0x000077505520b640:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@34 (line 1239)
  0x000077505520b641:   movabs $0x0,%rax                    ;   {oop(NULL)}
  0x000077505520b64b:   add    $0x50,%rsp
  0x000077505520b64f:   pop    %rbp
  0x000077505520b650:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520b657:   ja     0x000077505520b76f
  0x000077505520b65d:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@13 (line 1233)
  0x000077505520b65e:   xchg   %ax,%ax
  0x000077505520b660:   jmp    0x000077505520b794           ;   {no_reloc}
  0x000077505520b665:   add    %al,(%rax)
  0x000077505520b667:   add    %al,(%rax)
  0x000077505520b669:   add    %cl,-0x75(%rcx)
  0x000077505520b66c:   xchg   %ecx,(%rax)
  0x000077505520b66e:   add    %eax,(%rax)
  0x000077505520b670:   add    %cl,-0x73(%rax)
  0x000077505520b673:   js     0x000077505520b6a5
  0x000077505520b675:   cmp    0x118(%r15),%rdi
  0x000077505520b67c:   ja     0x000077505520b79e
  0x000077505520b682:   mov    %rdi,0x108(%r15)
  0x000077505520b689:   movq   $0x1,(%rax)
  0x000077505520b690:   mov    %rdx,%rcx
  0x000077505520b693:   movabs $0x800000000,%r10
  0x000077505520b69d:   sub    %r10,%rcx
  0x000077505520b6a0:   mov    %ecx,0x8(%rax)
  0x000077505520b6a3:   xor    %rcx,%rcx
  0x000077505520b6a6:   mov    %ecx,0xc(%rax)
  0x000077505520b6a9:   xor    %rcx,%rcx
  0x000077505520b6ac:   mov    %rcx,0x10(%rax)
  0x000077505520b6b0:   mov    %rcx,0x18(%rax)
  0x000077505520b6b4:   mov    %rcx,0x20(%rax)
  0x000077505520b6b8:   mov    %rcx,0x28(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.ImmutableCollections$MapN::get@8 (line 1232)
  0x000077505520b6bc:   mov    %rax,%rsi
  0x000077505520b6bf:   movabs $0x77502029f510,%rdi         ;   {metadata(method data for {method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520b6c9:   addq   $0x1,0x158(%rdi)
  0x000077505520b6d1:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
                                                            ; - java.util.ImmutableCollections$MapN::get@8 (line 1232)
  0x000077505520b6d4:   mov    %rax,0x40(%rsp)
  0x000077505520b6d9:   nopw   0x0(%rax,%rax,1)
  0x000077505520b6df:   call   0x000077505c788080           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@8 (line 209)
                                                            ; - java.util.ImmutableCollections$MapN::get@8 (line 1232)
                                                            ;   {optimized virtual_call}
  0x000077505520b6e4:   mov    0x40(%rsp),%rax
  0x000077505520b6e9:   jmp    0x000077505520b7ca
  0x000077505520b6ee:   movabs $0x775020155e98,%r10         ;   {metadata({method} {0x0000775020155e98} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/ImmutableCollections$MapN')}
  0x000077505520b6f8:   mov    %r10,0x8(%rsp)
  0x000077505520b6fd:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520b705:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$MapN::get@-1 (line 1231)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520b70a:   jmp    0x000077505520b4d4
  0x000077505520b70f:   movabs $0x77502014e748,%r10         ;   {metadata({method} {0x000077502014e748} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000077505520b719:   mov    %r10,0x8(%rsp)
  0x000077505520b71e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520b726:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::requireNonNull@-1 (line 208)
                                                            ; - java.util.ImmutableCollections$MapN::get@8 (line 1232)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520b72b:   jmp    0x000077505520b54a
  0x000077505520b730:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@31 (line 1237)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520b735:   mov    %rax,(%rsp)
  0x000077505520b739:   mov    %rdx,0x8(%rsp)
  0x000077505520b73e:   call   0x000077505c828ca0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$MapN::get@31 (line 1237)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505520b743:   movabs $0x77505520b616,%r10         ;   {internal_word}
  0x000077505520b74d:   mov    %r10,0x360(%r15)
  0x000077505520b754:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520b759:   movabs $0x77505520b633,%r10         ;   {internal_word}
  0x000077505520b763:   mov    %r10,0x360(%r15)
  0x000077505520b76a:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520b76f:   movabs $0x77505520b650,%r10         ;   {internal_word}
  0x000077505520b779:   mov    %r10,0x360(%r15)
  0x000077505520b780:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520b785:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505520b78f:   mov    $0xa050f00,%eax
  0x000077505520b794:   call   0x000077505c82d600           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.ImmutableCollections$MapN::get@8 (line 1232)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505520b799:   jmp    0x000077505520b660
  0x000077505520b79e:   mov    %rdx,%rdx
  0x000077505520b7a1:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::requireNonNull@4 (line 209)
                                                            ; - java.util.ImmutableCollections$MapN::get@8 (line 1232)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505520b7a6:   jmp    0x000077505520b6bc
  0x000077505520b7ab:   nop
  0x000077505520b7ac:   nop
  0x000077505520b7ad:   mov    0x3d8(%r15),%rax
  0x000077505520b7b4:   movq   $0x0,0x3d8(%r15)
  0x000077505520b7bf:   movq   $0x0,0x3e0(%r15)
  0x000077505520b7ca:   add    $0x50,%rsp
  0x000077505520b7ce:   pop    %rbp
  0x000077505520b7cf:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505520b7d4:   hlt
  0x000077505520b7d5:   hlt
  0x000077505520b7d6:   hlt
  0x000077505520b7d7:   hlt
  0x000077505520b7d8:   hlt
  0x000077505520b7d9:   hlt
  0x000077505520b7da:   hlt
  0x000077505520b7db:   hlt
  0x000077505520b7dc:   hlt
  0x000077505520b7dd:   hlt
  0x000077505520b7de:   hlt
  0x000077505520b7df:   hlt
[Stub Code]
  0x000077505520b7e0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505520b7e5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520b7ef:   jmp    0x000077505520b7ef           ;   {runtime_call}
  0x000077505520b7f4:   nop
  0x000077505520b7f5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520b7ff:   jmp    0x000077505520b7ff           ;   {runtime_call}
[Exception Handler]
  0x000077505520b804:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505520b809:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520b813:   and    $0xfffffffffffffff0,%rsp
  0x000077505520b817:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520b81c:   hlt
[Deopt Handler Code]
  0x000077505520b81d:   movabs $0x77505520b81d,%r10         ;   {section_word}
  0x000077505520b827:   push   %r10
  0x000077505520b829:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520b82e:   hlt
  0x000077505520b82f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     111   37       3       jdk.internal.module.ModuleReferenceImpl::hashCode (56 bytes)
 total in heap  [0x000077505520ba90,0x000077505520c430] = 2464
 relocation     [0x000077505520bbf0,0x000077505520bc70] = 128
 main code      [0x000077505520bc80,0x000077505520c0a0] = 1056
 stub code      [0x000077505520c0a0,0x000077505520c100] = 96
 metadata       [0x000077505520c100,0x000077505520c128] = 40
 scopes data    [0x000077505520c128,0x000077505520c228] = 256
 scopes pcs     [0x000077505520c228,0x000077505520c408] = 480
 dependencies   [0x000077505520c408,0x000077505520c410] = 8
 nul chk table  [0x000077505520c410,0x000077505520c430] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202a8018} 'hashCode' '()I' in 'jdk/internal/module/ModuleReferenceImpl'
  #           [sp+0x50]  (sp of caller)
  0x000077505520bc80:   mov    0x8(%rsi),%r10d
  0x000077505520bc84:   movabs $0x800000000,%r11
  0x000077505520bc8e:   add    %r11,%r10
  0x000077505520bc91:   cmp    %rax,%r10
  0x000077505520bc94:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520bc9a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505520bca0:   mov    %eax,-0x14000(%rsp)
  0x000077505520bca7:   push   %rbp
  0x000077505520bca8:   sub    $0x40,%rsp
  0x000077505520bcac:   mov    %rsi,0x28(%rsp)
  0x000077505520bcb1:   movabs $0x7750202ee5e8,%rdi         ;   {metadata(method data for {method} {0x00007750202a8018} 'hashCode' '()I' in 'jdk/internal/module/ModuleReferenceImpl')}
  0x000077505520bcbb:   mov    0xf4(%rdi),%ebx
  0x000077505520bcc1:   add    $0x2,%ebx
  0x000077505520bcc4:   mov    %ebx,0xf4(%rdi)
  0x000077505520bcca:   and    $0x7fe,%ebx
  0x000077505520bcd0:   cmp    $0x0,%ebx
  0x000077505520bcd3:   je     0x000077505520bfe3           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@0 (line 153)
  0x000077505520bcd9:   mov    0x14(%rsi),%edi              ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@1 (line 153)
  0x000077505520bcdc:   cmp    $0x0,%edi
  0x000077505520bcdf:   movabs $0x7750202ee5e8,%rbx         ;   {metadata(method data for {method} {0x00007750202a8018} 'hashCode' '()I' in 'jdk/internal/module/ModuleReferenceImpl')}
  0x000077505520bce9:   movabs $0x138,%rax
  0x000077505520bcf3:   jne    0x000077505520bd03
  0x000077505520bcf9:   movabs $0x148,%rax
  0x000077505520bd03:   mov    (%rbx,%rax,1),%rdx
  0x000077505520bd07:   lea    0x1(%rdx),%rdx
  0x000077505520bd0b:   mov    %rdx,(%rbx,%rax,1)
  0x000077505520bd0f:   jne    0x000077505520bfcd           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@6 (line 154)
  0x000077505520bd15:   mov    %rsi,%rdi
  0x000077505520bd18:   movabs $0x7750202ee5e8,%rbx         ;   {metadata(method data for {method} {0x00007750202a8018} 'hashCode' '()I' in 'jdk/internal/module/ModuleReferenceImpl')}
  0x000077505520bd22:   addq   $0x1,0x158(%rbx)
  0x000077505520bd2a:   mov    0xc(%rsi),%edi
  0x000077505520bd2d:   shl    $0x3,%rdi                    ;*getfield descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleReference::descriptor@1 (line 73)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@10 (line 155)
  0x000077505520bd31:   cmp    (%rdi),%rax                  ; implicit exception: dispatches to 0x000077505520c004
  0x000077505520bd34:   mov    %rdi,%rbx
  0x000077505520bd37:   movabs $0x7750202ee5e8,%rax         ;   {metadata(method data for {method} {0x00007750202a8018} 'hashCode' '()I' in 'jdk/internal/module/ModuleReferenceImpl')}
  0x000077505520bd41:   movabs $0x80006fd28,%r10            ;   {metadata('java/lang/module/ModuleDescriptor')}
  0x000077505520bd4b:   mov    %r10,0x1a0(%rax)
  0x000077505520bd52:   addq   $0x1,0x1a8(%rax)
  0x000077505520bd5a:   mov    %rdi,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@13 (line 155)
  0x000077505520bd5d:   xchg   %ax,%ax
  0x000077505520bd5f:   call   0x000077505c788080           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@13 (line 155)
                                                            ;   {optimized virtual_call}
  0x000077505520bd64:   mov    $0x2b,%esi
  0x000077505520bd69:   imul   %esi,%eax
  0x000077505520bd6c:   mov    0x28(%rsp),%rsi
  0x000077505520bd71:   mov    0x18(%rsi),%edi
  0x000077505520bd74:   shl    $0x3,%rdi                    ;*getfield location {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@22 (line 156)
  0x000077505520bd78:   movabs $0x7750202ee5e8,%rbx         ;   {metadata(method data for {method} {0x00007750202a8018} 'hashCode' '()I' in 'jdk/internal/module/ModuleReferenceImpl')}
  0x000077505520bd82:   addq   $0x1,0x1c8(%rbx)
  0x000077505520bd8a:   movabs $0x77502029ec70,%rbx         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520bd94:   mov    0xf4(%rbx),%edx
  0x000077505520bd9a:   add    $0x2,%edx
  0x000077505520bd9d:   mov    %edx,0xf4(%rbx)
  0x000077505520bda3:   and    $0x1ffffe,%edx
  0x000077505520bda9:   cmp    $0x0,%edx
  0x000077505520bdac:   je     0x000077505520c009
  0x000077505520bdb2:   cmp    $0x0,%rdi
  0x000077505520bdb6:   movabs $0x77502029ec70,%rbx         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520bdc0:   movabs $0x138,%rdx
  0x000077505520bdca:   je     0x000077505520bdda
  0x000077505520bdd0:   movabs $0x148,%rdx
  0x000077505520bdda:   mov    (%rbx,%rdx,1),%rcx
  0x000077505520bdde:   lea    0x1(%rcx),%rcx
  0x000077505520bde2:   mov    %rcx,(%rbx,%rdx,1)
  0x000077505520bde6:   mov    %eax,0x30(%rsp)
  0x000077505520bdea:   je     0x000077505520be29           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@1 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@25 (line 156)
  0x000077505520bdf0:   cmp    (%rdi),%rax                  ; implicit exception: dispatches to 0x000077505520c02a
  0x000077505520bdf3:   mov    %rdi,%rbx
  0x000077505520bdf6:   movabs $0x77502029ec70,%rdx         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520be00:   addq   $0x1,0x158(%rdx)
  0x000077505520be08:   mov    %rdi,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@5 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@25 (line 156)
  0x000077505520be0b:   nopl   0x0(%rax)
  0x000077505520be0f:   call   0x000077505c788080           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@5 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@25 (line 156)
                                                            ;   {optimized virtual_call}
  0x000077505520be14:   movabs $0x77502029ec70,%rsi         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520be1e:   incl   0x190(%rsi)
  0x000077505520be24:   jmp    0x000077505520be2e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@8 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@25 (line 156)
  0x000077505520be29:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@12 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@25 (line 156)
  0x000077505520be2e:   mov    0x30(%rsp),%esi
  0x000077505520be32:   mov    0x28(%rsp),%rdi
  0x000077505520be37:   add    %esi,%eax
  0x000077505520be39:   mov    $0x2b,%esi
  0x000077505520be3e:   imul   %esi,%eax
  0x000077505520be41:   mov    0x20(%rdi),%esi
  0x000077505520be44:   shl    $0x3,%rsi                    ;*getfield patcher {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@35 (line 157)
  0x000077505520be48:   movabs $0x7750202ee5e8,%rbx         ;   {metadata(method data for {method} {0x00007750202a8018} 'hashCode' '()I' in 'jdk/internal/module/ModuleReferenceImpl')}
  0x000077505520be52:   addq   $0x1,0x1d8(%rbx)
  0x000077505520be5a:   movabs $0x77502029ec70,%rbx         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520be64:   mov    0xf4(%rbx),%edx
  0x000077505520be6a:   add    $0x2,%edx
  0x000077505520be6d:   mov    %edx,0xf4(%rbx)
  0x000077505520be73:   and    $0x1ffffe,%edx
  0x000077505520be79:   cmp    $0x0,%edx
  0x000077505520be7c:   je     0x000077505520c02f
  0x000077505520be82:   cmp    $0x0,%rsi
  0x000077505520be86:   movabs $0x77502029ec70,%rbx         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520be90:   movabs $0x138,%rdx
  0x000077505520be9a:   je     0x000077505520beaa
  0x000077505520bea0:   movabs $0x148,%rdx
  0x000077505520beaa:   mov    (%rbx,%rdx,1),%rcx
  0x000077505520beae:   lea    0x1(%rcx),%rcx
  0x000077505520beb2:   mov    %rcx,(%rbx,%rdx,1)
  0x000077505520beb6:   mov    %eax,0x34(%rsp)
  0x000077505520beba:   je     0x000077505520bf79           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@1 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@38 (line 157)
  0x000077505520bec0:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x000077505520c050
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@5 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@38 (line 157)
  0x000077505520bec3:   mov    %rsi,%rbx
  0x000077505520bec6:   movabs $0x77502029ec70,%rdx         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520bed0:   mov    0x8(%rbx),%ebx
  0x000077505520bed3:   movabs $0x800000000,%r10
  0x000077505520bedd:   add    %r10,%rbx
  0x000077505520bee0:   cmp    0x168(%rdx),%rbx
  0x000077505520bee7:   jne    0x000077505520bef6
  0x000077505520bee9:   addq   $0x1,0x170(%rdx)
  0x000077505520bef1:   jmp    0x000077505520bf5c
  0x000077505520bef6:   cmp    0x178(%rdx),%rbx
  0x000077505520befd:   jne    0x000077505520bf0c
  0x000077505520beff:   addq   $0x1,0x180(%rdx)
  0x000077505520bf07:   jmp    0x000077505520bf5c
  0x000077505520bf0c:   cmpq   $0x0,0x168(%rdx)
  0x000077505520bf17:   jne    0x000077505520bf30
  0x000077505520bf19:   mov    %rbx,0x168(%rdx)
  0x000077505520bf20:   movq   $0x1,0x170(%rdx)
  0x000077505520bf2b:   jmp    0x000077505520bf5c
  0x000077505520bf30:   cmpq   $0x0,0x178(%rdx)
  0x000077505520bf3b:   jne    0x000077505520bf54
  0x000077505520bf3d:   mov    %rbx,0x178(%rdx)
  0x000077505520bf44:   movq   $0x1,0x180(%rdx)
  0x000077505520bf4f:   jmp    0x000077505520bf5c
  0x000077505520bf54:   addq   $0x1,0x158(%rdx)
  0x000077505520bf5c:   data16 xchg %ax,%ax
  0x000077505520bf5f:   call   0x000077505c788080           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@5 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@38 (line 157)
                                                            ;   {optimized virtual_call}
  0x000077505520bf64:   movabs $0x77502029ec70,%rsi         ;   {metadata(method data for {method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520bf6e:   incl   0x190(%rsi)
  0x000077505520bf74:   jmp    0x000077505520bf7e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@8 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@38 (line 157)
  0x000077505520bf79:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@12 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@38 (line 157)
  0x000077505520bf7e:   mov    0x34(%rsp),%esi
  0x000077505520bf82:   add    %esi,%eax
  0x000077505520bf84:   cmp    $0x0,%eax
  0x000077505520bf87:   movabs $0x7750202ee5e8,%rsi         ;   {metadata(method data for {method} {0x00007750202a8018} 'hashCode' '()I' in 'jdk/internal/module/ModuleReferenceImpl')}
  0x000077505520bf91:   movabs $0x1e8,%rdi
  0x000077505520bf9b:   jne    0x000077505520bfab
  0x000077505520bfa1:   movabs $0x1f8,%rdi
  0x000077505520bfab:   mov    (%rsi,%rdi,1),%rbx
  0x000077505520bfaf:   lea    0x1(%rbx),%rbx
  0x000077505520bfb3:   mov    %rbx,(%rsi,%rdi,1)
  0x000077505520bfb7:   jne    0x000077505520bfc2           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@44 (line 158)
  0x000077505520bfbd:   mov    $0xffffffff,%eax             ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@49 (line 160)
  0x000077505520bfc2:   mov    0x28(%rsp),%rsi
  0x000077505520bfc7:   mov    %eax,0x14(%rsi)              ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@51 (line 160)
  0x000077505520bfca:   mov    %rax,%rdi                    ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@54 (line 162)
  0x000077505520bfcd:   mov    %rdi,%rax
  0x000077505520bfd0:   add    $0x40,%rsp
  0x000077505520bfd4:   pop    %rbp
  0x000077505520bfd5:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520bfdc:   ja     0x000077505520c055
  0x000077505520bfe2:   ret
  0x000077505520bfe3:   movabs $0x7750202a8018,%r10         ;   {metadata({method} {0x00007750202a8018} 'hashCode' '()I' in 'jdk/internal/module/ModuleReferenceImpl')}
  0x000077505520bfed:   mov    %r10,0x8(%rsp)
  0x000077505520bff2:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520bffa:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@-1 (line 153)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520bfff:   jmp    0x000077505520bcd9
  0x000077505520c004:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [40]=Oop rdi=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@13 (line 155)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520c009:   movabs $0x77502014e3d0,%r10         ;   {metadata({method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520c013:   mov    %r10,0x8(%rsp)
  0x000077505520c018:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520c020:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [40]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::hashCode@-1 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@25 (line 156)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520c025:   jmp    0x000077505520bdb2
  0x000077505520c02a:   call   0x000077505c8295a0           ; ImmutableOopMap {rdi=Oop [40]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@5 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@25 (line 156)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520c02f:   movabs $0x77502014e3d0,%r10         ;   {metadata({method} {0x000077502014e3d0} 'hashCode' '(Ljava/lang/Object;)I' in 'java/util/Objects')}
  0x000077505520c039:   mov    %r10,0x8(%rsp)
  0x000077505520c03e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520c046:   call   0x000077505c82e680           ; ImmutableOopMap {rdi=Oop [40]=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Objects::hashCode@-1 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@38 (line 157)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520c04b:   jmp    0x000077505520be82
  0x000077505520c050:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Objects::hashCode@5 (line 103)
                                                            ; - jdk.internal.module.ModuleReferenceImpl::hashCode@38 (line 157)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520c055:   movabs $0x77505520bfd5,%r10         ;   {internal_word}
  0x000077505520c05f:   mov    %r10,0x360(%r15)
  0x000077505520c066:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520c06b:   nop
  0x000077505520c06c:   nop
  0x000077505520c06d:   mov    0x3d8(%r15),%rax
  0x000077505520c074:   movq   $0x0,0x3d8(%r15)
  0x000077505520c07f:   movq   $0x0,0x3e0(%r15)
  0x000077505520c08a:   add    $0x40,%rsp
  0x000077505520c08e:   pop    %rbp
  0x000077505520c08f:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505520c094:   hlt
  0x000077505520c095:   hlt
  0x000077505520c096:   hlt
  0x000077505520c097:   hlt
  0x000077505520c098:   hlt
  0x000077505520c099:   hlt
  0x000077505520c09a:   hlt
  0x000077505520c09b:   hlt
  0x000077505520c09c:   hlt
  0x000077505520c09d:   hlt
  0x000077505520c09e:   hlt
  0x000077505520c09f:   hlt
[Stub Code]
  0x000077505520c0a0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505520c0a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520c0af:   jmp    0x000077505520c0af           ;   {runtime_call}
  0x000077505520c0b4:   nop
  0x000077505520c0b5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520c0bf:   jmp    0x000077505520c0bf           ;   {runtime_call}
  0x000077505520c0c4:   nop
  0x000077505520c0c5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520c0cf:   jmp    0x000077505520c0cf           ;   {runtime_call}
[Exception Handler]
  0x000077505520c0d4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505520c0d9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520c0e3:   and    $0xfffffffffffffff0,%rsp
  0x000077505520c0e7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520c0ec:   hlt
[Deopt Handler Code]
  0x000077505520c0ed:   movabs $0x77505520c0ed,%r10         ;   {section_word}
  0x000077505520c0f7:   push   %r10
  0x000077505520c0f9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520c0fe:   hlt
  0x000077505520c0ff:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     115   38       3       java.util.ImmutableCollections$SetN$SetNIterator::<init> (36 bytes)
 total in heap  [0x000077505520c490,0x000077505520c9a8] = 1304
 relocation     [0x000077505520c5f0,0x000077505520c630] = 64
 main code      [0x000077505520c640,0x000077505520c820] = 480
 stub code      [0x000077505520c820,0x000077505520c850] = 48
 metadata       [0x000077505520c850,0x000077505520c860] = 16
 scopes data    [0x000077505520c860,0x000077505520c8b8] = 88
 scopes pcs     [0x000077505520c8b8,0x000077505520c988] = 208
 dependencies   [0x000077505520c988,0x000077505520c990] = 8
 nul chk table  [0x000077505520c990,0x000077505520c9a8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202942f0} '<init>' '(Ljava/util/ImmutableCollections$SetN;)V' in 'java/util/ImmutableCollections$SetN$SetNIterator'
  # this:     rsi:rsi   = 'java/util/ImmutableCollections$SetN$SetNIterator'
  # parm0:    rdx:rdx   = 'java/util/ImmutableCollections$SetN'
  #           [sp+0x50]  (sp of caller)
  0x000077505520c640:   mov    0x8(%rsi),%r10d
  0x000077505520c644:   movabs $0x800000000,%r11
  0x000077505520c64e:   add    %r11,%r10
  0x000077505520c651:   cmp    %rax,%r10
  0x000077505520c654:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520c65a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505520c660:   mov    %eax,-0x14000(%rsp)
  0x000077505520c667:   push   %rbp
  0x000077505520c668:   sub    $0x40,%rsp
  0x000077505520c66c:   movabs $0x77502029efc8,%rax         ;   {metadata(method data for {method} {0x00007750202942f0} '<init>' '(Ljava/util/ImmutableCollections$SetN;)V' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x000077505520c676:   mov    0xf4(%rax),%ecx
  0x000077505520c67c:   add    $0x2,%ecx
  0x000077505520c67f:   mov    %ecx,0xf4(%rax)
  0x000077505520c685:   and    $0x7fe,%ecx
  0x000077505520c68b:   cmp    $0x0,%ecx
  0x000077505520c68e:   je     0x000077505520c73f           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@0 (line 947)
  0x000077505520c694:   movsbl 0x38(%r15),%eax
  0x000077505520c699:   cmp    $0x0,%eax
  0x000077505520c69c:   jne    0x000077505520c760
  0x000077505520c6a2:   mov    %rdx,%r10
  0x000077505520c6a5:   shr    $0x3,%r10
  0x000077505520c6a9:   mov    %r10d,0x14(%rsi)
  0x000077505520c6ad:   mov    %rsi,%rax
  0x000077505520c6b0:   xor    %rdx,%rax
  0x000077505520c6b3:   shr    $0x16,%rax
  0x000077505520c6b7:   cmp    $0x0,%rax
  0x000077505520c6bb:   jne    0x000077505520c77f           ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@2 (line 947)
  0x000077505520c6c1:   mov    %rsi,%rax
  0x000077505520c6c4:   movabs $0x77502029efc8,%rcx         ;   {metadata(method data for {method} {0x00007750202942f0} '<init>' '(Ljava/util/ImmutableCollections$SetN;)V' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x000077505520c6ce:   addq   $0x1,0x138(%rcx)
  0x000077505520c6d6:   movabs $0x77502024ca78,%rax         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505520c6e0:   mov    0xf4(%rax),%ecx
  0x000077505520c6e6:   add    $0x2,%ecx
  0x000077505520c6e9:   mov    %ecx,0xf4(%rax)
  0x000077505520c6ef:   and    $0x1ffffe,%ecx
  0x000077505520c6f5:   cmp    $0x0,%ecx
  0x000077505520c6f8:   je     0x000077505520c797
  0x000077505520c6fe:   mov    0xc(%rdx),%eax               ; implicit exception: dispatches to 0x000077505520c7b8
                                                            ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@11 (line 948)
  0x000077505520c701:   mov    %eax,0xc(%rsi)               ;*putfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@14 (line 948)
  0x000077505520c704:   mov    0x10(%rdx),%eax
  0x000077505520c707:   shl    $0x3,%rax                    ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@22 (line 951)
  0x000077505520c70b:   mov    0xc(%rax),%eax               ; implicit exception: dispatches to 0x000077505520c7bd
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@25 (line 951)
  0x000077505520c70e:   movslq %eax,%rax
  0x000077505520c711:   movabs $0x9f81b472,%rcx
  0x000077505520c71b:   imul   %rcx,%rax
  0x000077505520c71f:   mov    $0x20,%ecx
  0x000077505520c724:   shr    %cl,%rax
  0x000077505520c727:   mov    %eax,%eax
  0x000077505520c729:   mov    %eax,0x10(%rsi)              ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@32 (line 951)
  0x000077505520c72c:   add    $0x40,%rsp
  0x000077505520c730:   pop    %rbp
  0x000077505520c731:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520c738:   ja     0x000077505520c7c2
  0x000077505520c73e:   ret
  0x000077505520c73f:   movabs $0x7750202942f0,%r10         ;   {metadata({method} {0x00007750202942f0} '<init>' '(Ljava/util/ImmutableCollections$SetN;)V' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x000077505520c749:   mov    %r10,0x8(%rsp)
  0x000077505520c74e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520c756:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@-1 (line 947)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520c75b:   jmp    0x000077505520c694
  0x000077505520c760:   mov    0x14(%rsi),%eax
  0x000077505520c763:   shl    $0x3,%rax
  0x000077505520c767:   cmp    $0x0,%rax
  0x000077505520c76b:   je     0x000077505520c6a2
  0x000077505520c771:   mov    %rax,(%rsp)
  0x000077505520c775:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520c77a:   jmp    0x000077505520c6a2
  0x000077505520c77f:   cmp    $0x0,%rdx
  0x000077505520c783:   je     0x000077505520c6c1
  0x000077505520c789:   mov    %rsi,(%rsp)
  0x000077505520c78d:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520c792:   jmp    0x000077505520c6c1
  0x000077505520c797:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505520c7a1:   mov    %r10,0x8(%rsp)
  0x000077505520c7a6:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520c7ae:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@6 (line 947)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520c7b3:   jmp    0x000077505520c6fe
  0x000077505520c7b8:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$SetN$SetNIterator::<init>@11 (line 948)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520c7bd:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN$SetNIterator::<init>@25 (line 951)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520c7c2:   movabs $0x77505520c731,%r10         ;   {internal_word}
  0x000077505520c7cc:   mov    %r10,0x360(%r15)
  0x000077505520c7d3:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520c7d8:   nop
  0x000077505520c7d9:   nop
  0x000077505520c7da:   mov    0x3d8(%r15),%rax
  0x000077505520c7e1:   movq   $0x0,0x3d8(%r15)
  0x000077505520c7ec:   movq   $0x0,0x3e0(%r15)
  0x000077505520c7f7:   add    $0x40,%rsp
  0x000077505520c7fb:   pop    %rbp
  0x000077505520c7fc:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505520c801:   hlt
  0x000077505520c802:   hlt
  0x000077505520c803:   hlt
  0x000077505520c804:   hlt
  0x000077505520c805:   hlt
  0x000077505520c806:   hlt
  0x000077505520c807:   hlt
  0x000077505520c808:   hlt
  0x000077505520c809:   hlt
  0x000077505520c80a:   hlt
  0x000077505520c80b:   hlt
  0x000077505520c80c:   hlt
  0x000077505520c80d:   hlt
  0x000077505520c80e:   hlt
  0x000077505520c80f:   hlt
  0x000077505520c810:   hlt
  0x000077505520c811:   hlt
  0x000077505520c812:   hlt
  0x000077505520c813:   hlt
  0x000077505520c814:   hlt
  0x000077505520c815:   hlt
  0x000077505520c816:   hlt
  0x000077505520c817:   hlt
  0x000077505520c818:   hlt
  0x000077505520c819:   hlt
  0x000077505520c81a:   hlt
  0x000077505520c81b:   hlt
  0x000077505520c81c:   hlt
  0x000077505520c81d:   hlt
  0x000077505520c81e:   hlt
  0x000077505520c81f:   hlt
[Exception Handler]
  0x000077505520c820:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505520c825:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520c82f:   and    $0xfffffffffffffff0,%rsp
  0x000077505520c833:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520c838:   hlt
[Deopt Handler Code]
  0x000077505520c839:   movabs $0x77505520c839,%r10         ;   {section_word}
  0x000077505520c843:   push   %r10
  0x000077505520c845:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520c84a:   hlt
  0x000077505520c84b:   hlt
  0x000077505520c84c:   hlt
  0x000077505520c84d:   hlt
  0x000077505520c84e:   hlt
  0x000077505520c84f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     118   39   !   3       java.util.concurrent.ConcurrentHashMap::putVal (432 bytes)
 total in heap  [0x000077505520ca10,0x000077505520fba0] = 12688
 relocation     [0x000077505520cb70,0x000077505520cd70] = 512
 main code      [0x000077505520cd80,0x000077505520e840] = 6848
 stub code      [0x000077505520e840,0x000077505520e940] = 256
 metadata       [0x000077505520e940,0x000077505520e960] = 32
 scopes data    [0x000077505520e960,0x000077505520f130] = 2000
 scopes pcs     [0x000077505520f130,0x000077505520fa30] = 2304
 dependencies   [0x000077505520fa30,0x000077505520fa38] = 8
 handler table  [0x000077505520fa38,0x000077505520fb70] = 312
 nul chk table  [0x000077505520fb70,0x000077505520fba0] = 48

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8        = boolean
  #           [sp+0x100]  (sp of caller)
  0x000077505520cd80:   mov    0x8(%rsi),%r10d
  0x000077505520cd84:   movabs $0x800000000,%r11
  0x000077505520cd8e:   add    %r11,%r10
  0x000077505520cd91:   cmp    %rax,%r10
  0x000077505520cd94:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520cd9a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505520cda0:   mov    %eax,-0x14000(%rsp)
  0x000077505520cda7:   push   %rbp
  0x000077505520cda8:   sub    $0xf0,%rsp
  0x000077505520cdaf:   mov    %rsi,0x68(%rsp)
  0x000077505520cdb4:   mov    %rdx,0x70(%rsp)
  0x000077505520cdb9:   mov    %rcx,0x78(%rsp)
  0x000077505520cdbe:   mov    %r8d,0x80(%rsp)
  0x000077505520cdc6:   movabs $0x7750202f16a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520cdd0:   mov    0xf4(%rdi),%ebx
  0x000077505520cdd6:   add    $0x2,%ebx
  0x000077505520cdd9:   mov    %ebx,0xf4(%rdi)
  0x000077505520cddf:   and    $0x7fe,%ebx
  0x000077505520cde5:   cmp    $0x0,%ebx
  0x000077505520cde8:   je     0x000077505520e432           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@0 (line 1011)
  0x000077505520cdee:   cmp    $0x0,%rdx
  0x000077505520cdf2:   movabs $0x7750202f16a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520cdfc:   movabs $0x138,%rbx
  0x000077505520ce06:   je     0x000077505520ce16
  0x000077505520ce0c:   movabs $0x148,%rbx
  0x000077505520ce16:   mov    (%rdi,%rbx,1),%rax
  0x000077505520ce1a:   lea    0x1(%rax),%rax
  0x000077505520ce1e:   mov    %rax,(%rdi,%rbx,1)
  0x000077505520ce22:   je     0x000077505520e354           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@1 (line 1011)
  0x000077505520ce28:   cmp    $0x0,%rcx
  0x000077505520ce2c:   movabs $0x7750202f16a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520ce36:   movabs $0x168,%rbx
  0x000077505520ce40:   je     0x000077505520ce50
  0x000077505520ce46:   movabs $0x158,%rbx
  0x000077505520ce50:   mov    (%rdi,%rbx,1),%rax
  0x000077505520ce54:   lea    0x1(%rax),%rax
  0x000077505520ce58:   mov    %rax,(%rdi,%rbx,1)
  0x000077505520ce5c:   je     0x000077505520e354           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@5 (line 1011)
  0x000077505520ce62:   cmp    (%rdx),%rax                  ; implicit exception: dispatches to 0x000077505520e453
  0x000077505520ce65:   mov    %rdx,%rdi
  0x000077505520ce68:   movabs $0x7750202f16a0,%rbx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520ce72:   mov    0x8(%rdi),%edi
  0x000077505520ce75:   movabs $0x800000000,%r10
  0x000077505520ce7f:   add    %r10,%rdi
  0x000077505520ce82:   cmp    0x198(%rbx),%rdi
  0x000077505520ce89:   jne    0x000077505520ce98
  0x000077505520ce8b:   addq   $0x1,0x1a0(%rbx)
  0x000077505520ce93:   jmp    0x000077505520cefe
  0x000077505520ce98:   cmp    0x1a8(%rbx),%rdi
  0x000077505520ce9f:   jne    0x000077505520ceae
  0x000077505520cea1:   addq   $0x1,0x1b0(%rbx)
  0x000077505520cea9:   jmp    0x000077505520cefe
  0x000077505520ceae:   cmpq   $0x0,0x198(%rbx)
  0x000077505520ceb9:   jne    0x000077505520ced2
  0x000077505520cebb:   mov    %rdi,0x198(%rbx)
  0x000077505520cec2:   movq   $0x1,0x1a0(%rbx)
  0x000077505520cecd:   jmp    0x000077505520cefe
  0x000077505520ced2:   cmpq   $0x0,0x1a8(%rbx)
  0x000077505520cedd:   jne    0x000077505520cef6
  0x000077505520cedf:   mov    %rdi,0x1a8(%rbx)
  0x000077505520cee6:   movq   $0x1,0x1b0(%rbx)
  0x000077505520cef1:   jmp    0x000077505520cefe
  0x000077505520cef6:   addq   $0x1,0x188(%rbx)
  0x000077505520cefe:   mov    %rdx,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
  0x000077505520cf01:   nopl   0x0(%rax)
  0x000077505520cf05:   movabs $0xffffffffffffffff,%rax
  0x000077505520cf0f:   call   0x000077505c788380           ; ImmutableOopMap {[104]=Oop [120]=Oop [112]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                            ;   {virtual_call}
  0x000077505520cf14:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520cf1e:   addq   $0x1,0x1c0(%rsi)
  0x000077505520cf26:   movabs $0x7750202e7a88,%rsi         ;   {metadata(method data for {method} {0x00007750200ee278} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520cf30:   mov    0xf4(%rsi),%edi
  0x000077505520cf36:   add    $0x2,%edi
  0x000077505520cf39:   mov    %edi,0xf4(%rsi)
  0x000077505520cf3f:   and    $0x1ffffe,%edi
  0x000077505520cf45:   cmp    $0x0,%edi
  0x000077505520cf48:   je     0x000077505520e458
  0x000077505520cf4e:   mov    %rax,%rsi
  0x000077505520cf51:   shr    $0x10,%esi
  0x000077505520cf54:   xor    %rax,%rsi
  0x000077505520cf57:   and    $0x7fffffff,%esi
  0x000077505520cf5d:   mov    %esi,0x88(%rsp)
  0x000077505520cf64:   mov    0x68(%rsp),%rdi
  0x000077505520cf69:   mov    0x28(%rdi),%ebx
  0x000077505520cf6c:   shl    $0x3,%rbx                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@29 (line 1014)
  0x000077505520cf70:   mov    $0x0,%eax                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@34 (line 1016)
  0x000077505520cf75:   mov    %eax,0x84(%rsp)
  0x000077505520cf7c:   nopl   0x0(%rax)
  0x000077505520cf80:   cmp    $0x0,%rbx
  0x000077505520cf84:   movabs $0x7750202f16a0,%r9          ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520cf8e:   movabs $0x1d0,%r11
  0x000077505520cf98:   je     0x000077505520cfa8
  0x000077505520cf9e:   movabs $0x1e0,%r11
  0x000077505520cfa8:   mov    (%r9,%r11,1),%r13
  0x000077505520cfac:   lea    0x1(%r13),%r13
  0x000077505520cfb0:   mov    %r13,(%r9,%r11,1)
  0x000077505520cfb4:   je     0x000077505520cff8           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@36 (line 1016)
  0x000077505520cfba:   mov    0xc(%rbx),%r9d               ; implicit exception: dispatches to 0x000077505520e479
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
  0x000077505520cfbe:   cmp    $0x0,%r9d
  0x000077505520cfc2:   movabs $0x7750202f16a0,%r11         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520cfcc:   movabs $0x1f0,%r13
  0x000077505520cfd6:   jne    0x000077505520cfe6
  0x000077505520cfdc:   movabs $0x200,%r13
  0x000077505520cfe6:   mov    (%r11,%r13,1),%r14
  0x000077505520cfea:   lea    0x1(%r14),%r14
  0x000077505520cfee:   mov    %r14,(%r11,%r13,1)
  0x000077505520cff2:   jne    0x000077505520d045           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@45 (line 1016)
  0x000077505520cff8:   mov    %rdi,%rbx
  0x000077505520cffb:   movabs $0x7750202f16a0,%r9          ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d005:   addq   $0x1,0x210(%r9)
  0x000077505520d00d:   mov    %rdi,%rsi                    ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)
  0x000077505520d010:   nopl   0x0(%rax)
  0x000077505520d017:   call   0x000077505c788080           ; ImmutableOopMap {[120]=Oop [112]=Oop [104]=Oop }
                                                            ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)
                                                            ;   {optimized virtual_call}
  0x000077505520d01c:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d026:   incl   0x248(%rsi)
  0x000077505520d02c:   mov    0x84(%rsp),%esi
  0x000077505520d033:   mov    0x80(%rsp),%r8d
  0x000077505520d03b:   mov    0x78(%rsp),%rcx
  0x000077505520d040:   jmp    0x000077505520e127           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@54 (line 1017)
  0x000077505520d045:   dec    %r9d
  0x000077505520d048:   and    0x88(%rsp),%r9d
  0x000077505520d050:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d05a:   addq   $0x1,0x260(%rsi)
  0x000077505520d062:   mov    %rbx,%rsi
  0x000077505520d065:   mov    %r9,%rdx                     ;*invokestatic tabAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
  0x000077505520d068:   mov    %r9d,0x8c(%rsp)
  0x000077505520d070:   mov    %rbx,0x90(%rsp)
  0x000077505520d078:   nopl   0x0(%rax)
  0x000077505520d07f:   call   0x000077505c788680           ; ImmutableOopMap {[120]=Oop [112]=Oop [104]=Oop [144]=Oop }
                                                            ;*invokestatic tabAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                            ;   {static_call}
  0x000077505520d084:   mov    %rax,0x98(%rsp)
  0x000077505520d08c:   cmp    $0x0,%rax
  0x000077505520d090:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d09a:   movabs $0x270,%rsi
  0x000077505520d0a4:   jne    0x000077505520d0b4
  0x000077505520d0aa:   movabs $0x280,%rsi
  0x000077505520d0b4:   mov    (%rdx,%rsi,1),%rdi
  0x000077505520d0b8:   lea    0x1(%rdi),%rdi
  0x000077505520d0bc:   mov    %rdi,(%rdx,%rsi,1)
  0x000077505520d0c0:   jne    0x000077505520d2a6           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@75 (line 1018)
  0x000077505520d0c6:   mov    0x88(%rsp),%esi
  0x000077505520d0cd:   mov    0x78(%rsp),%rcx
  0x000077505520d0d2:   mov    0x70(%rsp),%rdx
  0x000077505520d0d7:   mov    %rdx,%rbx
  0x000077505520d0da:   movabs $0x800062960,%rdx            ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000077505520d0e4:   mov    %rcx,%r11
  0x000077505520d0e7:   mov    %rsi,%r9
  0x000077505520d0ea:   mov    0x108(%r15),%rax
  0x000077505520d0f1:   lea    0x20(%rax),%rdi
  0x000077505520d0f5:   cmp    0x118(%r15),%rdi
  0x000077505520d0fc:   ja     0x000077505520e47e
  0x000077505520d102:   mov    %rdi,0x108(%r15)
  0x000077505520d109:   movq   $0x1,(%rax)
  0x000077505520d110:   mov    %rdx,%rcx
  0x000077505520d113:   movabs $0x800000000,%r10
  0x000077505520d11d:   sub    %r10,%rcx
  0x000077505520d120:   mov    %ecx,0x8(%rax)
  0x000077505520d123:   xor    %rcx,%rcx
  0x000077505520d126:   mov    %ecx,0xc(%rax)
  0x000077505520d129:   xor    %rcx,%rcx
  0x000077505520d12c:   mov    %rcx,0x10(%rax)
  0x000077505520d130:   mov    %rcx,0x18(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)
  0x000077505520d134:   mov    %rax,%rsi
  0x000077505520d137:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d141:   addq   $0x1,0x290(%rdx)
  0x000077505520d149:   movabs $0x7750202f1fa0,%rsi         ;   {metadata(method data for {method} {0x00007750201a2e48} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000077505520d153:   mov    0xf4(%rsi),%edx
  0x000077505520d159:   add    $0x2,%edx
  0x000077505520d15c:   mov    %edx,0xf4(%rsi)
  0x000077505520d162:   and    $0x1ffffe,%edx
  0x000077505520d168:   cmp    $0x0,%edx
  0x000077505520d16b:   je     0x000077505520e48b
  0x000077505520d171:   mov    %rax,%rsi
  0x000077505520d174:   movabs $0x7750202f1fa0,%rdx         ;   {metadata(method data for {method} {0x00007750201a2e48} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000077505520d17e:   addq   $0x1,0x138(%rdx)
  0x000077505520d186:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505520d190:   mov    0xf4(%rsi),%edx
  0x000077505520d196:   add    $0x2,%edx
  0x000077505520d199:   mov    %edx,0xf4(%rsi)
  0x000077505520d19f:   and    $0x1ffffe,%edx
  0x000077505520d1a5:   cmp    $0x0,%edx
  0x000077505520d1a8:   je     0x000077505520e4ac
  0x000077505520d1ae:   mov    %r9d,0xc(%rax)               ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6 (line 632)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
  0x000077505520d1b2:   movsbl 0x38(%r15),%esi
  0x000077505520d1b7:   cmp    $0x0,%esi
  0x000077505520d1ba:   jne    0x000077505520e4cd
  0x000077505520d1c0:   mov    %rbx,%r10
  0x000077505520d1c3:   shr    $0x3,%r10
  0x000077505520d1c7:   mov    %r10d,0x10(%rax)
  0x000077505520d1cb:   mov    %rax,%rsi
  0x000077505520d1ce:   xor    %rbx,%rsi
  0x000077505520d1d1:   shr    $0x16,%rsi
  0x000077505520d1d5:   cmp    $0x0,%rsi
  0x000077505520d1d9:   jne    0x000077505520e4ec           ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@11 (line 633)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
  0x000077505520d1df:   movsbl 0x38(%r15),%esi
  0x000077505520d1e4:   cmp    $0x0,%esi
  0x000077505520d1e7:   jne    0x000077505520e504
  0x000077505520d1ed:   mov    %r11,%r10
  0x000077505520d1f0:   shr    $0x3,%r10
  0x000077505520d1f4:   mov    %r10d,0x14(%rax)
  0x000077505520d1f8:   lock addl $0x0,-0x40(%rsp)
  0x000077505520d1fe:   mov    %rax,%rsi
  0x000077505520d201:   xor    %r11,%rsi
  0x000077505520d204:   shr    $0x16,%rsi
  0x000077505520d208:   cmp    $0x0,%rsi
  0x000077505520d20c:   jne    0x000077505520e523           ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16 (line 634)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
  0x000077505520d212:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d21c:   addq   $0x1,0x2a0(%rsi)
  0x000077505520d224:   mov    0x90(%rsp),%rsi
  0x000077505520d22c:   mov    0x8c(%rsp),%edx
  0x000077505520d233:   movabs $0x0,%rcx                    ;   {oop(NULL)}
  0x000077505520d23d:   mov    %rax,%r8                     ;*invokestatic casTabAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@94 (line 1019)
  0x000077505520d240:   nopl   0x0(%rax)
  0x000077505520d247:   call   0x000077505c788680           ; ImmutableOopMap {[104]=Oop [144]=Oop [120]=Oop [112]=Oop }
                                                            ;*invokestatic casTabAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@94 (line 1019)
                                                            ;   {static_call}
  0x000077505520d24c:   cmp    $0x0,%eax
  0x000077505520d24f:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d259:   movabs $0x2c0,%rcx
  0x000077505520d263:   jne    0x000077505520d273
  0x000077505520d269:   movabs $0x2b0,%rcx
  0x000077505520d273:   mov    (%rdx,%rcx,1),%rsi
  0x000077505520d277:   lea    0x1(%rsi),%rsi
  0x000077505520d27b:   mov    %rsi,(%rdx,%rcx,1)
  0x000077505520d27f:   jne    0x000077505520e28c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@97 (line 1019)
  0x000077505520d285:   mov    0x90(%rsp),%rax
  0x000077505520d28d:   mov    0x84(%rsp),%esi
  0x000077505520d294:   mov    0x80(%rsp),%r8d
  0x000077505520d29c:   mov    0x78(%rsp),%rcx
  0x000077505520d2a1:   jmp    0x000077505520e127           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)
  0x000077505520d2a6:   mov    0xc(%rax),%edi               ; implicit exception: dispatches to 0x000077505520e53b
                                                            ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
  0x000077505520d2a9:   cmp    $0xffffffff,%edi
  0x000077505520d2ac:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d2b6:   movabs $0x2e8,%rcx
  0x000077505520d2c0:   jne    0x000077505520d2d0
  0x000077505520d2c6:   movabs $0x2f8,%rcx
  0x000077505520d2d0:   mov    (%rdx,%rcx,1),%rsi
  0x000077505520d2d4:   lea    0x1(%rsi),%rsi
  0x000077505520d2d8:   mov    %rsi,(%rdx,%rcx,1)
  0x000077505520d2dc:   jne    0x000077505520d33d           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@112 (line 1022)
  0x000077505520d2e2:   mov    0x68(%rsp),%rsi
  0x000077505520d2e7:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d2f1:   addq   $0x1,0x308(%rdx)
  0x000077505520d2f9:   mov    0x90(%rsp),%rdx
  0x000077505520d301:   mov    %rax,%rcx
  0x000077505520d304:   mov    0x68(%rsp),%rsi              ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)
  0x000077505520d309:   nopw   0x0(%rax,%rax,1)
  0x000077505520d30f:   call   0x000077505c788080           ; ImmutableOopMap {[104]=Oop [120]=Oop [112]=Oop }
                                                            ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)
                                                            ;   {optimized virtual_call}
  0x000077505520d314:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d31e:   incl   0x340(%rdx)
  0x000077505520d324:   mov    0x84(%rsp),%esi
  0x000077505520d32b:   mov    0x80(%rsp),%r8d
  0x000077505520d333:   mov    0x78(%rsp),%rcx
  0x000077505520d338:   jmp    0x000077505520e127           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@125 (line 1023)
  0x000077505520d33d:   mov    0x80(%rsp),%r8d
  0x000077505520d345:   cmp    $0x0,%r8d
  0x000077505520d349:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d353:   movabs $0x368,%rsi
  0x000077505520d35d:   jne    0x000077505520d36d
  0x000077505520d363:   movabs $0x358,%rsi
  0x000077505520d36d:   mov    (%rdx,%rsi,1),%rbx
  0x000077505520d371:   lea    0x1(%rbx),%rbx
  0x000077505520d375:   mov    %rbx,(%rdx,%rsi,1)
  0x000077505520d379:   jne    0x000077505520d38b           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@129 (line 1024)
  0x000077505520d37f:   mov    %edi,0xa0(%rsp)
  0x000077505520d386:   jmp    0x000077505520d59e           ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)
  0x000077505520d38b:   cmp    0x88(%rsp),%edi
  0x000077505520d392:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d39c:   movabs $0x388,%rsi
  0x000077505520d3a6:   je     0x000077505520d3b6
  0x000077505520d3ac:   movabs $0x378,%rsi
  0x000077505520d3b6:   mov    (%rdx,%rsi,1),%rbx
  0x000077505520d3ba:   lea    0x1(%rbx),%rbx
  0x000077505520d3be:   mov    %rbx,(%rdx,%rsi,1)
  0x000077505520d3c2:   je     0x000077505520d3d4           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@136 (line 1024)
  0x000077505520d3c8:   mov    %edi,0xa0(%rsp)
  0x000077505520d3cf:   jmp    0x000077505520d59e           ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)
  0x000077505520d3d4:   mov    0x70(%rsp),%rdx
  0x000077505520d3d9:   mov    0x10(%rax),%esi
  0x000077505520d3dc:   shl    $0x3,%rsi                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@141 (line 1024)
  0x000077505520d3e0:   cmp    %rdx,%rsi
  0x000077505520d3e3:   movabs $0x7750202f16a0,%rbx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d3ed:   movabs $0x3a8,%rcx
  0x000077505520d3f7:   jne    0x000077505520d407
  0x000077505520d3fd:   movabs $0x398,%rcx
  0x000077505520d407:   mov    (%rbx,%rcx,1),%r9
  0x000077505520d40b:   lea    0x1(%r9),%r9
  0x000077505520d40f:   mov    %r9,(%rbx,%rcx,1)
  0x000077505520d413:   jne    0x000077505520d425           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@148 (line 1024)
  0x000077505520d419:   mov    %edi,0xa0(%rsp)
  0x000077505520d420:   jmp    0x000077505520d55d           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@165 (line 1026)
  0x000077505520d425:   cmp    $0x0,%rsi
  0x000077505520d429:   movabs $0x7750202f16a0,%rbx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d433:   movabs $0x3b8,%rcx
  0x000077505520d43d:   je     0x000077505520d44d
  0x000077505520d443:   movabs $0x3c8,%rcx
  0x000077505520d44d:   mov    (%rbx,%rcx,1),%r9
  0x000077505520d451:   lea    0x1(%r9),%r9
  0x000077505520d455:   mov    %r9,(%rbx,%rcx,1)
  0x000077505520d459:   mov    %edi,0xa0(%rsp)
  0x000077505520d460:   je     0x000077505520d59e           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@153 (line 1024)
  0x000077505520d466:   mov    %rdx,%rbx
  0x000077505520d469:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d473:   mov    0x8(%rbx),%ebx
  0x000077505520d476:   movabs $0x800000000,%r10
  0x000077505520d480:   add    %r10,%rbx
  0x000077505520d483:   cmp    0x3e8(%rcx),%rbx
  0x000077505520d48a:   jne    0x000077505520d499
  0x000077505520d48c:   addq   $0x1,0x3f0(%rcx)
  0x000077505520d494:   jmp    0x000077505520d4ff
  0x000077505520d499:   cmp    0x3f8(%rcx),%rbx
  0x000077505520d4a0:   jne    0x000077505520d4af
  0x000077505520d4a2:   addq   $0x1,0x400(%rcx)
  0x000077505520d4aa:   jmp    0x000077505520d4ff
  0x000077505520d4af:   cmpq   $0x0,0x3e8(%rcx)
  0x000077505520d4ba:   jne    0x000077505520d4d3
  0x000077505520d4bc:   mov    %rbx,0x3e8(%rcx)
  0x000077505520d4c3:   movq   $0x1,0x3f0(%rcx)
  0x000077505520d4ce:   jmp    0x000077505520d4ff
  0x000077505520d4d3:   cmpq   $0x0,0x3f8(%rcx)
  0x000077505520d4de:   jne    0x000077505520d4f7
  0x000077505520d4e0:   mov    %rbx,0x3f8(%rcx)
  0x000077505520d4e7:   movq   $0x1,0x400(%rcx)
  0x000077505520d4f2:   jmp    0x000077505520d4ff
  0x000077505520d4f7:   addq   $0x1,0x3d8(%rcx)
  0x000077505520d4ff:   mov    %rdx,%rbx
  0x000077505520d502:   mov    %rsi,%rdx
  0x000077505520d505:   mov    %rbx,%rsi                    ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)
  0x000077505520d508:   nopl   0x0(%rax,%rax,1)
  0x000077505520d50d:   movabs $0xffffffffffffffff,%rax
  0x000077505520d517:   call   0x000077505c788380           ; ImmutableOopMap {[104]=Oop [120]=Oop [144]=Oop [112]=Oop [152]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)
                                                            ;   {virtual_call}
  0x000077505520d51c:   cmp    $0x0,%eax
  0x000077505520d51f:   movabs $0x7750202f16a0,%rax         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d529:   movabs $0x410,%rsi
  0x000077505520d533:   je     0x000077505520d543
  0x000077505520d539:   movabs $0x420,%rsi
  0x000077505520d543:   mov    (%rax,%rsi,1),%rdx
  0x000077505520d547:   lea    0x1(%rdx),%rdx
  0x000077505520d54b:   mov    %rdx,(%rax,%rsi,1)
  0x000077505520d54f:   mov    0x98(%rsp),%rax
  0x000077505520d557:   je     0x000077505520d59e           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@162 (line 1026)
  0x000077505520d55d:   mov    0x14(%rax),%esi
  0x000077505520d560:   shl    $0x3,%rsi                    ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@167 (line 1026)
  0x000077505520d564:   cmp    $0x0,%rsi
  0x000077505520d568:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d572:   movabs $0x440,%rdi
  0x000077505520d57c:   jne    0x000077505520d58c
  0x000077505520d582:   movabs $0x430,%rdi
  0x000077505520d58c:   mov    (%rdx,%rdi,1),%rbx
  0x000077505520d590:   lea    0x1(%rbx),%rbx
  0x000077505520d594:   mov    %rbx,(%rdx,%rdi,1)
  0x000077505520d598:   jne    0x000077505520e273           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@173 (line 1026)
  0x000077505520d59e:   lea    0xd0(%rsp),%rsi
  0x000077505520d5a6:   mov    %rax,%rdi
  0x000077505520d5a9:   mov    %rdi,0x8(%rsi)
  0x000077505520d5ad:   mov    (%rdi),%rax
  0x000077505520d5b0:   or     $0x1,%rax
  0x000077505520d5b4:   mov    %rax,(%rsi)
  0x000077505520d5b7:   lock cmpxchg %rsi,(%rdi)
  0x000077505520d5bc:   je     0x000077505520d5d5
  0x000077505520d5c2:   sub    %rsp,%rax
  0x000077505520d5c5:   and    $0xfffffffffffff007,%rax
  0x000077505520d5cc:   mov    %rax,(%rsi)
  0x000077505520d5cf:   jne    0x000077505520e540           ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)
  0x000077505520d5d5:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d5df:   addq   $0x1,0x450(%rsi)
  0x000077505520d5e7:   mov    0x90(%rsp),%rsi
  0x000077505520d5ef:   mov    0x8c(%rsp),%edx              ;*invokestatic tabAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
  0x000077505520d5f6:   nop
  0x000077505520d5f7:   call   0x000077505c788680           ; ImmutableOopMap {[104]=Oop [120]=Oop [144]=Oop [112]=Oop [152]=Oop [216]=Oop }
                                                            ;*invokestatic tabAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                            ;   {static_call}
  0x000077505520d5fc:   mov    0x98(%rsp),%rdi
  0x000077505520d604:   cmp    %rdi,%rax
  0x000077505520d607:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d611:   movabs $0x470,%rsi
  0x000077505520d61b:   je     0x000077505520d62b
  0x000077505520d621:   movabs $0x460,%rsi
  0x000077505520d62b:   mov    (%rdx,%rsi,1),%rbx
  0x000077505520d62f:   lea    0x1(%rbx),%rbx
  0x000077505520d633:   mov    %rbx,(%rdx,%rsi,1)
  0x000077505520d637:   je     0x000077505520d660           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@197 (line 1032)
  0x000077505520d63d:   mov    0x84(%rsp),%eax
  0x000077505520d644:   movabs $0x0,%rdi                    ;   {oop(NULL)}
  0x000077505520d64e:   mov    0x80(%rsp),%r8d
  0x000077505520d656:   mov    0x78(%rsp),%rcx
  0x000077505520d65b:   jmp    0x000077505520e0ad           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)
  0x000077505520d660:   mov    0xa0(%rsp),%edx
  0x000077505520d667:   cmp    $0x0,%edx
  0x000077505520d66a:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d674:   movabs $0x480,%rsi
  0x000077505520d67e:   jl     0x000077505520d68e
  0x000077505520d684:   movabs $0x490,%rsi
  0x000077505520d68e:   mov    (%rdx,%rsi,1),%rbx
  0x000077505520d692:   lea    0x1(%rbx),%rbx
  0x000077505520d696:   mov    %rbx,(%rdx,%rsi,1)
  0x000077505520d69a:   mov    %rdi,%rax
  0x000077505520d69d:   jl     0x000077505520db9f           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@202 (line 1033)
  0x000077505520d6a3:   mov    $0x1,%ebx                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@212 (line 1037)
  0x000077505520d6a8:   mov    %ebx,0xa4(%rsp)
  0x000077505520d6af:   mov    0x88(%rsp),%esi
  0x000077505520d6b6:   mov    0x70(%rsp),%rdx
  0x000077505520d6bb:   mov    0xc(%rax),%ecx               ; implicit exception: dispatches to 0x000077505520e553
                                                            ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
  0x000077505520d6be:   cmp    %esi,%ecx
  0x000077505520d6c0:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d6ca:   movabs $0x4b0,%r8
  0x000077505520d6d4:   je     0x000077505520d6e4
  0x000077505520d6da:   movabs $0x4a0,%r8
  0x000077505520d6e4:   mov    (%rcx,%r8,1),%r9
  0x000077505520d6e8:   lea    0x1(%r9),%r9
  0x000077505520d6ec:   mov    %r9,(%rcx,%r8,1)
  0x000077505520d6f0:   je     0x000077505520d6fe           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@219 (line 1037)
  0x000077505520d6f6:   mov    %rax,%r8
  0x000077505520d6f9:   jmp    0x000077505520d87d           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)
  0x000077505520d6fe:   mov    0x10(%rax),%ecx
  0x000077505520d701:   shl    $0x3,%rcx                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@224 (line 1037)
  0x000077505520d705:   cmp    %rdx,%rcx
  0x000077505520d708:   movabs $0x7750202f16a0,%r8          ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d712:   movabs $0x4c0,%r9
  0x000077505520d71c:   je     0x000077505520d72c
  0x000077505520d722:   movabs $0x4d0,%r9
  0x000077505520d72c:   mov    (%r8,%r9,1),%r11
  0x000077505520d730:   lea    0x1(%r11),%r11
  0x000077505520d734:   mov    %r11,(%r8,%r9,1)
  0x000077505520d738:   je     0x000077505520d915           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@231 (line 1037)
  0x000077505520d73e:   cmp    $0x0,%rcx
  0x000077505520d742:   movabs $0x7750202f16a0,%r8          ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d74c:   movabs $0x4f0,%r9
  0x000077505520d756:   jne    0x000077505520d766
  0x000077505520d75c:   movabs $0x4e0,%r9
  0x000077505520d766:   mov    (%r8,%r9,1),%r11
  0x000077505520d76a:   lea    0x1(%r11),%r11
  0x000077505520d76e:   mov    %r11,(%r8,%r9,1)
  0x000077505520d772:   jne    0x000077505520d780           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@236 (line 1037)
  0x000077505520d778:   mov    %rax,%r8
  0x000077505520d77b:   jmp    0x000077505520d87d           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)
  0x000077505520d780:   mov    %rax,0xa8(%rsp)
  0x000077505520d788:   mov    %rdx,%r8
  0x000077505520d78b:   movabs $0x7750202f16a0,%r9          ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d795:   mov    0x8(%r8),%r8d
  0x000077505520d799:   movabs $0x800000000,%r10
  0x000077505520d7a3:   add    %r10,%r8
  0x000077505520d7a6:   cmp    0x510(%r9),%r8
  0x000077505520d7ad:   jne    0x000077505520d7bc
  0x000077505520d7af:   addq   $0x1,0x518(%r9)
  0x000077505520d7b7:   jmp    0x000077505520d822
  0x000077505520d7bc:   cmp    0x520(%r9),%r8
  0x000077505520d7c3:   jne    0x000077505520d7d2
  0x000077505520d7c5:   addq   $0x1,0x528(%r9)
  0x000077505520d7cd:   jmp    0x000077505520d822
  0x000077505520d7d2:   cmpq   $0x0,0x510(%r9)
  0x000077505520d7dd:   jne    0x000077505520d7f6
  0x000077505520d7df:   mov    %r8,0x510(%r9)
  0x000077505520d7e6:   movq   $0x1,0x518(%r9)
  0x000077505520d7f1:   jmp    0x000077505520d822
  0x000077505520d7f6:   cmpq   $0x0,0x520(%r9)
  0x000077505520d801:   jne    0x000077505520d81a
  0x000077505520d803:   mov    %r8,0x520(%r9)
  0x000077505520d80a:   movq   $0x1,0x528(%r9)
  0x000077505520d815:   jmp    0x000077505520d822
  0x000077505520d81a:   addq   $0x1,0x500(%r9)
  0x000077505520d822:   mov    %rdx,%r8
  0x000077505520d825:   mov    %rcx,%rdx
  0x000077505520d828:   mov    %r8,%rsi                     ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)
  0x000077505520d82b:   xchg   %ax,%ax
  0x000077505520d82d:   movabs $0xffffffffffffffff,%rax
  0x000077505520d837:   call   0x000077505c788380           ; ImmutableOopMap {[104]=Oop [120]=Oop [144]=Oop [112]=Oop [152]=Oop [168]=Oop [216]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)
                                                            ;   {virtual_call}
  0x000077505520d83c:   cmp    $0x0,%eax
  0x000077505520d83f:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d849:   movabs $0x548,%rsi
  0x000077505520d853:   jne    0x000077505520d863
  0x000077505520d859:   movabs $0x538,%rsi
  0x000077505520d863:   mov    (%rdx,%rsi,1),%rdi
  0x000077505520d867:   lea    0x1(%rdi),%rdi
  0x000077505520d86b:   mov    %rdi,(%rdx,%rsi,1)
  0x000077505520d86f:   mov    0xa8(%rsp),%r8
  0x000077505520d877:   jne    0x000077505520d918           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@245 (line 1039)
  0x000077505520d87d:   mov    0x18(%r8),%edx
  0x000077505520d881:   shl    $0x3,%rdx                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@274 (line 1046)
  0x000077505520d885:   cmp    $0x0,%rdx
  0x000077505520d889:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d893:   movabs $0x5a0,%rdi
  0x000077505520d89d:   je     0x000077505520d8ad
  0x000077505520d8a3:   movabs $0x590,%rdi
  0x000077505520d8ad:   mov    (%rsi,%rdi,1),%rax
  0x000077505520d8b1:   lea    0x1(%rax),%rax
  0x000077505520d8b5:   mov    %rax,(%rsi,%rdi,1)
  0x000077505520d8b9:   mov    0xa4(%rsp),%ebx
  0x000077505520d8c0:   je     0x000077505520d9dd           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@280 (line 1046)
  0x000077505520d8c6:   inc    %ebx
  0x000077505520d8c8:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d8d2:   mov    0xf8(%rsi),%edi
  0x000077505520d8d8:   add    $0x2,%edi
  0x000077505520d8db:   mov    %edi,0xf8(%rsi)
  0x000077505520d8e1:   and    $0x3ffe,%edi
  0x000077505520d8e7:   cmp    $0x0,%edi
  0x000077505520d8ea:   je     0x000077505520e558           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)
  0x000077505520d8f0:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[104]=Oop [120]=Oop [144]=Oop [112]=Oop [152]=Oop rdx=Oop [216]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)
  0x000077505520d8f7:   test   %eax,(%r10)                  ;   {poll}
  0x000077505520d8fa:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d904:   incl   0x5d8(%rsi)
  0x000077505520d90a:   mov    %rdx,%r8
  0x000077505520d90d:   mov    %r8,%rax
  0x000077505520d910:   jmp    0x000077505520d6a8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)
  0x000077505520d915:   mov    %rax,%r8
  0x000077505520d918:   mov    0xa4(%rsp),%ebx
  0x000077505520d91f:   mov    0x80(%rsp),%r9d
  0x000077505520d927:   mov    0x14(%r8),%edx
  0x000077505520d92b:   shl    $0x3,%rdx                    ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@250 (line 1040)
  0x000077505520d92f:   cmp    $0x0,%r9d
  0x000077505520d933:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d93d:   movabs $0x568,%rdi
  0x000077505520d947:   je     0x000077505520d957
  0x000077505520d94d:   movabs $0x558,%rdi
  0x000077505520d957:   mov    (%rsi,%rdi,1),%rax
  0x000077505520d95b:   lea    0x1(%rax),%rax
  0x000077505520d95f:   mov    %rax,(%rsi,%rdi,1)
  0x000077505520d963:   je     0x000077505520d980           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1041)
  0x000077505520d969:   mov    0x88(%rsp),%r13d
  0x000077505520d971:   mov    0x78(%rsp),%r14
  0x000077505520d976:   mov    0x70(%rsp),%r11
  0x000077505520d97b:   jmp    0x000077505520db7e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)
  0x000077505520d980:   mov    0x78(%rsp),%rcx
  0x000077505520d985:   movsbl 0x38(%r15),%esi
  0x000077505520d98a:   cmp    $0x0,%esi
  0x000077505520d98d:   jne    0x000077505520e579
  0x000077505520d993:   mov    %rcx,%r10
  0x000077505520d996:   shr    $0x3,%r10
  0x000077505520d99a:   mov    %r10d,0x14(%r8)
  0x000077505520d99e:   lock addl $0x0,-0x40(%rsp)
  0x000077505520d9a4:   mov    %r8,%rax
  0x000077505520d9a7:   xor    %rcx,%rax
  0x000077505520d9aa:   shr    $0x16,%rax
  0x000077505520d9ae:   cmp    $0x0,%rax
  0x000077505520d9b2:   jne    0x000077505520e599           ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@262 (line 1042)
  0x000077505520d9b8:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520d9c2:   incl   0x578(%rsi)
  0x000077505520d9c8:   mov    0x88(%rsp),%r13d
  0x000077505520d9d0:   mov    %rcx,%r14
  0x000077505520d9d3:   mov    0x70(%rsp),%r11
  0x000077505520d9d8:   jmp    0x000077505520db7e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@265 (line 1042)
  0x000077505520d9dd:   mov    0x88(%rsp),%esi
  0x000077505520d9e4:   mov    0x80(%rsp),%r9d
  0x000077505520d9ec:   mov    0x78(%rsp),%rcx
  0x000077505520d9f1:   mov    0x70(%rsp),%rdx
  0x000077505520d9f6:   mov    %rdx,%r11
  0x000077505520d9f9:   movabs $0x800062960,%rdx            ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000077505520da03:   mov    %rcx,%r14
  0x000077505520da06:   mov    %rsi,%r13
  0x000077505520da09:   mov    0x108(%r15),%rax
  0x000077505520da10:   lea    0x20(%rax),%rdi
  0x000077505520da14:   cmp    0x118(%r15),%rdi
  0x000077505520da1b:   ja     0x000077505520e5b1
  0x000077505520da21:   mov    %rdi,0x108(%r15)
  0x000077505520da28:   movq   $0x1,(%rax)
  0x000077505520da2f:   mov    %rdx,%rcx
  0x000077505520da32:   movabs $0x800000000,%r10
  0x000077505520da3c:   sub    %r10,%rcx
  0x000077505520da3f:   mov    %ecx,0x8(%rax)
  0x000077505520da42:   xor    %rcx,%rcx
  0x000077505520da45:   mov    %ecx,0xc(%rax)
  0x000077505520da48:   xor    %rcx,%rcx
  0x000077505520da4b:   mov    %rcx,0x10(%rax)
  0x000077505520da4f:   mov    %rcx,0x18(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)
  0x000077505520da53:   mov    %rax,%rdx
  0x000077505520da56:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520da60:   addq   $0x1,0x5b0(%rcx)
  0x000077505520da68:   movabs $0x7750202f1fa0,%rdx         ;   {metadata(method data for {method} {0x00007750201a2e48} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000077505520da72:   mov    0xf4(%rdx),%ecx
  0x000077505520da78:   add    $0x2,%ecx
  0x000077505520da7b:   mov    %ecx,0xf4(%rdx)
  0x000077505520da81:   and    $0x1ffffe,%ecx
  0x000077505520da87:   cmp    $0x0,%ecx
  0x000077505520da8a:   je     0x000077505520e5be
  0x000077505520da90:   mov    %rax,%rdx
  0x000077505520da93:   movabs $0x7750202f1fa0,%rcx         ;   {metadata(method data for {method} {0x00007750201a2e48} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000077505520da9d:   addq   $0x1,0x138(%rcx)
  0x000077505520daa5:   movabs $0x77502024ca78,%rdx         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505520daaf:   mov    0xf4(%rdx),%ecx
  0x000077505520dab5:   add    $0x2,%ecx
  0x000077505520dab8:   mov    %ecx,0xf4(%rdx)
  0x000077505520dabe:   and    $0x1ffffe,%ecx
  0x000077505520dac4:   cmp    $0x0,%ecx
  0x000077505520dac7:   je     0x000077505520e5df
  0x000077505520dacd:   mov    %r13d,0xc(%rax)              ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6 (line 632)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
  0x000077505520dad1:   movsbl 0x38(%r15),%edx
  0x000077505520dad6:   cmp    $0x0,%edx
  0x000077505520dad9:   jne    0x000077505520e600
  0x000077505520dadf:   mov    %r11,%r10
  0x000077505520dae2:   shr    $0x3,%r10
  0x000077505520dae6:   mov    %r10d,0x10(%rax)
  0x000077505520daea:   mov    %rax,%rdx
  0x000077505520daed:   xor    %r11,%rdx
  0x000077505520daf0:   shr    $0x16,%rdx
  0x000077505520daf4:   cmp    $0x0,%rdx
  0x000077505520daf8:   jne    0x000077505520e61f           ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@11 (line 633)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
  0x000077505520dafe:   movsbl 0x38(%r15),%edx
  0x000077505520db03:   cmp    $0x0,%edx
  0x000077505520db06:   jne    0x000077505520e637
  0x000077505520db0c:   mov    %r14,%r10
  0x000077505520db0f:   shr    $0x3,%r10
  0x000077505520db13:   mov    %r10d,0x14(%rax)
  0x000077505520db17:   lock addl $0x0,-0x40(%rsp)
  0x000077505520db1d:   mov    %rax,%rdx
  0x000077505520db20:   xor    %r14,%rdx
  0x000077505520db23:   shr    $0x16,%rdx
  0x000077505520db27:   cmp    $0x0,%rdx
  0x000077505520db2b:   jne    0x000077505520e656           ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16 (line 634)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
  0x000077505520db31:   movsbl 0x38(%r15),%edx
  0x000077505520db36:   cmp    $0x0,%edx
  0x000077505520db39:   jne    0x000077505520e66e
  0x000077505520db3f:   mov    %rax,%r10
  0x000077505520db42:   shr    $0x3,%r10
  0x000077505520db46:   mov    %r10d,0x18(%r8)
  0x000077505520db4a:   lock addl $0x0,-0x40(%rsp)
  0x000077505520db50:   mov    %r8,%rdx
  0x000077505520db53:   xor    %rax,%rdx
  0x000077505520db56:   shr    $0x16,%rdx
  0x000077505520db5a:   cmp    $0x0,%rdx
  0x000077505520db5e:   jne    0x000077505520e68e           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@296 (line 1047)
  0x000077505520db64:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520db6e:   incl   0x5c0(%rdx)
  0x000077505520db74:   movabs $0x0,%rdx                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@299 (line 1048)
                                                            ;   {oop(NULL)}
  0x000077505520db7e:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520db88:   incl   0x5f0(%rcx)
  0x000077505520db8e:   mov    %rdx,%rdi
  0x000077505520db91:   mov    %rbx,%rax
  0x000077505520db94:   mov    %r9,%r8
  0x000077505520db97:   mov    %r14,%rcx
  0x000077505520db9a:   jmp    0x000077505520e0ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)
  0x000077505520db9f:   mov    0x88(%rsp),%r13d
  0x000077505520dba7:   mov    0x80(%rsp),%r9d
  0x000077505520dbaf:   mov    0x78(%rsp),%r14
  0x000077505520dbb4:   mov    0x70(%rsp),%r11
  0x000077505520dbb9:   cmp    $0x0,%rax
  0x000077505520dbbd:   jne    0x000077505520dbd6
  0x000077505520dbbf:   movabs $0x7750202f16a0,%r8          ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520dbc9:   orb    $0x1,0x601(%r8)
  0x000077505520dbd1:   jmp    0x000077505520dcd5
  0x000077505520dbd6:   xchg   %ax,%ax
  0x000077505520dbd8:   jmp    0x000077505520e6b5           ;   {no_reloc}
  0x000077505520dbdd:   add    %al,(%rax)
  0x000077505520dbdf:   add    %al,(%rax)
  0x000077505520dbe1:   add    %al,0x40(%rbx,%rcx,4)
  0x000077505520dbe5:   or     %cl,-0x46(%rcx)
  0x000077505520dbe8:   add    %al,(%rax)
  0x000077505520dbea:   add    %al,(%rax)
  0x000077505520dbec:   or     %al,(%rax)
  0x000077505520dbee:   add    %al,(%rax)
  0x000077505520dbf0:   add    %r10,%r8
  0x000077505520dbf3:   cmp    %rsi,%r8
  0x000077505520dbf6:   je     0x000077505520dc26
  0x000077505520dbfc:   mov    0x14(%rsi),%ecx
  0x000077505520dbff:   cmp    (%r8,%rcx,1),%rsi
  0x000077505520dc03:   je     0x000077505520dc26
  0x000077505520dc09:   cmp    $0x20,%ecx
  0x000077505520dc0c:   jne    0x000077505520dcb9
  0x000077505520dc12:   push   %r8
  0x000077505520dc14:   push   %rsi
  0x000077505520dc15:   call   0x000077505c82bf80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000077505520dc1a:   pop    %r8
  0x000077505520dc1c:   pop    %rsi
  0x000077505520dc1d:   cmp    $0x0,%esi
  0x000077505520dc20:   je     0x000077505520dcb9
  0x000077505520dc26:   movabs $0x7750202f16a0,%r8          ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520dc30:   mov    0x8(%rax),%esi
  0x000077505520dc33:   movabs $0x800000000,%r10
  0x000077505520dc3d:   add    %r10,%rsi
  0x000077505520dc40:   cmp    0x618(%r8),%rsi
  0x000077505520dc47:   jne    0x000077505520dc56
  0x000077505520dc49:   addq   $0x1,0x620(%r8)
  0x000077505520dc51:   jmp    0x000077505520dcda
  0x000077505520dc56:   cmp    0x628(%r8),%rsi
  0x000077505520dc5d:   jne    0x000077505520dc6c
  0x000077505520dc5f:   addq   $0x1,0x630(%r8)
  0x000077505520dc67:   jmp    0x000077505520dcda
  0x000077505520dc6c:   cmpq   $0x0,0x618(%r8)
  0x000077505520dc77:   jne    0x000077505520dc90
  0x000077505520dc79:   mov    %rsi,0x618(%r8)
  0x000077505520dc80:   movq   $0x1,0x620(%r8)
  0x000077505520dc8b:   jmp    0x000077505520dcda
  0x000077505520dc90:   cmpq   $0x0,0x628(%r8)
  0x000077505520dc9b:   jne    0x000077505520dcb4
  0x000077505520dc9d:   mov    %rsi,0x628(%r8)
  0x000077505520dca4:   movq   $0x1,0x630(%r8)
  0x000077505520dcaf:   jmp    0x000077505520dcda
  0x000077505520dcb4:   jmp    0x000077505520dcda
  0x000077505520dcb9:   movabs $0x7750202f16a0,%r8          ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520dcc3:   subq   $0x1,0x608(%r8)
  0x000077505520dccb:   jmp    0x000077505520dcd5
  0x000077505520dcd0:   jmp    0x000077505520dcda
  0x000077505520dcd5:   xor    %rdx,%rdx
  0x000077505520dcd8:   jmp    0x000077505520dce4
  0x000077505520dcda:   movabs $0x1,%rdx                    ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)
  0x000077505520dce4:   cmp    $0x0,%edx
  0x000077505520dce7:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520dcf1:   movabs $0x640,%rcx
  0x000077505520dcfb:   je     0x000077505520dd0b
  0x000077505520dd01:   movabs $0x650,%rcx
  0x000077505520dd0b:   mov    (%rdx,%rcx,1),%r8
  0x000077505520dd0f:   lea    0x1(%r8),%r8
  0x000077505520dd13:   mov    %r8,(%rdx,%rcx,1)
  0x000077505520dd17:   je     0x000077505520df60           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@316 (line 1052)
  0x000077505520dd1d:   cmp    $0x0,%rax
  0x000077505520dd21:   jne    0x000077505520dd39
  0x000077505520dd23:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520dd2d:   orb    $0x1,0x659(%rcx)
  0x000077505520dd34:   jmp    0x000077505520de3a
  0x000077505520dd39:   nopl   0x0(%rax)
  0x000077505520dd40:   jmp    0x000077505520e6ce           ;   {no_reloc}
  0x000077505520dd45:   add    %al,(%rax)
  0x000077505520dd47:   add    %al,(%rax)
  0x000077505520dd49:   add    %cl,-0x45b6f7b8(%rbx)
  0x000077505520dd4f:   add    %al,(%rax)
  0x000077505520dd51:   add    %al,(%rax)
  0x000077505520dd53:   or     %al,(%rax)
  0x000077505520dd55:   add    %al,(%rax)
  0x000077505520dd57:   add    %r10,%rcx
  0x000077505520dd5a:   cmp    %rdi,%rcx
  0x000077505520dd5d:   je     0x000077505520dd8b
  0x000077505520dd63:   mov    0x14(%rdi),%edx
  0x000077505520dd66:   cmp    (%rcx,%rdx,1),%rdi
  0x000077505520dd6a:   je     0x000077505520dd8b
  0x000077505520dd70:   cmp    $0x20,%edx
  0x000077505520dd73:   jne    0x000077505520de1e
  0x000077505520dd79:   push   %rcx
  0x000077505520dd7a:   push   %rdi
  0x000077505520dd7b:   call   0x000077505c82bf80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000077505520dd80:   pop    %rcx
  0x000077505520dd81:   pop    %rdi
  0x000077505520dd82:   cmp    $0x0,%edi
  0x000077505520dd85:   je     0x000077505520de1e
  0x000077505520dd8b:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520dd95:   mov    0x8(%rax),%edi
  0x000077505520dd98:   movabs $0x800000000,%r10
  0x000077505520dda2:   add    %r10,%rdi
  0x000077505520dda5:   cmp    0x670(%rcx),%rdi
  0x000077505520ddac:   jne    0x000077505520ddbb
  0x000077505520ddae:   addq   $0x1,0x678(%rcx)
  0x000077505520ddb6:   jmp    0x000077505520de3a
  0x000077505520ddbb:   cmp    0x680(%rcx),%rdi
  0x000077505520ddc2:   jne    0x000077505520ddd1
  0x000077505520ddc4:   addq   $0x1,0x688(%rcx)
  0x000077505520ddcc:   jmp    0x000077505520de3a
  0x000077505520ddd1:   cmpq   $0x0,0x670(%rcx)
  0x000077505520dddc:   jne    0x000077505520ddf5
  0x000077505520ddde:   mov    %rdi,0x670(%rcx)
  0x000077505520dde5:   movq   $0x1,0x678(%rcx)
  0x000077505520ddf0:   jmp    0x000077505520de3a
  0x000077505520ddf5:   cmpq   $0x0,0x680(%rcx)
  0x000077505520de00:   jne    0x000077505520de19
  0x000077505520de02:   mov    %rdi,0x680(%rcx)
  0x000077505520de09:   movq   $0x1,0x688(%rcx)
  0x000077505520de14:   jmp    0x000077505520de3a
  0x000077505520de19:   jmp    0x000077505520de3a
  0x000077505520de1e:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520de28:   subq   $0x1,0x660(%rcx)
  0x000077505520de30:   jmp    0x000077505520e6d8
  0x000077505520de35:   jmp    0x000077505520de3a
  0x000077505520de3a:   mov    %rax,%rsi                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
  0x000077505520de3d:   mov    %r13,%rdx
  0x000077505520de40:   mov    %r11,%rcx
  0x000077505520de43:   mov    %r14,%r8                     ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)
  0x000077505520de46:   nopl   0x0(%rax)
  0x000077505520de4d:   movabs $0xffffffffffffffff,%rax
  0x000077505520de57:   call   0x000077505c788380           ; ImmutableOopMap {[104]=Oop [144]=Oop [152]=Oop [120]=Oop [112]=Oop [216]=Oop }
                                                            ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)
                                                            ;   {virtual_call}
  0x000077505520de5c:   cmp    $0x0,%rax
  0x000077505520de60:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520de6a:   movabs $0x6e0,%rcx
  0x000077505520de74:   jne    0x000077505520de84
  0x000077505520de7a:   movabs $0x6d0,%rcx
  0x000077505520de84:   mov    (%rdx,%rcx,1),%rsi
  0x000077505520de88:   lea    0x1(%rsi),%rsi
  0x000077505520de8c:   mov    %rsi,(%rdx,%rcx,1)
  0x000077505520de90:   jne    0x000077505520deb2           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@337 (line 1055)
  0x000077505520de96:   movabs $0x0,%rax                    ;   {oop(NULL)}
  0x000077505520dea0:   mov    0x80(%rsp),%r8d
  0x000077505520dea8:   mov    0x78(%rsp),%rcx
  0x000077505520dead:   jmp    0x000077505520df43           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)
  0x000077505520deb2:   mov    0x80(%rsp),%r8d
  0x000077505520deba:   mov    0x14(%rax),%edx              ; implicit exception: dispatches to 0x000077505520e6e1
  0x000077505520debd:   shl    $0x3,%rdx                    ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)
  0x000077505520dec1:   cmp    $0x0,%r8d
  0x000077505520dec5:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520decf:   movabs $0x700,%rsi
  0x000077505520ded9:   je     0x000077505520dee9
  0x000077505520dedf:   movabs $0x6f0,%rsi
  0x000077505520dee9:   mov    (%rcx,%rsi,1),%rdi
  0x000077505520deed:   lea    0x1(%rdi),%rdi
  0x000077505520def1:   mov    %rdi,(%rcx,%rsi,1)
  0x000077505520def5:   je     0x000077505520df08           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@348 (line 1058)
  0x000077505520defb:   mov    %rdx,%rax
  0x000077505520defe:   mov    0x78(%rsp),%rcx
  0x000077505520df03:   jmp    0x000077505520df43           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)
  0x000077505520df08:   mov    0x78(%rsp),%rcx
  0x000077505520df0d:   movsbl 0x38(%r15),%esi
  0x000077505520df12:   cmp    $0x0,%esi
  0x000077505520df15:   jne    0x000077505520e6e6
  0x000077505520df1b:   mov    %rcx,%r10
  0x000077505520df1e:   shr    $0x3,%r10
  0x000077505520df22:   mov    %r10d,0x14(%rax)
  0x000077505520df26:   lock addl $0x0,-0x40(%rsp)
  0x000077505520df2c:   mov    %rax,%rsi
  0x000077505520df2f:   xor    %rcx,%rsi
  0x000077505520df32:   shr    $0x16,%rsi
  0x000077505520df36:   cmp    $0x0,%rsi
  0x000077505520df3a:   jne    0x000077505520e705           ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@354 (line 1059)
  0x000077505520df40:   mov    %rdx,%rax
  0x000077505520df43:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520df4d:   incl   0x710(%rdx)
  0x000077505520df53:   mov    %rax,%rdi
  0x000077505520df56:   mov    $0x2,%eax
  0x000077505520df5b:   jmp    0x000077505520e0ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)
  0x000077505520df60:   mov    %r9,%r8
  0x000077505520df63:   mov    %r14,%rcx
  0x000077505520df66:   cmp    $0x0,%rax
  0x000077505520df6a:   jne    0x000077505520df82
  0x000077505520df6c:   movabs $0x7750202f16a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520df76:   orb    $0x1,0x721(%rdi)
  0x000077505520df7d:   jmp    0x000077505520e054
  0x000077505520df82:   movabs $0x800062fb0,%rbx            ;   {metadata('java/util/concurrent/ConcurrentHashMap$ReservationNode')}
  0x000077505520df8c:   mov    0x8(%rax),%esi
  0x000077505520df8f:   movabs $0x800000000,%r10
  0x000077505520df99:   add    %r10,%rsi
  0x000077505520df9c:   cmp    %rsi,%rbx
  0x000077505520df9f:   jne    0x000077505520e038
  0x000077505520dfa5:   movabs $0x7750202f16a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520dfaf:   mov    0x8(%rax),%ebx
  0x000077505520dfb2:   movabs $0x800000000,%r10
  0x000077505520dfbc:   add    %r10,%rbx
  0x000077505520dfbf:   cmp    0x738(%rdi),%rbx
  0x000077505520dfc6:   jne    0x000077505520dfd5
  0x000077505520dfc8:   addq   $0x1,0x740(%rdi)
  0x000077505520dfd0:   jmp    0x000077505520e059
  0x000077505520dfd5:   cmp    0x748(%rdi),%rbx
  0x000077505520dfdc:   jne    0x000077505520dfeb
  0x000077505520dfde:   addq   $0x1,0x750(%rdi)
  0x000077505520dfe6:   jmp    0x000077505520e059
  0x000077505520dfeb:   cmpq   $0x0,0x738(%rdi)
  0x000077505520dff6:   jne    0x000077505520e00f
  0x000077505520dff8:   mov    %rbx,0x738(%rdi)
  0x000077505520dfff:   movq   $0x1,0x740(%rdi)
  0x000077505520e00a:   jmp    0x000077505520e059
  0x000077505520e00f:   cmpq   $0x0,0x748(%rdi)
  0x000077505520e01a:   jne    0x000077505520e033
  0x000077505520e01c:   mov    %rbx,0x748(%rdi)
  0x000077505520e023:   movq   $0x1,0x750(%rdi)
  0x000077505520e02e:   jmp    0x000077505520e059
  0x000077505520e033:   jmp    0x000077505520e059
  0x000077505520e038:   movabs $0x7750202f16a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e042:   subq   $0x1,0x728(%rdi)
  0x000077505520e04a:   jmp    0x000077505520e054
  0x000077505520e04f:   jmp    0x000077505520e059
  0x000077505520e054:   xor    %rdx,%rdx
  0x000077505520e057:   jmp    0x000077505520e063
  0x000077505520e059:   movabs $0x1,%rdx                    ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@362 (line 1062)
  0x000077505520e063:   cmp    $0x0,%edx
  0x000077505520e066:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e070:   movabs $0x770,%rsi
  0x000077505520e07a:   jne    0x000077505520e08a
  0x000077505520e080:   movabs $0x760,%rsi
  0x000077505520e08a:   mov    (%rdx,%rsi,1),%rdi
  0x000077505520e08e:   lea    0x1(%rdi),%rdi
  0x000077505520e092:   mov    %rdi,(%rdx,%rsi,1)
  0x000077505520e096:   jne    0x000077505520e2f4           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@365 (line 1062)
  0x000077505520e09c:   mov    0x84(%rsp),%eax
  0x000077505520e0a3:   movabs $0x0,%rdi                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)
                                                            ;   {oop(NULL)}
  0x000077505520e0ad:   mov    %rax,%rbx
  0x000077505520e0b0:   lea    0xd0(%rsp),%rax
  0x000077505520e0b8:   mov    (%rax),%rdx
  0x000077505520e0bb:   test   %rdx,%rdx
  0x000077505520e0be:   je     0x000077505520e0d3
  0x000077505520e0c4:   mov    0x8(%rax),%rsi
  0x000077505520e0c8:   lock cmpxchg %rdx,(%rsi)
  0x000077505520e0cd:   jne    0x000077505520e71d           ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@380 (line 1065)
  0x000077505520e0d3:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e0dd:   incl   0x790(%rdx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@381 (line 1065)
  0x000077505520e0e3:   cmp    $0x0,%ebx
  0x000077505520e0e6:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e0f0:   movabs $0x7b8,%rsi
  0x000077505520e0fa:   jne    0x000077505520e10a
  0x000077505520e100:   movabs $0x7a8,%rsi
  0x000077505520e10a:   mov    (%rdx,%rsi,1),%rax
  0x000077505520e10e:   lea    0x1(%rax),%rax
  0x000077505520e112:   mov    %rax,(%rdx,%rsi,1)
  0x000077505520e116:   jne    0x000077505520e183           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@394 (line 1066)
  0x000077505520e11c:   mov    0x90(%rsp),%rax
  0x000077505520e124:   mov    %rbx,%rsi
  0x000077505520e127:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e131:   mov    0xf8(%rdx),%edi
  0x000077505520e137:   add    $0x2,%edi
  0x000077505520e13a:   mov    %edi,0xf8(%rdx)
  0x000077505520e140:   and    $0x3ffe,%edi
  0x000077505520e146:   cmp    $0x0,%edi
  0x000077505520e149:   je     0x000077505520e733           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)
  0x000077505520e14f:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[104]=Oop [112]=Oop rcx=Oop [120]=Oop rax=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)
  0x000077505520e156:   test   %eax,(%r10)                  ;   {poll}
  0x000077505520e159:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e163:   incl   0x840(%rdx)
  0x000077505520e169:   mov    %rax,%rdx
  0x000077505520e16c:   mov    %rsi,%rax
  0x000077505520e16f:   mov    %rdx,%rbx
  0x000077505520e172:   mov    %eax,0x84(%rsp)
  0x000077505520e179:   mov    0x68(%rsp),%rdi
  0x000077505520e17e:   jmp    0x000077505520cf80           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)
  0x000077505520e183:   mov    0x90(%rsp),%rdx
  0x000077505520e18b:   cmp    $0x8,%ebx
  0x000077505520e18e:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e198:   movabs $0x7d8,%rsi
  0x000077505520e1a2:   jge    0x000077505520e1b2
  0x000077505520e1a8:   movabs $0x7c8,%rsi
  0x000077505520e1b2:   mov    (%rcx,%rsi,1),%rax
  0x000077505520e1b6:   lea    0x1(%rax),%rax
  0x000077505520e1ba:   mov    %rax,(%rcx,%rsi,1)
  0x000077505520e1be:   jge    0x000077505520e1d0           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@401 (line 1067)
  0x000077505520e1c4:   mov    %ebx,0xb8(%rsp)
  0x000077505520e1cb:   jmp    0x000077505520e214           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@412 (line 1069)
  0x000077505520e1d0:   mov    %rdi,0xb0(%rsp)
  0x000077505520e1d8:   mov    %ebx,0xb8(%rsp)
  0x000077505520e1df:   mov    0x8c(%rsp),%r9d
  0x000077505520e1e7:   mov    0x68(%rsp),%rsi
  0x000077505520e1ec:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e1f6:   addq   $0x1,0x7e8(%rcx)
  0x000077505520e1fe:   mov    %r9,%rcx
  0x000077505520e201:   mov    0x68(%rsp),%rsi              ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)
  0x000077505520e206:   nop
  0x000077505520e207:   call   0x000077505c788080           ; ImmutableOopMap {[104]=Oop [176]=Oop }
                                                            ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)
                                                            ;   {optimized virtual_call}
  0x000077505520e20c:   mov    0xb0(%rsp),%rdi
  0x000077505520e214:   cmp    $0x0,%rdi
  0x000077505520e218:   movabs $0x7750202f16a0,%rax         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e222:   movabs $0x830,%rdx
  0x000077505520e22c:   jne    0x000077505520e23c
  0x000077505520e232:   movabs $0x820,%rdx
  0x000077505520e23c:   mov    (%rax,%rdx,1),%rcx
  0x000077505520e240:   lea    0x1(%rcx),%rcx
  0x000077505520e244:   mov    %rcx,(%rax,%rdx,1)
  0x000077505520e248:   jne    0x000077505520e25a           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@414 (line 1069)
  0x000077505520e24e:   mov    0xb8(%rsp),%eax
  0x000077505520e255:   jmp    0x000077505520e2a3           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@423 (line 1075)
  0x000077505520e25a:   mov    %rdi,%rax
  0x000077505520e25d:   add    $0xf0,%rsp
  0x000077505520e264:   pop    %rbp
  0x000077505520e265:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520e26c:   ja     0x000077505520e754
  0x000077505520e272:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@419 (line 1070)
  0x000077505520e273:   mov    %rsi,%rax
  0x000077505520e276:   add    $0xf0,%rsp
  0x000077505520e27d:   pop    %rbp
  0x000077505520e27e:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520e285:   ja     0x000077505520e76a
  0x000077505520e28b:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@178 (line 1028)
  0x000077505520e28c:   mov    0x84(%rsp),%eax
  0x000077505520e293:   movabs $0x7750202f16a0,%rdx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e29d:   incl   0x2d0(%rdx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@100 (line 1020)
  0x000077505520e2a3:   mov    0x68(%rsp),%rsi
  0x000077505520e2a8:   mov    %rsi,%rdx
  0x000077505520e2ab:   movabs $0x7750202f16a0,%rcx         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e2b5:   addq   $0x1,0x858(%rcx)
  0x000077505520e2bd:   movabs $0x1,%rdx
  0x000077505520e2c7:   mov    %rax,%rcx                    ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)
  0x000077505520e2ca:   nopl   0x0(%rax,%rax,1)
  0x000077505520e2cf:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)
                                                            ;   {optimized virtual_call}
  0x000077505520e2d4:   movabs $0x0,%rax                    ;   {oop(NULL)}
  0x000077505520e2de:   add    $0xf0,%rsp
  0x000077505520e2e5:   pop    %rbp
  0x000077505520e2e6:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520e2ed:   ja     0x000077505520e780
  0x000077505520e2f3:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@431 (line 1076)
  0x000077505520e2f4:   nopl   0x0(%rax)
  0x000077505520e2f8:   jmp    0x000077505520e7a5           ;   {no_reloc}
  0x000077505520e2fd:   add    %al,(%rax)
  0x000077505520e2ff:   add    %al,(%rax)
  0x000077505520e301:   add    %ch,%cl
  0x000077505520e303:   test   $0x4,%al
  0x000077505520e305:   add    %al,(%rax)                   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
  0x000077505520e307:   mov    %rax,%rdx
  0x000077505520e30a:   movabs $0x7750202f16a0,%rsi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e314:   addq   $0x1,0x780(%rsi)
  0x000077505520e31c:   movabs $0x62acf5d58,%rdx            ;   {oop("Recursive update"{0x000000062acf5d58})}
  0x000077505520e326:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)
  0x000077505520e329:   mov    %rax,0xc0(%rsp)
  0x000077505520e331:   nopw   0x0(%rax,%rax,1)
  0x000077505520e337:   call   0x000077505c788080           ; ImmutableOopMap {[192]=Oop [152]=Oop [216]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)
                                                            ;   {optimized virtual_call}
  0x000077505520e33c:   mov    0xc0(%rsp),%rax              ; ImmutableOopMap {[152]=Oop [216]=Oop rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)
  0x000077505520e344:   movabs $0x77505520e344,%rdx         ;   {section_word}
  0x000077505520e34e:   call   0x000077505c82ad80           ;   {runtime_call handle_exception_nofpu Runtime1 stub}
  0x000077505520e353:   nop                                 ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)
  0x000077505520e354:   nopl   0x0(%rax)
  0x000077505520e358:   jmp    0x000077505520e7cb           ;   {no_reloc}
  0x000077505520e35d:   add    %al,(%rax)
  0x000077505520e35f:   add    %al,(%rax)
  0x000077505520e361:   add    %cl,-0x75(%rcx)
  0x000077505520e364:   xchg   %ecx,(%rax)
  0x000077505520e366:   add    %eax,(%rax)
  0x000077505520e368:   add    %cl,-0x73(%rax)
  0x000077505520e36b:   js     0x000077505520e39d
  0x000077505520e36d:   cmp    0x118(%r15),%rdi
  0x000077505520e374:   ja     0x000077505520e7d5
  0x000077505520e37a:   mov    %rdi,0x108(%r15)
  0x000077505520e381:   movq   $0x1,(%rax)
  0x000077505520e388:   mov    %rdx,%rcx
  0x000077505520e38b:   movabs $0x800000000,%r10
  0x000077505520e395:   sub    %r10,%rcx
  0x000077505520e398:   mov    %ecx,0x8(%rax)
  0x000077505520e39b:   xor    %rcx,%rcx
  0x000077505520e39e:   mov    %ecx,0xc(%rax)
  0x000077505520e3a1:   xor    %rcx,%rcx
  0x000077505520e3a4:   mov    %rcx,0x10(%rax)
  0x000077505520e3a8:   mov    %rcx,0x18(%rax)
  0x000077505520e3ac:   mov    %rcx,0x20(%rax)
  0x000077505520e3b0:   mov    %rcx,0x28(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
  0x000077505520e3b4:   mov    %rax,%rsi
  0x000077505520e3b7:   movabs $0x7750202f16a0,%rdi         ;   {metadata(method data for {method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e3c1:   addq   $0x1,0x178(%rdi)
  0x000077505520e3c9:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)
  0x000077505520e3cc:   mov    %rax,0xc8(%rsp)
  0x000077505520e3d4:   data16 xchg %ax,%ax
  0x000077505520e3d7:   call   0x000077505c788080           ; ImmutableOopMap {[200]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)
                                                            ;   {optimized virtual_call}
  0x000077505520e3dc:   mov    0xc8(%rsp),%rax
  0x000077505520e3e4:   jmp    0x000077505520e817           ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@15 (line 1011)
  0x000077505520e3e9:   mov    0x3d8(%r15),%rax
  0x000077505520e3f0:   xor    %r10,%r10
  0x000077505520e3f3:   mov    %r10,0x3d8(%r15)
  0x000077505520e3fa:   xor    %r10,%r10
  0x000077505520e3fd:   mov    %r10,0x3e0(%r15)
  0x000077505520e404:   mov    %rax,%rsi
  0x000077505520e407:   lea    0xd0(%rsp),%rax
  0x000077505520e40f:   mov    (%rax),%rdi
  0x000077505520e412:   test   %rdi,%rdi
  0x000077505520e415:   je     0x000077505520e42a
  0x000077505520e41b:   mov    0x8(%rax),%rbx
  0x000077505520e41f:   lock cmpxchg %rdi,(%rbx)
  0x000077505520e424:   jne    0x000077505520e7e2           ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@388 (line 1065)
  0x000077505520e42a:   mov    %rsi,%rax
  0x000077505520e42d:   jmp    0x000077505520e817
  0x000077505520e432:   movabs $0x7750200ef540,%r10         ;   {metadata({method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e43c:   mov    %r10,0x8(%rsp)
  0x000077505520e441:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520e449:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [104]=Oop rdx=Oop [112]=Oop rcx=Oop [120]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@-1 (line 1011)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520e44e:   jmp    0x000077505520cdee
  0x000077505520e453:   call   0x000077505c8295a0           ; ImmutableOopMap {[120]=Oop [104]=Oop rdx=Oop [112]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520e458:   movabs $0x7750200ee278,%r10         ;   {metadata({method} {0x00007750200ee278} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e462:   mov    %r10,0x8(%rsp)
  0x000077505520e467:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520e46f:   call   0x000077505c82e680           ; ImmutableOopMap {[104]=Oop [120]=Oop [112]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@20 (line 1012)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520e474:   jmp    0x000077505520cf4e
  0x000077505520e479:   call   0x000077505c8295a0           ; ImmutableOopMap {rdi=Oop [104]=Oop [120]=Oop [112]=Oop rbx=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520e47e:   mov    %rdx,%rdx
  0x000077505520e481:   call   0x000077505c829e80           ; ImmutableOopMap {[104]=Oop [144]=Oop rbx=Oop [112]=Oop r11=Oop [120]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505520e486:   jmp    0x000077505520d134
  0x000077505520e48b:   movabs $0x7750201a2e48,%r10         ;   {metadata({method} {0x00007750201a2e48} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000077505520e495:   mov    %r10,0x8(%rsp)
  0x000077505520e49a:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520e4a2:   call   0x000077505c82e680           ; ImmutableOopMap {[104]=Oop [144]=Oop rbx=Oop [112]=Oop r11=Oop [120]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1 (line 631)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520e4a7:   jmp    0x000077505520d171
  0x000077505520e4ac:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505520e4b6:   mov    %r10,0x8(%rsp)
  0x000077505520e4bb:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520e4c3:   call   0x000077505c82e680           ; ImmutableOopMap {[104]=Oop [144]=Oop rbx=Oop [112]=Oop r11=Oop [120]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1 (line 631)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520e4c8:   jmp    0x000077505520d1ae
  0x000077505520e4cd:   mov    0x10(%rax),%esi
  0x000077505520e4d0:   shl    $0x3,%rsi
  0x000077505520e4d4:   cmp    $0x0,%rsi
  0x000077505520e4d8:   je     0x000077505520d1c0
  0x000077505520e4de:   mov    %rsi,(%rsp)
  0x000077505520e4e2:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520e4e7:   jmp    0x000077505520d1c0
  0x000077505520e4ec:   cmp    $0x0,%rbx
  0x000077505520e4f0:   je     0x000077505520d1df
  0x000077505520e4f6:   mov    %rax,(%rsp)
  0x000077505520e4fa:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520e4ff:   jmp    0x000077505520d1df
  0x000077505520e504:   mov    0x14(%rax),%esi
  0x000077505520e507:   shl    $0x3,%rsi
  0x000077505520e50b:   cmp    $0x0,%rsi
  0x000077505520e50f:   je     0x000077505520d1ed
  0x000077505520e515:   mov    %rsi,(%rsp)
  0x000077505520e519:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520e51e:   jmp    0x000077505520d1ed
  0x000077505520e523:   cmp    $0x0,%r11
  0x000077505520e527:   je     0x000077505520d212
  0x000077505520e52d:   mov    %rax,(%rsp)
  0x000077505520e531:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520e536:   jmp    0x000077505520d212
  0x000077505520e53b:   call   0x000077505c8295a0           ; ImmutableOopMap {[104]=Oop [120]=Oop [112]=Oop rax=Oop [152]=Oop [144]=Oop }
                                                            ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520e540:   mov    %rdi,0x8(%rsp)
  0x000077505520e545:   mov    %rsi,(%rsp)
  0x000077505520e549:   call   0x000077505c82c580           ; ImmutableOopMap {[104]=Oop [120]=Oop [144]=Oop [112]=Oop rdi=Oop [152]=Oop [216]=Oop }
                                                            ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)
                                                            ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x000077505520e54e:   jmp    0x000077505520d5d5
  0x000077505520e553:   call   0x000077505c8295a0           ; ImmutableOopMap {[104]=Oop [120]=Oop [144]=Oop rax=Oop [152]=Oop rdx=Oop [112]=Oop [216]=Oop }
                                                            ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520e558:   movabs $0x7750200ef540,%r10         ;   {metadata({method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e562:   mov    %r10,0x8(%rsp)
  0x000077505520e567:   movq   $0x131,(%rsp)
  0x000077505520e56f:   call   0x000077505c82e680           ; ImmutableOopMap {[104]=Oop [120]=Oop [144]=Oop [112]=Oop [152]=Oop rdx=Oop [216]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520e574:   jmp    0x000077505520d8f0
  0x000077505520e579:   mov    0x14(%r8),%esi
  0x000077505520e57d:   shl    $0x3,%rsi
  0x000077505520e581:   cmp    $0x0,%rsi
  0x000077505520e585:   je     0x000077505520d993
  0x000077505520e58b:   mov    %rsi,(%rsp)
  0x000077505520e58f:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520e594:   jmp    0x000077505520d993
  0x000077505520e599:   cmp    $0x0,%rcx
  0x000077505520e59d:   je     0x000077505520d9b8
  0x000077505520e5a3:   mov    %r8,(%rsp)
  0x000077505520e5a7:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520e5ac:   jmp    0x000077505520d9b8
  0x000077505520e5b1:   mov    %rdx,%rdx
  0x000077505520e5b4:   call   0x000077505c829e80           ; ImmutableOopMap {[104]=Oop [144]=Oop [152]=Oop r8=Oop r11=Oop [112]=Oop r14=Oop [120]=Oop [216]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505520e5b9:   jmp    0x000077505520da53
  0x000077505520e5be:   movabs $0x7750201a2e48,%r10         ;   {metadata({method} {0x00007750201a2e48} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000077505520e5c8:   mov    %r10,0x8(%rsp)
  0x000077505520e5cd:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520e5d5:   call   0x000077505c82e680           ; ImmutableOopMap {[104]=Oop [144]=Oop [152]=Oop r8=Oop r11=Oop [112]=Oop r14=Oop [120]=Oop rax=Oop [216]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1 (line 631)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520e5da:   jmp    0x000077505520da90
  0x000077505520e5df:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505520e5e9:   mov    %r10,0x8(%rsp)
  0x000077505520e5ee:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520e5f6:   call   0x000077505c82e680           ; ImmutableOopMap {[104]=Oop [144]=Oop [152]=Oop r8=Oop r11=Oop [112]=Oop r14=Oop [120]=Oop rax=Oop [216]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1 (line 631)
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520e5fb:   jmp    0x000077505520dacd
  0x000077505520e600:   mov    0x10(%rax),%edx
  0x000077505520e603:   shl    $0x3,%rdx
  0x000077505520e607:   cmp    $0x0,%rdx
  0x000077505520e60b:   je     0x000077505520dadf
  0x000077505520e611:   mov    %rdx,(%rsp)
  0x000077505520e615:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520e61a:   jmp    0x000077505520dadf
  0x000077505520e61f:   cmp    $0x0,%r11
  0x000077505520e623:   je     0x000077505520dafe
  0x000077505520e629:   mov    %rax,(%rsp)
  0x000077505520e62d:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520e632:   jmp    0x000077505520dafe
  0x000077505520e637:   mov    0x14(%rax),%edx
  0x000077505520e63a:   shl    $0x3,%rdx
  0x000077505520e63e:   cmp    $0x0,%rdx
  0x000077505520e642:   je     0x000077505520db0c
  0x000077505520e648:   mov    %rdx,(%rsp)
  0x000077505520e64c:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520e651:   jmp    0x000077505520db0c
  0x000077505520e656:   cmp    $0x0,%r14
  0x000077505520e65a:   je     0x000077505520db31
  0x000077505520e660:   mov    %rax,(%rsp)
  0x000077505520e664:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520e669:   jmp    0x000077505520db31
  0x000077505520e66e:   mov    0x18(%r8),%edx
  0x000077505520e672:   shl    $0x3,%rdx
  0x000077505520e676:   cmp    $0x0,%rdx
  0x000077505520e67a:   je     0x000077505520db3f
  0x000077505520e680:   mov    %rdx,(%rsp)
  0x000077505520e684:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520e689:   jmp    0x000077505520db3f
  0x000077505520e68e:   cmp    $0x0,%rax
  0x000077505520e692:   je     0x000077505520db64
  0x000077505520e698:   mov    %r8,(%rsp)
  0x000077505520e69c:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520e6a1:   jmp    0x000077505520db64
  0x000077505520e6a6:   movabs $0x0,%rsi                    ;   {metadata(NULL)}
  0x000077505520e6b0:   mov    $0xa050f00,%eax
  0x000077505520e6b5:   call   0x000077505c82d600           ; ImmutableOopMap {[104]=Oop [144]=Oop r11=Oop [112]=Oop r14=Oop [120]=Oop rax=Oop [152]=Oop [216]=Oop }
                                                            ;*instanceof {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505520e6ba:   jmp    0x000077505520dbd8
  0x000077505520e6bf:   movabs $0x0,%rdi                    ;   {metadata(NULL)}
  0x000077505520e6c9:   mov    $0xa050f00,%eax
  0x000077505520e6ce:   call   0x000077505c82d600           ; ImmutableOopMap {[104]=Oop [144]=Oop r11=Oop [112]=Oop r14=Oop [120]=Oop rax=Oop [152]=Oop [216]=Oop }
                                                            ;*checkcast {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505520e6d3:   jmp    0x000077505520dd40
  0x000077505520e6d8:   mov    %rax,(%rsp)
  0x000077505520e6dc:   call   0x000077505c82b9a0           ; ImmutableOopMap {[104]=Oop [144]=Oop r11=Oop [112]=Oop r14=Oop [120]=Oop rax=Oop [152]=Oop [216]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000077505520e6e1:   call   0x000077505c8295a0           ; ImmutableOopMap {[104]=Oop [144]=Oop [120]=Oop [112]=Oop [152]=Oop rax=Oop [216]=Oop }
                                                            ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505520e6e6:   mov    0x14(%rax),%esi
  0x000077505520e6e9:   shl    $0x3,%rsi
  0x000077505520e6ed:   cmp    $0x0,%rsi
  0x000077505520e6f1:   je     0x000077505520df1b
  0x000077505520e6f7:   mov    %rsi,(%rsp)
  0x000077505520e6fb:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505520e700:   jmp    0x000077505520df1b
  0x000077505520e705:   cmp    $0x0,%rcx
  0x000077505520e709:   je     0x000077505520df40
  0x000077505520e70f:   mov    %rax,(%rsp)
  0x000077505520e713:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505520e718:   jmp    0x000077505520df40
  0x000077505520e71d:   lea    0xd0(%rsp),%rax
  0x000077505520e725:   mov    %rax,(%rsp)
  0x000077505520e729:   call   0x000077505c82cb80           ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000077505520e72e:   jmp    0x000077505520e0d3
  0x000077505520e733:   movabs $0x7750200ef540,%r10         ;   {metadata({method} {0x00007750200ef540} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520e73d:   mov    %r10,0x8(%rsp)
  0x000077505520e742:   movq   $0x1a4,(%rsp)
  0x000077505520e74a:   call   0x000077505c82e680           ; ImmutableOopMap {[104]=Oop [112]=Oop rcx=Oop [120]=Oop rax=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520e74f:   jmp    0x000077505520e14f
  0x000077505520e754:   movabs $0x77505520e265,%r10         ;   {internal_word}
  0x000077505520e75e:   mov    %r10,0x360(%r15)
  0x000077505520e765:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520e76a:   movabs $0x77505520e27e,%r10         ;   {internal_word}
  0x000077505520e774:   mov    %r10,0x360(%r15)
  0x000077505520e77b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520e780:   movabs $0x77505520e2e6,%r10         ;   {internal_word}
  0x000077505520e78a:   mov    %r10,0x360(%r15)
  0x000077505520e791:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520e796:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505520e7a0:   mov    $0xa050f00,%eax
  0x000077505520e7a5:   call   0x000077505c82d600           ; ImmutableOopMap {[152]=Oop [216]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505520e7aa:   jmp    0x000077505520e2f8
  0x000077505520e7af:   mov    %rdx,%rdx
  0x000077505520e7b2:   call   0x000077505c829b80           ; ImmutableOopMap {[152]=Oop [216]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x000077505520e7b7:   jmp    0x000077505520e307
  0x000077505520e7bc:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505520e7c6:   mov    $0xa050f00,%eax
  0x000077505520e7cb:   call   0x000077505c82d600           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505520e7d0:   jmp    0x000077505520e358
  0x000077505520e7d5:   mov    %rdx,%rdx
  0x000077505520e7d8:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505520e7dd:   jmp    0x000077505520e3b4
  0x000077505520e7e2:   lea    0xd0(%rsp),%rax
  0x000077505520e7ea:   mov    %rax,(%rsp)
  0x000077505520e7ee:   call   0x000077505c82cb80           ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000077505520e7f3:   jmp    0x000077505520e42a
  0x000077505520e7f8:   nop
  0x000077505520e7f9:   nop
  0x000077505520e7fa:   mov    0x3d8(%r15),%rax
  0x000077505520e801:   movq   $0x0,0x3d8(%r15)
  0x000077505520e80c:   movq   $0x0,0x3e0(%r15)
  0x000077505520e817:   add    $0xf0,%rsp
  0x000077505520e81e:   pop    %rbp
  0x000077505520e81f:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505520e824:   hlt
  0x000077505520e825:   hlt
  0x000077505520e826:   hlt
  0x000077505520e827:   hlt
  0x000077505520e828:   hlt
  0x000077505520e829:   hlt
  0x000077505520e82a:   hlt
  0x000077505520e82b:   hlt
  0x000077505520e82c:   hlt
  0x000077505520e82d:   hlt
  0x000077505520e82e:   hlt
  0x000077505520e82f:   hlt
  0x000077505520e830:   hlt
  0x000077505520e831:   hlt
  0x000077505520e832:   hlt
  0x000077505520e833:   hlt
  0x000077505520e834:   hlt
  0x000077505520e835:   hlt
  0x000077505520e836:   hlt
  0x000077505520e837:   hlt
  0x000077505520e838:   hlt
  0x000077505520e839:   hlt
  0x000077505520e83a:   hlt
  0x000077505520e83b:   hlt
  0x000077505520e83c:   hlt
  0x000077505520e83d:   hlt
  0x000077505520e83e:   hlt
  0x000077505520e83f:   hlt
[Stub Code]
  0x000077505520e840:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505520e845:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e84f:   jmp    0x000077505520e84f           ;   {runtime_call}
  0x000077505520e854:   nop
  0x000077505520e855:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e85f:   jmp    0x000077505520e85f           ;   {runtime_call}
  0x000077505520e864:   nop
  0x000077505520e865:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e86f:   jmp    0x000077505520e86f           ;   {runtime_call}
  0x000077505520e874:   nop
  0x000077505520e875:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e87f:   jmp    0x000077505520e87f           ;   {runtime_call}
  0x000077505520e884:   nop
  0x000077505520e885:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e88f:   jmp    0x000077505520e88f           ;   {runtime_call}
  0x000077505520e894:   nop
  0x000077505520e895:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e89f:   jmp    0x000077505520e89f           ;   {runtime_call}
  0x000077505520e8a4:   nop
  0x000077505520e8a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e8af:   jmp    0x000077505520e8af           ;   {runtime_call}
  0x000077505520e8b4:   nop
  0x000077505520e8b5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e8bf:   jmp    0x000077505520e8bf           ;   {runtime_call}
  0x000077505520e8c4:   nop
  0x000077505520e8c5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e8cf:   jmp    0x000077505520e8cf           ;   {runtime_call}
  0x000077505520e8d4:   nop
  0x000077505520e8d5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e8df:   jmp    0x000077505520e8df           ;   {runtime_call}
  0x000077505520e8e4:   nop
  0x000077505520e8e5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e8ef:   jmp    0x000077505520e8ef           ;   {runtime_call}
  0x000077505520e8f4:   nop
  0x000077505520e8f5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e8ff:   jmp    0x000077505520e8ff           ;   {runtime_call}
  0x000077505520e904:   nop
  0x000077505520e905:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520e90f:   jmp    0x000077505520e90f           ;   {runtime_call}
[Exception Handler]
  0x000077505520e914:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505520e919:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520e923:   and    $0xfffffffffffffff0,%rsp
  0x000077505520e927:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520e92c:   hlt
[Deopt Handler Code]
  0x000077505520e92d:   movabs $0x77505520e92d,%r10         ;   {section_word}
  0x000077505520e937:   push   %r10
  0x000077505520e939:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520e93e:   hlt
  0x000077505520e93f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

Compiled method (n/a)     137   40     n 0       jdk.internal.misc.Unsafe::compareAndSetLong (native)
 total in heap  [0x000077505ccca890,0x000077505cccac18] = 904
 relocation     [0x000077505ccca9f0,0x000077505cccaa20] = 48
 main code      [0x000077505cccaa20,0x000077505cccac18] = 504

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200c5998} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = long
  #           [sp+0x50]  (sp of caller)
  0x000077505cccaa20:   mov    0x8(%rsi),%r10d
  0x000077505cccaa24:   movabs $0x800000000,%r11
  0x000077505cccaa2e:   add    %r11,%r10
  0x000077505cccaa31:   cmp    %r10,%rax
  0x000077505cccaa34:   je     0x000077505cccaa40
  0x000077505cccaa3a:   jmp    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccaa3f:   nop
[Verified Entry Point]
  0x000077505cccaa40:   mov    %eax,-0x14000(%rsp)
  0x000077505cccaa47:   push   %rbp
  0x000077505cccaa48:   mov    %rsp,%rbp
  0x000077505cccaa4b:   sub    $0x40,%rsp
  0x000077505cccaa4f:   mov    %rdx,0x8(%rsp)
  0x000077505cccaa54:   cmp    $0x0,%rdx
  0x000077505cccaa58:   lea    0x8(%rsp),%rdx
  0x000077505cccaa5d:   cmove  0x8(%rsp),%rdx
  0x000077505cccaa63:   mov    %rsi,(%rsp)
  0x000077505cccaa67:   cmp    $0x0,%rsi
  0x000077505cccaa6b:   lea    (%rsp),%rsi
  0x000077505cccaa6f:   cmove  (%rsp),%rsi
  0x000077505cccaa74:   vzeroupper
  0x000077505cccaa77:   movabs $0x77505cccaa74,%r10         ;   {internal_word}
  0x000077505cccaa81:   mov    %r10,0x298(%r15)
  0x000077505cccaa88:   mov    %rsp,0x290(%r15)
  0x000077505cccaa8f:   cmpb   $0x0,0x1787b60f(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505cccaa96:   je     0x000077505cccaada
  0x000077505cccaa9c:   push   %rsi
  0x000077505cccaa9d:   push   %rdx
  0x000077505cccaa9e:   push   %rcx
  0x000077505cccaa9f:   push   %r8
  0x000077505cccaaa1:   push   %r9
  0x000077505cccaaa3:   movabs $0x7750200c5998,%rsi         ;   {metadata({method} {0x00007750200c5998} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x000077505cccaaad:   mov    %r15,%rdi
  0x000077505cccaab0:   test   $0xf,%esp
  0x000077505cccaab6:   je     0x000077505cccaace
  0x000077505cccaabc:   sub    $0x8,%rsp
  0x000077505cccaac0:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505cccaac5:   add    $0x8,%rsp
  0x000077505cccaac9:   jmp    0x000077505cccaad3
  0x000077505cccaace:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505cccaad3:   pop    %r9
  0x000077505cccaad5:   pop    %r8
  0x000077505cccaad7:   pop    %rcx
  0x000077505cccaad8:   pop    %rdx
  0x000077505cccaad9:   pop    %rsi
  0x000077505cccaada:   lea    0x2b0(%r15),%rdi
  0x000077505cccaae1:   movl   $0x4,0x340(%r15)
  0x000077505cccaaec:   call   0x00007750740e6c10           ;   {runtime_call}
  0x000077505cccaaf1:   vzeroupper
  0x000077505cccaaf4:   and    $0xff,%eax
  0x000077505cccaafa:   setne  %al
  0x000077505cccaafd:   movl   $0x5,0x340(%r15)
  0x000077505cccab08:   lock addl $0x0,-0x40(%rsp)
  0x000077505cccab0e:   cmp    0x348(%r15),%rbp
  0x000077505cccab15:   ja     0x000077505cccab2c
  0x000077505cccab1b:   cmpl   $0x0,0x330(%r15)
  0x000077505cccab26:   je     0x000077505cccab50
  0x000077505cccab2c:   vzeroupper
  0x000077505cccab2f:   mov    %rax,-0x8(%rbp)
  0x000077505cccab33:   mov    %r15,%rdi
  0x000077505cccab36:   mov    %rsp,%r12
  0x000077505cccab39:   sub    $0x0,%rsp
  0x000077505cccab3d:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccab41:   call   0x00007750740b8f10           ;   {runtime_call}
  0x000077505cccab46:   mov    %r12,%rsp
  0x000077505cccab49:   xor    %r12,%r12
  0x000077505cccab4c:   mov    -0x8(%rbp),%rax
  0x000077505cccab50:   movl   $0x8,0x340(%r15)
  0x000077505cccab5b:   cmpl   $0x2,0x3b0(%r15)
  0x000077505cccab66:   je     0x000077505cccabf0
  0x000077505cccab6c:   cmpb   $0x0,0x1787b532(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505cccab73:   je     0x000077505cccabb1
  0x000077505cccab79:   mov    %rax,-0x8(%rbp)
  0x000077505cccab7d:   movabs $0x7750200c5998,%rsi         ;   {metadata({method} {0x00007750200c5998} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x000077505cccab87:   mov    %r15,%rdi
  0x000077505cccab8a:   test   $0xf,%esp
  0x000077505cccab90:   je     0x000077505cccaba8
  0x000077505cccab96:   sub    $0x8,%rsp
  0x000077505cccab9a:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505cccab9f:   add    $0x8,%rsp
  0x000077505cccaba3:   jmp    0x000077505cccabad
  0x000077505cccaba8:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505cccabad:   mov    -0x8(%rbp),%rax
  0x000077505cccabb1:   movq   $0x0,0x290(%r15)
  0x000077505cccabbc:   movq   $0x0,0x298(%r15)
  0x000077505cccabc7:   vzeroupper
  0x000077505cccabca:   mov    0xd8(%r15),%rcx
  0x000077505cccabd1:   movl   $0x0,0x100(%rcx)
  0x000077505cccabdb:   leave
  0x000077505cccabdc:   cmpq   $0x0,0x8(%r15)
  0x000077505cccabe4:   jne    0x000077505cccabeb
  0x000077505cccabea:   ret
  0x000077505cccabeb:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000077505cccabf0:   vzeroupper
  0x000077505cccabf3:   mov    %rax,-0x8(%rbp)
  0x000077505cccabf7:   mov    %rsp,%r12
  0x000077505cccabfa:   sub    $0x0,%rsp
  0x000077505cccabfe:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccac02:   call   0x0000775073f21c80           ;   {runtime_call}
  0x000077505cccac07:   mov    %r12,%rsp
  0x000077505cccac0a:   xor    %r12,%r12
  0x000077505cccac0d:   mov    -0x8(%rbp),%rax
  0x000077505cccac11:   jmp    0x000077505cccab6c
  0x000077505cccac16:   hlt
  0x000077505cccac17:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

Compiled method (n/a)     139   41     n 0       jdk.internal.misc.Unsafe::compareAndSetReference (native)
 total in heap  [0x000077505cccac90,0x000077505cccb040] = 944
 relocation     [0x000077505cccadf0,0x000077505cccae20] = 48
 main code      [0x000077505cccae20,0x000077505cccb040] = 544

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200c17b8} 'compareAndSetReference' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x000077505cccae20:   mov    0x8(%rsi),%r10d
  0x000077505cccae24:   movabs $0x800000000,%r11
  0x000077505cccae2e:   add    %r11,%r10
  0x000077505cccae31:   cmp    %r10,%rax
  0x000077505cccae34:   je     0x000077505cccae40
  0x000077505cccae3a:   jmp    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccae3f:   nop
[Verified Entry Point]
  0x000077505cccae40:   mov    %eax,-0x14000(%rsp)
  0x000077505cccae47:   push   %rbp
  0x000077505cccae48:   mov    %rsp,%rbp
  0x000077505cccae4b:   sub    $0x40,%rsp
  0x000077505cccae4f:   mov    %r9,0x20(%rsp)
  0x000077505cccae54:   cmp    $0x0,%r9
  0x000077505cccae58:   lea    0x20(%rsp),%r9
  0x000077505cccae5d:   cmove  0x20(%rsp),%r9
  0x000077505cccae63:   mov    %r8,0x18(%rsp)
  0x000077505cccae68:   cmp    $0x0,%r8
  0x000077505cccae6c:   lea    0x18(%rsp),%r8
  0x000077505cccae71:   cmove  0x18(%rsp),%r8
  0x000077505cccae77:   mov    %rdx,0x8(%rsp)
  0x000077505cccae7c:   cmp    $0x0,%rdx
  0x000077505cccae80:   lea    0x8(%rsp),%rdx
  0x000077505cccae85:   cmove  0x8(%rsp),%rdx
  0x000077505cccae8b:   mov    %rsi,(%rsp)
  0x000077505cccae8f:   cmp    $0x0,%rsi
  0x000077505cccae93:   lea    (%rsp),%rsi
  0x000077505cccae97:   cmove  (%rsp),%rsi
  0x000077505cccae9c:   vzeroupper
  0x000077505cccae9f:   movabs $0x77505cccae9c,%r10         ;   {internal_word}
  0x000077505cccaea9:   mov    %r10,0x298(%r15)
  0x000077505cccaeb0:   mov    %rsp,0x290(%r15)
  0x000077505cccaeb7:   cmpb   $0x0,0x1787b1e7(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505cccaebe:   je     0x000077505cccaf02
  0x000077505cccaec4:   push   %rsi
  0x000077505cccaec5:   push   %rdx
  0x000077505cccaec6:   push   %rcx
  0x000077505cccaec7:   push   %r8
  0x000077505cccaec9:   push   %r9
  0x000077505cccaecb:   movabs $0x7750200c17b8,%rsi         ;   {metadata({method} {0x00007750200c17b8} 'compareAndSetReference' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' in 'jdk/internal/misc/Unsafe')}
  0x000077505cccaed5:   mov    %r15,%rdi
  0x000077505cccaed8:   test   $0xf,%esp
  0x000077505cccaede:   je     0x000077505cccaef6
  0x000077505cccaee4:   sub    $0x8,%rsp
  0x000077505cccaee8:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505cccaeed:   add    $0x8,%rsp
  0x000077505cccaef1:   jmp    0x000077505cccaefb
  0x000077505cccaef6:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505cccaefb:   pop    %r9
  0x000077505cccaefd:   pop    %r8
  0x000077505cccaeff:   pop    %rcx
  0x000077505cccaf00:   pop    %rdx
  0x000077505cccaf01:   pop    %rsi
  0x000077505cccaf02:   lea    0x2b0(%r15),%rdi
  0x000077505cccaf09:   movl   $0x4,0x340(%r15)
  0x000077505cccaf14:   call   0x00007750740ea470           ;   {runtime_call}
  0x000077505cccaf19:   vzeroupper
  0x000077505cccaf1c:   and    $0xff,%eax
  0x000077505cccaf22:   setne  %al
  0x000077505cccaf25:   movl   $0x5,0x340(%r15)
  0x000077505cccaf30:   lock addl $0x0,-0x40(%rsp)
  0x000077505cccaf36:   cmp    0x348(%r15),%rbp
  0x000077505cccaf3d:   ja     0x000077505cccaf54
  0x000077505cccaf43:   cmpl   $0x0,0x330(%r15)
  0x000077505cccaf4e:   je     0x000077505cccaf78
  0x000077505cccaf54:   vzeroupper
  0x000077505cccaf57:   mov    %rax,-0x8(%rbp)
  0x000077505cccaf5b:   mov    %r15,%rdi
  0x000077505cccaf5e:   mov    %rsp,%r12
  0x000077505cccaf61:   sub    $0x0,%rsp
  0x000077505cccaf65:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccaf69:   call   0x00007750740b8f10           ;   {runtime_call}
  0x000077505cccaf6e:   mov    %r12,%rsp
  0x000077505cccaf71:   xor    %r12,%r12
  0x000077505cccaf74:   mov    -0x8(%rbp),%rax
  0x000077505cccaf78:   movl   $0x8,0x340(%r15)
  0x000077505cccaf83:   cmpl   $0x2,0x3b0(%r15)
  0x000077505cccaf8e:   je     0x000077505cccb018
  0x000077505cccaf94:   cmpb   $0x0,0x1787b10a(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505cccaf9b:   je     0x000077505cccafd9
  0x000077505cccafa1:   mov    %rax,-0x8(%rbp)
  0x000077505cccafa5:   movabs $0x7750200c17b8,%rsi         ;   {metadata({method} {0x00007750200c17b8} 'compareAndSetReference' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' in 'jdk/internal/misc/Unsafe')}
  0x000077505cccafaf:   mov    %r15,%rdi
  0x000077505cccafb2:   test   $0xf,%esp
  0x000077505cccafb8:   je     0x000077505cccafd0
  0x000077505cccafbe:   sub    $0x8,%rsp
  0x000077505cccafc2:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505cccafc7:   add    $0x8,%rsp
  0x000077505cccafcb:   jmp    0x000077505cccafd5
  0x000077505cccafd0:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505cccafd5:   mov    -0x8(%rbp),%rax
  0x000077505cccafd9:   movq   $0x0,0x290(%r15)
  0x000077505cccafe4:   movq   $0x0,0x298(%r15)
  0x000077505cccafef:   vzeroupper
  0x000077505cccaff2:   mov    0xd8(%r15),%rcx
  0x000077505cccaff9:   movl   $0x0,0x100(%rcx)
  0x000077505cccb003:   leave
  0x000077505cccb004:   cmpq   $0x0,0x8(%r15)
  0x000077505cccb00c:   jne    0x000077505cccb013
  0x000077505cccb012:   ret
  0x000077505cccb013:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000077505cccb018:   vzeroupper
  0x000077505cccb01b:   mov    %rax,-0x8(%rbp)
  0x000077505cccb01f:   mov    %rsp,%r12
  0x000077505cccb022:   sub    $0x0,%rsp
  0x000077505cccb026:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccb02a:   call   0x0000775073f21c80           ;   {runtime_call}
  0x000077505cccb02f:   mov    %r12,%rsp
  0x000077505cccb032:   xor    %r12,%r12
  0x000077505cccb035:   mov    -0x8(%rbp),%rax
  0x000077505cccb039:   jmp    0x000077505cccaf94
  0x000077505cccb03e:   hlt
  0x000077505cccb03f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     141   42       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
 total in heap  [0x000077505520fc10,0x000077505520ff98] = 904
 relocation     [0x000077505520fd70,0x000077505520fda8] = 56
 main code      [0x000077505520fdc0,0x000077505520fec0] = 256
 stub code      [0x000077505520fec0,0x000077505520ff00] = 64
 metadata       [0x000077505520ff00,0x000077505520ff08] = 8
 scopes data    [0x000077505520ff08,0x000077505520ff30] = 40
 scopes pcs     [0x000077505520ff30,0x000077505520ff90] = 96
 dependencies   [0x000077505520ff90,0x000077505520ff98] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200f09f0} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000077505520fdc0:   mov    0x8(%rsi),%r10d
  0x000077505520fdc4:   movabs $0x800000000,%r11
  0x000077505520fdce:   add    %r11,%r10
  0x000077505520fdd1:   cmp    %rax,%r10
  0x000077505520fdd4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505520fdda:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505520fde0:   mov    %eax,-0x14000(%rsp)
  0x000077505520fde7:   push   %rbp
  0x000077505520fde8:   sub    $0x30,%rsp
  0x000077505520fdec:   movabs $0x7750202f3388,%r8          ;   {metadata(method data for {method} {0x00007750200f09f0} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520fdf6:   mov    0xf4(%r8),%edi
  0x000077505520fdfd:   add    $0x2,%edi
  0x000077505520fe00:   mov    %edi,0xf4(%r8)
  0x000077505520fe07:   and    $0x7fe,%edi
  0x000077505520fe0d:   cmp    $0x0,%edi
  0x000077505520fe10:   je     0x000077505520fe4f           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@0 (line 1541)
  0x000077505520fe16:   mov    %rsi,%r8
  0x000077505520fe19:   movabs $0x7750202f3388,%rdi         ;   {metadata(method data for {method} {0x00007750200f09f0} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520fe23:   addq   $0x1,0x138(%rdi)
  0x000077505520fe2b:   mov    $0x1,%r8d                    ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)
  0x000077505520fe31:   nopw   0x0(%rax,%rax,1)
  0x000077505520fe37:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)
                                                            ;   {optimized virtual_call}
  0x000077505520fe3c:   add    $0x30,%rsp
  0x000077505520fe40:   pop    %rbp
  0x000077505520fe41:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505520fe48:   ja     0x000077505520fe6d
  0x000077505520fe4e:   ret
  0x000077505520fe4f:   movabs $0x7750200f09f0,%r10         ;   {metadata({method} {0x00007750200f09f0} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505520fe59:   mov    %r10,0x8(%rsp)
  0x000077505520fe5e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505520fe66:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@-1 (line 1541)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505520fe6b:   jmp    0x000077505520fe16
  0x000077505520fe6d:   movabs $0x77505520fe41,%r10         ;   {internal_word}
  0x000077505520fe77:   mov    %r10,0x360(%r15)
  0x000077505520fe7e:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505520fe83:   nop
  0x000077505520fe84:   nop
  0x000077505520fe85:   mov    0x3d8(%r15),%rax
  0x000077505520fe8c:   movq   $0x0,0x3d8(%r15)
  0x000077505520fe97:   movq   $0x0,0x3e0(%r15)
  0x000077505520fea2:   add    $0x30,%rsp
  0x000077505520fea6:   pop    %rbp
  0x000077505520fea7:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505520feac:   hlt
  0x000077505520fead:   hlt
  0x000077505520feae:   hlt
  0x000077505520feaf:   hlt
  0x000077505520feb0:   hlt
  0x000077505520feb1:   hlt
  0x000077505520feb2:   hlt
  0x000077505520feb3:   hlt
  0x000077505520feb4:   hlt
  0x000077505520feb5:   hlt
  0x000077505520feb6:   hlt
  0x000077505520feb7:   hlt
  0x000077505520feb8:   hlt
  0x000077505520feb9:   hlt
  0x000077505520feba:   hlt
  0x000077505520febb:   hlt
  0x000077505520febc:   hlt
  0x000077505520febd:   hlt
  0x000077505520febe:   hlt
  0x000077505520febf:   hlt
[Stub Code]
  0x000077505520fec0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505520fec5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505520fecf:   jmp    0x000077505520fecf           ;   {runtime_call}
[Exception Handler]
  0x000077505520fed4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505520fed9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505520fee3:   and    $0xfffffffffffffff0,%rsp
  0x000077505520fee7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505520feec:   hlt
[Deopt Handler Code]
  0x000077505520feed:   movabs $0x77505520feed,%r10         ;   {section_word}
  0x000077505520fef7:   push   %r10
  0x000077505520fef9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505520fefe:   hlt
  0x000077505520feff:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     143   43       3       java.util.HashMap::hash (20 bytes)
 total in heap  [0x0000775055210010,0x00007750552104a0] = 1168
 relocation     [0x0000775055210170,0x00007750552101b0] = 64
 main code      [0x00007750552101c0,0x0000775055210380] = 448
 stub code      [0x0000775055210380,0x00007750552103c0] = 64
 metadata       [0x00007750552103c0,0x00007750552103c8] = 8
 scopes data    [0x00007750552103c8,0x00007750552103f8] = 48
 scopes pcs     [0x00007750552103f8,0x0000775055210488] = 144
 dependencies   [0x0000775055210488,0x0000775055210490] = 8
 nul chk table  [0x0000775055210490,0x00007750552104a0] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007750552101c0:   mov    %eax,-0x14000(%rsp)
  0x00007750552101c7:   push   %rbp
  0x00007750552101c8:   sub    $0x30,%rsp
  0x00007750552101cc:   movabs $0x7750202f3548,%rdi         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007750552101d6:   mov    0xf4(%rdi),%ebx
  0x00007750552101dc:   add    $0x2,%ebx
  0x00007750552101df:   mov    %ebx,0xf4(%rdi)
  0x00007750552101e5:   and    $0x7fe,%ebx
  0x00007750552101eb:   cmp    $0x0,%ebx
  0x00007750552101ee:   je     0x0000775055210313           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@0 (line 338)
  0x00007750552101f4:   cmp    $0x0,%rsi
  0x00007750552101f8:   movabs $0x7750202f3548,%rdi         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055210202:   movabs $0x138,%rbx
  0x000077505521020c:   jne    0x000077505521021c
  0x0000775055210212:   movabs $0x148,%rbx
  0x000077505521021c:   mov    (%rdi,%rbx,1),%rax
  0x0000775055210220:   lea    0x1(%rax),%rax
  0x0000775055210224:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055210228:   jne    0x0000775055210248           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@1 (line 338)
  0x000077505521022e:   movabs $0x7750202f3548,%rsi         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055210238:   incl   0x158(%rsi)
  0x000077505521023e:   mov    $0x0,%esi
  0x0000775055210243:   jmp    0x00007750552102fd           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@5 (line 338)
  0x0000775055210248:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x0000775055210334
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
  0x000077505521024b:   mov    %rsi,%rdi
  0x000077505521024e:   movabs $0x7750202f3548,%rbx         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055210258:   mov    0x8(%rdi),%edi
  0x000077505521025b:   movabs $0x800000000,%r10
  0x0000775055210265:   add    %r10,%rdi
  0x0000775055210268:   cmp    0x180(%rbx),%rdi
  0x000077505521026f:   jne    0x000077505521027e
  0x0000775055210271:   addq   $0x1,0x188(%rbx)
  0x0000775055210279:   jmp    0x00007750552102e4
  0x000077505521027e:   cmp    0x190(%rbx),%rdi
  0x0000775055210285:   jne    0x0000775055210294
  0x0000775055210287:   addq   $0x1,0x198(%rbx)
  0x000077505521028f:   jmp    0x00007750552102e4
  0x0000775055210294:   cmpq   $0x0,0x180(%rbx)
  0x000077505521029f:   jne    0x00007750552102b8
  0x00007750552102a1:   mov    %rdi,0x180(%rbx)
  0x00007750552102a8:   movq   $0x1,0x188(%rbx)
  0x00007750552102b3:   jmp    0x00007750552102e4
  0x00007750552102b8:   cmpq   $0x0,0x190(%rbx)
  0x00007750552102c3:   jne    0x00007750552102dc
  0x00007750552102c5:   mov    %rdi,0x190(%rbx)
  0x00007750552102cc:   movq   $0x1,0x198(%rbx)
  0x00007750552102d7:   jmp    0x00007750552102e4
  0x00007750552102dc:   addq   $0x1,0x170(%rbx)
  0x00007750552102e4:   nop
  0x00007750552102e5:   movabs $0xffffffffffffffff,%rax
  0x00007750552102ef:   call   0x000077505c788380           ; ImmutableOopMap {}
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ;   {virtual_call}
  0x00007750552102f4:   mov    %rax,%rsi
  0x00007750552102f7:   shr    $0x10,%esi
  0x00007750552102fa:   xor    %rax,%rsi
  0x00007750552102fd:   mov    %rsi,%rax
  0x0000775055210300:   add    $0x30,%rsp
  0x0000775055210304:   pop    %rbp
  0x0000775055210305:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521030c:   ja     0x0000775055210339
  0x0000775055210312:   ret
  0x0000775055210313:   movabs $0x77502018ee68,%r10         ;   {metadata({method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000077505521031d:   mov    %r10,0x8(%rsp)
  0x0000775055210322:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521032a:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::hash@-1 (line 338)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521032f:   jmp    0x00007750552101f4
  0x0000775055210334:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055210339:   movabs $0x775055210305,%r10         ;   {internal_word}
  0x0000775055210343:   mov    %r10,0x360(%r15)
  0x000077505521034a:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521034f:   nop
  0x0000775055210350:   nop
  0x0000775055210351:   mov    0x3d8(%r15),%rax
  0x0000775055210358:   movq   $0x0,0x3d8(%r15)
  0x0000775055210363:   movq   $0x0,0x3e0(%r15)
  0x000077505521036e:   add    $0x30,%rsp
  0x0000775055210372:   pop    %rbp
  0x0000775055210373:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055210378:   hlt
  0x0000775055210379:   hlt
  0x000077505521037a:   hlt
  0x000077505521037b:   hlt
  0x000077505521037c:   hlt
  0x000077505521037d:   hlt
  0x000077505521037e:   hlt
  0x000077505521037f:   hlt
[Stub Code]
  0x0000775055210380:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055210385:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521038f:   jmp    0x000077505521038f           ;   {runtime_call}
[Exception Handler]
  0x0000775055210394:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055210399:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552103a3:   and    $0xfffffffffffffff0,%rsp
  0x00007750552103a7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552103ac:   hlt
[Deopt Handler Code]
  0x00007750552103ad:   movabs $0x7750552103ad,%r10         ;   {section_word}
  0x00007750552103b7:   push   %r10
  0x00007750552103b9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552103be:   hlt
  0x00007750552103bf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     145   44       3       java.util.concurrent.ConcurrentHashMap::addCount (280 bytes)
 total in heap  [0x0000775055210510,0x00007750552117c8] = 4792
 relocation     [0x0000775055210670,0x0000775055210750] = 224
 main code      [0x0000775055210760,0x0000775055211040] = 2272
 stub code      [0x0000775055211040,0x00007750552110e0] = 160
 metadata       [0x00007750552110e0,0x00007750552110f0] = 16
 scopes data    [0x00007750552110f0,0x0000775055211370] = 640
 scopes pcs     [0x0000775055211370,0x00007750552117a0] = 1072
 dependencies   [0x00007750552117a0,0x00007750552117a8] = 8
 nul chk table  [0x00007750552117a8,0x00007750552117c8] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = long
  # parm1:    rcx       = int
  #           [sp+0xc0]  (sp of caller)
  0x0000775055210760:   mov    0x8(%rsi),%r10d
  0x0000775055210764:   movabs $0x800000000,%r11
  0x000077505521076e:   add    %r11,%r10
  0x0000775055210771:   cmp    %rax,%r10
  0x0000775055210774:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521077a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055210780:   mov    %eax,-0x14000(%rsp)
  0x0000775055210787:   push   %rbp
  0x0000775055210788:   sub    $0xb0,%rsp
  0x000077505521078f:   mov    %rsi,0x88(%rsp)
  0x0000775055210797:   mov    %ecx,0x74(%rsp)
  0x000077505521079b:   movabs $0x7750202f2a30,%rax         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007750552107a5:   mov    0xf4(%rax),%ebx
  0x00007750552107ab:   add    $0x2,%ebx
  0x00007750552107ae:   mov    %ebx,0xf4(%rax)
  0x00007750552107b4:   and    $0x7fe,%ebx
  0x00007750552107ba:   cmp    $0x0,%ebx
  0x00007750552107bd:   je     0x0000775055210f42           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@0 (line 2326)
  0x00007750552107c3:   mov    0x30(%rsi),%edi
  0x00007750552107c6:   shl    $0x3,%rdi                    ;*getfield counterCells {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@1 (line 2326)
  0x00007750552107ca:   cmp    $0x0,%rdi
  0x00007750552107ce:   movabs $0x7750202f2a30,%rax         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007750552107d8:   movabs $0x138,%rbx
  0x00007750552107e2:   jne    0x00007750552107f2
  0x00007750552107e8:   movabs $0x148,%rbx
  0x00007750552107f2:   mov    (%rax,%rbx,1),%r8
  0x00007750552107f6:   lea    0x1(%r8),%r8
  0x00007750552107fa:   mov    %r8,(%rax,%rbx,1)
  0x00007750552107fe:   jne    0x0000775055210869           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@7 (line 2326)
  0x0000775055210804:   vmovsd 0x18(%rsi),%xmm0
  0x0000775055210809:   vmovq  %xmm0,%rax                   ;*getfield baseCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@18 (line 2326)
  0x000077505521080e:   mov    %rax,%r8
  0x0000775055210811:   add    %rdx,%r8
  0x0000775055210814:   lea    0x18(%rsi),%r9
  0x0000775055210818:   mov    %r8,%rbx
  0x000077505521081b:   lock cmpxchg %rbx,(%r9)
  0x0000775055210820:   mov    $0x1,%ebx
  0x0000775055210825:   je     0x0000775055210830
  0x000077505521082b:   mov    $0x0,%ebx                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@31 (line 2327)
  0x0000775055210830:   cmp    $0x0,%ebx
  0x0000775055210833:   movabs $0x7750202f2a30,%rbx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000077505521083d:   movabs $0x190,%rax
  0x0000775055210847:   jne    0x0000775055210857
  0x000077505521084d:   movabs $0x1a0,%rax
  0x0000775055210857:   mov    (%rbx,%rax,1),%r9
  0x000077505521085b:   lea    0x1(%r9),%r9
  0x000077505521085f:   mov    %r9,(%rbx,%rax,1)
  0x0000775055210863:   jne    0x0000775055210a73           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@34 (line 2327)
  0x0000775055210869:   cmp    $0x0,%rdi
  0x000077505521086d:   movabs $0x7750202f2a30,%rbx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210877:   movabs $0x1c0,%rax
  0x0000775055210881:   jne    0x0000775055210891
  0x0000775055210887:   movabs $0x1b0,%rax
  0x0000775055210891:   mov    (%rbx,%rax,1),%r8
  0x0000775055210895:   lea    0x1(%r8),%r8
  0x0000775055210899:   mov    %r8,(%rbx,%rax,1)
  0x000077505521089d:   jne    0x00007750552108ad           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@42 (line 2330)
  0x00007750552108a3:   mov    $0x1,%edi
  0x00007750552108a8:   jmp    0x0000775055210f0a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2334)
  0x00007750552108ad:   mov    0xc(%rdi),%ebx               ; implicit exception: dispatches to 0x0000775055210f63
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2330)
  0x00007750552108b0:   dec    %ebx
  0x00007750552108b2:   cmp    $0x0,%ebx
  0x00007750552108b5:   movabs $0x7750202f2a30,%rax         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007750552108bf:   movabs $0x1e0,%r8
  0x00007750552108c9:   jge    0x00007750552108d9
  0x00007750552108cf:   movabs $0x1d0,%r8
  0x00007750552108d9:   mov    (%rax,%r8,1),%r9
  0x00007750552108dd:   lea    0x1(%r9),%r9
  0x00007750552108e1:   mov    %r9,(%rax,%r8,1)
  0x00007750552108e5:   jge    0x00007750552108f5           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@53 (line 2330)
  0x00007750552108eb:   mov    $0x1,%edi
  0x00007750552108f0:   jmp    0x0000775055210f0a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2334)
  0x00007750552108f5:   mov    %ebx,0x70(%rsp)
  0x00007750552108f9:   mov    %rdi,0x78(%rsp)
  0x00007750552108fe:   mov    %rdx,0x80(%rsp)
  0x0000775055210906:   nop
  0x0000775055210907:   call   0x000077505c788680           ; ImmutableOopMap {[136]=Oop [120]=Oop }
                                                            ;*invokestatic getProbe {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@58 (line 2331)
                                                            ;   {static_call}
  0x000077505521090c:   and    0x70(%rsp),%eax
  0x0000775055210910:   mov    0x78(%rsp),%rdi
  0x0000775055210915:   cmp    0xc(%rdi),%eax
  0x0000775055210918:   jae    0x0000775055210f68
  0x000077505521091e:   movslq %eax,%rax
  0x0000775055210921:   mov    0x10(%rdi,%rax,4),%eax
  0x0000775055210925:   shl    $0x3,%rax                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2331)
  0x0000775055210929:   cmp    $0x0,%rax
  0x000077505521092d:   movabs $0x7750202f2a30,%rbx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210937:   movabs $0x210,%rsi
  0x0000775055210941:   jne    0x0000775055210951
  0x0000775055210947:   movabs $0x200,%rsi
  0x0000775055210951:   mov    (%rbx,%rsi,1),%rdi
  0x0000775055210955:   lea    0x1(%rdi),%rdi
  0x0000775055210959:   mov    %rdi,(%rbx,%rsi,1)
  0x000077505521095d:   jne    0x000077505521097d           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@68 (line 2331)
  0x0000775055210963:   mov    $0x1,%edi
  0x0000775055210968:   mov    0x80(%rsp),%rdx
  0x0000775055210970:   mov    0x88(%rsp),%rsi
  0x0000775055210978:   jmp    0x0000775055210f0a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2334)
  0x000077505521097d:   mov    0x80(%rsp),%rdx
  0x0000775055210985:   vmovsd 0x90(%rax),%xmm0             ; implicit exception: dispatches to 0x0000775055210f76
  0x000077505521098d:   vmovq  %xmm0,%rbx                   ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2331)
  0x0000775055210992:   mov    %rbx,%rsi
  0x0000775055210995:   add    %rdx,%rsi
  0x0000775055210998:   lea    0x90(%rax),%rdi
  0x000077505521099f:   mov    %rbx,%rax
  0x00007750552109a2:   mov    %rsi,%rbx
  0x00007750552109a5:   lock cmpxchg %rbx,(%rdi)
  0x00007750552109aa:   mov    $0x1,%esi
  0x00007750552109af:   je     0x00007750552109ba
  0x00007750552109b5:   mov    $0x0,%esi                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@91 (line 2333)
  0x00007750552109ba:   cmp    $0x0,%esi
  0x00007750552109bd:   movabs $0x7750202f2a30,%rdi         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007750552109c7:   movabs $0x258,%rbx
  0x00007750552109d1:   jne    0x00007750552109e1
  0x00007750552109d7:   movabs $0x268,%rbx
  0x00007750552109e1:   mov    (%rdi,%rbx,1),%rax
  0x00007750552109e5:   lea    0x1(%rax),%rax
  0x00007750552109e9:   mov    %rax,(%rdi,%rbx,1)
  0x00007750552109ed:   jne    0x0000775055210a03           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@97 (line 2333)
  0x00007750552109f3:   mov    %rsi,%rdi
  0x00007750552109f6:   mov    0x88(%rsp),%rsi
  0x00007750552109fe:   jmp    0x0000775055210f0a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2334)
  0x0000775055210a03:   mov    0x74(%rsp),%ecx
  0x0000775055210a07:   cmp    $0x1,%ecx
  0x0000775055210a0a:   movabs $0x7750202f2a30,%rsi         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210a14:   movabs $0x2c0,%rdi
  0x0000775055210a1e:   jle    0x0000775055210a2e
  0x0000775055210a24:   movabs $0x2b0,%rdi
  0x0000775055210a2e:   mov    (%rsi,%rdi,1),%rbx
  0x0000775055210a32:   lea    0x1(%rbx),%rbx
  0x0000775055210a36:   mov    %rbx,(%rsi,%rdi,1)
  0x0000775055210a3a:   jle    0x0000775055210ef4           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@110 (line 2337)
  0x0000775055210a40:   mov    0x88(%rsp),%rsi
  0x0000775055210a48:   movabs $0x7750202f2a30,%rdi         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210a52:   addq   $0x1,0x2d0(%rdi)
  0x0000775055210a5a:   mov    0x88(%rsp),%rsi              ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2339)
  0x0000775055210a62:   nopl   0x0(%rax,%rax,1)
  0x0000775055210a67:   call   0x000077505c788080           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2339)
                                                            ;   {optimized virtual_call}
  0x0000775055210a6c:   mov    %rax,%r8                     ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@120 (line 2341)
  0x0000775055210a6f:   mov    0x74(%rsp),%ecx
  0x0000775055210a73:   cmp    $0x0,%ecx
  0x0000775055210a76:   movabs $0x7750202f2a30,%rsi         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210a80:   movabs $0x308,%rdi
  0x0000775055210a8a:   jl     0x0000775055210a9a
  0x0000775055210a90:   movabs $0x318,%rdi
  0x0000775055210a9a:   mov    (%rsi,%rdi,1),%rbx
  0x0000775055210a9e:   lea    0x1(%rbx),%rbx
  0x0000775055210aa2:   mov    %rbx,(%rsi,%rdi,1)
  0x0000775055210aa6:   jl     0x0000775055210ede           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@121 (line 2341)
  0x0000775055210aac:   nopl   0x0(%rax)
  0x0000775055210ab0:   mov    0x88(%rsp),%rsi
  0x0000775055210ab8:   mov    0x14(%rsi),%edi              ;*getfield sizeCtl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@127 (line 2343)
  0x0000775055210abb:   movslq %edi,%rbx
  0x0000775055210abe:   cmp    %rbx,%r8
  0x0000775055210ac1:   movabs $0x7750202f2a30,%rbx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210acb:   movabs $0x328,%rax
  0x0000775055210ad5:   jl     0x0000775055210ae5
  0x0000775055210adb:   movabs $0x338,%rax
  0x0000775055210ae5:   mov    (%rbx,%rax,1),%rdx
  0x0000775055210ae9:   lea    0x1(%rdx),%rdx
  0x0000775055210aed:   mov    %rdx,(%rbx,%rax,1)
  0x0000775055210af1:   jl     0x0000775055210ede           ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@134 (line 2343)
  0x0000775055210af7:   mov    0x28(%rsi),%ebx
  0x0000775055210afa:   shl    $0x3,%rbx                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@139 (line 2343)
  0x0000775055210afe:   cmp    $0x0,%rbx
  0x0000775055210b02:   movabs $0x7750202f2a30,%rax         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210b0c:   movabs $0x348,%rdx
  0x0000775055210b16:   je     0x0000775055210b26
  0x0000775055210b1c:   movabs $0x358,%rdx
  0x0000775055210b26:   mov    (%rax,%rdx,1),%rcx
  0x0000775055210b2a:   lea    0x1(%rcx),%rcx
  0x0000775055210b2e:   mov    %rcx,(%rax,%rdx,1)
  0x0000775055210b32:   je     0x0000775055210ede           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@145 (line 2343)
  0x0000775055210b38:   mov    0xc(%rbx),%eax               ; implicit exception: dispatches to 0x0000775055210f7b
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2343)
  0x0000775055210b3b:   cmp    $0x40000000,%eax
  0x0000775055210b41:   movabs $0x7750202f2a30,%rdx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210b4b:   movabs $0x368,%rcx
  0x0000775055210b55:   jge    0x0000775055210b65
  0x0000775055210b5b:   movabs $0x378,%rcx
  0x0000775055210b65:   mov    (%rdx,%rcx,1),%r8
  0x0000775055210b69:   lea    0x1(%r8),%r8
  0x0000775055210b6d:   mov    %r8,(%rdx,%rcx,1)
  0x0000775055210b71:   jge    0x0000775055210ede           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@156 (line 2343)
  0x0000775055210b77:   mov    %rbx,0x98(%rsp)
  0x0000775055210b7f:   mov    %edi,0x90(%rsp)
  0x0000775055210b86:   movabs $0x7750202f2a30,%rdx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210b90:   addq   $0x1,0x388(%rdx)
  0x0000775055210b98:   movabs $0x7750202f3920,%rdx         ;   {metadata(method data for {method} {0x00007750200f2958} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210ba2:   mov    0xf4(%rdx),%ecx
  0x0000775055210ba8:   add    $0x2,%ecx
  0x0000775055210bab:   mov    %ecx,0xf4(%rdx)
  0x0000775055210bb1:   and    $0x1ffffe,%ecx
  0x0000775055210bb7:   cmp    $0x0,%ecx
  0x0000775055210bba:   je     0x0000775055210f80
  0x0000775055210bc0:   movabs $0x7750202f3920,%rdx         ;   {metadata(method data for {method} {0x00007750200f2958} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210bca:   addq   $0x1,0x138(%rdx)
  0x0000775055210bd2:   mov    %rax,%rsi                    ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2285)
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2345)
  0x0000775055210bd5:   xchg   %ax,%ax
  0x0000775055210bd7:   call   0x000077505c788680           ; ImmutableOopMap {[136]=Oop [152]=Oop }
                                                            ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2285)
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2345)
                                                            ;   {static_call}
  0x0000775055210bdc:   or     $0x8000,%eax
  0x0000775055210be2:   shl    $0x10,%eax
  0x0000775055210be5:   mov    0x90(%rsp),%edi
  0x0000775055210bec:   cmp    $0x0,%edi
  0x0000775055210bef:   movabs $0x7750202f2a30,%rdx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210bf9:   movabs $0x398,%rcx
  0x0000775055210c03:   jge    0x0000775055210c13
  0x0000775055210c09:   movabs $0x3a8,%rcx
  0x0000775055210c13:   mov    (%rdx,%rcx,1),%rsi
  0x0000775055210c17:   lea    0x1(%rsi),%rsi
  0x0000775055210c1b:   mov    %rsi,(%rdx,%rcx,1)
  0x0000775055210c1f:   jge    0x0000775055210dc1           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@171 (line 2346)
  0x0000775055210c25:   mov    %rax,%rdx
  0x0000775055210c28:   add    $0xffff,%edx
  0x0000775055210c2e:   cmp    %edx,%edi
  0x0000775055210c30:   movabs $0x7750202f2a30,%rdx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210c3a:   movabs $0x3b8,%rcx
  0x0000775055210c44:   je     0x0000775055210c54
  0x0000775055210c4a:   movabs $0x3c8,%rcx
  0x0000775055210c54:   mov    (%rdx,%rcx,1),%rsi
  0x0000775055210c58:   lea    0x1(%rsi),%rsi
  0x0000775055210c5c:   mov    %rsi,(%rdx,%rcx,1)
  0x0000775055210c60:   je     0x0000775055210ede           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@182 (line 2347)
  0x0000775055210c66:   inc    %eax
  0x0000775055210c68:   cmp    %eax,%edi
  0x0000775055210c6a:   movabs $0x7750202f2a30,%rax         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210c74:   movabs $0x3d8,%rdx
  0x0000775055210c7e:   je     0x0000775055210c8e
  0x0000775055210c84:   movabs $0x3e8,%rdx
  0x0000775055210c8e:   mov    (%rax,%rdx,1),%rcx
  0x0000775055210c92:   lea    0x1(%rcx),%rcx
  0x0000775055210c96:   mov    %rcx,(%rax,%rdx,1)
  0x0000775055210c9a:   je     0x0000775055210ede           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@191 (line 2347)
  0x0000775055210ca0:   mov    0x88(%rsp),%rsi
  0x0000775055210ca8:   mov    0x2c(%rsi),%ecx
  0x0000775055210cab:   shl    $0x3,%rcx                    ;*getfield nextTable {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@195 (line 2347)
  0x0000775055210caf:   cmp    $0x0,%rcx
  0x0000775055210cb3:   movabs $0x7750202f2a30,%rax         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210cbd:   movabs $0x3f8,%rdx
  0x0000775055210cc7:   je     0x0000775055210cd7
  0x0000775055210ccd:   movabs $0x408,%rdx
  0x0000775055210cd7:   mov    (%rax,%rdx,1),%rbx
  0x0000775055210cdb:   lea    0x1(%rbx),%rbx
  0x0000775055210cdf:   mov    %rbx,(%rax,%rdx,1)
  0x0000775055210ce3:   je     0x0000775055210ede           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@201 (line 2347)
  0x0000775055210ce9:   mov    0x20(%rsi),%eax              ;*getfield transferIndex {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@205 (line 2347)
  0x0000775055210cec:   cmp    $0x0,%eax
  0x0000775055210cef:   movabs $0x7750202f2a30,%rax         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210cf9:   movabs $0x428,%rdx
  0x0000775055210d03:   jle    0x0000775055210d13
  0x0000775055210d09:   movabs $0x418,%rdx
  0x0000775055210d13:   mov    (%rax,%rdx,1),%rbx
  0x0000775055210d17:   lea    0x1(%rbx),%rbx
  0x0000775055210d1b:   mov    %rbx,(%rax,%rdx,1)
  0x0000775055210d1f:   jle    0x0000775055210ece           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@208 (line 2347)
  0x0000775055210d25:   mov    %rdi,%rdx
  0x0000775055210d28:   inc    %edx
  0x0000775055210d2a:   lea    0x14(%rsi),%rbx
  0x0000775055210d2e:   mov    %rdi,%rax
  0x0000775055210d31:   lock cmpxchg %edx,(%rbx)
  0x0000775055210d35:   mov    $0x1,%edx
  0x0000775055210d3a:   je     0x0000775055210d45
  0x0000775055210d40:   mov    $0x0,%edx                    ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@227 (line 2350)
  0x0000775055210d45:   cmp    $0x0,%edx
  0x0000775055210d48:   movabs $0x7750202f2a30,%rdx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210d52:   movabs $0x488,%rdi
  0x0000775055210d5c:   je     0x0000775055210d6c
  0x0000775055210d62:   movabs $0x498,%rdi
  0x0000775055210d6c:   mov    (%rdx,%rdi,1),%rbx
  0x0000775055210d70:   lea    0x1(%rbx),%rbx
  0x0000775055210d74:   mov    %rbx,(%rdx,%rdi,1)
  0x0000775055210d78:   je     0x0000775055210e5c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@230 (line 2350)
  0x0000775055210d7e:   mov    %rsi,%rdx
  0x0000775055210d81:   movabs $0x7750202f2a30,%rdi         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210d8b:   addq   $0x1,0x4a8(%rdi)
  0x0000775055210d93:   mov    0x98(%rsp),%rdx
  0x0000775055210d9b:   mov    %rsi,%rdi
  0x0000775055210d9e:   mov    %rdi,%rsi                    ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@238 (line 2351)
  0x0000775055210da1:   nopw   0x0(%rax,%rax,1)
  0x0000775055210da7:   call   0x000077505c788080           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@238 (line 2351)
                                                            ;   {optimized virtual_call}
  0x0000775055210dac:   movabs $0x7750202f2a30,%rax         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210db6:   incl   0x4e0(%rax)
  0x0000775055210dbc:   jmp    0x0000775055210e5c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@241 (line 2351)
  0x0000775055210dc1:   mov    0x88(%rsp),%rsi
  0x0000775055210dc9:   mov    %rax,%rdx
  0x0000775055210dcc:   add    $0x2,%edx
  0x0000775055210dcf:   lea    0x14(%rsi),%rcx
  0x0000775055210dd3:   mov    %rdi,%rax
  0x0000775055210dd6:   lock cmpxchg %edx,(%rcx)
  0x0000775055210dda:   mov    $0x1,%edx
  0x0000775055210ddf:   je     0x0000775055210dea
  0x0000775055210de5:   mov    $0x0,%edx                    ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@257 (line 2353)
  0x0000775055210dea:   cmp    $0x0,%edx
  0x0000775055210ded:   movabs $0x7750202f2a30,%rdx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210df7:   movabs $0x530,%rcx
  0x0000775055210e01:   je     0x0000775055210e11
  0x0000775055210e07:   movabs $0x540,%rcx
  0x0000775055210e11:   mov    (%rdx,%rcx,1),%rdi
  0x0000775055210e15:   lea    0x1(%rdi),%rdi
  0x0000775055210e19:   mov    %rdi,(%rdx,%rcx,1)
  0x0000775055210e1d:   je     0x0000775055210e5c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@260 (line 2353)
  0x0000775055210e23:   mov    0x98(%rsp),%rbx
  0x0000775055210e2b:   mov    %rsi,%rdx
  0x0000775055210e2e:   movabs $0x7750202f2a30,%rcx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210e38:   addq   $0x1,0x550(%rcx)
  0x0000775055210e40:   mov    %rbx,%rdx
  0x0000775055210e43:   movabs $0x0,%rcx                    ;   {oop(NULL)}
  0x0000775055210e4d:   mov    %rsi,%rdi
  0x0000775055210e50:   mov    %rdi,%rsi                    ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@267 (line 2354)
  0x0000775055210e53:   nopl   0x0(%rax)
  0x0000775055210e57:   call   0x000077505c788080           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@267 (line 2354)
                                                            ;   {optimized virtual_call}
  0x0000775055210e5c:   mov    0x88(%rsp),%rsi
  0x0000775055210e64:   movabs $0x7750202f2a30,%rdi         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210e6e:   addq   $0x1,0x588(%rdi)
  0x0000775055210e76:   mov    0x88(%rsp),%rsi              ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@271 (line 2355)
  0x0000775055210e7e:   nop
  0x0000775055210e7f:   call   0x000077505c788080           ; ImmutableOopMap {[136]=Oop }
                                                            ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@271 (line 2355)
                                                            ;   {optimized virtual_call}
  0x0000775055210e84:   movabs $0x7750202f2a30,%rdx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210e8e:   mov    0xf8(%rdx),%ecx
  0x0000775055210e94:   add    $0x2,%ecx
  0x0000775055210e97:   mov    %ecx,0xf8(%rdx)
  0x0000775055210e9d:   and    $0x3ffe,%ecx
  0x0000775055210ea3:   cmp    $0x0,%ecx
  0x0000775055210ea6:   je     0x0000775055210fa1           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2356)
  0x0000775055210eac:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2356)
  0x0000775055210eb3:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055210eb6:   movabs $0x7750202f2a30,%rdx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210ec0:   incl   0x5c0(%rdx)
  0x0000775055210ec6:   mov    %rax,%r8
  0x0000775055210ec9:   jmp    0x0000775055210ab0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2356)
  0x0000775055210ece:   movabs $0x7750202f2a30,%rdx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210ed8:   incl   0x438(%rdx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@211 (line 2349)
  0x0000775055210ede:   add    $0xb0,%rsp
  0x0000775055210ee5:   pop    %rbp
  0x0000775055210ee6:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055210eed:   ja     0x0000775055210fc2
  0x0000775055210ef3:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@279 (line 2358)
  0x0000775055210ef4:   add    $0xb0,%rsp
  0x0000775055210efb:   pop    %rbp
  0x0000775055210efc:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055210f03:   ja     0x0000775055210fd8
  0x0000775055210f09:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@113 (line 2338)
  0x0000775055210f0a:   mov    %rsi,%rcx
  0x0000775055210f0d:   movabs $0x7750202f2a30,%rbx         ;   {metadata(method data for {method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210f17:   addq   $0x1,0x278(%rbx)
  0x0000775055210f1f:   mov    %rdi,%rcx                    ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2334)
  0x0000775055210f22:   nopl   0x0(%rax,%rax,1)
  0x0000775055210f27:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2334)
                                                            ;   {optimized virtual_call}
  0x0000775055210f2c:   add    $0xb0,%rsp
  0x0000775055210f33:   pop    %rbp
  0x0000775055210f34:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055210f3b:   ja     0x0000775055210fee
  0x0000775055210f41:   ret
  0x0000775055210f42:   movabs $0x7750200f2d60,%r10         ;   {metadata({method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210f4c:   mov    %r10,0x8(%rsp)
  0x0000775055210f51:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055210f59:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@-1 (line 2326)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055210f5e:   jmp    0x00007750552107c3
  0x0000775055210f63:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [136]=Oop rdi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2330)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055210f68:   mov    %rax,(%rsp)
  0x0000775055210f6c:   mov    %rdi,0x8(%rsp)
  0x0000775055210f71:   call   0x000077505c828ca0           ; ImmutableOopMap {[136]=Oop rdi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2331)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055210f76:   call   0x000077505c8295a0           ; ImmutableOopMap {[136]=Oop rax=Oop }
                                                            ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2331)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055210f7b:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [136]=Oop rbx=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2343)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055210f80:   movabs $0x7750200f2958,%r10         ;   {metadata({method} {0x00007750200f2958} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210f8a:   mov    %r10,0x8(%rsp)
  0x0000775055210f8f:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055210f97:   call   0x000077505c82e680           ; ImmutableOopMap {[152]=Oop [136]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@-1 (line 2285)
                                                            ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2345)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055210f9c:   jmp    0x0000775055210bc0
  0x0000775055210fa1:   movabs $0x7750200f2d60,%r10         ;   {metadata({method} {0x00007750200f2d60} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055210fab:   mov    %r10,0x8(%rsp)
  0x0000775055210fb0:   movq   $0x114,(%rsp)
  0x0000775055210fb8:   call   0x000077505c82e680           ; ImmutableOopMap {[136]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2356)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055210fbd:   jmp    0x0000775055210eac
  0x0000775055210fc2:   movabs $0x775055210ee6,%r10         ;   {internal_word}
  0x0000775055210fcc:   mov    %r10,0x360(%r15)
  0x0000775055210fd3:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055210fd8:   movabs $0x775055210efc,%r10         ;   {internal_word}
  0x0000775055210fe2:   mov    %r10,0x360(%r15)
  0x0000775055210fe9:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055210fee:   movabs $0x775055210f34,%r10         ;   {internal_word}
  0x0000775055210ff8:   mov    %r10,0x360(%r15)
  0x0000775055210fff:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055211004:   nop
  0x0000775055211005:   nop
  0x0000775055211006:   mov    0x3d8(%r15),%rax
  0x000077505521100d:   movq   $0x0,0x3d8(%r15)
  0x0000775055211018:   movq   $0x0,0x3e0(%r15)
  0x0000775055211023:   add    $0xb0,%rsp
  0x000077505521102a:   pop    %rbp
  0x000077505521102b:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055211030:   hlt
  0x0000775055211031:   hlt
  0x0000775055211032:   hlt
  0x0000775055211033:   hlt
  0x0000775055211034:   hlt
  0x0000775055211035:   hlt
  0x0000775055211036:   hlt
  0x0000775055211037:   hlt
  0x0000775055211038:   hlt
  0x0000775055211039:   hlt
  0x000077505521103a:   hlt
  0x000077505521103b:   hlt
  0x000077505521103c:   hlt
  0x000077505521103d:   hlt
  0x000077505521103e:   hlt
  0x000077505521103f:   hlt
[Stub Code]
  0x0000775055211040:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055211045:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521104f:   jmp    0x000077505521104f           ;   {runtime_call}
  0x0000775055211054:   nop
  0x0000775055211055:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521105f:   jmp    0x000077505521105f           ;   {runtime_call}
  0x0000775055211064:   nop
  0x0000775055211065:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521106f:   jmp    0x000077505521106f           ;   {runtime_call}
  0x0000775055211074:   nop
  0x0000775055211075:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521107f:   jmp    0x000077505521107f           ;   {runtime_call}
  0x0000775055211084:   nop
  0x0000775055211085:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521108f:   jmp    0x000077505521108f           ;   {runtime_call}
  0x0000775055211094:   nop
  0x0000775055211095:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521109f:   jmp    0x000077505521109f           ;   {runtime_call}
  0x00007750552110a4:   nop
  0x00007750552110a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552110af:   jmp    0x00007750552110af           ;   {runtime_call}
[Exception Handler]
  0x00007750552110b4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007750552110b9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552110c3:   and    $0xfffffffffffffff0,%rsp
  0x00007750552110c7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552110cc:   hlt
[Deopt Handler Code]
  0x00007750552110cd:   movabs $0x7750552110cd,%r10         ;   {section_word}
  0x00007750552110d7:   push   %r10
  0x00007750552110d9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552110de:   hlt
  0x00007750552110df:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     152   45       3       java.util.concurrent.ConcurrentHashMap::casTabAt (21 bytes)
 total in heap  [0x0000775055211810,0x0000775055211b90] = 896
 relocation     [0x0000775055211970,0x00007750552119a0] = 48
 main code      [0x00007750552119a0,0x0000775055211ae0] = 320
 stub code      [0x0000775055211ae0,0x0000775055211b10] = 48
 metadata       [0x0000775055211b10,0x0000775055211b18] = 8
 scopes data    [0x0000775055211b18,0x0000775055211b38] = 32
 scopes pcs     [0x0000775055211b38,0x0000775055211b88] = 80
 dependencies   [0x0000775055211b88,0x0000775055211b90] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007750200ee710} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi:rsi   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/util/concurrent/ConcurrentHashMap$Node'
  # parm3:    r8:r8     = 'java/util/concurrent/ConcurrentHashMap$Node'
  #           [sp+0x50]  (sp of caller)
  0x00007750552119a0:   mov    %eax,-0x14000(%rsp)
  0x00007750552119a7:   push   %rbp
  0x00007750552119a8:   sub    $0x40,%rsp
  0x00007750552119ac:   mov    %rcx,%rax
  0x00007750552119af:   movabs $0x7750202f2130,%rcx         ;   {metadata(method data for {method} {0x00007750200ee710} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007750552119b9:   mov    0xf4(%rcx),%edi
  0x00007750552119bf:   add    $0x2,%edi
  0x00007750552119c2:   mov    %edi,0xf4(%rcx)
  0x00007750552119c8:   and    $0x7fe,%edi
  0x00007750552119ce:   cmp    $0x0,%edi
  0x00007750552119d1:   je     0x0000775055211a4b           ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::casTabAt@0 (line 765)
  0x00007750552119d7:   movslq %edx,%rdx
  0x00007750552119da:   mov    $0x2,%ecx
  0x00007750552119df:   shl    %cl,%rdx
  0x00007750552119e2:   movabs $0x10,%r10
  0x00007750552119ec:   add    %r10,%rdx
  0x00007750552119ef:   lea    (%rsi,%rdx,1),%rsi
  0x00007750552119f3:   movsbl 0x38(%r15),%edi
  0x00007750552119f8:   cmp    $0x0,%edi
  0x00007750552119fb:   jne    0x0000775055211a6c
  0x0000775055211a01:   shr    $0x3,%rax
  0x0000775055211a05:   mov    %r8,%r10
  0x0000775055211a08:   shr    $0x3,%r10
  0x0000775055211a0c:   lock cmpxchg %r10d,(%rsi)
  0x0000775055211a11:   mov    $0x1,%eax
  0x0000775055211a16:   je     0x0000775055211a21
  0x0000775055211a1c:   mov    $0x0,%eax
  0x0000775055211a21:   mov    %rsi,%rdi
  0x0000775055211a24:   xor    %r8,%rdi
  0x0000775055211a27:   shr    $0x16,%rdi
  0x0000775055211a2b:   cmp    $0x0,%rdi
  0x0000775055211a2f:   jne    0x0000775055211a86           ;*invokevirtual compareAndSetReference {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17 (line 765)
  0x0000775055211a35:   and    $0x1,%eax
  0x0000775055211a38:   add    $0x40,%rsp
  0x0000775055211a3c:   pop    %rbp
  0x0000775055211a3d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055211a44:   ja     0x0000775055211a97
  0x0000775055211a4a:   ret
  0x0000775055211a4b:   movabs $0x7750200ee710,%r10         ;   {metadata({method} {0x00007750200ee710} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x0000775055211a55:   mov    %r10,0x8(%rsp)
  0x0000775055211a5a:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055211a62:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rax=Oop r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 765)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055211a67:   jmp    0x00007750552119d7
  0x0000775055211a6c:   mov    (%rsi),%edi
  0x0000775055211a6e:   shl    $0x3,%rdi
  0x0000775055211a72:   cmp    $0x0,%rdi
  0x0000775055211a76:   je     0x0000775055211a01
  0x0000775055211a78:   mov    %rdi,(%rsp)
  0x0000775055211a7c:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055211a81:   jmp    0x0000775055211a01
  0x0000775055211a86:   cmp    $0x0,%r8
  0x0000775055211a8a:   je     0x0000775055211a35
  0x0000775055211a8c:   mov    %rsi,(%rsp)
  0x0000775055211a90:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055211a95:   jmp    0x0000775055211a35
  0x0000775055211a97:   movabs $0x775055211a3d,%r10         ;   {internal_word}
  0x0000775055211aa1:   mov    %r10,0x360(%r15)
  0x0000775055211aa8:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055211aad:   nop
  0x0000775055211aae:   nop
  0x0000775055211aaf:   mov    0x3d8(%r15),%rax
  0x0000775055211ab6:   movq   $0x0,0x3d8(%r15)
  0x0000775055211ac1:   movq   $0x0,0x3e0(%r15)
  0x0000775055211acc:   add    $0x40,%rsp
  0x0000775055211ad0:   pop    %rbp
  0x0000775055211ad1:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055211ad6:   hlt
  0x0000775055211ad7:   hlt
  0x0000775055211ad8:   hlt
  0x0000775055211ad9:   hlt
  0x0000775055211ada:   hlt
  0x0000775055211adb:   hlt
  0x0000775055211adc:   hlt
  0x0000775055211add:   hlt
  0x0000775055211ade:   hlt
  0x0000775055211adf:   hlt
[Exception Handler]
  0x0000775055211ae0:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055211ae5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055211aef:   and    $0xfffffffffffffff0,%rsp
  0x0000775055211af3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055211af8:   hlt
[Deopt Handler Code]
  0x0000775055211af9:   movabs $0x775055211af9,%r10         ;   {section_word}
  0x0000775055211b03:   push   %r10
  0x0000775055211b05:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055211b0a:   hlt
  0x0000775055211b0b:   hlt
  0x0000775055211b0c:   hlt
  0x0000775055211b0d:   hlt
  0x0000775055211b0e:   hlt
  0x0000775055211b0f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

Compiled method (n/a)     154   46     n 0       java.lang.Object::hashCode (native)
 total in heap  [0x000077505cccb090,0x000077505cccb410] = 896
 relocation     [0x000077505cccb1f0,0x000077505cccb220] = 48
 main code      [0x000077505cccb220,0x000077505cccb410] = 496

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020000668} 'hashCode' '()I' in 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x000077505cccb220:   mov    0x8(%rsi),%r10d
  0x000077505cccb224:   movabs $0x800000000,%r11
  0x000077505cccb22e:   add    %r11,%r10
  0x000077505cccb231:   cmp    %r10,%rax
  0x000077505cccb234:   je     0x000077505cccb240
  0x000077505cccb23a:   jmp    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccb23f:   nop
[Verified Entry Point]
  0x000077505cccb240:   mov    (%rsi),%rax
  0x000077505cccb243:   test   $0x1,%rax
  0x000077505cccb24a:   je     0x000077505cccb262
  0x000077505cccb250:   shr    $0x8,%rax
  0x000077505cccb254:   and    $0x7fffffff,%rax
  0x000077505cccb25b:   je     0x000077505cccb262
  0x000077505cccb261:   ret
  0x000077505cccb262:   mov    %eax,-0x14000(%rsp)
  0x000077505cccb269:   push   %rbp
  0x000077505cccb26a:   mov    %rsp,%rbp
  0x000077505cccb26d:   sub    $0x40,%rsp
  0x000077505cccb271:   mov    %rsi,(%rsp)
  0x000077505cccb275:   cmp    $0x0,%rsi
  0x000077505cccb279:   lea    (%rsp),%rsi
  0x000077505cccb27d:   cmove  (%rsp),%rsi
  0x000077505cccb282:   vzeroupper
  0x000077505cccb285:   movabs $0x77505cccb282,%r10         ;   {internal_word}
  0x000077505cccb28f:   mov    %r10,0x298(%r15)
  0x000077505cccb296:   mov    %rsp,0x290(%r15)
  0x000077505cccb29d:   cmpb   $0x0,0x1787ae01(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505cccb2a4:   je     0x000077505cccb2dc
  0x000077505cccb2aa:   push   %rsi
  0x000077505cccb2ab:   movabs $0x775020000668,%rsi         ;   {metadata({method} {0x0000775020000668} 'hashCode' '()I' in 'java/lang/Object')}
  0x000077505cccb2b5:   mov    %r15,%rdi
  0x000077505cccb2b8:   test   $0xf,%esp
  0x000077505cccb2be:   je     0x000077505cccb2d6
  0x000077505cccb2c4:   sub    $0x8,%rsp
  0x000077505cccb2c8:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505cccb2cd:   add    $0x8,%rsp
  0x000077505cccb2d1:   jmp    0x000077505cccb2db
  0x000077505cccb2d6:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505cccb2db:   pop    %rsi
  0x000077505cccb2dc:   lea    0x2b0(%r15),%rdi
  0x000077505cccb2e3:   movl   $0x4,0x340(%r15)
  0x000077505cccb2ee:   call   0x0000775073b1cb50           ;   {runtime_call JVM_IHashCode}
  0x000077505cccb2f3:   vzeroupper
  0x000077505cccb2f6:   movl   $0x5,0x340(%r15)
  0x000077505cccb301:   lock addl $0x0,-0x40(%rsp)
  0x000077505cccb307:   cmp    0x348(%r15),%rbp
  0x000077505cccb30e:   ja     0x000077505cccb325
  0x000077505cccb314:   cmpl   $0x0,0x330(%r15)
  0x000077505cccb31f:   je     0x000077505cccb349
  0x000077505cccb325:   vzeroupper
  0x000077505cccb328:   mov    %rax,-0x8(%rbp)
  0x000077505cccb32c:   mov    %r15,%rdi
  0x000077505cccb32f:   mov    %rsp,%r12
  0x000077505cccb332:   sub    $0x0,%rsp
  0x000077505cccb336:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccb33a:   call   0x00007750740b8f10           ;   {runtime_call}
  0x000077505cccb33f:   mov    %r12,%rsp
  0x000077505cccb342:   xor    %r12,%r12
  0x000077505cccb345:   mov    -0x8(%rbp),%rax
  0x000077505cccb349:   movl   $0x8,0x340(%r15)
  0x000077505cccb354:   cmpl   $0x2,0x3b0(%r15)
  0x000077505cccb35f:   je     0x000077505cccb3e9
  0x000077505cccb365:   cmpb   $0x0,0x1787ad39(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505cccb36c:   je     0x000077505cccb3aa
  0x000077505cccb372:   mov    %rax,-0x8(%rbp)
  0x000077505cccb376:   movabs $0x775020000668,%rsi         ;   {metadata({method} {0x0000775020000668} 'hashCode' '()I' in 'java/lang/Object')}
  0x000077505cccb380:   mov    %r15,%rdi
  0x000077505cccb383:   test   $0xf,%esp
  0x000077505cccb389:   je     0x000077505cccb3a1
  0x000077505cccb38f:   sub    $0x8,%rsp
  0x000077505cccb393:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505cccb398:   add    $0x8,%rsp
  0x000077505cccb39c:   jmp    0x000077505cccb3a6
  0x000077505cccb3a1:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505cccb3a6:   mov    -0x8(%rbp),%rax
  0x000077505cccb3aa:   movq   $0x0,0x290(%r15)
  0x000077505cccb3b5:   movq   $0x0,0x298(%r15)
  0x000077505cccb3c0:   vzeroupper
  0x000077505cccb3c3:   mov    0xd8(%r15),%rcx
  0x000077505cccb3ca:   movl   $0x0,0x100(%rcx)
  0x000077505cccb3d4:   leave
  0x000077505cccb3d5:   cmpq   $0x0,0x8(%r15)
  0x000077505cccb3dd:   jne    0x000077505cccb3e4
  0x000077505cccb3e3:   ret
  0x000077505cccb3e4:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000077505cccb3e9:   vzeroupper
  0x000077505cccb3ec:   mov    %rax,-0x8(%rbp)
  0x000077505cccb3f0:   mov    %rsp,%r12
  0x000077505cccb3f3:   sub    $0x0,%rsp
  0x000077505cccb3f7:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccb3fb:   call   0x0000775073f21c80           ;   {runtime_call}
  0x000077505cccb400:   mov    %r12,%rsp
  0x000077505cccb403:   xor    %r12,%r12
  0x000077505cccb406:   mov    -0x8(%rbp),%rax
  0x000077505cccb40a:   jmp    0x000077505cccb365
  0x000077505cccb40f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

Compiled method (n/a)     156   47     n 0       java.lang.System::arraycopy (native)
 total in heap  [0x000077505cccb490,0x000077505cccb820] = 912
 relocation     [0x000077505cccb5f0,0x000077505cccb620] = 48
 main code      [0x000077505cccb620,0x000077505cccb820] = 512

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020029fa0} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x000077505cccb620:   mov    0x8(%rsi),%r10d
  0x000077505cccb624:   movabs $0x800000000,%r11
  0x000077505cccb62e:   add    %r11,%r10
  0x000077505cccb631:   cmp    %r10,%rax
  0x000077505cccb634:   je     0x000077505cccb640
  0x000077505cccb63a:   jmp    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccb63f:   nop
[Verified Entry Point]
  0x000077505cccb640:   mov    %eax,-0x14000(%rsp)
  0x000077505cccb647:   push   %rbp
  0x000077505cccb648:   mov    %rsp,%rbp
  0x000077505cccb64b:   sub    $0x50,%rsp
  0x000077505cccb64f:   mov    %r9,(%rsp)
  0x000077505cccb653:   mov    %r8,%r9
  0x000077505cccb656:   mov    %rcx,0x18(%rsp)
  0x000077505cccb65b:   cmp    $0x0,%rcx
  0x000077505cccb65f:   lea    0x18(%rsp),%r8
  0x000077505cccb664:   cmove  0x18(%rsp),%r8
  0x000077505cccb66a:   mov    %rdx,%rcx
  0x000077505cccb66d:   mov    %rsi,0x8(%rsp)
  0x000077505cccb672:   cmp    $0x0,%rsi
  0x000077505cccb676:   lea    0x8(%rsp),%rdx
  0x000077505cccb67b:   cmove  0x8(%rsp),%rdx
  0x000077505cccb681:   movabs $0x62ac00f40,%r14            ;   {oop(a 'java/lang/Class'{0x000000062ac00f40} = 'java/lang/System')}
  0x000077505cccb68b:   mov    %r14,0x38(%rsp)
  0x000077505cccb690:   lea    0x38(%rsp),%r14
  0x000077505cccb695:   mov    %r14,%rsi
  0x000077505cccb698:   vzeroupper
  0x000077505cccb69b:   movabs $0x77505cccb698,%r10         ;   {internal_word}
  0x000077505cccb6a5:   mov    %r10,0x298(%r15)
  0x000077505cccb6ac:   mov    %rsp,0x290(%r15)
  0x000077505cccb6b3:   cmpb   $0x0,0x1787a9eb(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505cccb6ba:   je     0x000077505cccb6fe
  0x000077505cccb6c0:   push   %rsi
  0x000077505cccb6c1:   push   %rdx
  0x000077505cccb6c2:   push   %rcx
  0x000077505cccb6c3:   push   %r8
  0x000077505cccb6c5:   push   %r9
  0x000077505cccb6c7:   movabs $0x775020029fa0,%rsi         ;   {metadata({method} {0x0000775020029fa0} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000077505cccb6d1:   mov    %r15,%rdi
  0x000077505cccb6d4:   test   $0xf,%esp
  0x000077505cccb6da:   je     0x000077505cccb6f2
  0x000077505cccb6e0:   sub    $0x8,%rsp
  0x000077505cccb6e4:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505cccb6e9:   add    $0x8,%rsp
  0x000077505cccb6ed:   jmp    0x000077505cccb6f7
  0x000077505cccb6f2:   call   0x0000775073f20dd0           ;   {runtime_call}
  0x000077505cccb6f7:   pop    %r9
  0x000077505cccb6f9:   pop    %r8
  0x000077505cccb6fb:   pop    %rcx
  0x000077505cccb6fc:   pop    %rdx
  0x000077505cccb6fd:   pop    %rsi
  0x000077505cccb6fe:   lea    0x2b0(%r15),%rdi
  0x000077505cccb705:   movl   $0x4,0x340(%r15)
  0x000077505cccb710:   call   0x0000775073b1b900           ;   {runtime_call JVM_ArrayCopy}
  0x000077505cccb715:   vzeroupper
  0x000077505cccb718:   movl   $0x5,0x340(%r15)
  0x000077505cccb723:   lock addl $0x0,-0x40(%rsp)
  0x000077505cccb729:   cmp    0x348(%r15),%rbp
  0x000077505cccb730:   ja     0x000077505cccb747
  0x000077505cccb736:   cmpl   $0x0,0x330(%r15)
  0x000077505cccb741:   je     0x000077505cccb763
  0x000077505cccb747:   vzeroupper
  0x000077505cccb74a:   mov    %r15,%rdi
  0x000077505cccb74d:   mov    %rsp,%r12
  0x000077505cccb750:   sub    $0x0,%rsp
  0x000077505cccb754:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccb758:   call   0x00007750740b8f10           ;   {runtime_call}
  0x000077505cccb75d:   mov    %r12,%rsp
  0x000077505cccb760:   xor    %r12,%r12
  0x000077505cccb763:   movl   $0x8,0x340(%r15)
  0x000077505cccb76e:   cmpl   $0x2,0x3b0(%r15)
  0x000077505cccb779:   je     0x000077505cccb7fb
  0x000077505cccb77f:   cmpb   $0x0,0x1787a91f(%rip)        # 0x00007750745460a5
                                                            ;   {external_word}
  0x000077505cccb786:   je     0x000077505cccb7bc
  0x000077505cccb78c:   movabs $0x775020029fa0,%rsi         ;   {metadata({method} {0x0000775020029fa0} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000077505cccb796:   mov    %r15,%rdi
  0x000077505cccb799:   test   $0xf,%esp
  0x000077505cccb79f:   je     0x000077505cccb7b7
  0x000077505cccb7a5:   sub    $0x8,%rsp
  0x000077505cccb7a9:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505cccb7ae:   add    $0x8,%rsp
  0x000077505cccb7b2:   jmp    0x000077505cccb7bc
  0x000077505cccb7b7:   call   0x0000775073f20df0           ;   {runtime_call}
  0x000077505cccb7bc:   movq   $0x0,0x290(%r15)
  0x000077505cccb7c7:   movq   $0x0,0x298(%r15)
  0x000077505cccb7d2:   vzeroupper
  0x000077505cccb7d5:   mov    0xd8(%r15),%rcx
  0x000077505cccb7dc:   movl   $0x0,0x100(%rcx)
  0x000077505cccb7e6:   leave
  0x000077505cccb7e7:   cmpq   $0x0,0x8(%r15)
  0x000077505cccb7ef:   jne    0x000077505cccb7f6
  0x000077505cccb7f5:   ret
  0x000077505cccb7f6:   jmp    Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x000077505cccb7fb:   vzeroupper
  0x000077505cccb7fe:   mov    %rsp,%r12
  0x000077505cccb801:   sub    $0x0,%rsp
  0x000077505cccb805:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccb809:   call   0x0000775073f21c80           ;   {runtime_call}
  0x000077505cccb80e:   mov    %r12,%rsp
  0x000077505cccb811:   xor    %r12,%r12
  0x000077505cccb814:   jmp    0x000077505cccb77f
  0x000077505cccb819:   hlt
  0x000077505cccb81a:   hlt
  0x000077505cccb81b:   hlt
  0x000077505cccb81c:   hlt
  0x000077505cccb81d:   hlt
  0x000077505cccb81e:   hlt
  0x000077505cccb81f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     159   48       1       java.lang.module.ResolvedModule::reference (5 bytes)
 total in heap  [0x000077505cccb890,0x000077505cccbb50] = 704
 relocation     [0x000077505cccb9f0,0x000077505cccba18] = 40
 main code      [0x000077505cccba20,0x000077505cccbac0] = 160
 stub code      [0x000077505cccbac0,0x000077505cccbaf0] = 48
 metadata       [0x000077505cccbaf0,0x000077505cccbaf8] = 8
 scopes data    [0x000077505cccbaf8,0x000077505cccbb08] = 16
 scopes pcs     [0x000077505cccbb08,0x000077505cccbb48] = 64
 dependencies   [0x000077505cccbb48,0x000077505cccbb50] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202ec518} 'reference' '()Ljava/lang/module/ModuleReference;' in 'java/lang/module/ResolvedModule'
  #           [sp+0x40]  (sp of caller)
  0x000077505cccba20:   mov    0x8(%rsi),%r10d
  0x000077505cccba24:   movabs $0x800000000,%r11
  0x000077505cccba2e:   add    %r11,%r10
  0x000077505cccba31:   cmp    %rax,%r10
  0x000077505cccba34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccba3a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505cccba40:   mov    %eax,-0x14000(%rsp)
  0x000077505cccba47:   push   %rbp
  0x000077505cccba48:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::reference@0 (line 67)
  0x000077505cccba4c:   mov    0x10(%rsi),%eax
  0x000077505cccba4f:   shl    $0x3,%rax                    ;*getfield mref {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::reference@1 (line 67)
  0x000077505cccba53:   add    $0x30,%rsp
  0x000077505cccba57:   pop    %rbp
  0x000077505cccba58:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505cccba5f:   ja     0x000077505cccba66
  0x000077505cccba65:   ret
  0x000077505cccba66:   movabs $0x77505cccba58,%r10         ;   {internal_word}
  0x000077505cccba70:   mov    %r10,0x360(%r15)
  0x000077505cccba77:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505cccba7c:   nop
  0x000077505cccba7d:   nop
  0x000077505cccba7e:   mov    0x3d8(%r15),%rax
  0x000077505cccba85:   movq   $0x0,0x3d8(%r15)
  0x000077505cccba90:   movq   $0x0,0x3e0(%r15)
  0x000077505cccba9b:   add    $0x30,%rsp
  0x000077505cccba9f:   pop    %rbp
  0x000077505cccbaa0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505cccbaa5:   hlt
  0x000077505cccbaa6:   hlt
  0x000077505cccbaa7:   hlt
  0x000077505cccbaa8:   hlt
  0x000077505cccbaa9:   hlt
  0x000077505cccbaaa:   hlt
  0x000077505cccbaab:   hlt
  0x000077505cccbaac:   hlt
  0x000077505cccbaad:   hlt
  0x000077505cccbaae:   hlt
  0x000077505cccbaaf:   hlt
  0x000077505cccbab0:   hlt
  0x000077505cccbab1:   hlt
  0x000077505cccbab2:   hlt
  0x000077505cccbab3:   hlt
  0x000077505cccbab4:   hlt
  0x000077505cccbab5:   hlt
  0x000077505cccbab6:   hlt
  0x000077505cccbab7:   hlt
  0x000077505cccbab8:   hlt
  0x000077505cccbab9:   hlt
  0x000077505cccbaba:   hlt
  0x000077505cccbabb:   hlt
  0x000077505cccbabc:   hlt
  0x000077505cccbabd:   hlt
  0x000077505cccbabe:   hlt
  0x000077505cccbabf:   hlt
[Exception Handler]
  0x000077505cccbac0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505cccbac5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505cccbacf:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccbad3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505cccbad8:   hlt
[Deopt Handler Code]
  0x000077505cccbad9:   movabs $0x77505cccbad9,%r10         ;   {section_word}
  0x000077505cccbae3:   push   %r10
  0x000077505cccbae5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccbaea:   hlt
  0x000077505cccbaeb:   hlt
  0x000077505cccbaec:   hlt
  0x000077505cccbaed:   hlt
  0x000077505cccbaee:   hlt
  0x000077505cccbaef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     160   49       3       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x0000775055211c10,0x0000775055213950] = 7488
 relocation     [0x0000775055211d70,0x0000775055211eb0] = 320
 main code      [0x0000775055211ec0,0x0000775055212ea0] = 4064
 stub code      [0x0000775055212ea0,0x0000775055212f50] = 176
 metadata       [0x0000775055212f50,0x0000775055212f70] = 32
 scopes data    [0x0000775055212f70,0x0000775055213310] = 928
 scopes pcs     [0x0000775055213310,0x00007750552138e0] = 1488
 dependencies   [0x00007750552138e0,0x00007750552138e8] = 8
 nul chk table  [0x00007750552138e8,0x0000775055213950] = 104

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x0000775055211ec0:   mov    0x8(%rsi),%r10d
  0x0000775055211ec4:   movabs $0x800000000,%r11
  0x0000775055211ece:   add    %r11,%r10
  0x0000775055211ed1:   cmp    %rax,%r10
  0x0000775055211ed4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055211eda:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055211ee0:   mov    %eax,-0x14000(%rsp)
  0x0000775055211ee7:   push   %rbp
  0x0000775055211ee8:   sub    $0xa0,%rsp
  0x0000775055211eef:   mov    %rsi,0x50(%rsp)
  0x0000775055211ef4:   mov    %edx,0x48(%rsp)
  0x0000775055211ef8:   mov    %rcx,0x58(%rsp)
  0x0000775055211efd:   mov    %edi,0x68(%rsp)
  0x0000775055211f01:   movabs $0x7750202faf90,%rbx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055211f0b:   mov    0xf4(%rbx),%eax
  0x0000775055211f11:   add    $0x2,%eax
  0x0000775055211f14:   mov    %eax,0xf4(%rbx)
  0x0000775055211f1a:   and    $0x7fe,%eax
  0x0000775055211f20:   cmp    $0x0,%eax
  0x0000775055211f23:   je     0x0000775055212cc4           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@0 (line 626)
  0x0000775055211f29:   mov    0x24(%rsi),%ebx
  0x0000775055211f2c:   shl    $0x3,%rbx                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@1 (line 626)
  0x0000775055211f30:   cmp    $0x0,%rbx
  0x0000775055211f34:   movabs $0x7750202faf90,%rax         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055211f3e:   movabs $0x138,%r11
  0x0000775055211f48:   je     0x0000775055211f58
  0x0000775055211f4e:   movabs $0x148,%r11
  0x0000775055211f58:   mov    (%rax,%r11,1),%r13
  0x0000775055211f5c:   lea    0x1(%r13),%r13
  0x0000775055211f60:   mov    %r13,(%rax,%r11,1)
  0x0000775055211f64:   je     0x0000775055211fb5           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@7 (line 626)
  0x0000775055211f6a:   mov    0xc(%rbx),%eax               ; implicit exception: dispatches to 0x0000775055212ce5
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@12 (line 626)
  0x0000775055211f6d:   cmp    $0x0,%eax
  0x0000775055211f70:   movabs $0x7750202faf90,%r11         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055211f7a:   movabs $0x168,%r13
  0x0000775055211f84:   je     0x0000775055211f94
  0x0000775055211f8a:   movabs $0x158,%r13
  0x0000775055211f94:   mov    (%r11,%r13,1),%r14
  0x0000775055211f98:   lea    0x1(%r14),%r14
  0x0000775055211f9c:   mov    %r14,(%r11,%r13,1)
  0x0000775055211fa0:   je     0x0000775055211fb5           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@16 (line 626)
  0x0000775055211fa6:   mov    %r9d,0x4c(%rsp)
  0x0000775055211fab:   mov    %r8,0x60(%rsp)
  0x0000775055211fb0:   jmp    0x0000775055211ff0           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@29 (line 628)
  0x0000775055211fb5:   mov    %r9d,0x4c(%rsp)
  0x0000775055211fba:   mov    %r8,0x60(%rsp)
  0x0000775055211fbf:   mov    %rsi,%rbx
  0x0000775055211fc2:   movabs $0x7750202faf90,%rax         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055211fcc:   addq   $0x1,0x178(%rax)
  0x0000775055211fd4:   mov    %rsi,%rbx
  0x0000775055211fd7:   mov    %rbx,%rsi                    ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@20 (line 627)
  0x0000775055211fda:   nopl   0x0(%rax,%rax,1)
  0x0000775055211fdf:   call   0x000077505c788080           ; ImmutableOopMap {[80]=Oop [96]=Oop [88]=Oop }
                                                            ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@20 (line 627)
                                                            ;   {optimized virtual_call}
  0x0000775055211fe4:   mov    %rax,%rdx                    ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@20 (line 627)
  0x0000775055211fe7:   mov    0xc(%rdx),%ecx               ; implicit exception: dispatches to 0x0000775055212cea
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@26 (line 627)
  0x0000775055211fea:   mov    %rcx,%rax
  0x0000775055211fed:   mov    %rdx,%rbx                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@29 (line 628)
  0x0000775055211ff0:   dec    %eax
  0x0000775055211ff2:   and    0x48(%rsp),%eax
  0x0000775055211ff6:   cmp    0xc(%rbx),%eax               ; implicit exception: dispatches to 0x0000775055212cef
  0x0000775055211ff9:   jae    0x0000775055212cf9
  0x0000775055211fff:   movslq %eax,%rdx
  0x0000775055212002:   mov    0x10(%rbx,%rdx,4),%edi
  0x0000775055212006:   shl    $0x3,%rdi                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@40 (line 628)
  0x000077505521200a:   cmp    $0x0,%rdi
  0x000077505521200e:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212018:   movabs $0x1b0,%rcx
  0x0000775055212022:   jne    0x0000775055212032
  0x0000775055212028:   movabs $0x1c0,%rcx
  0x0000775055212032:   mov    (%rdx,%rcx,1),%r8
  0x0000775055212036:   lea    0x1(%r8),%r8
  0x000077505521203a:   mov    %r8,(%rdx,%rcx,1)
  0x000077505521203e:   jne    0x0000775055212209           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@44 (line 628)
  0x0000775055212044:   mov    %eax,0x6c(%rsp)
  0x0000775055212048:   mov    %rbx,0x70(%rsp)
  0x000077505521204d:   mov    0x50(%rsp),%rsi
  0x0000775055212052:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505521205c:   movabs $0x80005f9b0,%r10            ;   {metadata('java/util/HashMap')}
  0x0000775055212066:   mov    %r10,0x1e0(%rdx)
  0x000077505521206d:   addq   $0x1,0x1e8(%rdx)
  0x0000775055212075:   mov    0x48(%rsp),%edx
  0x0000775055212079:   mov    0x58(%rsp),%rcx
  0x000077505521207e:   mov    0x60(%rsp),%r8
  0x0000775055212083:   movabs $0x0,%r9                     ;   {oop(NULL)}
  0x000077505521208d:   mov    0x50(%rsp),%rsi              ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@56 (line 629)
  0x0000775055212092:   nopl   0x0(%rax,%rax,1)
  0x0000775055212097:   call   0x000077505c788080           ; ImmutableOopMap {[80]=Oop [112]=Oop }
                                                            ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@56 (line 629)
                                                            ;   {optimized virtual_call}
  0x000077505521209c:   mov    0x70(%rsp),%rbx
  0x00007750552120a1:   cmp    $0x0,%rax
  0x00007750552120a5:   jne    0x00007750552120bd
  0x00007750552120a7:   movabs $0x7750202faf90,%rsi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552120b1:   orb    $0x1,0x201(%rsi)
  0x00007750552120b8:   jmp    0x00007750552121bc
  0x00007750552120bd:   mov    0x8(%rbx),%edx               ; implicit exception: dispatches to 0x0000775055212d07
  0x00007750552120c0:   movabs $0x800000000,%r10
  0x00007750552120ca:   add    %r10,%rdx
  0x00007750552120cd:   mov    0x8(%rax),%esi
  0x00007750552120d0:   movabs $0x800000000,%r10
  0x00007750552120da:   add    %r10,%rsi
  0x00007750552120dd:   mov    0xe0(%rdx),%rdx
  0x00007750552120e4:   cmp    %rdx,%rsi
  0x00007750552120e7:   je     0x0000775055212115
  0x00007750552120ed:   mov    0x14(%rdx),%edi
  0x00007750552120f0:   cmp    (%rsi,%rdi,1),%rdx
  0x00007750552120f4:   je     0x0000775055212115
  0x00007750552120fa:   cmp    $0x20,%edi
  0x00007750552120fd:   jne    0x00007750552121a5
  0x0000775055212103:   push   %rsi
  0x0000775055212104:   push   %rdx
  0x0000775055212105:   call   0x000077505c82bf80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000077505521210a:   pop    %rsi
  0x000077505521210b:   pop    %rdx
  0x000077505521210c:   cmp    $0x0,%edx
  0x000077505521210f:   je     0x00007750552121a5
  0x0000775055212115:   movabs $0x7750202faf90,%rsi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505521211f:   mov    0x8(%rax),%edx
  0x0000775055212122:   movabs $0x800000000,%r10
  0x000077505521212c:   add    %r10,%rdx
  0x000077505521212f:   cmp    0x218(%rsi),%rdx
  0x0000775055212136:   jne    0x0000775055212145
  0x0000775055212138:   addq   $0x1,0x220(%rsi)
  0x0000775055212140:   jmp    0x00007750552121bc
  0x0000775055212145:   cmp    0x228(%rsi),%rdx
  0x000077505521214c:   jne    0x000077505521215b
  0x000077505521214e:   addq   $0x1,0x230(%rsi)
  0x0000775055212156:   jmp    0x00007750552121bc
  0x000077505521215b:   cmpq   $0x0,0x218(%rsi)
  0x0000775055212166:   jne    0x000077505521217f
  0x0000775055212168:   mov    %rdx,0x218(%rsi)
  0x000077505521216f:   movq   $0x1,0x220(%rsi)
  0x000077505521217a:   jmp    0x00007750552121bc
  0x000077505521217f:   cmpq   $0x0,0x228(%rsi)
  0x000077505521218a:   jne    0x00007750552121a3
  0x000077505521218c:   mov    %rdx,0x228(%rsi)
  0x0000775055212193:   movq   $0x1,0x230(%rsi)
  0x000077505521219e:   jmp    0x00007750552121bc
  0x00007750552121a3:   jmp    0x00007750552121bc
  0x00007750552121a5:   movabs $0x7750202faf90,%rsi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552121af:   subq   $0x1,0x208(%rsi)
  0x00007750552121b7:   jmp    0x0000775055212d0c
  0x00007750552121bc:   mov    0x6c(%rsp),%edx
  0x00007750552121c0:   movslq %edx,%rdx
  0x00007750552121c3:   lea    0x10(%rbx,%rdx,4),%rdx
  0x00007750552121c8:   movsbl 0x38(%r15),%esi
  0x00007750552121cd:   cmp    $0x0,%esi
  0x00007750552121d0:   jne    0x0000775055212d15
  0x00007750552121d6:   mov    %rax,%r10
  0x00007750552121d9:   shr    $0x3,%r10
  0x00007750552121dd:   mov    %r10d,(%rdx)
  0x00007750552121e0:   mov    %rdx,%rsi
  0x00007750552121e3:   xor    %rax,%rsi
  0x00007750552121e6:   shr    $0x16,%rsi
  0x00007750552121ea:   cmp    $0x0,%rsi
  0x00007750552121ee:   jne    0x0000775055212d33           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@59 (line 629)
  0x00007750552121f4:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552121fe:   incl   0x240(%rdx)
  0x0000775055212204:   jmp    0x0000775055212abe           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@60 (line 629)
  0x0000775055212209:   mov    0xc(%rdi),%edx               ; implicit exception: dispatches to 0x0000775055212d4b
                                                            ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@65 (line 632)
  0x000077505521220c:   cmp    0x48(%rsp),%edx
  0x0000775055212210:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505521221a:   movabs $0x268,%rsi
  0x0000775055212224:   je     0x0000775055212234
  0x000077505521222a:   movabs $0x258,%rsi
  0x0000775055212234:   mov    (%rdx,%rsi,1),%rax
  0x0000775055212238:   lea    0x1(%rax),%rax
  0x000077505521223c:   mov    %rax,(%rdx,%rsi,1)
  0x0000775055212240:   je     0x0000775055212250           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@69 (line 632)
  0x0000775055212246:   mov    %rbx,0x70(%rsp)
  0x000077505521224b:   jmp    0x00007750552123d2           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@104 (line 635)
  0x0000775055212250:   mov    0x58(%rsp),%rcx
  0x0000775055212255:   mov    0x10(%rdi),%edx
  0x0000775055212258:   shl    $0x3,%rdx                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@74 (line 632)
  0x000077505521225c:   cmp    %rcx,%rdx
  0x000077505521225f:   movabs $0x7750202faf90,%rsi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212269:   movabs $0x278,%rax
  0x0000775055212273:   je     0x0000775055212283
  0x0000775055212279:   movabs $0x288,%rax
  0x0000775055212283:   mov    (%rsi,%rax,1),%r8
  0x0000775055212287:   lea    0x1(%r8),%r8
  0x000077505521228b:   mov    %r8,(%rsi,%rax,1)
  0x000077505521228f:   je     0x0000775055212a71           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@81 (line 632)
  0x0000775055212295:   cmp    $0x0,%rcx
  0x0000775055212299:   movabs $0x7750202faf90,%rsi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552122a3:   movabs $0x2a8,%rax
  0x00007750552122ad:   jne    0x00007750552122bd
  0x00007750552122b3:   movabs $0x298,%rax
  0x00007750552122bd:   mov    (%rsi,%rax,1),%r8
  0x00007750552122c1:   lea    0x1(%r8),%r8
  0x00007750552122c5:   mov    %r8,(%rsi,%rax,1)
  0x00007750552122c9:   jne    0x00007750552122d9           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@85 (line 632)
  0x00007750552122cf:   mov    %rbx,0x70(%rsp)
  0x00007750552122d4:   jmp    0x00007750552123d2           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@104 (line 635)
  0x00007750552122d9:   mov    %rdi,0x78(%rsp)
  0x00007750552122de:   mov    %rbx,0x70(%rsp)
  0x00007750552122e3:   cmp    (%rcx),%rax                  ; implicit exception: dispatches to 0x0000775055212d50
  0x00007750552122e6:   mov    %rcx,%rsi
  0x00007750552122e9:   movabs $0x7750202faf90,%rax         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552122f3:   mov    0x8(%rsi),%esi
  0x00007750552122f6:   movabs $0x800000000,%r10
  0x0000775055212300:   add    %r10,%rsi
  0x0000775055212303:   cmp    0x2c8(%rax),%rsi
  0x000077505521230a:   jne    0x0000775055212319
  0x000077505521230c:   addq   $0x1,0x2d0(%rax)
  0x0000775055212314:   jmp    0x000077505521237f
  0x0000775055212319:   cmp    0x2d8(%rax),%rsi
  0x0000775055212320:   jne    0x000077505521232f
  0x0000775055212322:   addq   $0x1,0x2e0(%rax)
  0x000077505521232a:   jmp    0x000077505521237f
  0x000077505521232f:   cmpq   $0x0,0x2c8(%rax)
  0x000077505521233a:   jne    0x0000775055212353
  0x000077505521233c:   mov    %rsi,0x2c8(%rax)
  0x0000775055212343:   movq   $0x1,0x2d0(%rax)
  0x000077505521234e:   jmp    0x000077505521237f
  0x0000775055212353:   cmpq   $0x0,0x2d8(%rax)
  0x000077505521235e:   jne    0x0000775055212377
  0x0000775055212360:   mov    %rsi,0x2d8(%rax)
  0x0000775055212367:   movq   $0x1,0x2e0(%rax)
  0x0000775055212372:   jmp    0x000077505521237f
  0x0000775055212377:   addq   $0x1,0x2b8(%rax)
  0x000077505521237f:   mov    %rcx,%rsi                    ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@91 (line 633)
  0x0000775055212382:   data16 xchg %ax,%ax
  0x0000775055212385:   movabs $0xffffffffffffffff,%rax
  0x000077505521238f:   call   0x000077505c788380           ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop [120]=Oop [88]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@91 (line 633)
                                                            ;   {virtual_call}
  0x0000775055212394:   cmp    $0x0,%eax
  0x0000775055212397:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552123a1:   movabs $0x300,%rcx
  0x00007750552123ab:   jne    0x00007750552123bb
  0x00007750552123b1:   movabs $0x2f0,%rcx
  0x00007750552123bb:   mov    (%rdx,%rcx,1),%r8
  0x00007750552123bf:   lea    0x1(%r8),%r8
  0x00007750552123c3:   mov    %r8,(%rdx,%rcx,1)
  0x00007750552123c7:   mov    0x78(%rsp),%rdi
  0x00007750552123cc:   jne    0x0000775055212a71           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@94 (line 633)
  0x00007750552123d2:   cmp    $0x0,%rdi
  0x00007750552123d6:   jne    0x00007750552123ef
  0x00007750552123d8:   movabs $0x7750202faf90,%r8          ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552123e2:   orb    $0x1,0x321(%r8)
  0x00007750552123ea:   jmp    0x00007750552124c2
  0x00007750552123ef:   movabs $0x8000614f8,%r9             ;   {metadata('java/util/HashMap$TreeNode')}
  0x00007750552123f9:   mov    0x8(%rdi),%ecx
  0x00007750552123fc:   movabs $0x800000000,%r10
  0x0000775055212406:   add    %r10,%rcx
  0x0000775055212409:   cmp    %rcx,%r9
  0x000077505521240c:   jne    0x00007750552124a6
  0x0000775055212412:   movabs $0x7750202faf90,%r8          ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505521241c:   mov    0x8(%rdi),%r9d
  0x0000775055212420:   movabs $0x800000000,%r10
  0x000077505521242a:   add    %r10,%r9
  0x000077505521242d:   cmp    0x338(%r8),%r9
  0x0000775055212434:   jne    0x0000775055212443
  0x0000775055212436:   addq   $0x1,0x340(%r8)
  0x000077505521243e:   jmp    0x00007750552124c7
  0x0000775055212443:   cmp    0x348(%r8),%r9
  0x000077505521244a:   jne    0x0000775055212459
  0x000077505521244c:   addq   $0x1,0x350(%r8)
  0x0000775055212454:   jmp    0x00007750552124c7
  0x0000775055212459:   cmpq   $0x0,0x338(%r8)
  0x0000775055212464:   jne    0x000077505521247d
  0x0000775055212466:   mov    %r9,0x338(%r8)
  0x000077505521246d:   movq   $0x1,0x340(%r8)
  0x0000775055212478:   jmp    0x00007750552124c7
  0x000077505521247d:   cmpq   $0x0,0x348(%r8)
  0x0000775055212488:   jne    0x00007750552124a1
  0x000077505521248a:   mov    %r9,0x348(%r8)
  0x0000775055212491:   movq   $0x1,0x350(%r8)
  0x000077505521249c:   jmp    0x00007750552124c7
  0x00007750552124a1:   jmp    0x00007750552124c7
  0x00007750552124a6:   movabs $0x7750202faf90,%r8          ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552124b0:   subq   $0x1,0x328(%r8)
  0x00007750552124b8:   jmp    0x00007750552124c2
  0x00007750552124bd:   jmp    0x00007750552124c7
  0x00007750552124c2:   xor    %rdx,%rdx
  0x00007750552124c5:   jmp    0x00007750552124d1
  0x00007750552124c7:   movabs $0x1,%rdx                    ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@106 (line 635)
  0x00007750552124d1:   cmp    $0x0,%edx
  0x00007750552124d4:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552124de:   movabs $0x360,%rcx
  0x00007750552124e8:   je     0x00007750552124f8
  0x00007750552124ee:   movabs $0x370,%rcx
  0x00007750552124f8:   mov    (%rdx,%rcx,1),%r8
  0x00007750552124fc:   lea    0x1(%r8),%r8
  0x0000775055212500:   mov    %r8,(%rdx,%rcx,1)
  0x0000775055212504:   je     0x00007750552126d1           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@109 (line 635)
  0x000077505521250a:   cmp    $0x0,%rdi
  0x000077505521250e:   jne    0x0000775055212526
  0x0000775055212510:   movabs $0x7750202faf90,%rcx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505521251a:   orb    $0x1,0x379(%rcx)
  0x0000775055212521:   jmp    0x00007750552125f9
  0x0000775055212526:   movabs $0x8000614f8,%r8             ;   {metadata('java/util/HashMap$TreeNode')}
  0x0000775055212530:   mov    0x8(%rdi),%edx
  0x0000775055212533:   movabs $0x800000000,%r10
  0x000077505521253d:   add    %r10,%rdx
  0x0000775055212540:   cmp    %rdx,%r8
  0x0000775055212543:   jne    0x00007750552125dd
  0x0000775055212549:   movabs $0x7750202faf90,%rcx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212553:   mov    0x8(%rdi),%r8d
  0x0000775055212557:   movabs $0x800000000,%r10
  0x0000775055212561:   add    %r10,%r8
  0x0000775055212564:   cmp    0x390(%rcx),%r8
  0x000077505521256b:   jne    0x000077505521257a
  0x000077505521256d:   addq   $0x1,0x398(%rcx)
  0x0000775055212575:   jmp    0x00007750552125f9
  0x000077505521257a:   cmp    0x3a0(%rcx),%r8
  0x0000775055212581:   jne    0x0000775055212590
  0x0000775055212583:   addq   $0x1,0x3a8(%rcx)
  0x000077505521258b:   jmp    0x00007750552125f9
  0x0000775055212590:   cmpq   $0x0,0x390(%rcx)
  0x000077505521259b:   jne    0x00007750552125b4
  0x000077505521259d:   mov    %r8,0x390(%rcx)
  0x00007750552125a4:   movq   $0x1,0x398(%rcx)
  0x00007750552125af:   jmp    0x00007750552125f9
  0x00007750552125b4:   cmpq   $0x0,0x3a0(%rcx)
  0x00007750552125bf:   jne    0x00007750552125d8
  0x00007750552125c1:   mov    %r8,0x3a0(%rcx)
  0x00007750552125c8:   movq   $0x1,0x3a8(%rcx)
  0x00007750552125d3:   jmp    0x00007750552125f9
  0x00007750552125d8:   jmp    0x00007750552125f9
  0x00007750552125dd:   movabs $0x7750202faf90,%rcx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552125e7:   subq   $0x1,0x380(%rcx)
  0x00007750552125ef:   jmp    0x0000775055212d55
  0x00007750552125f4:   jmp    0x00007750552125f9
  0x00007750552125f9:   mov    %rdi,%rsi                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@114 (line 636)
  0x00007750552125fc:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x0000775055212d5e
  0x00007750552125ff:   mov    %rsi,%rdx
  0x0000775055212602:   movabs $0x7750202faf90,%rcx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505521260c:   mov    0x8(%rdx),%edx
  0x000077505521260f:   movabs $0x800000000,%r10
  0x0000775055212619:   add    %r10,%rdx
  0x000077505521261c:   cmp    0x3c8(%rcx),%rdx
  0x0000775055212623:   jne    0x0000775055212632
  0x0000775055212625:   addq   $0x1,0x3d0(%rcx)
  0x000077505521262d:   jmp    0x0000775055212698
  0x0000775055212632:   cmp    0x3d8(%rcx),%rdx
  0x0000775055212639:   jne    0x0000775055212648
  0x000077505521263b:   addq   $0x1,0x3e0(%rcx)
  0x0000775055212643:   jmp    0x0000775055212698
  0x0000775055212648:   cmpq   $0x0,0x3c8(%rcx)
  0x0000775055212653:   jne    0x000077505521266c
  0x0000775055212655:   mov    %rdx,0x3c8(%rcx)
  0x000077505521265c:   movq   $0x1,0x3d0(%rcx)
  0x0000775055212667:   jmp    0x0000775055212698
  0x000077505521266c:   cmpq   $0x0,0x3d8(%rcx)
  0x0000775055212677:   jne    0x0000775055212690
  0x0000775055212679:   mov    %rdx,0x3d8(%rcx)
  0x0000775055212680:   movq   $0x1,0x3e0(%rcx)
  0x000077505521268b:   jmp    0x0000775055212698
  0x0000775055212690:   addq   $0x1,0x3b8(%rcx)
  0x0000775055212698:   mov    0x50(%rsp),%rdx
  0x000077505521269d:   mov    0x70(%rsp),%rcx
  0x00007750552126a2:   mov    0x48(%rsp),%r8d
  0x00007750552126a7:   mov    0x58(%rsp),%r9
  0x00007750552126ac:   mov    0x60(%rsp),%rdi              ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@123 (line 636)
  0x00007750552126b1:   nopw   0x0(%rax,%rax,1)
  0x00007750552126b7:   call   0x000077505c788080           ; ImmutableOopMap {[80]=Oop [96]=Oop }
                                                            ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@123 (line 636)
                                                            ;   {optimized virtual_call}
  0x00007750552126bc:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552126c6:   incl   0x3f0(%rdx)
  0x00007750552126cc:   jmp    0x0000775055212a84           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@128 (line 636)
  0x00007750552126d1:   mov    $0x0,%ebx                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@134 (line 639)
  0x00007750552126d6:   xchg   %ax,%ax
  0x00007750552126d8:   mov    %ebx,0x80(%rsp)
  0x00007750552126df:   mov    0x58(%rsp),%rcx
  0x00007750552126e4:   mov    0x48(%rsp),%edx
  0x00007750552126e8:   mov    0x18(%rdi),%eax              ; implicit exception: dispatches to 0x0000775055212d63
  0x00007750552126eb:   shl    $0x3,%rax                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@136 (line 639)
  0x00007750552126ef:   mov    %rax,0x88(%rsp)
  0x00007750552126f7:   cmp    $0x0,%rax
  0x00007750552126fb:   movabs $0x7750202faf90,%rsi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212705:   movabs $0x418,%r8
  0x000077505521270f:   je     0x000077505521271f
  0x0000775055212715:   movabs $0x408,%r8
  0x000077505521271f:   mov    (%rsi,%r8,1),%r9
  0x0000775055212723:   lea    0x1(%r9),%r9
  0x0000775055212727:   mov    %r9,(%rsi,%r8,1)
  0x000077505521272b:   je     0x0000775055212957           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@142 (line 639)
  0x0000775055212731:   mov    0xc(%rax),%esi               ; implicit exception: dispatches to 0x0000775055212d68
                                                            ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@177 (line 645)
  0x0000775055212734:   cmp    %edx,%esi
  0x0000775055212736:   movabs $0x7750202faf90,%rsi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212740:   movabs $0x4d0,%rdi
  0x000077505521274a:   jne    0x000077505521275a
  0x0000775055212750:   movabs $0x4e0,%rdi
  0x000077505521275a:   mov    (%rsi,%rdi,1),%r8
  0x000077505521275e:   lea    0x1(%r8),%r8
  0x0000775055212762:   mov    %r8,(%rsi,%rdi,1)
  0x0000775055212766:   jne    0x00007750552128d5           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@181 (line 645)
  0x000077505521276c:   mov    0x10(%rax),%esi
  0x000077505521276f:   shl    $0x3,%rsi                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@186 (line 645)
  0x0000775055212773:   cmp    %rcx,%rsi
  0x0000775055212776:   movabs $0x7750202faf90,%rdi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212780:   movabs $0x4f0,%r8
  0x000077505521278a:   je     0x000077505521279a
  0x0000775055212790:   movabs $0x500,%r8
  0x000077505521279a:   mov    (%rdi,%r8,1),%r9
  0x000077505521279e:   lea    0x1(%r9),%r9
  0x00007750552127a2:   mov    %r9,(%rdi,%r8,1)
  0x00007750552127a6:   je     0x000077505521292d           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@193 (line 645)
  0x00007750552127ac:   cmp    $0x0,%rcx
  0x00007750552127b0:   movabs $0x7750202faf90,%rdi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552127ba:   movabs $0x510,%r8
  0x00007750552127c4:   je     0x00007750552127d4
  0x00007750552127ca:   movabs $0x520,%r8
  0x00007750552127d4:   mov    (%rdi,%r8,1),%r9
  0x00007750552127d8:   lea    0x1(%r9),%r9
  0x00007750552127dc:   mov    %r9,(%rdi,%r8,1)
  0x00007750552127e0:   je     0x00007750552128d5           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@197 (line 645)
  0x00007750552127e6:   cmp    (%rcx),%rax                  ; implicit exception: dispatches to 0x0000775055212d6d
  0x00007750552127e9:   mov    %rcx,%rdi
  0x00007750552127ec:   movabs $0x7750202faf90,%r8          ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552127f6:   mov    0x8(%rdi),%edi
  0x00007750552127f9:   movabs $0x800000000,%r10
  0x0000775055212803:   add    %r10,%rdi
  0x0000775055212806:   cmp    0x540(%r8),%rdi
  0x000077505521280d:   jne    0x000077505521281c
  0x000077505521280f:   addq   $0x1,0x548(%r8)
  0x0000775055212817:   jmp    0x0000775055212882
  0x000077505521281c:   cmp    0x550(%r8),%rdi
  0x0000775055212823:   jne    0x0000775055212832
  0x0000775055212825:   addq   $0x1,0x558(%r8)
  0x000077505521282d:   jmp    0x0000775055212882
  0x0000775055212832:   cmpq   $0x0,0x540(%r8)
  0x000077505521283d:   jne    0x0000775055212856
  0x000077505521283f:   mov    %rdi,0x540(%r8)
  0x0000775055212846:   movq   $0x1,0x548(%r8)
  0x0000775055212851:   jmp    0x0000775055212882
  0x0000775055212856:   cmpq   $0x0,0x550(%r8)
  0x0000775055212861:   jne    0x000077505521287a
  0x0000775055212863:   mov    %rdi,0x550(%r8)
  0x000077505521286a:   movq   $0x1,0x558(%r8)
  0x0000775055212875:   jmp    0x0000775055212882
  0x000077505521287a:   addq   $0x1,0x530(%r8)
  0x0000775055212882:   mov    %rsi,%rdx
  0x0000775055212885:   mov    %rcx,%rsi                    ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@203 (line 646)
  0x0000775055212888:   nopl   0x0(%rax,%rax,1)
  0x000077505521288d:   movabs $0xffffffffffffffff,%rax
  0x0000775055212897:   call   0x000077505c788380           ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop [136]=Oop [88]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@203 (line 646)
                                                            ;   {virtual_call}
  0x000077505521289c:   cmp    $0x0,%eax
  0x000077505521289f:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552128a9:   movabs $0x578,%rcx
  0x00007750552128b3:   jne    0x00007750552128c3
  0x00007750552128b9:   movabs $0x568,%rcx
  0x00007750552128c3:   mov    (%rdx,%rcx,1),%r8
  0x00007750552128c7:   lea    0x1(%r8),%r8
  0x00007750552128cb:   mov    %r8,(%rdx,%rcx,1)
  0x00007750552128cf:   jne    0x000077505521293a           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@206 (line 646)
  0x00007750552128d5:   mov    0x80(%rsp),%ebx
  0x00007750552128dc:   inc    %ebx
  0x00007750552128de:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552128e8:   mov    0xf8(%rdx),%ecx
  0x00007750552128ee:   add    $0x2,%ecx
  0x00007750552128f1:   mov    %ecx,0xf8(%rdx)
  0x00007750552128f7:   and    $0x3ffe,%ecx
  0x00007750552128fd:   cmp    $0x0,%ecx
  0x0000775055212900:   je     0x0000775055212d72           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@219 (line 638)
  0x0000775055212906:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop [136]=Oop [88]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::putVal@219 (line 638)
  0x000077505521290d:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055212910:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505521291a:   incl   0x5a0(%rdx)
  0x0000775055212920:   mov    0x88(%rsp),%rdi
  0x0000775055212928:   jmp    0x00007750552126d8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@219 (line 638)
  0x000077505521292d:   mov    0x88(%rsp),%rax
  0x0000775055212935:   jmp    0x0000775055212a84           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@222 (line 651)
  0x000077505521293a:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212944:   incl   0x588(%rdx)
  0x000077505521294a:   mov    0x88(%rsp),%rax
  0x0000775055212952:   jmp    0x0000775055212a84           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@209 (line 647)
  0x0000775055212957:   mov    %rdi,0x90(%rsp)
  0x000077505521295f:   mov    0x50(%rsp),%rsi
  0x0000775055212964:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505521296e:   movabs $0x80005f9b0,%r10            ;   {metadata('java/util/HashMap')}
  0x0000775055212978:   mov    %r10,0x438(%rdx)
  0x000077505521297f:   addq   $0x1,0x440(%rdx)
  0x0000775055212987:   mov    0x48(%rsp),%edx
  0x000077505521298b:   mov    0x60(%rsp),%r8
  0x0000775055212990:   movabs $0x0,%r9                     ;   {oop(NULL)}
  0x000077505521299a:   mov    0x50(%rsp),%rsi              ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@152 (line 640)
  0x000077505521299f:   call   0x000077505c788080           ; ImmutableOopMap {[80]=Oop [96]=Oop [136]=Oop [112]=Oop [144]=Oop }
                                                            ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@152 (line 640)
                                                            ;   {optimized virtual_call}
  0x00007750552129a4:   movsbl 0x38(%r15),%edx
  0x00007750552129a9:   cmp    $0x0,%edx
  0x00007750552129ac:   mov    0x90(%rsp),%rdi
  0x00007750552129b4:   jne    0x0000775055212d93
  0x00007750552129ba:   mov    %rax,%r10
  0x00007750552129bd:   shr    $0x3,%r10
  0x00007750552129c1:   mov    %r10d,0x18(%rdi)
  0x00007750552129c5:   mov    %rdi,%rdx
  0x00007750552129c8:   xor    %rax,%rdx
  0x00007750552129cb:   shr    $0x16,%rdx
  0x00007750552129cf:   cmp    $0x0,%rdx
  0x00007750552129d3:   jne    0x0000775055212db2           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@155 (line 640)
  0x00007750552129d9:   mov    0x80(%rsp),%ebx
  0x00007750552129e0:   cmp    $0x7,%ebx
  0x00007750552129e3:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552129ed:   movabs $0x470,%rcx
  0x00007750552129f7:   jge    0x0000775055212a07
  0x00007750552129fd:   movabs $0x460,%rcx
  0x0000775055212a07:   mov    (%rdx,%rcx,1),%rsi
  0x0000775055212a0b:   lea    0x1(%rsi),%rsi
  0x0000775055212a0f:   mov    %rsi,(%rdx,%rcx,1)
  0x0000775055212a13:   jge    0x0000775055212a26           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@162 (line 641)
  0x0000775055212a19:   mov    0x88(%rsp),%rax
  0x0000775055212a21:   jmp    0x0000775055212a84           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@222 (line 651)
  0x0000775055212a26:   mov    0x70(%rsp),%rbx
  0x0000775055212a2b:   mov    0x48(%rsp),%ecx
  0x0000775055212a2f:   mov    0x50(%rsp),%rsi
  0x0000775055212a34:   movabs $0x7750202faf90,%rdx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212a3e:   addq   $0x1,0x480(%rdx)
  0x0000775055212a46:   mov    %rbx,%rdx
  0x0000775055212a49:   mov    0x50(%rsp),%rsi              ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@169 (line 642)
  0x0000775055212a4e:   nop
  0x0000775055212a4f:   call   0x000077505c788080           ; ImmutableOopMap {[80]=Oop [96]=Oop [136]=Oop }
                                                            ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@169 (line 642)
                                                            ;   {optimized virtual_call}
  0x0000775055212a54:   movabs $0x7750202faf90,%rax         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212a5e:   incl   0x4b8(%rax)
  0x0000775055212a64:   mov    0x88(%rsp),%rax
  0x0000775055212a6c:   jmp    0x0000775055212a84           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@172 (line 642)
  0x0000775055212a71:   movabs $0x7750202faf90,%rax         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212a7b:   incl   0x310(%rax)
  0x0000775055212a81:   mov    %rdi,%rax                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@101 (line 634)
  0x0000775055212a84:   cmp    $0x0,%rax
  0x0000775055212a88:   movabs $0x7750202faf90,%rsi         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212a92:   movabs $0x5c8,%rdi
  0x0000775055212a9c:   jne    0x0000775055212aac
  0x0000775055212aa2:   movabs $0x5b8,%rdi
  0x0000775055212aac:   mov    (%rsi,%rdi,1),%rbx
  0x0000775055212ab0:   lea    0x1(%rbx),%rbx
  0x0000775055212ab4:   mov    %rbx,(%rsi,%rdi,1)
  0x0000775055212ab8:   jne    0x0000775055212b13           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@224 (line 651)
  0x0000775055212abe:   mov    0x50(%rsp),%rsi
  0x0000775055212ac3:   mov    0x18(%rsi),%eax              ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@261 (line 659)
  0x0000775055212ac6:   inc    %eax
  0x0000775055212ac8:   mov    %eax,0x18(%rsi)              ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@266 (line 659)
  0x0000775055212acb:   mov    0x14(%rsi),%eax              ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@271 (line 660)
  0x0000775055212ace:   inc    %eax
  0x0000775055212ad0:   mov    %eax,0x14(%rsi)              ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@277 (line 660)
  0x0000775055212ad3:   mov    0x1c(%rsi),%edi              ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@281 (line 660)
  0x0000775055212ad6:   cmp    %edi,%eax
  0x0000775055212ad8:   movabs $0x7750202faf90,%rax         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212ae2:   movabs $0x650,%rdi
  0x0000775055212aec:   jle    0x0000775055212afc
  0x0000775055212af2:   movabs $0x660,%rdi
  0x0000775055212afc:   mov    (%rax,%rdi,1),%rbx
  0x0000775055212b00:   lea    0x1(%rbx),%rbx
  0x0000775055212b04:   mov    %rbx,(%rax,%rdi,1)
  0x0000775055212b08:   jle    0x0000775055212c59
  0x0000775055212b0e:   jmp    0x0000775055212c2e           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@284 (line 660)
  0x0000775055212b13:   mov    0x4c(%rsp),%r9d
  0x0000775055212b18:   mov    0x50(%rsp),%rsi
  0x0000775055212b1d:   mov    0x14(%rax),%edi              ; implicit exception: dispatches to 0x0000775055212dca
  0x0000775055212b20:   shl    $0x3,%rdi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@229 (line 652)
  0x0000775055212b24:   cmp    $0x0,%r9d
  0x0000775055212b28:   movabs $0x7750202faf90,%rbx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212b32:   movabs $0x5d8,%rdx
  0x0000775055212b3c:   je     0x0000775055212b4c
  0x0000775055212b42:   movabs $0x5e8,%rdx
  0x0000775055212b4c:   mov    (%rbx,%rdx,1),%rcx
  0x0000775055212b50:   lea    0x1(%rcx),%rcx
  0x0000775055212b54:   mov    %rcx,(%rbx,%rdx,1)
  0x0000775055212b58:   je     0x0000775055212b98           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@236 (line 653)
  0x0000775055212b5e:   cmp    $0x0,%rdi
  0x0000775055212b62:   movabs $0x7750202faf90,%rbx         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212b6c:   movabs $0x5f8,%rdx
  0x0000775055212b76:   jne    0x0000775055212b86
  0x0000775055212b7c:   movabs $0x608,%rdx
  0x0000775055212b86:   mov    (%rbx,%rdx,1),%rcx
  0x0000775055212b8a:   lea    0x1(%rcx),%rcx
  0x0000775055212b8e:   mov    %rcx,(%rbx,%rdx,1)
  0x0000775055212b92:   jne    0x0000775055212bca           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@241 (line 653)
  0x0000775055212b98:   mov    0x60(%rsp),%r8
  0x0000775055212b9d:   movsbl 0x38(%r15),%ebx
  0x0000775055212ba2:   cmp    $0x0,%ebx
  0x0000775055212ba5:   jne    0x0000775055212dcf
  0x0000775055212bab:   mov    %r8,%r10
  0x0000775055212bae:   shr    $0x3,%r10
  0x0000775055212bb2:   mov    %r10d,0x14(%rax)
  0x0000775055212bb6:   mov    %rax,%rbx
  0x0000775055212bb9:   xor    %r8,%rbx
  0x0000775055212bbc:   shr    $0x16,%rbx
  0x0000775055212bc0:   cmp    $0x0,%rbx
  0x0000775055212bc4:   jne    0x0000775055212dee           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@247 (line 654)
  0x0000775055212bca:   movabs $0x7750202faf90,%rax         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212bd4:   movabs $0x80005f9b0,%r10            ;   {metadata('java/util/HashMap')}
  0x0000775055212bde:   mov    %r10,0x628(%rax)
  0x0000775055212be5:   addq   $0x1,0x630(%rax)
  0x0000775055212bed:   movabs $0x7750202fc258,%rax         ;   {metadata(method data for {method} {0x0000775020192a60} 'afterNodeAccess' '(Ljava/util/HashMap$Node;)V' in 'java/util/HashMap')}
  0x0000775055212bf7:   mov    0xf4(%rax),%esi
  0x0000775055212bfd:   add    $0x2,%esi
  0x0000775055212c00:   mov    %esi,0xf4(%rax)
  0x0000775055212c06:   and    $0x1ffffe,%esi
  0x0000775055212c0c:   cmp    $0x0,%esi
  0x0000775055212c0f:   je     0x0000775055212e06
  0x0000775055212c15:   mov    %rdi,%rax
  0x0000775055212c18:   add    $0xa0,%rsp
  0x0000775055212c1f:   pop    %rbp
  0x0000775055212c20:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055212c27:   ja     0x0000775055212e27
  0x0000775055212c2d:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@258 (line 656)
  0x0000775055212c2e:   mov    %rsi,%rbx
  0x0000775055212c31:   movabs $0x7750202faf90,%rax         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212c3b:   addq   $0x1,0x670(%rax)
  0x0000775055212c43:   mov    %rsi,%rbx
  0x0000775055212c46:   mov    %rbx,%rsi                    ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@288 (line 661)
  0x0000775055212c49:   nopw   0x0(%rax,%rax,1)
  0x0000775055212c4f:   call   0x000077505c788080           ; ImmutableOopMap {[80]=Oop }
                                                            ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@288 (line 661)
                                                            ;   {optimized virtual_call}
  0x0000775055212c54:   mov    0x50(%rsp),%rsi
  0x0000775055212c59:   movabs $0x7750202faf90,%rax         ;   {metadata(method data for {method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212c63:   movabs $0x80005f9b0,%r10            ;   {metadata('java/util/HashMap')}
  0x0000775055212c6d:   mov    %r10,0x6b8(%rax)
  0x0000775055212c74:   addq   $0x1,0x6c0(%rax)
  0x0000775055212c7c:   movabs $0x7750202fc3b0,%rax         ;   {metadata(method data for {method} {0x0000775020192b08} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap')}
  0x0000775055212c86:   mov    0xf4(%rax),%esi
  0x0000775055212c8c:   add    $0x2,%esi
  0x0000775055212c8f:   mov    %esi,0xf4(%rax)
  0x0000775055212c95:   and    $0x1ffffe,%esi
  0x0000775055212c9b:   cmp    $0x0,%esi
  0x0000775055212c9e:   je     0x0000775055212e3d
  0x0000775055212ca4:   movabs $0x0,%rax                    ;   {oop(NULL)}
  0x0000775055212cae:   add    $0xa0,%rsp
  0x0000775055212cb5:   pop    %rbp
  0x0000775055212cb6:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055212cbd:   ja     0x0000775055212e5e
  0x0000775055212cc3:   ret
  0x0000775055212cc4:   movabs $0x77502018fe40,%r10         ;   {metadata({method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212cce:   mov    %r10,0x8(%rsp)
  0x0000775055212cd3:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055212cdb:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [80]=Oop rcx=Oop [88]=Oop r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::putVal@-1 (line 626)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055212ce0:   jmp    0x0000775055211f29
  0x0000775055212ce5:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [80]=Oop rcx=Oop [88]=Oop r8=Oop rbx=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@12 (line 626)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212cea:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop [96]=Oop [88]=Oop rdx=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@26 (line 627)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212cef:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop [96]=Oop [88]=Oop rbx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@40 (line 628)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212cf4:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop [96]=Oop [88]=Oop rbx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@40 (line 628)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212cf9:   mov    %rax,(%rsp)
  0x0000775055212cfd:   mov    %rbx,0x8(%rsp)
  0x0000775055212d02:   call   0x000077505c828ca0           ; ImmutableOopMap {[80]=Oop [96]=Oop [88]=Oop rbx=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@40 (line 628)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055212d07:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop rax=Oop rbx=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::putVal@59 (line 629)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212d0c:   mov    %rax,(%rsp)
  0x0000775055212d10:   call   0x000077505c82b6a0           ; ImmutableOopMap {[80]=Oop rax=Oop rbx=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::putVal@59 (line 629)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x0000775055212d15:   mov    (%rdx),%esi
  0x0000775055212d17:   shl    $0x3,%rsi
  0x0000775055212d1b:   cmp    $0x0,%rsi
  0x0000775055212d1f:   je     0x00007750552121d6
  0x0000775055212d25:   mov    %rsi,(%rsp)
  0x0000775055212d29:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055212d2e:   jmp    0x00007750552121d6
  0x0000775055212d33:   cmp    $0x0,%rax
  0x0000775055212d37:   je     0x00007750552121f4
  0x0000775055212d3d:   mov    %rdx,(%rsp)
  0x0000775055212d41:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055212d46:   jmp    0x00007750552121f4
  0x0000775055212d4b:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop rdi=Oop [96]=Oop [88]=Oop rbx=Oop }
                                                            ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::putVal@65 (line 632)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212d50:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop [96]=Oop rcx=Oop [88]=Oop [112]=Oop [120]=Oop rdx=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@91 (line 633)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212d55:   mov    %rdi,(%rsp)
  0x0000775055212d59:   call   0x000077505c82b9a0           ; ImmutableOopMap {[80]=Oop [96]=Oop [88]=Oop [112]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@114 (line 636)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000775055212d5e:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop [96]=Oop [88]=Oop [112]=Oop rsi=Oop }
                                                            ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@123 (line 636)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212d63:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop rdi=Oop rcx=Oop [88]=Oop }
                                                            ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::putVal@136 (line 639)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212d68:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop rcx=Oop [88]=Oop rax=Oop [136]=Oop }
                                                            ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::putVal@177 (line 645)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212d6d:   call   0x000077505c8295a0           ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop rcx=Oop [88]=Oop [136]=Oop rsi=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::putVal@203 (line 646)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212d72:   movabs $0x77502018fe40,%r10         ;   {metadata({method} {0x000077502018fe40} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055212d7c:   mov    %r10,0x8(%rsp)
  0x0000775055212d81:   movq   $0xdb,(%rsp)
  0x0000775055212d89:   call   0x000077505c82e680           ; ImmutableOopMap {[80]=Oop [96]=Oop [112]=Oop [136]=Oop [88]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::putVal@219 (line 638)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055212d8e:   jmp    0x0000775055212906
  0x0000775055212d93:   mov    0x18(%rdi),%edx
  0x0000775055212d96:   shl    $0x3,%rdx
  0x0000775055212d9a:   cmp    $0x0,%rdx
  0x0000775055212d9e:   je     0x00007750552129ba
  0x0000775055212da4:   mov    %rdx,(%rsp)
  0x0000775055212da8:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055212dad:   jmp    0x00007750552129ba
  0x0000775055212db2:   cmp    $0x0,%rax
  0x0000775055212db6:   je     0x00007750552129d9
  0x0000775055212dbc:   mov    %rdi,(%rsp)
  0x0000775055212dc0:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055212dc5:   jmp    0x00007750552129d9
  0x0000775055212dca:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [80]=Oop [96]=Oop rax=Oop }
                                                            ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::putVal@229 (line 652)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055212dcf:   mov    0x14(%rax),%ebx
  0x0000775055212dd2:   shl    $0x3,%rbx
  0x0000775055212dd6:   cmp    $0x0,%rbx
  0x0000775055212dda:   je     0x0000775055212bab
  0x0000775055212de0:   mov    %rbx,(%rsp)
  0x0000775055212de4:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055212de9:   jmp    0x0000775055212bab
  0x0000775055212dee:   cmp    $0x0,%r8
  0x0000775055212df2:   je     0x0000775055212bca
  0x0000775055212df8:   mov    %rax,(%rsp)
  0x0000775055212dfc:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055212e01:   jmp    0x0000775055212bca
  0x0000775055212e06:   movabs $0x775020192a60,%r10         ;   {metadata({method} {0x0000775020192a60} 'afterNodeAccess' '(Ljava/util/HashMap$Node;)V' in 'java/util/HashMap')}
  0x0000775055212e10:   mov    %r10,0x8(%rsp)
  0x0000775055212e15:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055212e1d:   call   0x000077505c82e680           ; ImmutableOopMap {rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::afterNodeAccess@-1 (line 1933)
                                                            ; - java.util.HashMap::putVal@253 (line 655)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055212e22:   jmp    0x0000775055212c15
  0x0000775055212e27:   movabs $0x775055212c20,%r10         ;   {internal_word}
  0x0000775055212e31:   mov    %r10,0x360(%r15)
  0x0000775055212e38:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055212e3d:   movabs $0x775020192b08,%r10         ;   {metadata({method} {0x0000775020192b08} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap')}
  0x0000775055212e47:   mov    %r10,0x8(%rsp)
  0x0000775055212e4c:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055212e54:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::afterNodeInsertion@-1 (line 1934)
                                                            ; - java.util.HashMap::putVal@295 (line 662)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055212e59:   jmp    0x0000775055212ca4
  0x0000775055212e5e:   movabs $0x775055212cb6,%r10         ;   {internal_word}
  0x0000775055212e68:   mov    %r10,0x360(%r15)
  0x0000775055212e6f:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055212e74:   nop
  0x0000775055212e75:   nop
  0x0000775055212e76:   mov    0x3d8(%r15),%rax
  0x0000775055212e7d:   movq   $0x0,0x3d8(%r15)
  0x0000775055212e88:   movq   $0x0,0x3e0(%r15)
  0x0000775055212e93:   add    $0xa0,%rsp
  0x0000775055212e9a:   pop    %rbp
  0x0000775055212e9b:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x0000775055212ea0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055212ea5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055212eaf:   jmp    0x0000775055212eaf           ;   {runtime_call}
  0x0000775055212eb4:   nop
  0x0000775055212eb5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055212ebf:   jmp    0x0000775055212ebf           ;   {runtime_call}
  0x0000775055212ec4:   nop
  0x0000775055212ec5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055212ecf:   jmp    0x0000775055212ecf           ;   {runtime_call}
  0x0000775055212ed4:   nop
  0x0000775055212ed5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055212edf:   jmp    0x0000775055212edf           ;   {runtime_call}
  0x0000775055212ee4:   nop
  0x0000775055212ee5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055212eef:   jmp    0x0000775055212eef           ;   {runtime_call}
  0x0000775055212ef4:   nop
  0x0000775055212ef5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055212eff:   jmp    0x0000775055212eff           ;   {runtime_call}
  0x0000775055212f04:   nop
  0x0000775055212f05:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055212f0f:   jmp    0x0000775055212f0f           ;   {runtime_call}
  0x0000775055212f14:   nop
  0x0000775055212f15:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055212f1f:   jmp    0x0000775055212f1f           ;   {runtime_call}
[Exception Handler]
  0x0000775055212f24:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055212f29:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055212f33:   and    $0xfffffffffffffff0,%rsp
  0x0000775055212f37:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055212f3c:   hlt
[Deopt Handler Code]
  0x0000775055212f3d:   movabs $0x775055212f3d,%r10         ;   {section_word}
  0x0000775055212f47:   push   %r10
  0x0000775055212f49:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055212f4e:   hlt
  0x0000775055212f4f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     172   50       3       java.util.ImmutableCollections$Set12$1::hasNext (13 bytes)
 total in heap  [0x0000775055213990,0x0000775055213d50] = 960
 relocation     [0x0000775055213af0,0x0000775055213b20] = 48
 main code      [0x0000775055213b20,0x0000775055213c60] = 320
 stub code      [0x0000775055213c60,0x0000775055213c90] = 48
 metadata       [0x0000775055213c90,0x0000775055213c98] = 8
 scopes data    [0x0000775055213c98,0x0000775055213cc8] = 48
 scopes pcs     [0x0000775055213cc8,0x0000775055213d48] = 128
 dependencies   [0x0000775055213d48,0x0000775055213d50] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502029db90} 'hasNext' '()Z' in 'java/util/ImmutableCollections$Set12$1'
  #           [sp+0x40]  (sp of caller)
  0x0000775055213b20:   mov    0x8(%rsi),%r10d
  0x0000775055213b24:   movabs $0x800000000,%r11
  0x0000775055213b2e:   add    %r11,%r10
  0x0000775055213b31:   cmp    %rax,%r10
  0x0000775055213b34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055213b3a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055213b40:   mov    %eax,-0x14000(%rsp)
  0x0000775055213b47:   push   %rbp
  0x0000775055213b48:   sub    $0x30,%rsp
  0x0000775055213b4c:   movabs $0x7750202fc540,%rax         ;   {metadata(method data for {method} {0x000077502029db90} 'hasNext' '()Z' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055213b56:   mov    0xf4(%rax),%edi
  0x0000775055213b5c:   add    $0x2,%edi
  0x0000775055213b5f:   mov    %edi,0xf4(%rax)
  0x0000775055213b65:   and    $0x7fe,%edi
  0x0000775055213b6b:   cmp    $0x0,%edi
  0x0000775055213b6e:   je     0x0000775055213be5           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::hasNext@0 (line 825)
  0x0000775055213b74:   mov    0xc(%rsi),%eax               ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::hasNext@1 (line 825)
  0x0000775055213b77:   cmp    $0x0,%eax
  0x0000775055213b7a:   movabs $0x7750202fc540,%rax         ;   {metadata(method data for {method} {0x000077502029db90} 'hasNext' '()Z' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055213b84:   movabs $0x138,%rsi
  0x0000775055213b8e:   jle    0x0000775055213b9e
  0x0000775055213b94:   movabs $0x148,%rsi
  0x0000775055213b9e:   mov    (%rax,%rsi,1),%rdi
  0x0000775055213ba2:   lea    0x1(%rdi),%rdi
  0x0000775055213ba6:   mov    %rdi,(%rax,%rsi,1)
  0x0000775055213baa:   jle    0x0000775055213bca           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::hasNext@4 (line 825)
  0x0000775055213bb0:   movabs $0x7750202fc540,%rax         ;   {metadata(method data for {method} {0x000077502029db90} 'hasNext' '()Z' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055213bba:   incl   0x158(%rax)
  0x0000775055213bc0:   mov    $0x1,%eax
  0x0000775055213bc5:   jmp    0x0000775055213bcf           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::hasNext@8 (line 825)
  0x0000775055213bca:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::hasNext@12 (line 825)
  0x0000775055213bcf:   and    $0x1,%eax
  0x0000775055213bd2:   add    $0x30,%rsp
  0x0000775055213bd6:   pop    %rbp
  0x0000775055213bd7:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055213bde:   ja     0x0000775055213c06
  0x0000775055213be4:   ret
  0x0000775055213be5:   movabs $0x77502029db90,%r10         ;   {metadata({method} {0x000077502029db90} 'hasNext' '()Z' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055213bef:   mov    %r10,0x8(%rsp)
  0x0000775055213bf4:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055213bfc:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$Set12$1::hasNext@-1 (line 825)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055213c01:   jmp    0x0000775055213b74
  0x0000775055213c06:   movabs $0x775055213bd7,%r10         ;   {internal_word}
  0x0000775055213c10:   mov    %r10,0x360(%r15)
  0x0000775055213c17:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055213c1c:   nop
  0x0000775055213c1d:   nop
  0x0000775055213c1e:   mov    0x3d8(%r15),%rax
  0x0000775055213c25:   movq   $0x0,0x3d8(%r15)
  0x0000775055213c30:   movq   $0x0,0x3e0(%r15)
  0x0000775055213c3b:   add    $0x30,%rsp
  0x0000775055213c3f:   pop    %rbp
  0x0000775055213c40:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055213c45:   hlt
  0x0000775055213c46:   hlt
  0x0000775055213c47:   hlt
  0x0000775055213c48:   hlt
  0x0000775055213c49:   hlt
  0x0000775055213c4a:   hlt
  0x0000775055213c4b:   hlt
  0x0000775055213c4c:   hlt
  0x0000775055213c4d:   hlt
  0x0000775055213c4e:   hlt
  0x0000775055213c4f:   hlt
  0x0000775055213c50:   hlt
  0x0000775055213c51:   hlt
  0x0000775055213c52:   hlt
  0x0000775055213c53:   hlt
  0x0000775055213c54:   hlt
  0x0000775055213c55:   hlt
  0x0000775055213c56:   hlt
  0x0000775055213c57:   hlt
  0x0000775055213c58:   hlt
  0x0000775055213c59:   hlt
  0x0000775055213c5a:   hlt
  0x0000775055213c5b:   hlt
  0x0000775055213c5c:   hlt
  0x0000775055213c5d:   hlt
  0x0000775055213c5e:   hlt
  0x0000775055213c5f:   hlt
[Exception Handler]
  0x0000775055213c60:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055213c65:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055213c6f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055213c73:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055213c78:   hlt
[Deopt Handler Code]
  0x0000775055213c79:   movabs $0x775055213c79,%r10         ;   {section_word}
  0x0000775055213c83:   push   %r10
  0x0000775055213c85:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055213c8a:   hlt
  0x0000775055213c8b:   hlt
  0x0000775055213c8c:   hlt
  0x0000775055213c8d:   hlt
  0x0000775055213c8e:   hlt
  0x0000775055213c8f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     173   51       3       java.lang.module.ResolvedModule::name (11 bytes)
 total in heap  [0x0000775055213d90,0x00007750552141e0] = 1104
 relocation     [0x0000775055213ef0,0x0000775055213f28] = 56
 main code      [0x0000775055213f40,0x0000775055214080] = 320
 stub code      [0x0000775055214080,0x00007750552140b0] = 48
 metadata       [0x00007750552140b0,0x00007750552140d0] = 32
 scopes data    [0x00007750552140d0,0x0000775055214110] = 64
 scopes pcs     [0x0000775055214110,0x00007750552141c0] = 176
 dependencies   [0x00007750552141c0,0x00007750552141c8] = 8
 nul chk table  [0x00007750552141c8,0x00007750552141e0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202ec668} 'name' '()Ljava/lang/String;' in 'java/lang/module/ResolvedModule'
  #           [sp+0x40]  (sp of caller)
  0x0000775055213f40:   mov    0x8(%rsi),%r10d
  0x0000775055213f44:   movabs $0x800000000,%r11
  0x0000775055213f4e:   add    %r11,%r10
  0x0000775055213f51:   cmp    %rax,%r10
  0x0000775055213f54:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055213f5a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055213f60:   mov    %eax,-0x14000(%rsp)
  0x0000775055213f67:   push   %rbp
  0x0000775055213f68:   sub    $0x30,%rsp
  0x0000775055213f6c:   movabs $0x7750202fc6d8,%rax         ;   {metadata(method data for {method} {0x00007750202ec668} 'name' '()Ljava/lang/String;' in 'java/lang/module/ResolvedModule')}
  0x0000775055213f76:   mov    0xf4(%rax),%edi
  0x0000775055213f7c:   add    $0x2,%edi
  0x0000775055213f7f:   mov    %edi,0xf4(%rax)
  0x0000775055213f85:   and    $0x7fe,%edi
  0x0000775055213f8b:   cmp    $0x0,%edi
  0x0000775055213f8e:   je     0x0000775055213ffd           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::name@0 (line 95)
  0x0000775055213f94:   mov    0x10(%rsi),%eax
  0x0000775055213f97:   shl    $0x3,%rax                    ;*getfield mref {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::name@1 (line 95)
  0x0000775055213f9b:   cmp    (%rax),%rax                  ; implicit exception: dispatches to 0x000077505521401e
                                                            ;*invokevirtual descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::name@4 (line 95)
  0x0000775055213f9e:   mov    %rax,%rsi
  0x0000775055213fa1:   movabs $0x7750202fc6d8,%rdi         ;   {metadata(method data for {method} {0x00007750202ec668} 'name' '()Ljava/lang/String;' in 'java/lang/module/ResolvedModule')}
  0x0000775055213fab:   addq   $0x1,0x138(%rdi)
  0x0000775055213fb3:   mov    0xc(%rax),%eax
  0x0000775055213fb6:   shl    $0x3,%rax                    ;*getfield descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleReference::descriptor@1 (line 73)
                                                            ; - java.lang.module.ResolvedModule::name@4 (line 95)
  0x0000775055213fba:   cmp    (%rax),%rax                  ; implicit exception: dispatches to 0x0000775055214023
                                                            ;*invokevirtual name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::name@7 (line 95)
  0x0000775055213fbd:   mov    %rax,%rsi
  0x0000775055213fc0:   movabs $0x7750202fc6d8,%rdi         ;   {metadata(method data for {method} {0x00007750202ec668} 'name' '()Ljava/lang/String;' in 'java/lang/module/ResolvedModule')}
  0x0000775055213fca:   movabs $0x80006fd28,%r10            ;   {metadata('java/lang/module/ModuleDescriptor')}
  0x0000775055213fd4:   mov    %r10,0x180(%rdi)
  0x0000775055213fdb:   addq   $0x1,0x188(%rdi)
  0x0000775055213fe3:   mov    0x14(%rax),%eax
  0x0000775055213fe6:   shl    $0x3,%rax                    ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::name@1 (line 1286)
                                                            ; - java.lang.module.ResolvedModule::name@7 (line 95)
  0x0000775055213fea:   add    $0x30,%rsp
  0x0000775055213fee:   pop    %rbp
  0x0000775055213fef:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055213ff6:   ja     0x0000775055214028
  0x0000775055213ffc:   ret
  0x0000775055213ffd:   movabs $0x7750202ec668,%r10         ;   {metadata({method} {0x00007750202ec668} 'name' '()Ljava/lang/String;' in 'java/lang/module/ResolvedModule')}
  0x0000775055214007:   mov    %r10,0x8(%rsp)
  0x000077505521400c:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055214014:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.module.ResolvedModule::name@-1 (line 95)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055214019:   jmp    0x0000775055213f94
  0x000077505521401e:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::name@4 (line 95)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055214023:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop }
                                                            ;*invokevirtual name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::name@7 (line 95)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055214028:   movabs $0x775055213fef,%r10         ;   {internal_word}
  0x0000775055214032:   mov    %r10,0x360(%r15)
  0x0000775055214039:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521403e:   nop
  0x000077505521403f:   nop
  0x0000775055214040:   mov    0x3d8(%r15),%rax
  0x0000775055214047:   movq   $0x0,0x3d8(%r15)
  0x0000775055214052:   movq   $0x0,0x3e0(%r15)
  0x000077505521405d:   add    $0x30,%rsp
  0x0000775055214061:   pop    %rbp
  0x0000775055214062:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055214067:   hlt
  0x0000775055214068:   hlt
  0x0000775055214069:   hlt
  0x000077505521406a:   hlt
  0x000077505521406b:   hlt
  0x000077505521406c:   hlt
  0x000077505521406d:   hlt
  0x000077505521406e:   hlt
  0x000077505521406f:   hlt
  0x0000775055214070:   hlt
  0x0000775055214071:   hlt
  0x0000775055214072:   hlt
  0x0000775055214073:   hlt
  0x0000775055214074:   hlt
  0x0000775055214075:   hlt
  0x0000775055214076:   hlt
  0x0000775055214077:   hlt
  0x0000775055214078:   hlt
  0x0000775055214079:   hlt
  0x000077505521407a:   hlt
  0x000077505521407b:   hlt
  0x000077505521407c:   hlt
  0x000077505521407d:   hlt
  0x000077505521407e:   hlt
  0x000077505521407f:   hlt
[Exception Handler]
  0x0000775055214080:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055214085:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521408f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055214093:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055214098:   hlt
[Deopt Handler Code]
  0x0000775055214099:   movabs $0x775055214099,%r10         ;   {section_word}
  0x00007750552140a3:   push   %r10
  0x00007750552140a5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552140aa:   hlt
  0x00007750552140ab:   hlt
  0x00007750552140ac:   hlt
  0x00007750552140ad:   hlt
  0x00007750552140ae:   hlt
  0x00007750552140af:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     175   52       3       java.util.HashMap$Node::<init> (26 bytes)
 total in heap  [0x0000775055214210,0x0000775055214748] = 1336
 relocation     [0x0000775055214370,0x00007750552143b0] = 64
 main code      [0x00007750552143c0,0x0000775055214620] = 608
 stub code      [0x0000775055214620,0x0000775055214650] = 48
 metadata       [0x0000775055214650,0x0000775055214668] = 24
 scopes data    [0x0000775055214668,0x00007750552146b0] = 72
 scopes pcs     [0x00007750552146b0,0x0000775055214740] = 144
 dependencies   [0x0000775055214740,0x0000775055214748] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020198a38} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node'
  # this:     rsi:rsi   = 'java/util/HashMap$Node'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/util/HashMap$Node'
  #           [sp+0x40]  (sp of caller)
  0x00007750552143c0:   mov    0x8(%rsi),%r10d
  0x00007750552143c4:   movabs $0x800000000,%r11
  0x00007750552143ce:   add    %r11,%r10
  0x00007750552143d1:   cmp    %rax,%r10
  0x00007750552143d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552143da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552143e0:   mov    %eax,-0x14000(%rsp)
  0x00007750552143e7:   push   %rbp
  0x00007750552143e8:   sub    $0x30,%rsp
  0x00007750552143ec:   movabs $0x7750202fc8c0,%rdi         ;   {metadata(method data for {method} {0x0000775020198a38} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x00007750552143f6:   mov    0xf4(%rdi),%ebx
  0x00007750552143fc:   add    $0x2,%ebx
  0x00007750552143ff:   mov    %ebx,0xf4(%rdi)
  0x0000775055214405:   and    $0x7fe,%ebx
  0x000077505521440b:   cmp    $0x0,%ebx
  0x000077505521440e:   je     0x00007750552144ee           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap$Node::<init>@0 (line 287)
  0x0000775055214414:   mov    %rsi,%rdi
  0x0000775055214417:   movabs $0x7750202fc8c0,%rbx         ;   {metadata(method data for {method} {0x0000775020198a38} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x0000775055214421:   addq   $0x1,0x138(%rbx)
  0x0000775055214429:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055214433:   mov    0xf4(%rdi),%ebx
  0x0000775055214439:   add    $0x2,%ebx
  0x000077505521443c:   mov    %ebx,0xf4(%rdi)
  0x0000775055214442:   and    $0x1ffffe,%ebx
  0x0000775055214448:   cmp    $0x0,%ebx
  0x000077505521444b:   je     0x000077505521450f
  0x0000775055214451:   mov    %edx,0xc(%rsi)               ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap$Node::<init>@6 (line 288)
  0x0000775055214454:   movsbl 0x38(%r15),%edi
  0x0000775055214459:   cmp    $0x0,%edi
  0x000077505521445c:   jne    0x0000775055214530
  0x0000775055214462:   mov    %rcx,%r10
  0x0000775055214465:   shr    $0x3,%r10
  0x0000775055214469:   mov    %r10d,0x10(%rsi)
  0x000077505521446d:   mov    %rsi,%rdi
  0x0000775055214470:   xor    %rcx,%rdi
  0x0000775055214473:   shr    $0x16,%rdi
  0x0000775055214477:   cmp    $0x0,%rdi
  0x000077505521447b:   jne    0x000077505521454f           ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap$Node::<init>@11 (line 289)
  0x0000775055214481:   movsbl 0x38(%r15),%edi
  0x0000775055214486:   cmp    $0x0,%edi
  0x0000775055214489:   jne    0x0000775055214567
  0x000077505521448f:   mov    %r8,%r10
  0x0000775055214492:   shr    $0x3,%r10
  0x0000775055214496:   mov    %r10d,0x14(%rsi)
  0x000077505521449a:   mov    %rsi,%rdi
  0x000077505521449d:   xor    %r8,%rdi
  0x00007750552144a0:   shr    $0x16,%rdi
  0x00007750552144a4:   cmp    $0x0,%rdi
  0x00007750552144a8:   jne    0x0000775055214586           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap$Node::<init>@16 (line 290)
  0x00007750552144ae:   movsbl 0x38(%r15),%edi
  0x00007750552144b3:   cmp    $0x0,%edi
  0x00007750552144b6:   jne    0x000077505521459e
  0x00007750552144bc:   mov    %r9,%r10
  0x00007750552144bf:   shr    $0x3,%r10
  0x00007750552144c3:   mov    %r10d,0x18(%rsi)
  0x00007750552144c7:   mov    %rsi,%rdi
  0x00007750552144ca:   xor    %r9,%rdi
  0x00007750552144cd:   shr    $0x16,%rdi
  0x00007750552144d1:   cmp    $0x0,%rdi
  0x00007750552144d5:   jne    0x00007750552145bd           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap$Node::<init>@22 (line 291)
  0x00007750552144db:   add    $0x30,%rsp
  0x00007750552144df:   pop    %rbp
  0x00007750552144e0:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552144e7:   ja     0x00007750552145d5
  0x00007750552144ed:   ret
  0x00007750552144ee:   movabs $0x775020198a38,%r10         ;   {metadata({method} {0x0000775020198a38} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x00007750552144f8:   mov    %r10,0x8(%rsp)
  0x00007750552144fd:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055214505:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rcx=Oop r8=Oop r9=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap$Node::<init>@-1 (line 287)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521450a:   jmp    0x0000775055214414
  0x000077505521450f:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055214519:   mov    %r10,0x8(%rsp)
  0x000077505521451e:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055214526:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rcx=Oop r8=Oop r9=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.HashMap$Node::<init>@1 (line 287)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521452b:   jmp    0x0000775055214451
  0x0000775055214530:   mov    0x10(%rsi),%edi
  0x0000775055214533:   shl    $0x3,%rdi
  0x0000775055214537:   cmp    $0x0,%rdi
  0x000077505521453b:   je     0x0000775055214462
  0x0000775055214541:   mov    %rdi,(%rsp)
  0x0000775055214545:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505521454a:   jmp    0x0000775055214462
  0x000077505521454f:   cmp    $0x0,%rcx
  0x0000775055214553:   je     0x0000775055214481
  0x0000775055214559:   mov    %rsi,(%rsp)
  0x000077505521455d:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055214562:   jmp    0x0000775055214481
  0x0000775055214567:   mov    0x14(%rsi),%edi
  0x000077505521456a:   shl    $0x3,%rdi
  0x000077505521456e:   cmp    $0x0,%rdi
  0x0000775055214572:   je     0x000077505521448f
  0x0000775055214578:   mov    %rdi,(%rsp)
  0x000077505521457c:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055214581:   jmp    0x000077505521448f
  0x0000775055214586:   cmp    $0x0,%r8
  0x000077505521458a:   je     0x00007750552144ae
  0x0000775055214590:   mov    %rsi,(%rsp)
  0x0000775055214594:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055214599:   jmp    0x00007750552144ae
  0x000077505521459e:   mov    0x18(%rsi),%edi
  0x00007750552145a1:   shl    $0x3,%rdi
  0x00007750552145a5:   cmp    $0x0,%rdi
  0x00007750552145a9:   je     0x00007750552144bc
  0x00007750552145af:   mov    %rdi,(%rsp)
  0x00007750552145b3:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552145b8:   jmp    0x00007750552144bc
  0x00007750552145bd:   cmp    $0x0,%r9
  0x00007750552145c1:   je     0x00007750552144db
  0x00007750552145c7:   mov    %rsi,(%rsp)
  0x00007750552145cb:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x00007750552145d0:   jmp    0x00007750552144db
  0x00007750552145d5:   movabs $0x7750552144e0,%r10         ;   {internal_word}
  0x00007750552145df:   mov    %r10,0x360(%r15)
  0x00007750552145e6:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552145eb:   nop
  0x00007750552145ec:   nop
  0x00007750552145ed:   mov    0x3d8(%r15),%rax
  0x00007750552145f4:   movq   $0x0,0x3d8(%r15)
  0x00007750552145ff:   movq   $0x0,0x3e0(%r15)
  0x000077505521460a:   add    $0x30,%rsp
  0x000077505521460e:   pop    %rbp
  0x000077505521460f:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055214614:   hlt
  0x0000775055214615:   hlt
  0x0000775055214616:   hlt
  0x0000775055214617:   hlt
  0x0000775055214618:   hlt
  0x0000775055214619:   hlt
  0x000077505521461a:   hlt
  0x000077505521461b:   hlt
  0x000077505521461c:   hlt
  0x000077505521461d:   hlt
  0x000077505521461e:   hlt
  0x000077505521461f:   hlt
[Exception Handler]
  0x0000775055214620:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055214625:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521462f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055214633:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055214638:   hlt
[Deopt Handler Code]
  0x0000775055214639:   movabs $0x775055214639,%r10         ;   {section_word}
  0x0000775055214643:   push   %r10
  0x0000775055214645:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521464a:   hlt
  0x000077505521464b:   hlt
  0x000077505521464c:   hlt
  0x000077505521464d:   hlt
  0x000077505521464e:   hlt
  0x000077505521464f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     177   53       3       java.util.HashMap::put (13 bytes)
 total in heap  [0x0000775055214790,0x0000775055214de8] = 1624
 relocation     [0x00007750552148f0,0x0000775055214948] = 88
 main code      [0x0000775055214960,0x0000775055214c00] = 672
 stub code      [0x0000775055214c00,0x0000775055214c50] = 80
 metadata       [0x0000775055214c50,0x0000775055214c68] = 24
 scopes data    [0x0000775055214c68,0x0000775055214d00] = 152
 scopes pcs     [0x0000775055214d00,0x0000775055214dd0] = 208
 dependencies   [0x0000775055214dd0,0x0000775055214dd8] = 8
 nul chk table  [0x0000775055214dd8,0x0000775055214de8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x90]  (sp of caller)
  0x0000775055214960:   mov    0x8(%rsi),%r10d
  0x0000775055214964:   movabs $0x800000000,%r11
  0x000077505521496e:   add    %r11,%r10
  0x0000775055214971:   cmp    %rax,%r10
  0x0000775055214974:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521497a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055214980:   mov    %eax,-0x14000(%rsp)
  0x0000775055214987:   push   %rbp
  0x0000775055214988:   sub    $0x80,%rsp
  0x000077505521498f:   movabs $0x7750202fca58,%rdi         ;   {metadata(method data for {method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055214999:   mov    0xf4(%rdi),%ebx
  0x000077505521499f:   add    $0x2,%ebx
  0x00007750552149a2:   mov    %ebx,0xf4(%rdi)
  0x00007750552149a8:   and    $0x7fe,%ebx
  0x00007750552149ae:   cmp    $0x0,%ebx
  0x00007750552149b1:   je     0x0000775055214b72           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::put@0 (line 610)
  0x00007750552149b7:   movabs $0x7750202fca58,%rdi         ;   {metadata(method data for {method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552149c1:   addq   $0x1,0x138(%rdi)
  0x00007750552149c9:   movabs $0x7750202f3548,%rdi         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007750552149d3:   mov    0xf4(%rdi),%ebx
  0x00007750552149d9:   add    $0x2,%ebx
  0x00007750552149dc:   mov    %ebx,0xf4(%rdi)
  0x00007750552149e2:   and    $0x1ffffe,%ebx
  0x00007750552149e8:   cmp    $0x0,%ebx
  0x00007750552149eb:   je     0x0000775055214b93
  0x00007750552149f1:   cmp    $0x0,%rdx
  0x00007750552149f5:   movabs $0x7750202f3548,%rdi         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007750552149ff:   movabs $0x138,%rbx
  0x0000775055214a09:   jne    0x0000775055214a19
  0x0000775055214a0f:   movabs $0x148,%rbx
  0x0000775055214a19:   mov    (%rdi,%rbx,1),%rax
  0x0000775055214a1d:   lea    0x1(%rax),%rax
  0x0000775055214a21:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055214a25:   jne    0x0000775055214a54           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@1 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
  0x0000775055214a2b:   movabs $0x7750202f3548,%rdi         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055214a35:   incl   0x158(%rdi)
  0x0000775055214a3b:   mov    $0x0,%edi
  0x0000775055214a40:   mov    %rcx,0x68(%rsp)
  0x0000775055214a45:   mov    %rdx,0x60(%rsp)
  0x0000775055214a4a:   mov    %rsi,0x58(%rsp)
  0x0000775055214a4f:   jmp    0x0000775055214b20           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@5 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
  0x0000775055214a54:   mov    %rcx,0x68(%rsp)
  0x0000775055214a59:   mov    %rsi,0x58(%rsp)
  0x0000775055214a5e:   cmp    (%rdx),%rax                  ; implicit exception: dispatches to 0x0000775055214bb4
  0x0000775055214a61:   mov    %rdx,%rdi
  0x0000775055214a64:   movabs $0x7750202f3548,%rbx         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055214a6e:   mov    0x8(%rdi),%edi
  0x0000775055214a71:   movabs $0x800000000,%r10
  0x0000775055214a7b:   add    %r10,%rdi
  0x0000775055214a7e:   cmp    0x180(%rbx),%rdi
  0x0000775055214a85:   jne    0x0000775055214a94
  0x0000775055214a87:   addq   $0x1,0x188(%rbx)
  0x0000775055214a8f:   jmp    0x0000775055214afa
  0x0000775055214a94:   cmp    0x190(%rbx),%rdi
  0x0000775055214a9b:   jne    0x0000775055214aaa
  0x0000775055214a9d:   addq   $0x1,0x198(%rbx)
  0x0000775055214aa5:   jmp    0x0000775055214afa
  0x0000775055214aaa:   cmpq   $0x0,0x180(%rbx)
  0x0000775055214ab5:   jne    0x0000775055214ace
  0x0000775055214ab7:   mov    %rdi,0x180(%rbx)
  0x0000775055214abe:   movq   $0x1,0x188(%rbx)
  0x0000775055214ac9:   jmp    0x0000775055214afa
  0x0000775055214ace:   cmpq   $0x0,0x190(%rbx)
  0x0000775055214ad9:   jne    0x0000775055214af2
  0x0000775055214adb:   mov    %rdi,0x190(%rbx)
  0x0000775055214ae2:   movq   $0x1,0x198(%rbx)
  0x0000775055214aed:   jmp    0x0000775055214afa
  0x0000775055214af2:   addq   $0x1,0x170(%rbx)
  0x0000775055214afa:   mov    %rdx,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
  0x0000775055214afd:   mov    %rdx,0x60(%rsp)
  0x0000775055214b02:   data16 xchg %ax,%ax
  0x0000775055214b05:   movabs $0xffffffffffffffff,%rax
  0x0000775055214b0f:   call   0x000077505c788380           ; ImmutableOopMap {[88]=Oop [104]=Oop [96]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
                                                            ;   {virtual_call}
  0x0000775055214b14:   mov    %rax,%rdx
  0x0000775055214b17:   shr    $0x10,%edx
  0x0000775055214b1a:   xor    %rax,%rdx
  0x0000775055214b1d:   mov    %rdx,%rdi                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@19 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
  0x0000775055214b20:   mov    0x68(%rsp),%r8
  0x0000775055214b25:   mov    0x60(%rsp),%rcx
  0x0000775055214b2a:   mov    0x58(%rsp),%rsi
  0x0000775055214b2f:   mov    %rsi,%rdx
  0x0000775055214b32:   movabs $0x7750202fca58,%r9          ;   {metadata(method data for {method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055214b3c:   addq   $0x1,0x148(%r9)
  0x0000775055214b44:   mov    %rdi,%rdx
  0x0000775055214b47:   mov    $0x0,%r9d
  0x0000775055214b4d:   mov    $0x1,%edi                    ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::put@9 (line 610)
  0x0000775055214b52:   nopl   0x0(%rax,%rax,1)
  0x0000775055214b57:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::put@9 (line 610)
                                                            ;   {optimized virtual_call}
  0x0000775055214b5c:   add    $0x80,%rsp
  0x0000775055214b63:   pop    %rbp
  0x0000775055214b64:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055214b6b:   ja     0x0000775055214bb9
  0x0000775055214b71:   ret
  0x0000775055214b72:   movabs $0x77502018fb88,%r10         ;   {metadata({method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055214b7c:   mov    %r10,0x8(%rsp)
  0x0000775055214b81:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055214b89:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::put@-1 (line 610)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055214b8e:   jmp    0x00007750552149b7
  0x0000775055214b93:   movabs $0x77502018ee68,%r10         ;   {metadata({method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055214b9d:   mov    %r10,0x8(%rsp)
  0x0000775055214ba2:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055214baa:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::hash@-1 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055214baf:   jmp    0x00007750552149f1
  0x0000775055214bb4:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop [104]=Oop [88]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055214bb9:   movabs $0x775055214b64,%r10         ;   {internal_word}
  0x0000775055214bc3:   mov    %r10,0x360(%r15)
  0x0000775055214bca:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055214bcf:   nop
  0x0000775055214bd0:   nop
  0x0000775055214bd1:   mov    0x3d8(%r15),%rax
  0x0000775055214bd8:   movq   $0x0,0x3d8(%r15)
  0x0000775055214be3:   movq   $0x0,0x3e0(%r15)
  0x0000775055214bee:   add    $0x80,%rsp
  0x0000775055214bf5:   pop    %rbp
  0x0000775055214bf6:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055214bfb:   hlt
  0x0000775055214bfc:   hlt
  0x0000775055214bfd:   hlt
  0x0000775055214bfe:   hlt
  0x0000775055214bff:   hlt
[Stub Code]
  0x0000775055214c00:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055214c05:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055214c0f:   jmp    0x0000775055214c0f           ;   {runtime_call}
  0x0000775055214c14:   nop
  0x0000775055214c15:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055214c1f:   jmp    0x0000775055214c1f           ;   {runtime_call}
[Exception Handler]
  0x0000775055214c24:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055214c29:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055214c33:   and    $0xfffffffffffffff0,%rsp
  0x0000775055214c37:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055214c3c:   hlt
[Deopt Handler Code]
  0x0000775055214c3d:   movabs $0x775055214c3d,%r10         ;   {section_word}
  0x0000775055214c47:   push   %r10
  0x0000775055214c49:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055214c4e:   hlt
  0x0000775055214c4f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     180   54       3       java.util.HashMap::get (19 bytes)
 total in heap  [0x0000775055214e10,0x0000775055215278] = 1128
 relocation     [0x0000775055214f70,0x0000775055214fb8] = 72
 main code      [0x0000775055214fc0,0x0000775055215140] = 384
 stub code      [0x0000775055215140,0x0000775055215180] = 64
 metadata       [0x0000775055215180,0x0000775055215190] = 16
 scopes data    [0x0000775055215190,0x00007750552151d0] = 64
 scopes pcs     [0x00007750552151d0,0x0000775055215260] = 144
 dependencies   [0x0000775055215260,0x0000775055215268] = 8
 nul chk table  [0x0000775055215268,0x0000775055215278] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502018f868} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x0000775055214fc0:   mov    0x8(%rsi),%r10d
  0x0000775055214fc4:   movabs $0x800000000,%r11
  0x0000775055214fce:   add    %r11,%r10
  0x0000775055214fd1:   cmp    %rax,%r10
  0x0000775055214fd4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055214fda:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055214fe0:   mov    %eax,-0x14000(%rsp)
  0x0000775055214fe7:   push   %rbp
  0x0000775055214fe8:   sub    $0x30,%rsp
  0x0000775055214fec:   movabs $0x7750202fcc28,%rdi         ;   {metadata(method data for {method} {0x000077502018f868} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055214ff6:   mov    0xf4(%rdi),%ebx
  0x0000775055214ffc:   add    $0x2,%ebx
  0x0000775055214fff:   mov    %ebx,0xf4(%rdi)
  0x0000775055215005:   and    $0x7fe,%ebx
  0x000077505521500b:   cmp    $0x0,%ebx
  0x000077505521500e:   je     0x00007750552150b5           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::get@0 (line 556)
  0x0000775055215014:   mov    %rsi,%rdi
  0x0000775055215017:   movabs $0x7750202fcc28,%rbx         ;   {metadata(method data for {method} {0x000077502018f868} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055215021:   addq   $0x1,0x138(%rbx)
  0x0000775055215029:   nopw   0x0(%rax,%rax,1)
  0x000077505521502f:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::get@2 (line 556)
                                                            ;   {optimized virtual_call}
  0x0000775055215034:   cmp    $0x0,%rax
  0x0000775055215038:   movabs $0x7750202fcc28,%rsi         ;   {metadata(method data for {method} {0x000077502018f868} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055215042:   movabs $0x170,%rdi
  0x000077505521504c:   jne    0x000077505521505c
  0x0000775055215052:   movabs $0x180,%rdi
  0x000077505521505c:   mov    (%rsi,%rdi,1),%rbx
  0x0000775055215060:   lea    0x1(%rbx),%rbx
  0x0000775055215064:   mov    %rbx,(%rsi,%rdi,1)
  0x0000775055215068:   jne    0x000077505521509b           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::get@7 (line 556)
  0x000077505521506e:   movabs $0x7750202fcc28,%rax         ;   {metadata(method data for {method} {0x000077502018f868} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055215078:   incl   0x190(%rax)
  0x000077505521507e:   movabs $0x0,%rax                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::get@11 (line 556)
                                                            ;   {oop(NULL)}
  0x0000775055215088:   add    $0x30,%rsp
  0x000077505521508c:   pop    %rbp
  0x000077505521508d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055215094:   ja     0x00007750552150d6
  0x000077505521509a:   ret
  0x000077505521509b:   mov    0x14(%rax),%eax              ; implicit exception: dispatches to 0x00007750552150ec
  0x000077505521509e:   shl    $0x3,%rax                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::get@15 (line 556)
  0x00007750552150a2:   add    $0x30,%rsp
  0x00007750552150a6:   pop    %rbp
  0x00007750552150a7:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552150ae:   ja     0x00007750552150f1
  0x00007750552150b4:   ret
  0x00007750552150b5:   movabs $0x77502018f868,%r10         ;   {metadata({method} {0x000077502018f868} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552150bf:   mov    %r10,0x8(%rsp)
  0x00007750552150c4:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552150cc:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::get@-1 (line 556)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552150d1:   jmp    0x0000775055215014
  0x00007750552150d6:   movabs $0x77505521508d,%r10         ;   {internal_word}
  0x00007750552150e0:   mov    %r10,0x360(%r15)
  0x00007750552150e7:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552150ec:   call   0x000077505c8295a0           ; ImmutableOopMap {}
                                                            ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::get@15 (line 556)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552150f1:   movabs $0x7750552150a7,%r10         ;   {internal_word}
  0x00007750552150fb:   mov    %r10,0x360(%r15)
  0x0000775055215102:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055215107:   nop
  0x0000775055215108:   nop
  0x0000775055215109:   mov    0x3d8(%r15),%rax
  0x0000775055215110:   movq   $0x0,0x3d8(%r15)
  0x000077505521511b:   movq   $0x0,0x3e0(%r15)
  0x0000775055215126:   add    $0x30,%rsp
  0x000077505521512a:   pop    %rbp
  0x000077505521512b:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055215130:   hlt
  0x0000775055215131:   hlt
  0x0000775055215132:   hlt
  0x0000775055215133:   hlt
  0x0000775055215134:   hlt
  0x0000775055215135:   hlt
  0x0000775055215136:   hlt
  0x0000775055215137:   hlt
  0x0000775055215138:   hlt
  0x0000775055215139:   hlt
  0x000077505521513a:   hlt
  0x000077505521513b:   hlt
  0x000077505521513c:   hlt
  0x000077505521513d:   hlt
  0x000077505521513e:   hlt
  0x000077505521513f:   hlt
[Stub Code]
  0x0000775055215140:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055215145:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521514f:   jmp    0x000077505521514f           ;   {runtime_call}
[Exception Handler]
  0x0000775055215154:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055215159:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055215163:   and    $0xfffffffffffffff0,%rsp
  0x0000775055215167:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521516c:   hlt
[Deopt Handler Code]
  0x000077505521516d:   movabs $0x77505521516d,%r10         ;   {section_word}
  0x0000775055215177:   push   %r10
  0x0000775055215179:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521517e:   hlt
  0x000077505521517f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     181   55       3       java.util.HashMap::newNode (13 bytes)
 total in heap  [0x0000775055215290,0x00007750552158e8] = 1624
 relocation     [0x00007750552153f0,0x0000775055215440] = 80
 main code      [0x0000775055215440,0x0000775055215760] = 800
 stub code      [0x0000775055215760,0x0000775055215790] = 48
 metadata       [0x0000775055215790,0x00007750552157a8] = 24
 scopes data    [0x00007750552157a8,0x0000775055215830] = 136
 scopes pcs     [0x0000775055215830,0x00007750552158e0] = 176
 dependencies   [0x00007750552158e0,0x00007750552158e8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020192668} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/util/HashMap$Node'
  #           [sp+0x70]  (sp of caller)
  0x0000775055215440:   mov    0x8(%rsi),%r10d
  0x0000775055215444:   movabs $0x800000000,%r11
  0x000077505521544e:   add    %r11,%r10
  0x0000775055215451:   cmp    %rax,%r10
  0x0000775055215454:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521545a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055215460:   mov    %eax,-0x14000(%rsp)
  0x0000775055215467:   push   %rbp
  0x0000775055215468:   sub    $0x60,%rsp
  0x000077505521546c:   mov    %rdx,%rbx
  0x000077505521546f:   mov    %rcx,%r11
  0x0000775055215472:   movabs $0x7750202fbd78,%rdx         ;   {metadata(method data for {method} {0x0000775020192668} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505521547c:   mov    0xf4(%rdx),%edi
  0x0000775055215482:   add    $0x2,%edi
  0x0000775055215485:   mov    %edi,0xf4(%rdx)
  0x000077505521548b:   and    $0x7fe,%edi
  0x0000775055215491:   cmp    $0x0,%edi
  0x0000775055215494:   je     0x0000775055215605
  0x000077505521549a:   movabs $0x800060c78,%rdx            ;   {metadata('java/util/HashMap$Node')}
  0x00007750552154a4:   mov    0x108(%r15),%rax
  0x00007750552154ab:   lea    0x20(%rax),%rdi
  0x00007750552154af:   cmp    0x118(%r15),%rdi
  0x00007750552154b6:   ja     0x0000775055215626
  0x00007750552154bc:   mov    %rdi,0x108(%r15)
  0x00007750552154c3:   movq   $0x1,(%rax)
  0x00007750552154ca:   mov    %rdx,%rcx
  0x00007750552154cd:   movabs $0x800000000,%r10
  0x00007750552154d7:   sub    %r10,%rcx
  0x00007750552154da:   mov    %ecx,0x8(%rax)
  0x00007750552154dd:   xor    %rcx,%rcx
  0x00007750552154e0:   mov    %ecx,0xc(%rax)
  0x00007750552154e3:   xor    %rcx,%rcx
  0x00007750552154e6:   mov    %rcx,0x10(%rax)
  0x00007750552154ea:   mov    %rcx,0x18(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::newNode@0 (line 1901)
  0x00007750552154ee:   mov    %rax,%rsi
  0x00007750552154f1:   movabs $0x7750202fbd78,%rdi         ;   {metadata(method data for {method} {0x0000775020192668} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552154fb:   addq   $0x1,0x138(%rdi)
  0x0000775055215503:   movabs $0x7750202fc8c0,%rsi         ;   {metadata(method data for {method} {0x0000775020198a38} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000077505521550d:   mov    0xf4(%rsi),%edi
  0x0000775055215513:   add    $0x2,%edi
  0x0000775055215516:   mov    %edi,0xf4(%rsi)
  0x000077505521551c:   and    $0x1ffffe,%edi
  0x0000775055215522:   cmp    $0x0,%edi
  0x0000775055215525:   je     0x0000775055215633
  0x000077505521552b:   mov    %rax,%rsi
  0x000077505521552e:   movabs $0x7750202fc8c0,%rdi         ;   {metadata(method data for {method} {0x0000775020198a38} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x0000775055215538:   addq   $0x1,0x138(%rdi)
  0x0000775055215540:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505521554a:   mov    0xf4(%rsi),%edi
  0x0000775055215550:   add    $0x2,%edi
  0x0000775055215553:   mov    %edi,0xf4(%rsi)
  0x0000775055215559:   and    $0x1ffffe,%edi
  0x000077505521555f:   cmp    $0x0,%edi
  0x0000775055215562:   je     0x0000775055215654
  0x0000775055215568:   mov    %ebx,0xc(%rax)               ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap$Node::<init>@6 (line 288)
                                                            ; - java.util.HashMap::newNode@9 (line 1901)
  0x000077505521556b:   movsbl 0x38(%r15),%esi
  0x0000775055215570:   cmp    $0x0,%esi
  0x0000775055215573:   jne    0x0000775055215675
  0x0000775055215579:   mov    %r11,%r10
  0x000077505521557c:   shr    $0x3,%r10
  0x0000775055215580:   mov    %r10d,0x10(%rax)
  0x0000775055215584:   mov    %rax,%rsi
  0x0000775055215587:   xor    %r11,%rsi
  0x000077505521558a:   shr    $0x16,%rsi
  0x000077505521558e:   cmp    $0x0,%rsi
  0x0000775055215592:   jne    0x0000775055215694           ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap$Node::<init>@11 (line 289)
                                                            ; - java.util.HashMap::newNode@9 (line 1901)
  0x0000775055215598:   movsbl 0x38(%r15),%esi
  0x000077505521559d:   cmp    $0x0,%esi
  0x00007750552155a0:   jne    0x00007750552156ac
  0x00007750552155a6:   mov    %r8,%r10
  0x00007750552155a9:   shr    $0x3,%r10
  0x00007750552155ad:   mov    %r10d,0x14(%rax)
  0x00007750552155b1:   mov    %rax,%rsi
  0x00007750552155b4:   xor    %r8,%rsi
  0x00007750552155b7:   shr    $0x16,%rsi
  0x00007750552155bb:   cmp    $0x0,%rsi
  0x00007750552155bf:   jne    0x00007750552156cb           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap$Node::<init>@16 (line 290)
                                                            ; - java.util.HashMap::newNode@9 (line 1901)
  0x00007750552155c5:   movsbl 0x38(%r15),%esi
  0x00007750552155ca:   cmp    $0x0,%esi
  0x00007750552155cd:   jne    0x00007750552156e3
  0x00007750552155d3:   mov    %r9,%r10
  0x00007750552155d6:   shr    $0x3,%r10
  0x00007750552155da:   mov    %r10d,0x18(%rax)
  0x00007750552155de:   mov    %rax,%rsi
  0x00007750552155e1:   xor    %r9,%rsi
  0x00007750552155e4:   shr    $0x16,%rsi
  0x00007750552155e8:   cmp    $0x0,%rsi
  0x00007750552155ec:   jne    0x0000775055215702           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap$Node::<init>@22 (line 291)
                                                            ; - java.util.HashMap::newNode@9 (line 1901)
  0x00007750552155f2:   add    $0x60,%rsp
  0x00007750552155f6:   pop    %rbp
  0x00007750552155f7:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552155fe:   ja     0x000077505521571a
  0x0000775055215604:   ret
  0x0000775055215605:   movabs $0x775020192668,%r10         ;   {metadata({method} {0x0000775020192668} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505521560f:   mov    %r10,0x8(%rsp)
  0x0000775055215614:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521561c:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop r11=Oop r8=Oop r9=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::newNode@-1 (line 1901)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055215621:   jmp    0x000077505521549a
  0x0000775055215626:   mov    %rdx,%rdx
  0x0000775055215629:   call   0x000077505c829e80           ; ImmutableOopMap {r11=Oop r8=Oop r9=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::newNode@0 (line 1901)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505521562e:   jmp    0x00007750552154ee
  0x0000775055215633:   movabs $0x775020198a38,%r10         ;   {metadata({method} {0x0000775020198a38} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000077505521563d:   mov    %r10,0x8(%rsp)
  0x0000775055215642:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521564a:   call   0x000077505c82e680           ; ImmutableOopMap {r11=Oop r8=Oop r9=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap$Node::<init>@-1 (line 287)
                                                            ; - java.util.HashMap::newNode@9 (line 1901)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521564f:   jmp    0x000077505521552b
  0x0000775055215654:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505521565e:   mov    %r10,0x8(%rsp)
  0x0000775055215663:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521566b:   call   0x000077505c82e680           ; ImmutableOopMap {r11=Oop r8=Oop r9=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.HashMap$Node::<init>@1 (line 287)
                                                            ; - java.util.HashMap::newNode@9 (line 1901)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055215670:   jmp    0x0000775055215568
  0x0000775055215675:   mov    0x10(%rax),%esi
  0x0000775055215678:   shl    $0x3,%rsi
  0x000077505521567c:   cmp    $0x0,%rsi
  0x0000775055215680:   je     0x0000775055215579
  0x0000775055215686:   mov    %rsi,(%rsp)
  0x000077505521568a:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505521568f:   jmp    0x0000775055215579
  0x0000775055215694:   cmp    $0x0,%r11
  0x0000775055215698:   je     0x0000775055215598
  0x000077505521569e:   mov    %rax,(%rsp)
  0x00007750552156a2:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x00007750552156a7:   jmp    0x0000775055215598
  0x00007750552156ac:   mov    0x14(%rax),%esi
  0x00007750552156af:   shl    $0x3,%rsi
  0x00007750552156b3:   cmp    $0x0,%rsi
  0x00007750552156b7:   je     0x00007750552155a6
  0x00007750552156bd:   mov    %rsi,(%rsp)
  0x00007750552156c1:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552156c6:   jmp    0x00007750552155a6
  0x00007750552156cb:   cmp    $0x0,%r8
  0x00007750552156cf:   je     0x00007750552155c5
  0x00007750552156d5:   mov    %rax,(%rsp)
  0x00007750552156d9:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x00007750552156de:   jmp    0x00007750552155c5
  0x00007750552156e3:   mov    0x18(%rax),%esi
  0x00007750552156e6:   shl    $0x3,%rsi
  0x00007750552156ea:   cmp    $0x0,%rsi
  0x00007750552156ee:   je     0x00007750552155d3
  0x00007750552156f4:   mov    %rsi,(%rsp)
  0x00007750552156f8:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552156fd:   jmp    0x00007750552155d3
  0x0000775055215702:   cmp    $0x0,%r9
  0x0000775055215706:   je     0x00007750552155f2
  0x000077505521570c:   mov    %rax,(%rsp)
  0x0000775055215710:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055215715:   jmp    0x00007750552155f2
  0x000077505521571a:   movabs $0x7750552155f7,%r10         ;   {internal_word}
  0x0000775055215724:   mov    %r10,0x360(%r15)
  0x000077505521572b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055215730:   nop
  0x0000775055215731:   nop
  0x0000775055215732:   mov    0x3d8(%r15),%rax
  0x0000775055215739:   movq   $0x0,0x3d8(%r15)
  0x0000775055215744:   movq   $0x0,0x3e0(%r15)
  0x000077505521574f:   add    $0x60,%rsp
  0x0000775055215753:   pop    %rbp
  0x0000775055215754:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055215759:   hlt
  0x000077505521575a:   hlt
  0x000077505521575b:   hlt
  0x000077505521575c:   hlt
  0x000077505521575d:   hlt
  0x000077505521575e:   hlt
  0x000077505521575f:   hlt
[Exception Handler]
  0x0000775055215760:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055215765:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521576f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055215773:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055215778:   hlt
[Deopt Handler Code]
  0x0000775055215779:   movabs $0x775055215779,%r10         ;   {section_word}
  0x0000775055215783:   push   %r10
  0x0000775055215785:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521578a:   hlt
  0x000077505521578b:   hlt
  0x000077505521578c:   hlt
  0x000077505521578d:   hlt
  0x000077505521578e:   hlt
  0x000077505521578f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     184   56       1       java.lang.module.ModuleDescriptor$Exports::source (5 bytes)
 total in heap  [0x000077505cccbb90,0x000077505cccbe50] = 704
 relocation     [0x000077505cccbcf0,0x000077505cccbd18] = 40
 main code      [0x000077505cccbd20,0x000077505cccbdc0] = 160
 stub code      [0x000077505cccbdc0,0x000077505cccbdf0] = 48
 metadata       [0x000077505cccbdf0,0x000077505cccbdf8] = 8
 scopes data    [0x000077505cccbdf8,0x000077505cccbe08] = 16
 scopes pcs     [0x000077505cccbe08,0x000077505cccbe48] = 64
 dependencies   [0x000077505cccbe48,0x000077505cccbe50] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020292d68} 'source' '()Ljava/lang/String;' in 'java/lang/module/ModuleDescriptor$Exports'
  #           [sp+0x40]  (sp of caller)
  0x000077505cccbd20:   mov    0x8(%rsi),%r10d
  0x000077505cccbd24:   movabs $0x800000000,%r11
  0x000077505cccbd2e:   add    %r11,%r10
  0x000077505cccbd31:   cmp    %rax,%r10
  0x000077505cccbd34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccbd3a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505cccbd40:   mov    %eax,-0x14000(%rsp)
  0x000077505cccbd47:   push   %rbp
  0x000077505cccbd48:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::source@0 (line 435)
  0x000077505cccbd4c:   mov    0x10(%rsi),%eax
  0x000077505cccbd4f:   shl    $0x3,%rax                    ;*getfield source {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::source@1 (line 435)
  0x000077505cccbd53:   add    $0x30,%rsp
  0x000077505cccbd57:   pop    %rbp
  0x000077505cccbd58:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505cccbd5f:   ja     0x000077505cccbd66
  0x000077505cccbd65:   ret
  0x000077505cccbd66:   movabs $0x77505cccbd58,%r10         ;   {internal_word}
  0x000077505cccbd70:   mov    %r10,0x360(%r15)
  0x000077505cccbd77:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505cccbd7c:   nop
  0x000077505cccbd7d:   nop
  0x000077505cccbd7e:   mov    0x3d8(%r15),%rax
  0x000077505cccbd85:   movq   $0x0,0x3d8(%r15)
  0x000077505cccbd90:   movq   $0x0,0x3e0(%r15)
  0x000077505cccbd9b:   add    $0x30,%rsp
  0x000077505cccbd9f:   pop    %rbp
  0x000077505cccbda0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505cccbda5:   hlt
  0x000077505cccbda6:   hlt
  0x000077505cccbda7:   hlt
  0x000077505cccbda8:   hlt
  0x000077505cccbda9:   hlt
  0x000077505cccbdaa:   hlt
  0x000077505cccbdab:   hlt
  0x000077505cccbdac:   hlt
  0x000077505cccbdad:   hlt
  0x000077505cccbdae:   hlt
  0x000077505cccbdaf:   hlt
  0x000077505cccbdb0:   hlt
  0x000077505cccbdb1:   hlt
  0x000077505cccbdb2:   hlt
  0x000077505cccbdb3:   hlt
  0x000077505cccbdb4:   hlt
  0x000077505cccbdb5:   hlt
  0x000077505cccbdb6:   hlt
  0x000077505cccbdb7:   hlt
  0x000077505cccbdb8:   hlt
  0x000077505cccbdb9:   hlt
  0x000077505cccbdba:   hlt
  0x000077505cccbdbb:   hlt
  0x000077505cccbdbc:   hlt
  0x000077505cccbdbd:   hlt
  0x000077505cccbdbe:   hlt
  0x000077505cccbdbf:   hlt
[Exception Handler]
  0x000077505cccbdc0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505cccbdc5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505cccbdcf:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccbdd3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505cccbdd8:   hlt
[Deopt Handler Code]
  0x000077505cccbdd9:   movabs $0x77505cccbdd9,%r10         ;   {section_word}
  0x000077505cccbde3:   push   %r10
  0x000077505cccbde5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccbdea:   hlt
  0x000077505cccbdeb:   hlt
  0x000077505cccbdec:   hlt
  0x000077505cccbded:   hlt
  0x000077505cccbdee:   hlt
  0x000077505cccbdef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     185   57       3       java.util.HashMap::getNode (150 bytes)
 total in heap  [0x0000775055215910,0x0000775055216d88] = 5240
 relocation     [0x0000775055215a70,0x0000775055215b48] = 216
 main code      [0x0000775055215b60,0x00007750552166e0] = 2944
 stub code      [0x00007750552166e0,0x0000775055216750] = 112
 metadata       [0x0000775055216750,0x0000775055216760] = 16
 scopes data    [0x0000775055216760,0x0000775055216970] = 528
 scopes pcs     [0x0000775055216970,0x0000775055216d40] = 976
 dependencies   [0x0000775055216d40,0x0000775055216d48] = 8
 nul chk table  [0x0000775055216d48,0x0000775055216d88] = 64

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x90]  (sp of caller)
  0x0000775055215b60:   mov    0x8(%rsi),%r10d
  0x0000775055215b64:   movabs $0x800000000,%r11
  0x0000775055215b6e:   add    %r11,%r10
  0x0000775055215b71:   cmp    %rax,%r10
  0x0000775055215b74:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055215b7a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055215b80:   mov    %eax,-0x14000(%rsp)
  0x0000775055215b87:   push   %rbp
  0x0000775055215b88:   sub    $0x80,%rsp
  0x0000775055215b8f:   mov    %rdx,0x58(%rsp)
  0x0000775055215b94:   movabs $0x7750202fce18,%rdi         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215b9e:   mov    0xf4(%rdi),%ebx
  0x0000775055215ba4:   add    $0x2,%ebx
  0x0000775055215ba7:   mov    %ebx,0xf4(%rdi)
  0x0000775055215bad:   and    $0x7fe,%ebx
  0x0000775055215bb3:   cmp    $0x0,%ebx
  0x0000775055215bb6:   je     0x00007750552165ab           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@0 (line 567)
  0x0000775055215bbc:   mov    0x24(%rsi),%edi
  0x0000775055215bbf:   shl    $0x3,%rdi                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@1 (line 567)
  0x0000775055215bc3:   cmp    $0x0,%rdi
  0x0000775055215bc7:   movabs $0x7750202fce18,%rsi         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215bd1:   movabs $0x138,%rbx
  0x0000775055215bdb:   je     0x0000775055215beb
  0x0000775055215be1:   movabs $0x148,%rbx
  0x0000775055215beb:   mov    (%rsi,%rbx,1),%rax
  0x0000775055215bef:   lea    0x1(%rax),%rax
  0x0000775055215bf3:   mov    %rax,(%rsi,%rbx,1)
  0x0000775055215bf7:   je     0x00007750552163b7           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@6 (line 567)
  0x0000775055215bfd:   mov    0xc(%rdi),%esi               ; implicit exception: dispatches to 0x00007750552165cc
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@10 (line 567)
  0x0000775055215c00:   cmp    $0x0,%esi
  0x0000775055215c03:   movabs $0x7750202fce18,%rbx         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215c0d:   movabs $0x158,%rax
  0x0000775055215c17:   jle    0x0000775055215c27
  0x0000775055215c1d:   movabs $0x168,%rax
  0x0000775055215c27:   mov    (%rbx,%rax,1),%rcx
  0x0000775055215c2b:   lea    0x1(%rcx),%rcx
  0x0000775055215c2f:   mov    %rcx,(%rbx,%rax,1)
  0x0000775055215c33:   jle    0x00007750552163b7           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@14 (line 567)
  0x0000775055215c39:   dec    %esi
  0x0000775055215c3b:   movabs $0x7750202fce18,%rbx         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215c45:   addq   $0x1,0x178(%rbx)
  0x0000775055215c4d:   movabs $0x7750202f3548,%rbx         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055215c57:   mov    0xf4(%rbx),%eax
  0x0000775055215c5d:   add    $0x2,%eax
  0x0000775055215c60:   mov    %eax,0xf4(%rbx)
  0x0000775055215c66:   and    $0x1ffffe,%eax
  0x0000775055215c6c:   cmp    $0x0,%eax
  0x0000775055215c6f:   je     0x00007750552165d1
  0x0000775055215c75:   cmp    $0x0,%rdx
  0x0000775055215c79:   movabs $0x7750202f3548,%rbx         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055215c83:   movabs $0x138,%rax
  0x0000775055215c8d:   jne    0x0000775055215c9d
  0x0000775055215c93:   movabs $0x148,%rax
  0x0000775055215c9d:   mov    (%rbx,%rax,1),%rcx
  0x0000775055215ca1:   lea    0x1(%rcx),%rcx
  0x0000775055215ca5:   mov    %rcx,(%rbx,%rax,1)
  0x0000775055215ca9:   jne    0x0000775055215cd2           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@1 (line 338)
                                                            ; - java.util.HashMap::getNode@23 (line 568)
  0x0000775055215caf:   movabs $0x7750202f3548,%rbx         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055215cb9:   incl   0x158(%rbx)
  0x0000775055215cbf:   mov    $0x0,%ebx
  0x0000775055215cc4:   mov    %esi,0x48(%rsp)
  0x0000775055215cc8:   mov    %rdi,0x50(%rsp)
  0x0000775055215ccd:   jmp    0x0000775055215d98           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@5 (line 338)
                                                            ; - java.util.HashMap::getNode@23 (line 568)
  0x0000775055215cd2:   mov    %esi,0x48(%rsp)
  0x0000775055215cd6:   mov    %rdi,0x50(%rsp)
  0x0000775055215cdb:   cmp    (%rdx),%rax                  ; implicit exception: dispatches to 0x00007750552165f2
  0x0000775055215cde:   mov    %rdx,%rbx
  0x0000775055215ce1:   movabs $0x7750202f3548,%rax         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055215ceb:   mov    0x8(%rbx),%ebx
  0x0000775055215cee:   movabs $0x800000000,%r10
  0x0000775055215cf8:   add    %r10,%rbx
  0x0000775055215cfb:   cmp    0x180(%rax),%rbx
  0x0000775055215d02:   jne    0x0000775055215d11
  0x0000775055215d04:   addq   $0x1,0x188(%rax)
  0x0000775055215d0c:   jmp    0x0000775055215d77
  0x0000775055215d11:   cmp    0x190(%rax),%rbx
  0x0000775055215d18:   jne    0x0000775055215d27
  0x0000775055215d1a:   addq   $0x1,0x198(%rax)
  0x0000775055215d22:   jmp    0x0000775055215d77
  0x0000775055215d27:   cmpq   $0x0,0x180(%rax)
  0x0000775055215d32:   jne    0x0000775055215d4b
  0x0000775055215d34:   mov    %rbx,0x180(%rax)
  0x0000775055215d3b:   movq   $0x1,0x188(%rax)
  0x0000775055215d46:   jmp    0x0000775055215d77
  0x0000775055215d4b:   cmpq   $0x0,0x190(%rax)
  0x0000775055215d56:   jne    0x0000775055215d6f
  0x0000775055215d58:   mov    %rbx,0x190(%rax)
  0x0000775055215d5f:   movq   $0x1,0x198(%rax)
  0x0000775055215d6a:   jmp    0x0000775055215d77
  0x0000775055215d6f:   addq   $0x1,0x170(%rax)
  0x0000775055215d77:   mov    %rdx,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ; - java.util.HashMap::getNode@23 (line 568)
  0x0000775055215d7a:   data16 xchg %ax,%ax
  0x0000775055215d7d:   movabs $0xffffffffffffffff,%rax
  0x0000775055215d87:   call   0x000077505c788380           ; ImmutableOopMap {[80]=Oop [88]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ; - java.util.HashMap::getNode@23 (line 568)
                                                            ;   {virtual_call}
  0x0000775055215d8c:   mov    %rax,%rdx
  0x0000775055215d8f:   shr    $0x10,%edx
  0x0000775055215d92:   xor    %rax,%rdx
  0x0000775055215d95:   mov    %rdx,%rbx                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@19 (line 338)
                                                            ; - java.util.HashMap::getNode@23 (line 568)
  0x0000775055215d98:   mov    0x48(%rsp),%esi
  0x0000775055215d9c:   mov    0x50(%rsp),%rdi
  0x0000775055215da1:   and    %rbx,%rsi
  0x0000775055215da4:   cmp    0xc(%rdi),%esi
  0x0000775055215da7:   jae    0x00007750552165f7
  0x0000775055215dad:   movslq %esi,%rsi
  0x0000775055215db0:   mov    0x10(%rdi,%rsi,4),%edi
  0x0000775055215db4:   shl    $0x3,%rdi                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@30 (line 568)
  0x0000775055215db8:   cmp    $0x0,%rdi
  0x0000775055215dbc:   movabs $0x7750202fce18,%rdx         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215dc6:   movabs $0x188,%rsi
  0x0000775055215dd0:   je     0x0000775055215de0
  0x0000775055215dd6:   movabs $0x198,%rsi
  0x0000775055215de0:   mov    (%rdx,%rsi,1),%rax
  0x0000775055215de4:   lea    0x1(%rax),%rax
  0x0000775055215de8:   mov    %rax,(%rdx,%rsi,1)
  0x0000775055215dec:   je     0x00007750552163b7           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@33 (line 568)
  0x0000775055215df2:   mov    0xc(%rdi),%edx               ; implicit exception: dispatches to 0x0000775055216605
                                                            ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@37 (line 569)
  0x0000775055215df5:   cmp    %ebx,%edx
  0x0000775055215df7:   movabs $0x7750202fce18,%rdx         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215e01:   movabs $0x1b8,%rsi
  0x0000775055215e0b:   je     0x0000775055215e1b
  0x0000775055215e11:   movabs $0x1a8,%rsi
  0x0000775055215e1b:   mov    (%rdx,%rsi,1),%rax
  0x0000775055215e1f:   lea    0x1(%rax),%rax
  0x0000775055215e23:   mov    %rax,(%rdx,%rsi,1)
  0x0000775055215e27:   je     0x0000775055215e36           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@42 (line 569)
  0x0000775055215e2d:   mov    %ebx,0x4c(%rsp)
  0x0000775055215e31:   jmp    0x0000775055215fba           ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@71 (line 572)
  0x0000775055215e36:   mov    0x58(%rsp),%rdx
  0x0000775055215e3b:   mov    0x10(%rdi),%esi
  0x0000775055215e3e:   shl    $0x3,%rsi                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@46 (line 569)
  0x0000775055215e42:   cmp    %rdx,%rsi
  0x0000775055215e45:   movabs $0x7750202fce18,%rax         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215e4f:   movabs $0x1c8,%rcx
  0x0000775055215e59:   je     0x0000775055215e69
  0x0000775055215e5f:   movabs $0x1d8,%rcx
  0x0000775055215e69:   mov    (%rax,%rcx,1),%r8
  0x0000775055215e6d:   lea    0x1(%r8),%r8
  0x0000775055215e71:   mov    %r8,(%rax,%rcx,1)
  0x0000775055215e75:   je     0x0000775055216592           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@53 (line 569)
  0x0000775055215e7b:   cmp    $0x0,%rdx
  0x0000775055215e7f:   movabs $0x7750202fce18,%rax         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215e89:   movabs $0x1f8,%rcx
  0x0000775055215e93:   jne    0x0000775055215ea3
  0x0000775055215e99:   movabs $0x1e8,%rcx
  0x0000775055215ea3:   mov    (%rax,%rcx,1),%r8
  0x0000775055215ea7:   lea    0x1(%r8),%r8
  0x0000775055215eab:   mov    %r8,(%rax,%rcx,1)
  0x0000775055215eaf:   jne    0x0000775055215ebe           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@57 (line 569)
  0x0000775055215eb5:   mov    %ebx,0x4c(%rsp)
  0x0000775055215eb9:   jmp    0x0000775055215fba           ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@71 (line 572)
  0x0000775055215ebe:   mov    %rdi,0x60(%rsp)
  0x0000775055215ec3:   mov    %ebx,0x4c(%rsp)
  0x0000775055215ec7:   cmp    (%rdx),%rax                  ; implicit exception: dispatches to 0x000077505521660a
  0x0000775055215eca:   mov    %rdx,%rax
  0x0000775055215ecd:   movabs $0x7750202fce18,%rcx         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215ed7:   mov    0x8(%rax),%eax
  0x0000775055215eda:   movabs $0x800000000,%r10
  0x0000775055215ee4:   add    %r10,%rax
  0x0000775055215ee7:   cmp    0x218(%rcx),%rax
  0x0000775055215eee:   jne    0x0000775055215efd
  0x0000775055215ef0:   addq   $0x1,0x220(%rcx)
  0x0000775055215ef8:   jmp    0x0000775055215f63
  0x0000775055215efd:   cmp    0x228(%rcx),%rax
  0x0000775055215f04:   jne    0x0000775055215f13
  0x0000775055215f06:   addq   $0x1,0x230(%rcx)
  0x0000775055215f0e:   jmp    0x0000775055215f63
  0x0000775055215f13:   cmpq   $0x0,0x218(%rcx)
  0x0000775055215f1e:   jne    0x0000775055215f37
  0x0000775055215f20:   mov    %rax,0x218(%rcx)
  0x0000775055215f27:   movq   $0x1,0x220(%rcx)
  0x0000775055215f32:   jmp    0x0000775055215f63
  0x0000775055215f37:   cmpq   $0x0,0x228(%rcx)
  0x0000775055215f42:   jne    0x0000775055215f5b
  0x0000775055215f44:   mov    %rax,0x228(%rcx)
  0x0000775055215f4b:   movq   $0x1,0x230(%rcx)
  0x0000775055215f56:   jmp    0x0000775055215f63
  0x0000775055215f5b:   addq   $0x1,0x208(%rcx)
  0x0000775055215f63:   mov    %rdx,%rax
  0x0000775055215f66:   mov    %rsi,%rdx
  0x0000775055215f69:   mov    %rax,%rsi                    ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@63 (line 570)
  0x0000775055215f6c:   nop
  0x0000775055215f6d:   movabs $0xffffffffffffffff,%rax
  0x0000775055215f77:   call   0x000077505c788380           ; ImmutableOopMap {[88]=Oop [96]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@63 (line 570)
                                                            ;   {virtual_call}
  0x0000775055215f7c:   cmp    $0x0,%eax
  0x0000775055215f7f:   movabs $0x7750202fce18,%rdx         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215f89:   movabs $0x250,%rsi
  0x0000775055215f93:   jne    0x0000775055215fa3
  0x0000775055215f99:   movabs $0x240,%rsi
  0x0000775055215fa3:   mov    (%rdx,%rsi,1),%rdi
  0x0000775055215fa7:   lea    0x1(%rdi),%rdi
  0x0000775055215fab:   mov    %rdi,(%rdx,%rsi,1)
  0x0000775055215faf:   mov    0x60(%rsp),%rdi
  0x0000775055215fb4:   jne    0x0000775055216592           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@66 (line 570)
  0x0000775055215fba:   mov    0x18(%rdi),%edx
  0x0000775055215fbd:   shl    $0x3,%rdx                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@72 (line 572)
  0x0000775055215fc1:   cmp    $0x0,%rdx
  0x0000775055215fc5:   movabs $0x7750202fce18,%rsi         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055215fcf:   movabs $0x260,%rbx
  0x0000775055215fd9:   je     0x0000775055215fe9
  0x0000775055215fdf:   movabs $0x270,%rbx
  0x0000775055215fe9:   mov    (%rsi,%rbx,1),%rax
  0x0000775055215fed:   lea    0x1(%rax),%rax
  0x0000775055215ff1:   mov    %rax,(%rsi,%rbx,1)
  0x0000775055215ff5:   je     0x00007750552163b7           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@78 (line 572)
  0x0000775055215ffb:   cmp    $0x0,%rdi
  0x0000775055215fff:   jne    0x0000775055216017
  0x0000775055216001:   movabs $0x7750202fce18,%rax         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505521600b:   orb    $0x1,0x279(%rax)
  0x0000775055216012:   jmp    0x00007750552160e9
  0x0000775055216017:   movabs $0x8000614f8,%rcx            ;   {metadata('java/util/HashMap$TreeNode')}
  0x0000775055216021:   mov    0x8(%rdi),%ebx
  0x0000775055216024:   movabs $0x800000000,%r10
  0x000077505521602e:   add    %r10,%rbx
  0x0000775055216031:   cmp    %rbx,%rcx
  0x0000775055216034:   jne    0x00007750552160cd
  0x000077505521603a:   movabs $0x7750202fce18,%rax         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055216044:   mov    0x8(%rdi),%ecx
  0x0000775055216047:   movabs $0x800000000,%r10
  0x0000775055216051:   add    %r10,%rcx
  0x0000775055216054:   cmp    0x290(%rax),%rcx
  0x000077505521605b:   jne    0x000077505521606a
  0x000077505521605d:   addq   $0x1,0x298(%rax)
  0x0000775055216065:   jmp    0x00007750552160ee
  0x000077505521606a:   cmp    0x2a0(%rax),%rcx
  0x0000775055216071:   jne    0x0000775055216080
  0x0000775055216073:   addq   $0x1,0x2a8(%rax)
  0x000077505521607b:   jmp    0x00007750552160ee
  0x0000775055216080:   cmpq   $0x0,0x290(%rax)
  0x000077505521608b:   jne    0x00007750552160a4
  0x000077505521608d:   mov    %rcx,0x290(%rax)
  0x0000775055216094:   movq   $0x1,0x298(%rax)
  0x000077505521609f:   jmp    0x00007750552160ee
  0x00007750552160a4:   cmpq   $0x0,0x2a0(%rax)
  0x00007750552160af:   jne    0x00007750552160c8
  0x00007750552160b1:   mov    %rcx,0x2a0(%rax)
  0x00007750552160b8:   movq   $0x1,0x2a8(%rax)
  0x00007750552160c3:   jmp    0x00007750552160ee
  0x00007750552160c8:   jmp    0x00007750552160ee
  0x00007750552160cd:   movabs $0x7750202fce18,%rax         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552160d7:   subq   $0x1,0x280(%rax)
  0x00007750552160df:   jmp    0x00007750552160e9
  0x00007750552160e4:   jmp    0x00007750552160ee
  0x00007750552160e9:   xor    %rsi,%rsi
  0x00007750552160ec:   jmp    0x00007750552160f8
  0x00007750552160ee:   movabs $0x1,%rsi                    ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@82 (line 573)
  0x00007750552160f8:   cmp    $0x0,%esi
  0x00007750552160fb:   movabs $0x7750202fce18,%rsi         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055216105:   movabs $0x2c8,%rbx
  0x000077505521610f:   jne    0x000077505521611f
  0x0000775055216115:   movabs $0x2b8,%rbx
  0x000077505521611f:   mov    (%rsi,%rbx,1),%rax
  0x0000775055216123:   lea    0x1(%rax),%rax
  0x0000775055216127:   mov    %rax,(%rsi,%rbx,1)
  0x000077505521612b:   jne    0x00007750552163d7           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@85 (line 573)
  0x0000775055216131:   nopl   0x0(%rax)
  0x0000775055216138:   mov    0x4c(%rsp),%ebx
  0x000077505521613c:   mov    0x58(%rsp),%rdi
  0x0000775055216141:   mov    0xc(%rdx),%esi               ; implicit exception: dispatches to 0x000077505521660f
                                                            ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@101 (line 576)
  0x0000775055216144:   cmp    %ebx,%esi
  0x0000775055216146:   movabs $0x7750202fce18,%rsi         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055216150:   movabs $0x358,%rax
  0x000077505521615a:   je     0x000077505521616a
  0x0000775055216160:   movabs $0x348,%rax
  0x000077505521616a:   mov    (%rsi,%rax,1),%rcx
  0x000077505521616e:   lea    0x1(%rcx),%rcx
  0x0000775055216172:   mov    %rcx,(%rsi,%rax,1)
  0x0000775055216176:   je     0x0000775055216185           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@106 (line 576)
  0x000077505521617c:   mov    %ebx,0x4c(%rsp)
  0x0000775055216180:   jmp    0x0000775055216302           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@137 (line 579)
  0x0000775055216185:   mov    0x10(%rdx),%esi
  0x0000775055216188:   shl    $0x3,%rsi                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@111 (line 576)
  0x000077505521618c:   cmp    %rdi,%rsi
  0x000077505521618f:   movabs $0x7750202fce18,%rax         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055216199:   movabs $0x368,%rcx
  0x00007750552161a3:   je     0x00007750552161b3
  0x00007750552161a9:   movabs $0x378,%rcx
  0x00007750552161b3:   mov    (%rax,%rcx,1),%r8
  0x00007750552161b7:   lea    0x1(%r8),%r8
  0x00007750552161bb:   mov    %r8,(%rax,%rcx,1)
  0x00007750552161bf:   je     0x000077505521639e           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@118 (line 576)
  0x00007750552161c5:   cmp    $0x0,%rdi
  0x00007750552161c9:   movabs $0x7750202fce18,%rax         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552161d3:   movabs $0x398,%rcx
  0x00007750552161dd:   jne    0x00007750552161ed
  0x00007750552161e3:   movabs $0x388,%rcx
  0x00007750552161ed:   mov    (%rax,%rcx,1),%r8
  0x00007750552161f1:   lea    0x1(%r8),%r8
  0x00007750552161f5:   mov    %r8,(%rax,%rcx,1)
  0x00007750552161f9:   jne    0x0000775055216208           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@122 (line 576)
  0x00007750552161ff:   mov    %ebx,0x4c(%rsp)
  0x0000775055216203:   jmp    0x0000775055216302           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@137 (line 579)
  0x0000775055216208:   mov    %rdx,0x68(%rsp)
  0x000077505521620d:   mov    %ebx,0x4c(%rsp)
  0x0000775055216211:   cmp    (%rdi),%rax                  ; implicit exception: dispatches to 0x0000775055216614
  0x0000775055216214:   mov    %rdi,%rax
  0x0000775055216217:   movabs $0x7750202fce18,%rcx         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055216221:   mov    0x8(%rax),%eax
  0x0000775055216224:   movabs $0x800000000,%r10
  0x000077505521622e:   add    %r10,%rax
  0x0000775055216231:   cmp    0x3b8(%rcx),%rax
  0x0000775055216238:   jne    0x0000775055216247
  0x000077505521623a:   addq   $0x1,0x3c0(%rcx)
  0x0000775055216242:   jmp    0x00007750552162ad
  0x0000775055216247:   cmp    0x3c8(%rcx),%rax
  0x000077505521624e:   jne    0x000077505521625d
  0x0000775055216250:   addq   $0x1,0x3d0(%rcx)
  0x0000775055216258:   jmp    0x00007750552162ad
  0x000077505521625d:   cmpq   $0x0,0x3b8(%rcx)
  0x0000775055216268:   jne    0x0000775055216281
  0x000077505521626a:   mov    %rax,0x3b8(%rcx)
  0x0000775055216271:   movq   $0x1,0x3c0(%rcx)
  0x000077505521627c:   jmp    0x00007750552162ad
  0x0000775055216281:   cmpq   $0x0,0x3c8(%rcx)
  0x000077505521628c:   jne    0x00007750552162a5
  0x000077505521628e:   mov    %rax,0x3c8(%rcx)
  0x0000775055216295:   movq   $0x1,0x3d0(%rcx)
  0x00007750552162a0:   jmp    0x00007750552162ad
  0x00007750552162a5:   addq   $0x1,0x3a8(%rcx)
  0x00007750552162ad:   mov    %rsi,%rdx
  0x00007750552162b0:   mov    %rdi,%rsi                    ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@128 (line 577)
  0x00007750552162b3:   xchg   %ax,%ax
  0x00007750552162b5:   movabs $0xffffffffffffffff,%rax
  0x00007750552162bf:   call   0x000077505c788380           ; ImmutableOopMap {[104]=Oop [88]=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@128 (line 577)
                                                            ;   {virtual_call}
  0x00007750552162c4:   cmp    $0x0,%eax
  0x00007750552162c7:   movabs $0x7750202fce18,%rax         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552162d1:   movabs $0x3f0,%rdx
  0x00007750552162db:   jne    0x00007750552162eb
  0x00007750552162e1:   movabs $0x3e0,%rdx
  0x00007750552162eb:   mov    (%rax,%rdx,1),%rcx
  0x00007750552162ef:   lea    0x1(%rcx),%rcx
  0x00007750552162f3:   mov    %rcx,(%rax,%rdx,1)
  0x00007750552162f7:   mov    0x68(%rsp),%rdx
  0x00007750552162fc:   jne    0x000077505521639e           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@131 (line 577)
  0x0000775055216302:   mov    0x18(%rdx),%eax
  0x0000775055216305:   shl    $0x3,%rax                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@139 (line 579)
  0x0000775055216309:   cmp    $0x0,%rax
  0x000077505521630d:   mov    $0x2,%edx
  0x0000775055216312:   jne    0x000077505521631d
  0x0000775055216318:   mov    $0x0,%edx
  0x000077505521631d:   movabs $0x7750202fce18,%rcx         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055216327:   mov    0xf8(%rcx),%esi
  0x000077505521632d:   add    %edx,%esi
  0x000077505521632f:   mov    %esi,0xf8(%rcx)
  0x0000775055216335:   cmp    $0x0,%edx
  0x0000775055216338:   jne    0x0000775055216343
  0x000077505521633e:   mov    $0x2,%esi
  0x0000775055216343:   and    $0x3ffe,%esi
  0x0000775055216349:   cmp    $0x0,%esi
  0x000077505521634c:   je     0x0000775055216619           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@145 (line 579)
  0x0000775055216352:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[88]=Oop rax=Oop }
                                                            ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::getNode@145 (line 579)
  0x0000775055216359:   test   %eax,(%r10)                  ;   {poll}
  0x000077505521635c:   cmp    $0x0,%rax
  0x0000775055216360:   movabs $0x7750202fce18,%rdx         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505521636a:   movabs $0x410,%rcx
  0x0000775055216374:   je     0x0000775055216384
  0x000077505521637a:   movabs $0x400,%rcx
  0x0000775055216384:   mov    (%rdx,%rcx,1),%rsi
  0x0000775055216388:   lea    0x1(%rsi),%rsi
  0x000077505521638c:   mov    %rsi,(%rdx,%rcx,1)
  0x0000775055216390:   je     0x00007750552163b7           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@145 (line 579)
  0x0000775055216396:   mov    %rax,%rdx
  0x0000775055216399:   jmp    0x0000775055216138           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@99 (line 576)
  0x000077505521639e:   mov    %rdx,%rax
  0x00007750552163a1:   add    $0x80,%rsp
  0x00007750552163a8:   pop    %rbp
  0x00007750552163a9:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552163b0:   ja     0x000077505521663a
  0x00007750552163b6:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@136 (line 578)
  0x00007750552163b7:   movabs $0x0,%rax                    ;   {oop(NULL)}
  0x00007750552163c1:   add    $0x80,%rsp
  0x00007750552163c8:   pop    %rbp
  0x00007750552163c9:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552163d0:   ja     0x0000775055216650
  0x00007750552163d6:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@149 (line 582)
  0x00007750552163d7:   mov    0x4c(%rsp),%ebx
  0x00007750552163db:   mov    0x58(%rsp),%rcx
  0x00007750552163e0:   cmp    $0x0,%rdi
  0x00007750552163e4:   jne    0x00007750552163fc
  0x00007750552163e6:   movabs $0x7750202fce18,%rsi         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552163f0:   orb    $0x1,0x2d1(%rsi)
  0x00007750552163f7:   jmp    0x00007750552164ce
  0x00007750552163fc:   movabs $0x8000614f8,%rax            ;   {metadata('java/util/HashMap$TreeNode')}
  0x0000775055216406:   mov    0x8(%rdi),%edx
  0x0000775055216409:   movabs $0x800000000,%r10
  0x0000775055216413:   add    %r10,%rdx
  0x0000775055216416:   cmp    %rdx,%rax
  0x0000775055216419:   jne    0x00007750552164b2
  0x000077505521641f:   movabs $0x7750202fce18,%rsi         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055216429:   mov    0x8(%rdi),%eax
  0x000077505521642c:   movabs $0x800000000,%r10
  0x0000775055216436:   add    %r10,%rax
  0x0000775055216439:   cmp    0x2e8(%rsi),%rax
  0x0000775055216440:   jne    0x000077505521644f
  0x0000775055216442:   addq   $0x1,0x2f0(%rsi)
  0x000077505521644a:   jmp    0x00007750552164ce
  0x000077505521644f:   cmp    0x2f8(%rsi),%rax
  0x0000775055216456:   jne    0x0000775055216465
  0x0000775055216458:   addq   $0x1,0x300(%rsi)
  0x0000775055216460:   jmp    0x00007750552164ce
  0x0000775055216465:   cmpq   $0x0,0x2e8(%rsi)
  0x0000775055216470:   jne    0x0000775055216489
  0x0000775055216472:   mov    %rax,0x2e8(%rsi)
  0x0000775055216479:   movq   $0x1,0x2f0(%rsi)
  0x0000775055216484:   jmp    0x00007750552164ce
  0x0000775055216489:   cmpq   $0x0,0x2f8(%rsi)
  0x0000775055216494:   jne    0x00007750552164ad
  0x0000775055216496:   mov    %rax,0x2f8(%rsi)
  0x000077505521649d:   movq   $0x1,0x300(%rsi)
  0x00007750552164a8:   jmp    0x00007750552164ce
  0x00007750552164ad:   jmp    0x00007750552164ce
  0x00007750552164b2:   movabs $0x7750202fce18,%rsi         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552164bc:   subq   $0x1,0x2d8(%rsi)
  0x00007750552164c4:   jmp    0x0000775055216666
  0x00007750552164c9:   jmp    0x00007750552164ce
  0x00007750552164ce:   mov    %rdi,%rsi                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@89 (line 574)
  0x00007750552164d1:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x000077505521666f
  0x00007750552164d4:   mov    %rsi,%rdx
  0x00007750552164d7:   movabs $0x7750202fce18,%rdi         ;   {metadata(method data for {method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552164e1:   mov    0x8(%rdx),%edx
  0x00007750552164e4:   movabs $0x800000000,%r10
  0x00007750552164ee:   add    %r10,%rdx
  0x00007750552164f1:   cmp    0x320(%rdi),%rdx
  0x00007750552164f8:   jne    0x0000775055216507
  0x00007750552164fa:   addq   $0x1,0x328(%rdi)
  0x0000775055216502:   jmp    0x000077505521656d
  0x0000775055216507:   cmp    0x330(%rdi),%rdx
  0x000077505521650e:   jne    0x000077505521651d
  0x0000775055216510:   addq   $0x1,0x338(%rdi)
  0x0000775055216518:   jmp    0x000077505521656d
  0x000077505521651d:   cmpq   $0x0,0x320(%rdi)
  0x0000775055216528:   jne    0x0000775055216541
  0x000077505521652a:   mov    %rdx,0x320(%rdi)
  0x0000775055216531:   movq   $0x1,0x328(%rdi)
  0x000077505521653c:   jmp    0x000077505521656d
  0x0000775055216541:   cmpq   $0x0,0x330(%rdi)
  0x000077505521654c:   jne    0x0000775055216565
  0x000077505521654e:   mov    %rdx,0x330(%rdi)
  0x0000775055216555:   movq   $0x1,0x338(%rdi)
  0x0000775055216560:   jmp    0x000077505521656d
  0x0000775055216565:   addq   $0x1,0x310(%rdi)
  0x000077505521656d:   mov    %rbx,%rdx                    ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@95 (line 574)
  0x0000775055216570:   nopl   0x0(%rax)
  0x0000775055216577:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@95 (line 574)
                                                            ;   {optimized virtual_call}
  0x000077505521657c:   add    $0x80,%rsp
  0x0000775055216583:   pop    %rbp
  0x0000775055216584:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521658b:   ja     0x0000775055216674
  0x0000775055216591:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@98 (line 574)
  0x0000775055216592:   mov    %rdi,%rax
  0x0000775055216595:   add    $0x80,%rsp
  0x000077505521659c:   pop    %rbp
  0x000077505521659d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552165a4:   ja     0x000077505521668a
  0x00007750552165aa:   ret
  0x00007750552165ab:   movabs $0x77502018fa08,%r10         ;   {metadata({method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552165b5:   mov    %r10,0x8(%rsp)
  0x00007750552165ba:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552165c2:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop [88]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::getNode@-1 (line 567)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552165c7:   jmp    0x0000775055215bbc
  0x00007750552165cc:   call   0x000077505c8295a0           ; ImmutableOopMap {rdi=Oop rdx=Oop [88]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@10 (line 567)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552165d1:   movabs $0x77502018ee68,%r10         ;   {metadata({method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007750552165db:   mov    %r10,0x8(%rsp)
  0x00007750552165e0:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552165e8:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop [88]=Oop rdi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::hash@-1 (line 338)
                                                            ; - java.util.HashMap::getNode@23 (line 568)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552165ed:   jmp    0x0000775055215c75
  0x00007750552165f2:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop [88]=Oop [80]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ; - java.util.HashMap::getNode@23 (line 568)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552165f7:   mov    %rsi,(%rsp)
  0x00007750552165fb:   mov    %rdi,0x8(%rsp)
  0x0000775055216600:   call   0x000077505c828ca0           ; ImmutableOopMap {[88]=Oop rdi=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@30 (line 568)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055216605:   call   0x000077505c8295a0           ; ImmutableOopMap {rdi=Oop [88]=Oop }
                                                            ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::getNode@37 (line 569)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521660a:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop [88]=Oop [96]=Oop rsi=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@63 (line 570)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521660f:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop rdi=Oop [88]=Oop }
                                                            ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::getNode@101 (line 576)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055216614:   call   0x000077505c8295a0           ; ImmutableOopMap {rdi=Oop [88]=Oop [104]=Oop rsi=Oop }
                                                            ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@128 (line 577)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055216619:   movabs $0x77502018fa08,%r10         ;   {metadata({method} {0x000077502018fa08} 'getNode' '(Ljava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055216623:   mov    %r10,0x8(%rsp)
  0x0000775055216628:   movq   $0x91,(%rsp)
  0x0000775055216630:   call   0x000077505c82e680           ; ImmutableOopMap {[88]=Oop rax=Oop }
                                                            ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::getNode@145 (line 579)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055216635:   jmp    0x0000775055216352
  0x000077505521663a:   movabs $0x7750552163a9,%r10         ;   {internal_word}
  0x0000775055216644:   mov    %r10,0x360(%r15)
  0x000077505521664b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055216650:   movabs $0x7750552163c9,%r10         ;   {internal_word}
  0x000077505521665a:   mov    %r10,0x360(%r15)
  0x0000775055216661:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055216666:   mov    %rdi,(%rsp)
  0x000077505521666a:   call   0x000077505c82b9a0           ; ImmutableOopMap {rcx=Oop [88]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@89 (line 574)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000077505521666f:   call   0x000077505c8295a0           ; ImmutableOopMap {rcx=Oop [88]=Oop rsi=Oop }
                                                            ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::getNode@95 (line 574)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055216674:   movabs $0x775055216584,%r10         ;   {internal_word}
  0x000077505521667e:   mov    %r10,0x360(%r15)
  0x0000775055216685:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521668a:   movabs $0x77505521659d,%r10         ;   {internal_word}
  0x0000775055216694:   mov    %r10,0x360(%r15)
  0x000077505521669b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552166a0:   nop
  0x00007750552166a1:   nop
  0x00007750552166a2:   mov    0x3d8(%r15),%rax
  0x00007750552166a9:   movq   $0x0,0x3d8(%r15)
  0x00007750552166b4:   movq   $0x0,0x3e0(%r15)
  0x00007750552166bf:   add    $0x80,%rsp
  0x00007750552166c6:   pop    %rbp
  0x00007750552166c7:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552166cc:   hlt
  0x00007750552166cd:   hlt
  0x00007750552166ce:   hlt
  0x00007750552166cf:   hlt
  0x00007750552166d0:   hlt
  0x00007750552166d1:   hlt
  0x00007750552166d2:   hlt
  0x00007750552166d3:   hlt
  0x00007750552166d4:   hlt
  0x00007750552166d5:   hlt
  0x00007750552166d6:   hlt
  0x00007750552166d7:   hlt
  0x00007750552166d8:   hlt
  0x00007750552166d9:   hlt
  0x00007750552166da:   hlt
  0x00007750552166db:   hlt
  0x00007750552166dc:   hlt
  0x00007750552166dd:   hlt
  0x00007750552166de:   hlt
  0x00007750552166df:   hlt
[Stub Code]
  0x00007750552166e0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x00007750552166e5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552166ef:   jmp    0x00007750552166ef           ;   {runtime_call}
  0x00007750552166f4:   nop
  0x00007750552166f5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552166ff:   jmp    0x00007750552166ff           ;   {runtime_call}
  0x0000775055216704:   nop
  0x0000775055216705:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521670f:   jmp    0x000077505521670f           ;   {runtime_call}
  0x0000775055216714:   nop
  0x0000775055216715:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521671f:   jmp    0x000077505521671f           ;   {runtime_call}
[Exception Handler]
  0x0000775055216724:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055216729:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055216733:   and    $0xfffffffffffffff0,%rsp
  0x0000775055216737:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521673c:   hlt
[Deopt Handler Code]
  0x000077505521673d:   movabs $0x77505521673d,%r10         ;   {section_word}
  0x0000775055216747:   push   %r10
  0x0000775055216749:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521674e:   hlt
  0x000077505521674f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     194   58       3       java.util.ImmutableCollections$Set12$1::next (95 bytes)
 total in heap  [0x0000775055216e10,0x00007750552174e0] = 1744
 relocation     [0x0000775055216f70,0x0000775055216fc8] = 88
 main code      [0x0000775055216fe0,0x0000775055217240] = 608
 stub code      [0x0000775055217240,0x0000775055217280] = 64
 metadata       [0x0000775055217280,0x0000775055217288] = 8
 scopes data    [0x0000775055217288,0x0000775055217320] = 152
 scopes pcs     [0x0000775055217320,0x00007750552174c0] = 416
 dependencies   [0x00007750552174c0,0x00007750552174c8] = 8
 nul chk table  [0x00007750552174c8,0x00007750552174e0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1'
  #           [sp+0x40]  (sp of caller)
  0x0000775055216fe0:   mov    0x8(%rsi),%r10d
  0x0000775055216fe4:   movabs $0x800000000,%r11
  0x0000775055216fee:   add    %r11,%r10
  0x0000775055216ff1:   cmp    %rax,%r10
  0x0000775055216ff4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055216ffa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055217000:   mov    %eax,-0x14000(%rsp)
  0x0000775055217007:   push   %rbp
  0x0000775055217008:   sub    $0x30,%rsp
  0x000077505521700c:   movabs $0x7750202fd328,%rax         ;   {metadata(method data for {method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055217016:   mov    0xf4(%rax),%edx
  0x000077505521701c:   add    $0x2,%edx
  0x000077505521701f:   mov    %edx,0xf4(%rax)
  0x0000775055217025:   and    $0x7fe,%edx
  0x000077505521702b:   cmp    $0x0,%edx
  0x000077505521702e:   je     0x000077505521717e           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@0 (line 831)
  0x0000775055217034:   mov    0xc(%rsi),%eax               ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@1 (line 831)
  0x0000775055217037:   cmp    $0x1,%eax
  0x000077505521703a:   movabs $0x7750202fd328,%rdx         ;   {metadata(method data for {method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055217044:   movabs $0x138,%rdi
  0x000077505521704e:   jne    0x000077505521705e
  0x0000775055217054:   movabs $0x148,%rdi
  0x000077505521705e:   mov    (%rdx,%rdi,1),%rbx
  0x0000775055217062:   lea    0x1(%rbx),%rbx
  0x0000775055217066:   mov    %rbx,(%rdx,%rdi,1)
  0x000077505521706a:   jne    0x000077505521708c           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@5 (line 831)
  0x0000775055217070:   movl   $0x0,0xc(%rsi)               ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@10 (line 832)
  0x0000775055217077:   movabs $0x7750202fd328,%rax         ;   {metadata(method data for {method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055217081:   incl   0x158(%rax)
  0x0000775055217087:   jmp    0x000077505521710d           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@16 (line 833)
  0x000077505521708c:   cmp    $0x2,%eax
  0x000077505521708f:   movabs $0x7750202fd328,%rax         ;   {metadata(method data for {method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055217099:   movabs $0x1b0,%rdx
  0x00007750552170a3:   jne    0x00007750552170b3
  0x00007750552170a9:   movabs $0x1c0,%rdx
  0x00007750552170b3:   mov    (%rax,%rdx,1),%rdi
  0x00007750552170b7:   lea    0x1(%rdi),%rdi
  0x00007750552170bb:   mov    %rdi,(%rax,%rdx,1)
  0x00007750552170bf:   jne    0x000077505521713e           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@55 (line 834)
  0x00007750552170c5:   movl   $0x1,0xc(%rsi)               ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@60 (line 835)
  0x00007750552170cc:   movabs $0x7750202fd328,%rax         ;   {metadata(method data for {method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x00007750552170d6:   incl   0x1e0(%rax)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@66 (line 836)
  0x00007750552170dc:   mov    0x10(%rsi),%eax
  0x00007750552170df:   shl    $0x3,%rax                    ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@70 (line 836)
  0x00007750552170e3:   mov    0x10(%rax),%eax              ; implicit exception: dispatches to 0x000077505521719f
  0x00007750552170e6:   shl    $0x3,%rax                    ;*getfield e1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@73 (line 836)
  0x00007750552170ea:   movabs $0x7750202fd328,%rdx         ;   {metadata(method data for {method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x00007750552170f4:   incl   0x1f0(%rdx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@76 (line 836)
  0x00007750552170fa:   add    $0x30,%rsp
  0x00007750552170fe:   pop    %rbp
  0x00007750552170ff:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055217106:   ja     0x00007750552171a4
  0x000077505521710c:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@86 (line 836)
  0x000077505521710d:   mov    0x10(%rsi),%eax
  0x0000775055217110:   shl    $0x3,%rax                    ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@33 (line 833)
  0x0000775055217114:   mov    0xc(%rax),%eax               ; implicit exception: dispatches to 0x00007750552171ba
  0x0000775055217117:   shl    $0x3,%rax                    ;*getfield e0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@36 (line 833)
  0x000077505521711b:   movabs $0x7750202fd328,%rdx         ;   {metadata(method data for {method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055217125:   incl   0x198(%rdx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@39 (line 833)
  0x000077505521712b:   add    $0x30,%rsp
  0x000077505521712f:   pop    %rbp
  0x0000775055217130:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055217137:   ja     0x00007750552171bf
  0x000077505521713d:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@49 (line 833)
  0x000077505521713e:   xchg   %ax,%ax
  0x0000775055217140:   jmp    0x00007750552171e4           ;   {no_reloc}
  0x0000775055217145:   add    %al,(%rax)
  0x0000775055217147:   add    %al,(%rax)
  0x0000775055217149:   add    %ch,%cl
  0x000077505521714b:   lahf
  0x000077505521714c:   add    %al,(%rax)
  0x000077505521714e:   add    %cl,-0x75(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@87 (line 838)
  0x0000775055217151:   lock movabs $0x7750202fd328,%rdi    ;   {metadata(method data for {method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x000077505521715c:   addq   $0x1,0x208(%rdi)
  0x0000775055217164:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@91 (line 838)
  0x0000775055217167:   mov    %rax,0x20(%rsp)
  0x000077505521716c:   data16 xchg %ax,%ax
  0x000077505521716f:   call   0x000077505c788080           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@91 (line 838)
                                                            ;   {optimized virtual_call}
  0x0000775055217174:   mov    0x20(%rsp),%rax
  0x0000775055217179:   jmp    0x000077505521721a
  0x000077505521717e:   movabs $0x77502029dc98,%r10         ;   {metadata({method} {0x000077502029dc98} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055217188:   mov    %r10,0x8(%rsp)
  0x000077505521718d:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055217195:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$Set12$1::next@-1 (line 831)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521719a:   jmp    0x0000775055217034
  0x000077505521719f:   call   0x000077505c8295a0           ; ImmutableOopMap {}
                                                            ;*getfield e1 {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$Set12$1::next@73 (line 836)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552171a4:   movabs $0x7750552170ff,%r10         ;   {internal_word}
  0x00007750552171ae:   mov    %r10,0x360(%r15)
  0x00007750552171b5:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552171ba:   call   0x000077505c8295a0           ; ImmutableOopMap {}
                                                            ;*getfield e0 {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$Set12$1::next@36 (line 833)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552171bf:   movabs $0x775055217130,%r10         ;   {internal_word}
  0x00007750552171c9:   mov    %r10,0x360(%r15)
  0x00007750552171d0:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552171d5:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x00007750552171df:   mov    $0xa050f00,%eax
  0x00007750552171e4:   call   0x000077505c82d600           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.ImmutableCollections$Set12$1::next@87 (line 838)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007750552171e9:   jmp    0x0000775055217140
  0x00007750552171ee:   mov    %rdx,%rdx
  0x00007750552171f1:   call   0x000077505c829b80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::next@87 (line 838)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x00007750552171f6:   jmp    0x000077505521714f
  0x00007750552171fb:   nop
  0x00007750552171fc:   nop
  0x00007750552171fd:   mov    0x3d8(%r15),%rax
  0x0000775055217204:   movq   $0x0,0x3d8(%r15)
  0x000077505521720f:   movq   $0x0,0x3e0(%r15)
  0x000077505521721a:   add    $0x30,%rsp
  0x000077505521721e:   pop    %rbp
  0x000077505521721f:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055217224:   hlt
  0x0000775055217225:   hlt
  0x0000775055217226:   hlt
  0x0000775055217227:   hlt
  0x0000775055217228:   hlt
  0x0000775055217229:   hlt
  0x000077505521722a:   hlt
  0x000077505521722b:   hlt
  0x000077505521722c:   hlt
  0x000077505521722d:   hlt
  0x000077505521722e:   hlt
  0x000077505521722f:   hlt
  0x0000775055217230:   hlt
  0x0000775055217231:   hlt
  0x0000775055217232:   hlt
  0x0000775055217233:   hlt
  0x0000775055217234:   hlt
  0x0000775055217235:   hlt
  0x0000775055217236:   hlt
  0x0000775055217237:   hlt
  0x0000775055217238:   hlt
  0x0000775055217239:   hlt
  0x000077505521723a:   hlt
  0x000077505521723b:   hlt
  0x000077505521723c:   hlt
  0x000077505521723d:   hlt
  0x000077505521723e:   hlt
  0x000077505521723f:   hlt
[Stub Code]
  0x0000775055217240:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055217245:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521724f:   jmp    0x000077505521724f           ;   {runtime_call}
[Exception Handler]
  0x0000775055217254:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055217259:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055217263:   and    $0xfffffffffffffff0,%rsp
  0x0000775055217267:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521726c:   hlt
[Deopt Handler Code]
  0x000077505521726d:   movabs $0x77505521726d,%r10         ;   {section_word}
  0x0000775055217277:   push   %r10
  0x0000775055217279:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521727e:   hlt
  0x000077505521727f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     196   59       3       java.util.HashSet::add (20 bytes)
 total in heap  [0x0000775055217510,0x0000775055217998] = 1160
 relocation     [0x0000775055217670,0x00007750552176b8] = 72
 main code      [0x00007750552176c0,0x0000775055217840] = 384
 stub code      [0x0000775055217840,0x0000775055217880] = 64
 metadata       [0x0000775055217880,0x0000775055217890] = 16
 scopes data    [0x0000775055217890,0x00007750552178d0] = 64
 scopes pcs     [0x00007750552178d0,0x0000775055217980] = 176
 dependencies   [0x0000775055217980,0x0000775055217988] = 8
 nul chk table  [0x0000775055217988,0x0000775055217998] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202b2a20} 'add' '(Ljava/lang/Object;)Z' in 'java/util/HashSet'
  # this:     rsi:rsi   = 'java/util/HashSet'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007750552176c0:   mov    0x8(%rsi),%r10d
  0x00007750552176c4:   movabs $0x800000000,%r11
  0x00007750552176ce:   add    %r11,%r10
  0x00007750552176d1:   cmp    %rax,%r10
  0x00007750552176d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552176da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552176e0:   mov    %eax,-0x14000(%rsp)
  0x00007750552176e7:   push   %rbp
  0x00007750552176e8:   sub    $0x30,%rsp
  0x00007750552176ec:   movabs $0x7750202fd598,%rcx         ;   {metadata(method data for {method} {0x00007750202b2a20} 'add' '(Ljava/lang/Object;)Z' in 'java/util/HashSet')}
  0x00007750552176f6:   mov    0xf4(%rcx),%edi
  0x00007750552176fc:   add    $0x2,%edi
  0x00007750552176ff:   mov    %edi,0xf4(%rcx)
  0x0000775055217705:   and    $0x7fe,%edi
  0x000077505521770b:   cmp    $0x0,%edi
  0x000077505521770e:   je     0x00007750552177c3           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashSet::add@0 (line 221)
  0x0000775055217714:   mov    0xc(%rsi),%esi
  0x0000775055217717:   shl    $0x3,%rsi                    ;*getfield map {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashSet::add@1 (line 221)
  0x000077505521771b:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x00007750552177e4
  0x000077505521771e:   mov    %rsi,%rcx
  0x0000775055217721:   movabs $0x7750202fd598,%rdi         ;   {metadata(method data for {method} {0x00007750202b2a20} 'add' '(Ljava/lang/Object;)Z' in 'java/util/HashSet')}
  0x000077505521772b:   movabs $0x80005f9b0,%r10            ;   {metadata('java/util/HashMap')}
  0x0000775055217735:   mov    %r10,0x148(%rdi)
  0x000077505521773c:   addq   $0x1,0x150(%rdi)
  0x0000775055217744:   movabs $0x62ac50e20,%rcx            ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashSet::add@8 (line 221)
                                                            ;   {oop(a 'java/lang/Object'{0x000000062ac50e20})}
  0x000077505521774e:   nop
  0x000077505521774f:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashSet::add@8 (line 221)
                                                            ;   {optimized virtual_call}
  0x0000775055217754:   cmp    $0x0,%rax
  0x0000775055217758:   movabs $0x7750202fd598,%rax         ;   {metadata(method data for {method} {0x00007750202b2a20} 'add' '(Ljava/lang/Object;)Z' in 'java/util/HashSet')}
  0x0000775055217762:   movabs $0x170,%rsi
  0x000077505521776c:   jne    0x000077505521777c
  0x0000775055217772:   movabs $0x180,%rsi
  0x000077505521777c:   mov    (%rax,%rsi,1),%rdi
  0x0000775055217780:   lea    0x1(%rdi),%rdi
  0x0000775055217784:   mov    %rdi,(%rax,%rsi,1)
  0x0000775055217788:   jne    0x00007750552177a8           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashSet::add@11 (line 221)
  0x000077505521778e:   movabs $0x7750202fd598,%rax         ;   {metadata(method data for {method} {0x00007750202b2a20} 'add' '(Ljava/lang/Object;)Z' in 'java/util/HashSet')}
  0x0000775055217798:   incl   0x190(%rax)
  0x000077505521779e:   mov    $0x1,%eax
  0x00007750552177a3:   jmp    0x00007750552177ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashSet::add@15 (line 221)
  0x00007750552177a8:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashSet::add@19 (line 221)
  0x00007750552177ad:   and    $0x1,%eax
  0x00007750552177b0:   add    $0x30,%rsp
  0x00007750552177b4:   pop    %rbp
  0x00007750552177b5:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552177bc:   ja     0x00007750552177e9
  0x00007750552177c2:   ret
  0x00007750552177c3:   movabs $0x7750202b2a20,%r10         ;   {metadata({method} {0x00007750202b2a20} 'add' '(Ljava/lang/Object;)Z' in 'java/util/HashSet')}
  0x00007750552177cd:   mov    %r10,0x8(%rsp)
  0x00007750552177d2:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552177da:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashSet::add@-1 (line 221)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552177df:   jmp    0x0000775055217714
  0x00007750552177e4:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                            ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashSet::add@8 (line 221)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552177e9:   movabs $0x7750552177b5,%r10         ;   {internal_word}
  0x00007750552177f3:   mov    %r10,0x360(%r15)
  0x00007750552177fa:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552177ff:   nop
  0x0000775055217800:   nop
  0x0000775055217801:   mov    0x3d8(%r15),%rax
  0x0000775055217808:   movq   $0x0,0x3d8(%r15)
  0x0000775055217813:   movq   $0x0,0x3e0(%r15)
  0x000077505521781e:   add    $0x30,%rsp
  0x0000775055217822:   pop    %rbp
  0x0000775055217823:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055217828:   hlt
  0x0000775055217829:   hlt
  0x000077505521782a:   hlt
  0x000077505521782b:   hlt
  0x000077505521782c:   hlt
  0x000077505521782d:   hlt
  0x000077505521782e:   hlt
  0x000077505521782f:   hlt
  0x0000775055217830:   hlt
  0x0000775055217831:   hlt
  0x0000775055217832:   hlt
  0x0000775055217833:   hlt
  0x0000775055217834:   hlt
  0x0000775055217835:   hlt
  0x0000775055217836:   hlt
  0x0000775055217837:   hlt
  0x0000775055217838:   hlt
  0x0000775055217839:   hlt
  0x000077505521783a:   hlt
  0x000077505521783b:   hlt
  0x000077505521783c:   hlt
  0x000077505521783d:   hlt
  0x000077505521783e:   hlt
  0x000077505521783f:   hlt
[Stub Code]
  0x0000775055217840:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055217845:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521784f:   jmp    0x000077505521784f           ;   {runtime_call}
[Exception Handler]
  0x0000775055217854:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055217859:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055217863:   and    $0xfffffffffffffff0,%rsp
  0x0000775055217867:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521786c:   hlt
[Deopt Handler Code]
  0x000077505521786d:   movabs $0x77505521786d,%r10         ;   {section_word}
  0x0000775055217877:   push   %r10
  0x0000775055217879:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521787e:   hlt
  0x000077505521787f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     198   60       3       java.lang.module.ModuleDescriptor$Exports::isQualified (18 bytes)
 total in heap  [0x0000775055217a10,0x0000775055217ee8] = 1240
 relocation     [0x0000775055217b70,0x0000775055217bb0] = 64
 main code      [0x0000775055217bc0,0x0000775055217da0] = 480
 stub code      [0x0000775055217da0,0x0000775055217de0] = 64
 metadata       [0x0000775055217de0,0x0000775055217de8] = 8
 scopes data    [0x0000775055217de8,0x0000775055217e20] = 56
 scopes pcs     [0x0000775055217e20,0x0000775055217ed0] = 176
 dependencies   [0x0000775055217ed0,0x0000775055217ed8] = 8
 nul chk table  [0x0000775055217ed8,0x0000775055217ee8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020292cc8} 'isQualified' '()Z' in 'java/lang/module/ModuleDescriptor$Exports'
  #           [sp+0x40]  (sp of caller)
  0x0000775055217bc0:   mov    0x8(%rsi),%r10d
  0x0000775055217bc4:   movabs $0x800000000,%r11
  0x0000775055217bce:   add    %r11,%r10
  0x0000775055217bd1:   cmp    %rax,%r10
  0x0000775055217bd4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055217bda:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055217be0:   mov    %eax,-0x14000(%rsp)
  0x0000775055217be7:   push   %rbp
  0x0000775055217be8:   sub    $0x30,%rsp
  0x0000775055217bec:   movabs $0x7750202fd788,%rdi         ;   {metadata(method data for {method} {0x0000775020292cc8} 'isQualified' '()Z' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x0000775055217bf6:   mov    0xf4(%rdi),%ebx
  0x0000775055217bfc:   add    $0x2,%ebx
  0x0000775055217bff:   mov    %ebx,0xf4(%rdi)
  0x0000775055217c05:   and    $0x7fe,%ebx
  0x0000775055217c0b:   cmp    $0x0,%ebx
  0x0000775055217c0e:   je     0x0000775055217d3a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::isQualified@0 (line 426)
  0x0000775055217c14:   mov    0x14(%rsi),%esi
  0x0000775055217c17:   shl    $0x3,%rsi                    ;*getfield targets {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::isQualified@1 (line 426)
  0x0000775055217c1b:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x0000775055217d5b
                                                            ;*invokeinterface isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::isQualified@4 (line 426)
  0x0000775055217c1e:   mov    %rsi,%rdi
  0x0000775055217c21:   movabs $0x7750202fd788,%rbx         ;   {metadata(method data for {method} {0x0000775020292cc8} 'isQualified' '()Z' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x0000775055217c2b:   mov    0x8(%rdi),%edi
  0x0000775055217c2e:   movabs $0x800000000,%r10
  0x0000775055217c38:   add    %r10,%rdi
  0x0000775055217c3b:   cmp    0x148(%rbx),%rdi
  0x0000775055217c42:   jne    0x0000775055217c51
  0x0000775055217c44:   addq   $0x1,0x150(%rbx)
  0x0000775055217c4c:   jmp    0x0000775055217cb7
  0x0000775055217c51:   cmp    0x158(%rbx),%rdi
  0x0000775055217c58:   jne    0x0000775055217c67
  0x0000775055217c5a:   addq   $0x1,0x160(%rbx)
  0x0000775055217c62:   jmp    0x0000775055217cb7
  0x0000775055217c67:   cmpq   $0x0,0x148(%rbx)
  0x0000775055217c72:   jne    0x0000775055217c8b
  0x0000775055217c74:   mov    %rdi,0x148(%rbx)
  0x0000775055217c7b:   movq   $0x1,0x150(%rbx)
  0x0000775055217c86:   jmp    0x0000775055217cb7
  0x0000775055217c8b:   cmpq   $0x0,0x158(%rbx)
  0x0000775055217c96:   jne    0x0000775055217caf
  0x0000775055217c98:   mov    %rdi,0x158(%rbx)
  0x0000775055217c9f:   movq   $0x1,0x160(%rbx)
  0x0000775055217caa:   jmp    0x0000775055217cb7
  0x0000775055217caf:   addq   $0x1,0x138(%rbx)
  0x0000775055217cb7:   nopw   0x0(%rax,%rax,1)
  0x0000775055217cbd:   movabs $0xffffffffffffffff,%rax
  0x0000775055217cc7:   call   0x000077505c788380           ; ImmutableOopMap {}
                                                            ;*invokeinterface isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::isQualified@4 (line 426)
                                                            ;   {virtual_call}
  0x0000775055217ccc:   cmp    $0x0,%eax
  0x0000775055217ccf:   movabs $0x7750202fd788,%rax         ;   {metadata(method data for {method} {0x0000775020292cc8} 'isQualified' '()Z' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x0000775055217cd9:   movabs $0x170,%rsi
  0x0000775055217ce3:   jne    0x0000775055217cf3
  0x0000775055217ce9:   movabs $0x180,%rsi
  0x0000775055217cf3:   mov    (%rax,%rsi,1),%rdi
  0x0000775055217cf7:   lea    0x1(%rdi),%rdi
  0x0000775055217cfb:   mov    %rdi,(%rax,%rsi,1)
  0x0000775055217cff:   jne    0x0000775055217d1f           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::isQualified@9 (line 426)
  0x0000775055217d05:   movabs $0x7750202fd788,%rax         ;   {metadata(method data for {method} {0x0000775020292cc8} 'isQualified' '()Z' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x0000775055217d0f:   incl   0x190(%rax)
  0x0000775055217d15:   mov    $0x1,%eax
  0x0000775055217d1a:   jmp    0x0000775055217d24           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::isQualified@13 (line 426)
  0x0000775055217d1f:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::isQualified@17 (line 426)
  0x0000775055217d24:   and    $0x1,%eax
  0x0000775055217d27:   add    $0x30,%rsp
  0x0000775055217d2b:   pop    %rbp
  0x0000775055217d2c:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055217d33:   ja     0x0000775055217d60
  0x0000775055217d39:   ret
  0x0000775055217d3a:   movabs $0x775020292cc8,%r10         ;   {metadata({method} {0x0000775020292cc8} 'isQualified' '()Z' in 'java/lang/module/ModuleDescriptor$Exports')}
  0x0000775055217d44:   mov    %r10,0x8(%rsp)
  0x0000775055217d49:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055217d51:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.module.ModuleDescriptor$Exports::isQualified@-1 (line 426)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055217d56:   jmp    0x0000775055217c14
  0x0000775055217d5b:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokeinterface isEmpty {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::isQualified@4 (line 426)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055217d60:   movabs $0x775055217d2c,%r10         ;   {internal_word}
  0x0000775055217d6a:   mov    %r10,0x360(%r15)
  0x0000775055217d71:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055217d76:   nop
  0x0000775055217d77:   nop
  0x0000775055217d78:   mov    0x3d8(%r15),%rax
  0x0000775055217d7f:   movq   $0x0,0x3d8(%r15)
  0x0000775055217d8a:   movq   $0x0,0x3e0(%r15)
  0x0000775055217d95:   add    $0x30,%rsp
  0x0000775055217d99:   pop    %rbp
  0x0000775055217d9a:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055217d9f:   hlt
[Stub Code]
  0x0000775055217da0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055217da5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055217daf:   jmp    0x0000775055217daf           ;   {runtime_call}
[Exception Handler]
  0x0000775055217db4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055217db9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055217dc3:   and    $0xfffffffffffffff0,%rsp
  0x0000775055217dc7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055217dcc:   hlt
[Deopt Handler Code]
  0x0000775055217dcd:   movabs $0x775055217dcd,%r10         ;   {section_word}
  0x0000775055217dd7:   push   %r10
  0x0000775055217dd9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055217dde:   hlt
  0x0000775055217ddf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     200   61       1       java.lang.module.ModuleDescriptor::isAutomatic (5 bytes)
 total in heap  [0x000077505cccbe90,0x000077505cccc150] = 704
 relocation     [0x000077505cccbff0,0x000077505cccc018] = 40
 main code      [0x000077505cccc020,0x000077505cccc0c0] = 160
 stub code      [0x000077505cccc0c0,0x000077505cccc0f0] = 48
 metadata       [0x000077505cccc0f0,0x000077505cccc0f8] = 8
 scopes data    [0x000077505cccc0f8,0x000077505cccc108] = 16
 scopes pcs     [0x000077505cccc108,0x000077505cccc148] = 64
 dependencies   [0x000077505cccc148,0x000077505cccc150] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202567f8} 'isAutomatic' '()Z' in 'java/lang/module/ModuleDescriptor'
  #           [sp+0x40]  (sp of caller)
  0x000077505cccc020:   mov    0x8(%rsi),%r10d
  0x000077505cccc024:   movabs $0x800000000,%r11
  0x000077505cccc02e:   add    %r11,%r10
  0x000077505cccc031:   cmp    %rax,%r10
  0x000077505cccc034:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccc03a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505cccc040:   mov    %eax,-0x14000(%rsp)
  0x000077505cccc047:   push   %rbp
  0x000077505cccc048:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::isAutomatic@0 (line 1319)
  0x000077505cccc04c:   movsbl 0x11(%rsi),%eax              ;*getfield automatic {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor::isAutomatic@1 (line 1319)
  0x000077505cccc050:   and    $0x1,%eax
  0x000077505cccc053:   add    $0x30,%rsp
  0x000077505cccc057:   pop    %rbp
  0x000077505cccc058:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505cccc05f:   ja     0x000077505cccc066
  0x000077505cccc065:   ret
  0x000077505cccc066:   movabs $0x77505cccc058,%r10         ;   {internal_word}
  0x000077505cccc070:   mov    %r10,0x360(%r15)
  0x000077505cccc077:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505cccc07c:   nop
  0x000077505cccc07d:   nop
  0x000077505cccc07e:   mov    0x3d8(%r15),%rax
  0x000077505cccc085:   movq   $0x0,0x3d8(%r15)
  0x000077505cccc090:   movq   $0x0,0x3e0(%r15)
  0x000077505cccc09b:   add    $0x30,%rsp
  0x000077505cccc09f:   pop    %rbp
  0x000077505cccc0a0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505cccc0a5:   hlt
  0x000077505cccc0a6:   hlt
  0x000077505cccc0a7:   hlt
  0x000077505cccc0a8:   hlt
  0x000077505cccc0a9:   hlt
  0x000077505cccc0aa:   hlt
  0x000077505cccc0ab:   hlt
  0x000077505cccc0ac:   hlt
  0x000077505cccc0ad:   hlt
  0x000077505cccc0ae:   hlt
  0x000077505cccc0af:   hlt
  0x000077505cccc0b0:   hlt
  0x000077505cccc0b1:   hlt
  0x000077505cccc0b2:   hlt
  0x000077505cccc0b3:   hlt
  0x000077505cccc0b4:   hlt
  0x000077505cccc0b5:   hlt
  0x000077505cccc0b6:   hlt
  0x000077505cccc0b7:   hlt
  0x000077505cccc0b8:   hlt
  0x000077505cccc0b9:   hlt
  0x000077505cccc0ba:   hlt
  0x000077505cccc0bb:   hlt
  0x000077505cccc0bc:   hlt
  0x000077505cccc0bd:   hlt
  0x000077505cccc0be:   hlt
  0x000077505cccc0bf:   hlt
[Exception Handler]
  0x000077505cccc0c0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505cccc0c5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505cccc0cf:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccc0d3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505cccc0d8:   hlt
[Deopt Handler Code]
  0x000077505cccc0d9:   movabs $0x77505cccc0d9,%r10         ;   {section_word}
  0x000077505cccc0e3:   push   %r10
  0x000077505cccc0e5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccc0ea:   hlt
  0x000077505cccc0eb:   hlt
  0x000077505cccc0ec:   hlt
  0x000077505cccc0ed:   hlt
  0x000077505cccc0ee:   hlt
  0x000077505cccc0ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     201   62       3       java.lang.module.ResolvedModule::hashCode (16 bytes)
 total in heap  [0x0000775055217f10,0x0000775055218450] = 1344
 relocation     [0x0000775055218070,0x00007750552180c0] = 80
 main code      [0x00007750552180c0,0x00007750552182a0] = 480
 stub code      [0x00007750552182a0,0x00007750552182f0] = 80
 metadata       [0x00007750552182f0,0x0000775055218320] = 48
 scopes data    [0x0000775055218320,0x0000775055218370] = 80
 scopes pcs     [0x0000775055218370,0x0000775055218430] = 192
 dependencies   [0x0000775055218430,0x0000775055218438] = 8
 nul chk table  [0x0000775055218438,0x0000775055218450] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202ec7c0} 'hashCode' '()I' in 'java/lang/module/ResolvedModule'
  #           [sp+0x50]  (sp of caller)
  0x00007750552180c0:   mov    0x8(%rsi),%r10d
  0x00007750552180c4:   movabs $0x800000000,%r11
  0x00007750552180ce:   add    %r11,%r10
  0x00007750552180d1:   cmp    %rax,%r10
  0x00007750552180d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552180da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552180e0:   mov    %eax,-0x14000(%rsp)
  0x00007750552180e7:   push   %rbp
  0x00007750552180e8:   sub    $0x40,%rsp
  0x00007750552180ec:   movabs $0x7750202fd970,%rdi         ;   {metadata(method data for {method} {0x00007750202ec7c0} 'hashCode' '()I' in 'java/lang/module/ResolvedModule')}
  0x00007750552180f6:   mov    0xf4(%rdi),%ebx
  0x00007750552180fc:   add    $0x2,%ebx
  0x00007750552180ff:   mov    %ebx,0xf4(%rdi)
  0x0000775055218105:   and    $0x7fe,%ebx
  0x000077505521810b:   cmp    $0x0,%ebx
  0x000077505521810e:   je     0x0000775055218221           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::hashCode@0 (line 119)
  0x0000775055218114:   mov    0xc(%rsi),%edi
  0x0000775055218117:   shl    $0x3,%rdi                    ;*getfield cf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::hashCode@1 (line 119)
  0x000077505521811b:   cmp    (%rdi),%rax                  ; implicit exception: dispatches to 0x0000775055218242
  0x000077505521811e:   mov    %rdi,%rbx
  0x0000775055218121:   movabs $0x7750202fd970,%rax         ;   {metadata(method data for {method} {0x00007750202ec7c0} 'hashCode' '()I' in 'java/lang/module/ResolvedModule')}
  0x000077505521812b:   mov    0x8(%rbx),%ebx
  0x000077505521812e:   movabs $0x800000000,%r10
  0x0000775055218138:   add    %r10,%rbx
  0x000077505521813b:   cmp    0x148(%rax),%rbx
  0x0000775055218142:   jne    0x0000775055218151
  0x0000775055218144:   addq   $0x1,0x150(%rax)
  0x000077505521814c:   jmp    0x00007750552181b7
  0x0000775055218151:   cmp    0x158(%rax),%rbx
  0x0000775055218158:   jne    0x0000775055218167
  0x000077505521815a:   addq   $0x1,0x160(%rax)
  0x0000775055218162:   jmp    0x00007750552181b7
  0x0000775055218167:   cmpq   $0x0,0x148(%rax)
  0x0000775055218172:   jne    0x000077505521818b
  0x0000775055218174:   mov    %rbx,0x148(%rax)
  0x000077505521817b:   movq   $0x1,0x150(%rax)
  0x0000775055218186:   jmp    0x00007750552181b7
  0x000077505521818b:   cmpq   $0x0,0x158(%rax)
  0x0000775055218196:   jne    0x00007750552181af
  0x0000775055218198:   mov    %rbx,0x158(%rax)
  0x000077505521819f:   movq   $0x1,0x160(%rax)
  0x00007750552181aa:   jmp    0x00007750552181b7
  0x00007750552181af:   addq   $0x1,0x138(%rax)
  0x00007750552181b7:   mov    %rsi,0x20(%rsp)
  0x00007750552181bc:   mov    %rdi,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::hashCode@4 (line 119)
  0x00007750552181bf:   call   0x000077505c788080           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::hashCode@4 (line 119)
                                                            ;   {optimized virtual_call}
  0x00007750552181c4:   mov    0x20(%rsp),%rsi
  0x00007750552181c9:   mov    0x10(%rsi),%esi
  0x00007750552181cc:   shl    $0x3,%rsi                    ;*getfield mref {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::hashCode@8 (line 119)
  0x00007750552181d0:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x0000775055218247
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::hashCode@11 (line 119)
  0x00007750552181d3:   mov    %rsi,%rdi
  0x00007750552181d6:   movabs $0x7750202fd970,%rbx         ;   {metadata(method data for {method} {0x00007750202ec7c0} 'hashCode' '()I' in 'java/lang/module/ResolvedModule')}
  0x00007750552181e0:   movabs $0x800077478,%r10            ;   {metadata('jdk/internal/module/ModuleReferenceImpl')}
  0x00007750552181ea:   mov    %r10,0x180(%rbx)
  0x00007750552181f1:   addq   $0x1,0x188(%rbx)
  0x00007750552181f9:   mov    %eax,0x28(%rsp)
  0x00007750552181fd:   xchg   %ax,%ax
  0x00007750552181ff:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::hashCode@11 (line 119)
                                                            ;   {optimized virtual_call}
  0x0000775055218204:   mov    0x28(%rsp),%esi
  0x0000775055218208:   xor    %rax,%rsi
  0x000077505521820b:   mov    %rsi,%rax
  0x000077505521820e:   add    $0x40,%rsp
  0x0000775055218212:   pop    %rbp
  0x0000775055218213:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521821a:   ja     0x000077505521824c
  0x0000775055218220:   ret
  0x0000775055218221:   movabs $0x7750202ec7c0,%r10         ;   {metadata({method} {0x00007750202ec7c0} 'hashCode' '()I' in 'java/lang/module/ResolvedModule')}
  0x000077505521822b:   mov    %r10,0x8(%rsp)
  0x0000775055218230:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055218238:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.module.ResolvedModule::hashCode@-1 (line 119)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521823d:   jmp    0x0000775055218114
  0x0000775055218242:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rdi=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::hashCode@4 (line 119)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055218247:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::hashCode@11 (line 119)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521824c:   movabs $0x775055218213,%r10         ;   {internal_word}
  0x0000775055218256:   mov    %r10,0x360(%r15)
  0x000077505521825d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055218262:   nop
  0x0000775055218263:   nop
  0x0000775055218264:   mov    0x3d8(%r15),%rax
  0x000077505521826b:   movq   $0x0,0x3d8(%r15)
  0x0000775055218276:   movq   $0x0,0x3e0(%r15)
  0x0000775055218281:   add    $0x40,%rsp
  0x0000775055218285:   pop    %rbp
  0x0000775055218286:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521828b:   hlt
  0x000077505521828c:   hlt
  0x000077505521828d:   hlt
  0x000077505521828e:   hlt
  0x000077505521828f:   hlt
  0x0000775055218290:   hlt
  0x0000775055218291:   hlt
  0x0000775055218292:   hlt
  0x0000775055218293:   hlt
  0x0000775055218294:   hlt
  0x0000775055218295:   hlt
  0x0000775055218296:   hlt
  0x0000775055218297:   hlt
  0x0000775055218298:   hlt
  0x0000775055218299:   hlt
  0x000077505521829a:   hlt
  0x000077505521829b:   hlt
  0x000077505521829c:   hlt
  0x000077505521829d:   hlt
  0x000077505521829e:   hlt
  0x000077505521829f:   hlt
[Stub Code]
  0x00007750552182a0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x00007750552182a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552182af:   jmp    0x00007750552182af           ;   {runtime_call}
  0x00007750552182b4:   nop
  0x00007750552182b5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552182bf:   jmp    0x00007750552182bf           ;   {runtime_call}
[Exception Handler]
  0x00007750552182c4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007750552182c9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552182d3:   and    $0xfffffffffffffff0,%rsp
  0x00007750552182d7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552182dc:   hlt
[Deopt Handler Code]
  0x00007750552182dd:   movabs $0x7750552182dd,%r10         ;   {section_word}
  0x00007750552182e7:   push   %r10
  0x00007750552182e9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552182ee:   hlt
  0x00007750552182ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     203   63       3       java.util.AbstractMap::<init> (5 bytes)
 total in heap  [0x0000775055218490,0x0000775055218820] = 912
 relocation     [0x00007750552185f0,0x0000775055218628] = 56
 main code      [0x0000775055218640,0x0000775055218760] = 288
 stub code      [0x0000775055218760,0x0000775055218790] = 48
 metadata       [0x0000775055218790,0x00007750552187a8] = 24
 scopes data    [0x00007750552187a8,0x00007750552187c8] = 32
 scopes pcs     [0x00007750552187c8,0x0000775055218818] = 80
 dependencies   [0x0000775055218818,0x0000775055218820] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200f6b08} '<init>' '()V' in 'java/util/AbstractMap'
  #           [sp+0x40]  (sp of caller)
  0x0000775055218640:   mov    0x8(%rsi),%r10d
  0x0000775055218644:   movabs $0x800000000,%r11
  0x000077505521864e:   add    %r11,%r10
  0x0000775055218651:   cmp    %rax,%r10
  0x0000775055218654:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521865a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055218660:   mov    %eax,-0x14000(%rsp)
  0x0000775055218667:   push   %rbp
  0x0000775055218668:   sub    $0x30,%rsp
  0x000077505521866c:   movabs $0x7750202fdb58,%rdi         ;   {metadata(method data for {method} {0x00007750200f6b08} '<init>' '()V' in 'java/util/AbstractMap')}
  0x0000775055218676:   mov    0xf4(%rdi),%ebx
  0x000077505521867c:   add    $0x2,%ebx
  0x000077505521867f:   mov    %ebx,0xf4(%rdi)
  0x0000775055218685:   and    $0x7fe,%ebx
  0x000077505521868b:   cmp    $0x0,%ebx
  0x000077505521868e:   je     0x00007750552186e4           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.AbstractMap::<init>@0 (line 73)
  0x0000775055218694:   mov    %rsi,%rdi
  0x0000775055218697:   movabs $0x7750202fdb58,%rbx         ;   {metadata(method data for {method} {0x00007750200f6b08} '<init>' '()V' in 'java/util/AbstractMap')}
  0x00007750552186a1:   addq   $0x1,0x138(%rbx)
  0x00007750552186a9:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552186b3:   mov    0xf4(%rdi),%ebx
  0x00007750552186b9:   add    $0x2,%ebx
  0x00007750552186bc:   mov    %ebx,0xf4(%rdi)
  0x00007750552186c2:   and    $0x1ffffe,%ebx
  0x00007750552186c8:   cmp    $0x0,%ebx
  0x00007750552186cb:   je     0x0000775055218702
  0x00007750552186d1:   add    $0x30,%rsp
  0x00007750552186d5:   pop    %rbp
  0x00007750552186d6:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552186dd:   ja     0x0000775055218720
  0x00007750552186e3:   ret
  0x00007750552186e4:   movabs $0x7750200f6b08,%r10         ;   {metadata({method} {0x00007750200f6b08} '<init>' '()V' in 'java/util/AbstractMap')}
  0x00007750552186ee:   mov    %r10,0x8(%rsp)
  0x00007750552186f3:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552186fb:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.AbstractMap::<init>@-1 (line 73)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055218700:   jmp    0x0000775055218694
  0x0000775055218702:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505521870c:   mov    %r10,0x8(%rsp)
  0x0000775055218711:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055218719:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.AbstractMap::<init>@1 (line 73)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521871e:   jmp    0x00007750552186d1
  0x0000775055218720:   movabs $0x7750552186d6,%r10         ;   {internal_word}
  0x000077505521872a:   mov    %r10,0x360(%r15)
  0x0000775055218731:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055218736:   nop
  0x0000775055218737:   nop
  0x0000775055218738:   mov    0x3d8(%r15),%rax
  0x000077505521873f:   movq   $0x0,0x3d8(%r15)
  0x000077505521874a:   movq   $0x0,0x3e0(%r15)
  0x0000775055218755:   add    $0x30,%rsp
  0x0000775055218759:   pop    %rbp
  0x000077505521875a:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521875f:   hlt
[Exception Handler]
  0x0000775055218760:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055218765:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521876f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055218773:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055218778:   hlt
[Deopt Handler Code]
  0x0000775055218779:   movabs $0x775055218779,%r10         ;   {section_word}
  0x0000775055218783:   push   %r10
  0x0000775055218785:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521878a:   hlt
  0x000077505521878b:   hlt
  0x000077505521878c:   hlt
  0x000077505521878d:   hlt
  0x000077505521878e:   hlt
  0x000077505521878f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     204   64       3       java.util.ImmutableCollections$Set12::iterator (9 bytes)
 total in heap  [0x0000775055218890,0x0000775055218e78] = 1512
 relocation     [0x00007750552189f0,0x0000775055218a38] = 72
 main code      [0x0000775055218a40,0x0000775055218d00] = 704
 stub code      [0x0000775055218d00,0x0000775055218d30] = 48
 metadata       [0x0000775055218d30,0x0000775055218d48] = 24
 scopes data    [0x0000775055218d48,0x0000775055218db0] = 104
 scopes pcs     [0x0000775055218db0,0x0000775055218e70] = 192
 dependencies   [0x0000775055218e70,0x0000775055218e78] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502014beb8} 'iterator' '()Ljava/util/Iterator;' in 'java/util/ImmutableCollections$Set12'
  #           [sp+0x60]  (sp of caller)
  0x0000775055218a40:   mov    0x8(%rsi),%r10d
  0x0000775055218a44:   movabs $0x800000000,%r11
  0x0000775055218a4e:   add    %r11,%r10
  0x0000775055218a51:   cmp    %rax,%r10
  0x0000775055218a54:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055218a5a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055218a60:   mov    %eax,-0x14000(%rsp)
  0x0000775055218a67:   push   %rbp
  0x0000775055218a68:   sub    $0x50,%rsp
  0x0000775055218a6c:   mov    %rsi,%rbx
  0x0000775055218a6f:   movabs $0x7750202fdcc0,%rdx         ;   {metadata(method data for {method} {0x000077502014beb8} 'iterator' '()Ljava/util/Iterator;' in 'java/util/ImmutableCollections$Set12')}
  0x0000775055218a79:   mov    0xf4(%rdx),%esi
  0x0000775055218a7f:   add    $0x2,%esi
  0x0000775055218a82:   mov    %esi,0xf4(%rdx)
  0x0000775055218a88:   and    $0x7fe,%esi
  0x0000775055218a8e:   cmp    $0x0,%esi
  0x0000775055218a91:   je     0x0000775055218c0d
  0x0000775055218a97:   movabs $0x800075800,%rdx            ;   {metadata('java/util/ImmutableCollections$Set12$1')}
  0x0000775055218aa1:   mov    0x108(%r15),%rax
  0x0000775055218aa8:   lea    0x18(%rax),%rdi
  0x0000775055218aac:   cmp    0x118(%r15),%rdi
  0x0000775055218ab3:   ja     0x0000775055218c2e
  0x0000775055218ab9:   mov    %rdi,0x108(%r15)
  0x0000775055218ac0:   movq   $0x1,(%rax)
  0x0000775055218ac7:   mov    %rdx,%rcx
  0x0000775055218aca:   movabs $0x800000000,%r10
  0x0000775055218ad4:   sub    %r10,%rcx
  0x0000775055218ad7:   mov    %ecx,0x8(%rax)
  0x0000775055218ada:   xor    %rcx,%rcx
  0x0000775055218add:   mov    %ecx,0xc(%rax)
  0x0000775055218ae0:   xor    %rcx,%rcx
  0x0000775055218ae3:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12::iterator@0 (line 820)
  0x0000775055218ae7:   mov    %rax,%rsi
  0x0000775055218aea:   movabs $0x7750202fdcc0,%rdi         ;   {metadata(method data for {method} {0x000077502014beb8} 'iterator' '()Ljava/util/Iterator;' in 'java/util/ImmutableCollections$Set12')}
  0x0000775055218af4:   addq   $0x1,0x138(%rdi)
  0x0000775055218afc:   movabs $0x7750202fde30,%rsi         ;   {metadata(method data for {method} {0x000077502029dae8} '<init>' '(Ljava/util/ImmutableCollections$Set12;)V' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055218b06:   mov    0xf4(%rsi),%edi
  0x0000775055218b0c:   add    $0x2,%edi
  0x0000775055218b0f:   mov    %edi,0xf4(%rsi)
  0x0000775055218b15:   and    $0x1ffffe,%edi
  0x0000775055218b1b:   cmp    $0x0,%edi
  0x0000775055218b1e:   je     0x0000775055218c3b
  0x0000775055218b24:   movsbl 0x38(%r15),%esi
  0x0000775055218b29:   cmp    $0x0,%esi
  0x0000775055218b2c:   jne    0x0000775055218c5c
  0x0000775055218b32:   mov    %rbx,%r10
  0x0000775055218b35:   shr    $0x3,%r10
  0x0000775055218b39:   mov    %r10d,0x10(%rax)
  0x0000775055218b3d:   mov    %rax,%rsi
  0x0000775055218b40:   xor    %rbx,%rsi
  0x0000775055218b43:   shr    $0x16,%rsi
  0x0000775055218b47:   cmp    $0x0,%rsi
  0x0000775055218b4b:   jne    0x0000775055218c7b           ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::<init>@2 (line 820)
                                                            ; - java.util.ImmutableCollections$Set12::iterator@5 (line 820)
  0x0000775055218b51:   mov    %rax,%rsi
  0x0000775055218b54:   movabs $0x7750202fde30,%rdi         ;   {metadata(method data for {method} {0x000077502029dae8} '<init>' '(Ljava/util/ImmutableCollections$Set12;)V' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055218b5e:   addq   $0x1,0x138(%rdi)
  0x0000775055218b66:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055218b70:   mov    0xf4(%rsi),%edi
  0x0000775055218b76:   add    $0x2,%edi
  0x0000775055218b79:   mov    %edi,0xf4(%rsi)
  0x0000775055218b7f:   and    $0x1ffffe,%edi
  0x0000775055218b85:   cmp    $0x0,%edi
  0x0000775055218b88:   je     0x0000775055218c93
  0x0000775055218b8e:   mov    0x10(%rbx),%esi
  0x0000775055218b91:   shl    $0x3,%rsi                    ;*getfield e1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::<init>@14 (line 821)
                                                            ; - java.util.ImmutableCollections$Set12::iterator@5 (line 820)
  0x0000775055218b95:   movabs $0x62ac089a0,%r10            ;   {oop(a 'java/lang/Object'{0x000000062ac089a0})}
  0x0000775055218b9f:   cmp    %r10,%rsi
  0x0000775055218ba2:   movabs $0x7750202fde30,%rsi         ;   {metadata(method data for {method} {0x000077502029dae8} '<init>' '(Ljava/util/ImmutableCollections$Set12;)V' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055218bac:   movabs $0x148,%rdi
  0x0000775055218bb6:   jne    0x0000775055218bc6
  0x0000775055218bbc:   movabs $0x158,%rdi
  0x0000775055218bc6:   mov    (%rsi,%rdi,1),%rbx
  0x0000775055218bca:   lea    0x1(%rbx),%rbx
  0x0000775055218bce:   mov    %rbx,(%rsi,%rdi,1)
  0x0000775055218bd2:   jne    0x0000775055218bf2           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::<init>@20 (line 821)
                                                            ; - java.util.ImmutableCollections$Set12::iterator@5 (line 820)
  0x0000775055218bd8:   movabs $0x7750202fde30,%rsi         ;   {metadata(method data for {method} {0x000077502029dae8} '<init>' '(Ljava/util/ImmutableCollections$Set12;)V' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055218be2:   incl   0x168(%rsi)
  0x0000775055218be8:   mov    $0x1,%esi
  0x0000775055218bed:   jmp    0x0000775055218bf7           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::<init>@24 (line 821)
                                                            ; - java.util.ImmutableCollections$Set12::iterator@5 (line 820)
  0x0000775055218bf2:   mov    $0x2,%esi
  0x0000775055218bf7:   mov    %esi,0xc(%rax)               ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12$1::<init>@28 (line 821)
                                                            ; - java.util.ImmutableCollections$Set12::iterator@5 (line 820)
  0x0000775055218bfa:   add    $0x50,%rsp
  0x0000775055218bfe:   pop    %rbp
  0x0000775055218bff:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055218c06:   ja     0x0000775055218cb4
  0x0000775055218c0c:   ret
  0x0000775055218c0d:   movabs $0x77502014beb8,%r10         ;   {metadata({method} {0x000077502014beb8} 'iterator' '()Ljava/util/Iterator;' in 'java/util/ImmutableCollections$Set12')}
  0x0000775055218c17:   mov    %r10,0x8(%rsp)
  0x0000775055218c1c:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055218c24:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$Set12::iterator@-1 (line 820)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055218c29:   jmp    0x0000775055218a97
  0x0000775055218c2e:   mov    %rdx,%rdx
  0x0000775055218c31:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12::iterator@0 (line 820)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055218c36:   jmp    0x0000775055218ae7
  0x0000775055218c3b:   movabs $0x77502029dae8,%r10         ;   {metadata({method} {0x000077502029dae8} '<init>' '(Ljava/util/ImmutableCollections$Set12;)V' in 'java/util/ImmutableCollections$Set12$1')}
  0x0000775055218c45:   mov    %r10,0x8(%rsp)
  0x0000775055218c4a:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055218c52:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$Set12$1::<init>@-1 (line 820)
                                                            ; - java.util.ImmutableCollections$Set12::iterator@5 (line 820)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055218c57:   jmp    0x0000775055218b24
  0x0000775055218c5c:   mov    0x10(%rax),%esi
  0x0000775055218c5f:   shl    $0x3,%rsi
  0x0000775055218c63:   cmp    $0x0,%rsi
  0x0000775055218c67:   je     0x0000775055218b32
  0x0000775055218c6d:   mov    %rsi,(%rsp)
  0x0000775055218c71:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055218c76:   jmp    0x0000775055218b32
  0x0000775055218c7b:   cmp    $0x0,%rbx
  0x0000775055218c7f:   je     0x0000775055218b51
  0x0000775055218c85:   mov    %rax,(%rsp)
  0x0000775055218c89:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055218c8e:   jmp    0x0000775055218b51
  0x0000775055218c93:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055218c9d:   mov    %r10,0x8(%rsp)
  0x0000775055218ca2:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055218caa:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.ImmutableCollections$Set12$1::<init>@6 (line 820)
                                                            ; - java.util.ImmutableCollections$Set12::iterator@5 (line 820)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055218caf:   jmp    0x0000775055218b8e
  0x0000775055218cb4:   movabs $0x775055218bff,%r10         ;   {internal_word}
  0x0000775055218cbe:   mov    %r10,0x360(%r15)
  0x0000775055218cc5:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055218cca:   nop
  0x0000775055218ccb:   nop
  0x0000775055218ccc:   mov    0x3d8(%r15),%rax
  0x0000775055218cd3:   movq   $0x0,0x3d8(%r15)
  0x0000775055218cde:   movq   $0x0,0x3e0(%r15)
  0x0000775055218ce9:   add    $0x50,%rsp
  0x0000775055218ced:   pop    %rbp
  0x0000775055218cee:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055218cf3:   hlt
  0x0000775055218cf4:   hlt
  0x0000775055218cf5:   hlt
  0x0000775055218cf6:   hlt
  0x0000775055218cf7:   hlt
  0x0000775055218cf8:   hlt
  0x0000775055218cf9:   hlt
  0x0000775055218cfa:   hlt
  0x0000775055218cfb:   hlt
  0x0000775055218cfc:   hlt
  0x0000775055218cfd:   hlt
  0x0000775055218cfe:   hlt
  0x0000775055218cff:   hlt
[Exception Handler]
  0x0000775055218d00:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055218d05:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055218d0f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055218d13:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055218d18:   hlt
[Deopt Handler Code]
  0x0000775055218d19:   movabs $0x775055218d19,%r10         ;   {section_word}
  0x0000775055218d23:   push   %r10
  0x0000775055218d25:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055218d2a:   hlt
  0x0000775055218d2b:   hlt
  0x0000775055218d2c:   hlt
  0x0000775055218d2d:   hlt
  0x0000775055218d2e:   hlt
  0x0000775055218d2f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     206   65       3       java.util.ImmutableCollections$SetN::isEmpty (13 bytes)
 total in heap  [0x0000775055218e90,0x0000775055219250] = 960
 relocation     [0x0000775055218ff0,0x0000775055219020] = 48
 main code      [0x0000775055219020,0x0000775055219160] = 320
 stub code      [0x0000775055219160,0x0000775055219190] = 48
 metadata       [0x0000775055219190,0x0000775055219198] = 8
 scopes data    [0x0000775055219198,0x00007750552191c8] = 48
 scopes pcs     [0x00007750552191c8,0x0000775055219248] = 128
 dependencies   [0x0000775055219248,0x0000775055219250] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020154760} 'isEmpty' '()Z' in 'java/util/ImmutableCollections$SetN'
  #           [sp+0x40]  (sp of caller)
  0x0000775055219020:   mov    0x8(%rsi),%r10d
  0x0000775055219024:   movabs $0x800000000,%r11
  0x000077505521902e:   add    %r11,%r10
  0x0000775055219031:   cmp    %rax,%r10
  0x0000775055219034:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521903a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055219040:   mov    %eax,-0x14000(%rsp)
  0x0000775055219047:   push   %rbp
  0x0000775055219048:   sub    $0x30,%rsp
  0x000077505521904c:   movabs $0x7750202fdff8,%rax         ;   {metadata(method data for {method} {0x0000775020154760} 'isEmpty' '()Z' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055219056:   mov    0xf4(%rax),%edi
  0x000077505521905c:   add    $0x2,%edi
  0x000077505521905f:   mov    %edi,0xf4(%rax)
  0x0000775055219065:   and    $0x7fe,%edi
  0x000077505521906b:   cmp    $0x0,%edi
  0x000077505521906e:   je     0x00007750552190e5           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::isEmpty@0 (line 932)
  0x0000775055219074:   mov    0xc(%rsi),%eax               ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::isEmpty@1 (line 932)
  0x0000775055219077:   cmp    $0x0,%eax
  0x000077505521907a:   movabs $0x7750202fdff8,%rax         ;   {metadata(method data for {method} {0x0000775020154760} 'isEmpty' '()Z' in 'java/util/ImmutableCollections$SetN')}
  0x0000775055219084:   movabs $0x138,%rsi
  0x000077505521908e:   jne    0x000077505521909e
  0x0000775055219094:   movabs $0x148,%rsi
  0x000077505521909e:   mov    (%rax,%rsi,1),%rdi
  0x00007750552190a2:   lea    0x1(%rdi),%rdi
  0x00007750552190a6:   mov    %rdi,(%rax,%rsi,1)
  0x00007750552190aa:   jne    0x00007750552190ca           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::isEmpty@4 (line 932)
  0x00007750552190b0:   movabs $0x7750202fdff8,%rax         ;   {metadata(method data for {method} {0x0000775020154760} 'isEmpty' '()Z' in 'java/util/ImmutableCollections$SetN')}
  0x00007750552190ba:   incl   0x158(%rax)
  0x00007750552190c0:   mov    $0x1,%eax
  0x00007750552190c5:   jmp    0x00007750552190cf           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::isEmpty@8 (line 932)
  0x00007750552190ca:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$SetN::isEmpty@12 (line 932)
  0x00007750552190cf:   and    $0x1,%eax
  0x00007750552190d2:   add    $0x30,%rsp
  0x00007750552190d6:   pop    %rbp
  0x00007750552190d7:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552190de:   ja     0x0000775055219106
  0x00007750552190e4:   ret
  0x00007750552190e5:   movabs $0x775020154760,%r10         ;   {metadata({method} {0x0000775020154760} 'isEmpty' '()Z' in 'java/util/ImmutableCollections$SetN')}
  0x00007750552190ef:   mov    %r10,0x8(%rsp)
  0x00007750552190f4:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552190fc:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.ImmutableCollections$SetN::isEmpty@-1 (line 932)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055219101:   jmp    0x0000775055219074
  0x0000775055219106:   movabs $0x7750552190d7,%r10         ;   {internal_word}
  0x0000775055219110:   mov    %r10,0x360(%r15)
  0x0000775055219117:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521911c:   nop
  0x000077505521911d:   nop
  0x000077505521911e:   mov    0x3d8(%r15),%rax
  0x0000775055219125:   movq   $0x0,0x3d8(%r15)
  0x0000775055219130:   movq   $0x0,0x3e0(%r15)
  0x000077505521913b:   add    $0x30,%rsp
  0x000077505521913f:   pop    %rbp
  0x0000775055219140:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055219145:   hlt
  0x0000775055219146:   hlt
  0x0000775055219147:   hlt
  0x0000775055219148:   hlt
  0x0000775055219149:   hlt
  0x000077505521914a:   hlt
  0x000077505521914b:   hlt
  0x000077505521914c:   hlt
  0x000077505521914d:   hlt
  0x000077505521914e:   hlt
  0x000077505521914f:   hlt
  0x0000775055219150:   hlt
  0x0000775055219151:   hlt
  0x0000775055219152:   hlt
  0x0000775055219153:   hlt
  0x0000775055219154:   hlt
  0x0000775055219155:   hlt
  0x0000775055219156:   hlt
  0x0000775055219157:   hlt
  0x0000775055219158:   hlt
  0x0000775055219159:   hlt
  0x000077505521915a:   hlt
  0x000077505521915b:   hlt
  0x000077505521915c:   hlt
  0x000077505521915d:   hlt
  0x000077505521915e:   hlt
  0x000077505521915f:   hlt
[Exception Handler]
  0x0000775055219160:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055219165:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521916f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055219173:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055219178:   hlt
[Deopt Handler Code]
  0x0000775055219179:   movabs $0x775055219179,%r10         ;   {section_word}
  0x0000775055219183:   push   %r10
  0x0000775055219185:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521918a:   hlt
  0x000077505521918b:   hlt
  0x000077505521918c:   hlt
  0x000077505521918d:   hlt
  0x000077505521918e:   hlt
  0x000077505521918f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     208   66       1       java.lang.module.ModuleDescriptor$Exports::targets (5 bytes)
 total in heap  [0x000077505cccc190,0x000077505cccc450] = 704
 relocation     [0x000077505cccc2f0,0x000077505cccc318] = 40
 main code      [0x000077505cccc320,0x000077505cccc3c0] = 160
 stub code      [0x000077505cccc3c0,0x000077505cccc3f0] = 48
 metadata       [0x000077505cccc3f0,0x000077505cccc3f8] = 8
 scopes data    [0x000077505cccc3f8,0x000077505cccc408] = 16
 scopes pcs     [0x000077505cccc408,0x000077505cccc448] = 64
 dependencies   [0x000077505cccc448,0x000077505cccc450] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020292e10} 'targets' '()Ljava/util/Set;' in 'java/lang/module/ModuleDescriptor$Exports'
  #           [sp+0x40]  (sp of caller)
  0x000077505cccc320:   mov    0x8(%rsi),%r10d
  0x000077505cccc324:   movabs $0x800000000,%r11
  0x000077505cccc32e:   add    %r11,%r10
  0x000077505cccc331:   cmp    %rax,%r10
  0x000077505cccc334:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccc33a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505cccc340:   mov    %eax,-0x14000(%rsp)
  0x000077505cccc347:   push   %rbp
  0x000077505cccc348:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::targets@0 (line 447)
  0x000077505cccc34c:   mov    0x14(%rsi),%eax
  0x000077505cccc34f:   shl    $0x3,%rax                    ;*getfield targets {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ModuleDescriptor$Exports::targets@1 (line 447)
  0x000077505cccc353:   add    $0x30,%rsp
  0x000077505cccc357:   pop    %rbp
  0x000077505cccc358:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505cccc35f:   ja     0x000077505cccc366
  0x000077505cccc365:   ret
  0x000077505cccc366:   movabs $0x77505cccc358,%r10         ;   {internal_word}
  0x000077505cccc370:   mov    %r10,0x360(%r15)
  0x000077505cccc377:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505cccc37c:   nop
  0x000077505cccc37d:   nop
  0x000077505cccc37e:   mov    0x3d8(%r15),%rax
  0x000077505cccc385:   movq   $0x0,0x3d8(%r15)
  0x000077505cccc390:   movq   $0x0,0x3e0(%r15)
  0x000077505cccc39b:   add    $0x30,%rsp
  0x000077505cccc39f:   pop    %rbp
  0x000077505cccc3a0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505cccc3a5:   hlt
  0x000077505cccc3a6:   hlt
  0x000077505cccc3a7:   hlt
  0x000077505cccc3a8:   hlt
  0x000077505cccc3a9:   hlt
  0x000077505cccc3aa:   hlt
  0x000077505cccc3ab:   hlt
  0x000077505cccc3ac:   hlt
  0x000077505cccc3ad:   hlt
  0x000077505cccc3ae:   hlt
  0x000077505cccc3af:   hlt
  0x000077505cccc3b0:   hlt
  0x000077505cccc3b1:   hlt
  0x000077505cccc3b2:   hlt
  0x000077505cccc3b3:   hlt
  0x000077505cccc3b4:   hlt
  0x000077505cccc3b5:   hlt
  0x000077505cccc3b6:   hlt
  0x000077505cccc3b7:   hlt
  0x000077505cccc3b8:   hlt
  0x000077505cccc3b9:   hlt
  0x000077505cccc3ba:   hlt
  0x000077505cccc3bb:   hlt
  0x000077505cccc3bc:   hlt
  0x000077505cccc3bd:   hlt
  0x000077505cccc3be:   hlt
  0x000077505cccc3bf:   hlt
[Exception Handler]
  0x000077505cccc3c0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505cccc3c5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505cccc3cf:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccc3d3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505cccc3d8:   hlt
[Deopt Handler Code]
  0x000077505cccc3d9:   movabs $0x77505cccc3d9,%r10         ;   {section_word}
  0x000077505cccc3e3:   push   %r10
  0x000077505cccc3e5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccc3ea:   hlt
  0x000077505cccc3eb:   hlt
  0x000077505cccc3ec:   hlt
  0x000077505cccc3ed:   hlt
  0x000077505cccc3ee:   hlt
  0x000077505cccc3ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     209   67       1       java.lang.module.ResolvedModule::configuration (5 bytes)
 total in heap  [0x000077505cccc490,0x000077505cccc750] = 704
 relocation     [0x000077505cccc5f0,0x000077505cccc618] = 40
 main code      [0x000077505cccc620,0x000077505cccc6c0] = 160
 stub code      [0x000077505cccc6c0,0x000077505cccc6f0] = 48
 metadata       [0x000077505cccc6f0,0x000077505cccc6f8] = 8
 scopes data    [0x000077505cccc6f8,0x000077505cccc708] = 16
 scopes pcs     [0x000077505cccc708,0x000077505cccc748] = 64
 dependencies   [0x000077505cccc748,0x000077505cccc750] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750202ec478} 'configuration' '()Ljava/lang/module/Configuration;' in 'java/lang/module/ResolvedModule'
  #           [sp+0x40]  (sp of caller)
  0x000077505cccc620:   mov    0x8(%rsi),%r10d
  0x000077505cccc624:   movabs $0x800000000,%r11
  0x000077505cccc62e:   add    %r11,%r10
  0x000077505cccc631:   cmp    %rax,%r10
  0x000077505cccc634:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccc63a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505cccc640:   mov    %eax,-0x14000(%rsp)
  0x000077505cccc647:   push   %rbp
  0x000077505cccc648:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::configuration@0 (line 58)
  0x000077505cccc64c:   mov    0xc(%rsi),%eax
  0x000077505cccc64f:   shl    $0x3,%rax                    ;*getfield cf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.module.ResolvedModule::configuration@1 (line 58)
  0x000077505cccc653:   add    $0x30,%rsp
  0x000077505cccc657:   pop    %rbp
  0x000077505cccc658:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505cccc65f:   ja     0x000077505cccc666
  0x000077505cccc665:   ret
  0x000077505cccc666:   movabs $0x77505cccc658,%r10         ;   {internal_word}
  0x000077505cccc670:   mov    %r10,0x360(%r15)
  0x000077505cccc677:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505cccc67c:   nop
  0x000077505cccc67d:   nop
  0x000077505cccc67e:   mov    0x3d8(%r15),%rax
  0x000077505cccc685:   movq   $0x0,0x3d8(%r15)
  0x000077505cccc690:   movq   $0x0,0x3e0(%r15)
  0x000077505cccc69b:   add    $0x30,%rsp
  0x000077505cccc69f:   pop    %rbp
  0x000077505cccc6a0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505cccc6a5:   hlt
  0x000077505cccc6a6:   hlt
  0x000077505cccc6a7:   hlt
  0x000077505cccc6a8:   hlt
  0x000077505cccc6a9:   hlt
  0x000077505cccc6aa:   hlt
  0x000077505cccc6ab:   hlt
  0x000077505cccc6ac:   hlt
  0x000077505cccc6ad:   hlt
  0x000077505cccc6ae:   hlt
  0x000077505cccc6af:   hlt
  0x000077505cccc6b0:   hlt
  0x000077505cccc6b1:   hlt
  0x000077505cccc6b2:   hlt
  0x000077505cccc6b3:   hlt
  0x000077505cccc6b4:   hlt
  0x000077505cccc6b5:   hlt
  0x000077505cccc6b6:   hlt
  0x000077505cccc6b7:   hlt
  0x000077505cccc6b8:   hlt
  0x000077505cccc6b9:   hlt
  0x000077505cccc6ba:   hlt
  0x000077505cccc6bb:   hlt
  0x000077505cccc6bc:   hlt
  0x000077505cccc6bd:   hlt
  0x000077505cccc6be:   hlt
  0x000077505cccc6bf:   hlt
[Exception Handler]
  0x000077505cccc6c0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505cccc6c5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505cccc6cf:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccc6d3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505cccc6d8:   hlt
[Deopt Handler Code]
  0x000077505cccc6d9:   movabs $0x77505cccc6d9,%r10         ;   {section_word}
  0x000077505cccc6e3:   push   %r10
  0x000077505cccc6e5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccc6ea:   hlt
  0x000077505cccc6eb:   hlt
  0x000077505cccc6ec:   hlt
  0x000077505cccc6ed:   hlt
  0x000077505cccc6ee:   hlt
  0x000077505cccc6ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     210   68       3       java.util.HashMap::<init> (11 bytes)
 total in heap  [0x0000775055219290,0x00007750552196e0] = 1104
 relocation     [0x00007750552193f0,0x0000775055219430] = 64
 main code      [0x0000775055219440,0x00007750552195e0] = 416
 stub code      [0x00007750552195e0,0x0000775055219610] = 48
 metadata       [0x0000775055219610,0x0000775055219630] = 32
 scopes data    [0x0000775055219630,0x0000775055219668] = 56
 scopes pcs     [0x0000775055219668,0x00007750552196d8] = 112
 dependencies   [0x00007750552196d8,0x00007750552196e0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502018f3e0} '<init>' '()V' in 'java/util/HashMap'
  #           [sp+0x50]  (sp of caller)
  0x0000775055219440:   mov    0x8(%rsi),%r10d
  0x0000775055219444:   movabs $0x800000000,%r11
  0x000077505521944e:   add    %r11,%r10
  0x0000775055219451:   cmp    %rax,%r10
  0x0000775055219454:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521945a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055219460:   mov    %eax,-0x14000(%rsp)
  0x0000775055219467:   push   %rbp
  0x0000775055219468:   sub    $0x40,%rsp
  0x000077505521946c:   movabs $0x7750202fe190,%rdi         ;   {metadata(method data for {method} {0x000077502018f3e0} '<init>' '()V' in 'java/util/HashMap')}
  0x0000775055219476:   mov    0xf4(%rdi),%ebx
  0x000077505521947c:   add    $0x2,%ebx
  0x000077505521947f:   mov    %ebx,0xf4(%rdi)
  0x0000775055219485:   and    $0x7fe,%ebx
  0x000077505521948b:   cmp    $0x0,%ebx
  0x000077505521948e:   je     0x0000775055219528           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::<init>@0 (line 469)
  0x0000775055219494:   mov    %rsi,%rdi
  0x0000775055219497:   movabs $0x7750202fe190,%rbx         ;   {metadata(method data for {method} {0x000077502018f3e0} '<init>' '()V' in 'java/util/HashMap')}
  0x00007750552194a1:   addq   $0x1,0x138(%rbx)
  0x00007750552194a9:   movabs $0x7750202fdb58,%rdi         ;   {metadata(method data for {method} {0x00007750200f6b08} '<init>' '()V' in 'java/util/AbstractMap')}
  0x00007750552194b3:   mov    0xf4(%rdi),%ebx
  0x00007750552194b9:   add    $0x2,%ebx
  0x00007750552194bc:   mov    %ebx,0xf4(%rdi)
  0x00007750552194c2:   and    $0x1ffffe,%ebx
  0x00007750552194c8:   cmp    $0x0,%ebx
  0x00007750552194cb:   je     0x0000775055219549
  0x00007750552194d1:   mov    %rsi,%rdi
  0x00007750552194d4:   movabs $0x7750202fdb58,%rbx         ;   {metadata(method data for {method} {0x00007750200f6b08} '<init>' '()V' in 'java/util/AbstractMap')}
  0x00007750552194de:   addq   $0x1,0x138(%rbx)
  0x00007750552194e6:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552194f0:   mov    0xf4(%rdi),%ebx
  0x00007750552194f6:   add    $0x2,%ebx
  0x00007750552194f9:   mov    %ebx,0xf4(%rdi)
  0x00007750552194ff:   and    $0x1ffffe,%ebx
  0x0000775055219505:   cmp    $0x0,%ebx
  0x0000775055219508:   je     0x000077505521956a
  0x000077505521950e:   movl   $0x3f400000,0x20(%rsi)       ;*putfield loadFactor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::<init>@7 (line 470)
  0x0000775055219515:   add    $0x40,%rsp
  0x0000775055219519:   pop    %rbp
  0x000077505521951a:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055219521:   ja     0x0000775055219588
  0x0000775055219527:   ret
  0x0000775055219528:   movabs $0x77502018f3e0,%r10         ;   {metadata({method} {0x000077502018f3e0} '<init>' '()V' in 'java/util/HashMap')}
  0x0000775055219532:   mov    %r10,0x8(%rsp)
  0x0000775055219537:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521953f:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::<init>@-1 (line 469)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055219544:   jmp    0x0000775055219494
  0x0000775055219549:   movabs $0x7750200f6b08,%r10         ;   {metadata({method} {0x00007750200f6b08} '<init>' '()V' in 'java/util/AbstractMap')}
  0x0000775055219553:   mov    %r10,0x8(%rsp)
  0x0000775055219558:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055219560:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.AbstractMap::<init>@-1 (line 73)
                                                            ; - java.util.HashMap::<init>@1 (line 469)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055219565:   jmp    0x00007750552194d1
  0x000077505521956a:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055219574:   mov    %r10,0x8(%rsp)
  0x0000775055219579:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055219581:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.util.AbstractMap::<init>@1 (line 73)
                                                            ; - java.util.HashMap::<init>@1 (line 469)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055219586:   jmp    0x000077505521950e
  0x0000775055219588:   movabs $0x77505521951a,%r10         ;   {internal_word}
  0x0000775055219592:   mov    %r10,0x360(%r15)
  0x0000775055219599:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521959e:   nop
  0x000077505521959f:   nop
  0x00007750552195a0:   mov    0x3d8(%r15),%rax
  0x00007750552195a7:   movq   $0x0,0x3d8(%r15)
  0x00007750552195b2:   movq   $0x0,0x3e0(%r15)
  0x00007750552195bd:   add    $0x40,%rsp
  0x00007750552195c1:   pop    %rbp
  0x00007750552195c2:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552195c7:   hlt
  0x00007750552195c8:   hlt
  0x00007750552195c9:   hlt
  0x00007750552195ca:   hlt
  0x00007750552195cb:   hlt
  0x00007750552195cc:   hlt
  0x00007750552195cd:   hlt
  0x00007750552195ce:   hlt
  0x00007750552195cf:   hlt
  0x00007750552195d0:   hlt
  0x00007750552195d1:   hlt
  0x00007750552195d2:   hlt
  0x00007750552195d3:   hlt
  0x00007750552195d4:   hlt
  0x00007750552195d5:   hlt
  0x00007750552195d6:   hlt
  0x00007750552195d7:   hlt
  0x00007750552195d8:   hlt
  0x00007750552195d9:   hlt
  0x00007750552195da:   hlt
  0x00007750552195db:   hlt
  0x00007750552195dc:   hlt
  0x00007750552195dd:   hlt
  0x00007750552195de:   hlt
  0x00007750552195df:   hlt
[Exception Handler]
  0x00007750552195e0:   call   0x000077505c82b380           ;   {no_reloc}
  0x00007750552195e5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552195ef:   and    $0xfffffffffffffff0,%rsp
  0x00007750552195f3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552195f8:   hlt
[Deopt Handler Code]
  0x00007750552195f9:   movabs $0x7750552195f9,%r10         ;   {section_word}
  0x0000775055219603:   push   %r10
  0x0000775055219605:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521960a:   hlt
  0x000077505521960b:   hlt
  0x000077505521960c:   hlt
  0x000077505521960d:   hlt
  0x000077505521960e:   hlt
  0x000077505521960f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     212   69       1       java.util.ImmutableCollections$Set12::isEmpty (2 bytes)
 total in heap  [0x000077505cccc790,0x000077505cccca38] = 680
 relocation     [0x000077505cccc8f0,0x000077505cccc918] = 40
 main code      [0x000077505cccc920,0x000077505cccc9c0] = 160
 stub code      [0x000077505cccc9c0,0x000077505cccc9f0] = 48
 metadata       [0x000077505cccc9f0,0x000077505cccc9f8] = 8
 scopes data    [0x000077505cccc9f8,0x000077505cccca00] = 8
 scopes pcs     [0x000077505cccca00,0x000077505cccca30] = 48
 dependencies   [0x000077505cccca30,0x000077505cccca38] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502014bc88} 'isEmpty' '()Z' in 'java/util/ImmutableCollections$Set12'
  #           [sp+0x40]  (sp of caller)
  0x000077505cccc920:   mov    0x8(%rsi),%r10d
  0x000077505cccc924:   movabs $0x800000000,%r11
  0x000077505cccc92e:   add    %r11,%r10
  0x000077505cccc931:   cmp    %rax,%r10
  0x000077505cccc934:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccc93a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505cccc940:   mov    %eax,-0x14000(%rsp)
  0x000077505cccc947:   push   %rbp
  0x000077505cccc948:   sub    $0x30,%rsp                   ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.ImmutableCollections$Set12::isEmpty@0 (line 805)
  0x000077505cccc94c:   mov    $0x0,%eax
  0x000077505cccc951:   add    $0x30,%rsp
  0x000077505cccc955:   pop    %rbp
  0x000077505cccc956:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505cccc95d:   ja     0x000077505cccc964
  0x000077505cccc963:   ret
  0x000077505cccc964:   movabs $0x77505cccc956,%r10         ;   {internal_word}
  0x000077505cccc96e:   mov    %r10,0x360(%r15)
  0x000077505cccc975:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505cccc97a:   nop
  0x000077505cccc97b:   nop
  0x000077505cccc97c:   mov    0x3d8(%r15),%rax
  0x000077505cccc983:   movq   $0x0,0x3d8(%r15)
  0x000077505cccc98e:   movq   $0x0,0x3e0(%r15)
  0x000077505cccc999:   add    $0x30,%rsp
  0x000077505cccc99d:   pop    %rbp
  0x000077505cccc99e:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505cccc9a3:   hlt
  0x000077505cccc9a4:   hlt
  0x000077505cccc9a5:   hlt
  0x000077505cccc9a6:   hlt
  0x000077505cccc9a7:   hlt
  0x000077505cccc9a8:   hlt
  0x000077505cccc9a9:   hlt
  0x000077505cccc9aa:   hlt
  0x000077505cccc9ab:   hlt
  0x000077505cccc9ac:   hlt
  0x000077505cccc9ad:   hlt
  0x000077505cccc9ae:   hlt
  0x000077505cccc9af:   hlt
  0x000077505cccc9b0:   hlt
  0x000077505cccc9b1:   hlt
  0x000077505cccc9b2:   hlt
  0x000077505cccc9b3:   hlt
  0x000077505cccc9b4:   hlt
  0x000077505cccc9b5:   hlt
  0x000077505cccc9b6:   hlt
  0x000077505cccc9b7:   hlt
  0x000077505cccc9b8:   hlt
  0x000077505cccc9b9:   hlt
  0x000077505cccc9ba:   hlt
  0x000077505cccc9bb:   hlt
  0x000077505cccc9bc:   hlt
  0x000077505cccc9bd:   hlt
  0x000077505cccc9be:   hlt
  0x000077505cccc9bf:   hlt
[Exception Handler]
  0x000077505cccc9c0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505cccc9c5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505cccc9cf:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccc9d3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505cccc9d8:   hlt
[Deopt Handler Code]
  0x000077505cccc9d9:   movabs $0x77505cccc9d9,%r10         ;   {section_word}
  0x000077505cccc9e3:   push   %r10
  0x000077505cccc9e5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccc9ea:   hlt
  0x000077505cccc9eb:   hlt
  0x000077505cccc9ec:   hlt
  0x000077505cccc9ed:   hlt
  0x000077505cccc9ee:   hlt
  0x000077505cccc9ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     219   70       3       java.util.zip.ZipUtils::SH (21 bytes)
 total in heap  [0x0000775055219710,0x0000775055219ac8] = 952
 relocation     [0x0000775055219870,0x00007750552198a0] = 48
 main code      [0x00007750552198a0,0x00007750552199a0] = 256
 stub code      [0x00007750552199a0,0x00007750552199d0] = 48
 metadata       [0x00007750552199d0,0x00007750552199d8] = 8
 scopes data    [0x00007750552199d8,0x0000775055219a08] = 48
 scopes pcs     [0x0000775055219a08,0x0000775055219aa8] = 160
 dependencies   [0x0000775055219aa8,0x0000775055219ab0] = 8
 nul chk table  [0x0000775055219ab0,0x0000775055219ac8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007750552198a0:   mov    %eax,-0x14000(%rsp)
  0x00007750552198a7:   push   %rbp
  0x00007750552198a8:   sub    $0x30,%rsp
  0x00007750552198ac:   movabs $0x77502038e188,%rax         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x00007750552198b6:   mov    0xf4(%rax),%edi
  0x00007750552198bc:   add    $0x2,%edi
  0x00007750552198bf:   mov    %edi,0xf4(%rax)
  0x00007750552198c5:   and    $0x7fe,%edi
  0x00007750552198cb:   cmp    $0x0,%edi
  0x00007750552198ce:   je     0x000077505521991d           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@0 (line 203)
  0x00007750552198d4:   cmp    0xc(%rsi),%edx               ; implicit exception: dispatches to 0x000077505521993b
  0x00007750552198d7:   jae    0x0000775055219945
  0x00007750552198dd:   movslq %edx,%rax
  0x00007750552198e0:   movsbl 0x10(%rsi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
  0x00007750552198e5:   inc    %edx
  0x00007750552198e7:   cmp    0xc(%rsi),%edx
  0x00007750552198ea:   jae    0x0000775055219953
  0x00007750552198f0:   movslq %edx,%rdx
  0x00007750552198f3:   movsbl 0x10(%rsi,%rdx,1),%esi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
  0x00007750552198f8:   and    $0xff,%eax
  0x00007750552198fe:   and    $0xff,%esi
  0x0000775055219904:   shl    $0x8,%esi
  0x0000775055219907:   or     %rsi,%rax
  0x000077505521990a:   add    $0x30,%rsp
  0x000077505521990e:   pop    %rbp
  0x000077505521990f:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055219916:   ja     0x0000775055219961
  0x000077505521991c:   ret
  0x000077505521991d:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x0000775055219927:   mov    %r10,0x8(%rsp)
  0x000077505521992c:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055219934:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055219939:   jmp    0x00007750552198d4
  0x000077505521993b:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055219940:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055219945:   mov    %rdx,(%rsp)
  0x0000775055219949:   mov    %rsi,0x8(%rsp)
  0x000077505521994e:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055219953:   mov    %rdx,(%rsp)
  0x0000775055219957:   mov    %rsi,0x8(%rsp)
  0x000077505521995c:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055219961:   movabs $0x77505521990f,%r10         ;   {internal_word}
  0x000077505521996b:   mov    %r10,0x360(%r15)
  0x0000775055219972:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055219977:   nop
  0x0000775055219978:   nop
  0x0000775055219979:   mov    0x3d8(%r15),%rax
  0x0000775055219980:   movq   $0x0,0x3d8(%r15)
  0x000077505521998b:   movq   $0x0,0x3e0(%r15)
  0x0000775055219996:   add    $0x30,%rsp
  0x000077505521999a:   pop    %rbp
  0x000077505521999b:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
  0x00007750552199a0:   call   0x000077505c82b380           ;   {no_reloc}
  0x00007750552199a5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552199af:   and    $0xfffffffffffffff0,%rsp
  0x00007750552199b3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552199b8:   hlt
[Deopt Handler Code]
  0x00007750552199b9:   movabs $0x7750552199b9,%r10         ;   {section_word}
  0x00007750552199c3:   push   %r10
  0x00007750552199c5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552199ca:   hlt
  0x00007750552199cb:   hlt
  0x00007750552199cc:   hlt
  0x00007750552199cd:   hlt
  0x00007750552199ce:   hlt
  0x00007750552199cf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     221   71       3       java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash (91 bytes)
 total in heap  [0x0000775055219b10,0x000077505521a3f8] = 2280
 relocation     [0x0000775055219c70,0x0000775055219cf8] = 136
 main code      [0x0000775055219d00,0x000077505521a0c0] = 960
 stub code      [0x000077505521a0c0,0x000077505521a110] = 80
 metadata       [0x000077505521a110,0x000077505521a128] = 24
 scopes data    [0x000077505521a128,0x000077505521a1f8] = 208
 scopes pcs     [0x000077505521a1f8,0x000077505521a3c8] = 464
 dependencies   [0x000077505521a3c8,0x000077505521a3d0] = 8
 nul chk table  [0x000077505521a3d0,0x000077505521a3f8] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder'
  # this:     rsi:rsi   = 'java/util/zip/ZipCoder$UTF8ZipCoder'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x60]  (sp of caller)
  0x0000775055219d00:   mov    0x8(%rsi),%r10d
  0x0000775055219d04:   movabs $0x800000000,%r11
  0x0000775055219d0e:   add    %r11,%r10
  0x0000775055219d11:   cmp    %rax,%r10
  0x0000775055219d14:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055219d1a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055219d20:   mov    %eax,-0x14000(%rsp)
  0x0000775055219d27:   push   %rbp
  0x0000775055219d28:   sub    $0x50,%rsp
  0x0000775055219d2c:   movabs $0x77502038e2f8,%rax         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219d36:   mov    0xf4(%rax),%edi
  0x0000775055219d3c:   add    $0x2,%edi
  0x0000775055219d3f:   mov    %edi,0xf4(%rax)
  0x0000775055219d45:   and    $0x7fe,%edi
  0x0000775055219d4b:   cmp    $0x0,%edi
  0x0000775055219d4e:   je     0x0000775055219fb7           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@0 (line 209)
  0x0000775055219d54:   cmp    $0x0,%r8d
  0x0000775055219d58:   movabs $0x77502038e2f8,%rax         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219d62:   movabs $0x148,%rsi
  0x0000775055219d6c:   je     0x0000775055219d7c
  0x0000775055219d72:   movabs $0x138,%rsi
  0x0000775055219d7c:   mov    (%rax,%rsi,1),%rdi
  0x0000775055219d80:   lea    0x1(%rdi),%rdi
  0x0000775055219d84:   mov    %rdi,(%rax,%rsi,1)
  0x0000775055219d88:   je     0x0000775055219f9f           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@1 (line 209)
  0x0000775055219d8e:   mov    %rcx,%rsi
  0x0000775055219d91:   add    %r8d,%esi
  0x0000775055219d94:   mov    $0x0,%eax
  0x0000775055219d99:   jmp    0x0000775055219e48           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@14 (line 215)
  0x0000775055219d9e:   xchg   %ax,%ax
  0x0000775055219da0:   cmp    0xc(%rdx),%ecx               ; implicit exception: dispatches to 0x0000775055219fd8
  0x0000775055219da3:   jae    0x0000775055219fe2
  0x0000775055219da9:   movslq %ecx,%rdi
  0x0000775055219dac:   movsbl 0x10(%rdx,%rdi,1),%edi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x0000775055219db1:   cmp    $0x0,%edi
  0x0000775055219db4:   movabs $0x77502038e2f8,%rbx         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219dbe:   movabs $0x178,%r9
  0x0000775055219dc8:   jl     0x0000775055219dd8
  0x0000775055219dce:   movabs $0x188,%r9
  0x0000775055219dd8:   mov    (%rbx,%r9,1),%r11
  0x0000775055219ddc:   lea    0x1(%r11),%r11
  0x0000775055219de0:   mov    %r11,(%rbx,%r9,1)
  0x0000775055219de4:   jl     0x0000775055219eea           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x0000775055219dea:   mov    %rax,%rbx
  0x0000775055219ded:   shl    $0x5,%eax
  0x0000775055219df0:   sub    %ebx,%eax
  0x0000775055219df2:   add    %edi,%eax
  0x0000775055219df4:   inc    %ecx
  0x0000775055219df6:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219e00:   incl   0x198(%rdi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@43 (line 220)
  0x0000775055219e06:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219e10:   mov    0xf8(%rdi),%ebx
  0x0000775055219e16:   add    $0x2,%ebx
  0x0000775055219e19:   mov    %ebx,0xf8(%rdi)
  0x0000775055219e1f:   and    $0x3ffe,%ebx
  0x0000775055219e25:   cmp    $0x0,%ebx
  0x0000775055219e28:   je     0x0000775055219ff0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
  0x0000775055219e2e:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
  0x0000775055219e35:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055219e38:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219e42:   incl   0x1f8(%rdi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
  0x0000775055219e48:   cmp    %esi,%ecx
  0x0000775055219e4a:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219e54:   movabs $0x168,%rbx
  0x0000775055219e5e:   jl     0x0000775055219e6e
  0x0000775055219e64:   movabs $0x158,%rbx
  0x0000775055219e6e:   mov    (%rdi,%rbx,1),%r9
  0x0000775055219e72:   lea    0x1(%r9),%r9
  0x0000775055219e76:   mov    %r9,(%rdi,%rbx,1)
  0x0000775055219e7a:   jl     0x0000775055219da0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x0000775055219e80:   dec    %esi
  0x0000775055219e82:   cmp    0xc(%rdx),%esi               ; implicit exception: dispatches to 0x000077505521a011
  0x0000775055219e85:   jae    0x000077505521a01b
  0x0000775055219e8b:   movslq %esi,%rsi
  0x0000775055219e8e:   movsbl 0x10(%rdx,%rsi,1),%esi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
  0x0000775055219e93:   cmp    $0x2f,%esi
  0x0000775055219e96:   movabs $0x77502038e2f8,%rsi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219ea0:   movabs $0x210,%rdx
  0x0000775055219eaa:   je     0x0000775055219eba
  0x0000775055219eb0:   movabs $0x220,%rdx
  0x0000775055219eba:   mov    (%rsi,%rdx,1),%rcx
  0x0000775055219ebe:   lea    0x1(%rcx),%rcx
  0x0000775055219ec2:   mov    %rcx,(%rsi,%rdx,1)
  0x0000775055219ec6:   je     0x0000775055219ed7           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@75 (line 231)
  0x0000775055219ecc:   mov    %rax,%rsi
  0x0000775055219ecf:   shl    $0x5,%eax
  0x0000775055219ed2:   sub    %esi,%eax
  0x0000775055219ed4:   add    $0x2f,%eax
  0x0000775055219ed7:   add    $0x50,%rsp
  0x0000775055219edb:   pop    %rbp
  0x0000775055219edc:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055219ee3:   ja     0x000077505521a029
  0x0000775055219ee9:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@90 (line 234)
  0x0000775055219eea:   movabs $0x62ac0c390,%rcx            ;   {oop(a 'java/lang/System$2'{0x000000062ac0c390})}
  0x0000775055219ef4:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219efe:   movabs $0x8000650c0,%r10            ;   {metadata('java/lang/System$2')}
  0x0000775055219f08:   mov    %r10,0x1c0(%rdi)
  0x0000775055219f0f:   addq   $0x1,0x1c8(%rdi)
  0x0000775055219f17:   mov    %rsi,%rcx
  0x0000775055219f1a:   sub    %r8d,%ecx
  0x0000775055219f1d:   movabs $0x77502038e580,%rsi         ;   {metadata(method data for {method} {0x00007750201b3918} 'newStringUTF8NoRepl' '([BII)Ljava/lang/String;' in 'java/lang/System$2')}
  0x0000775055219f27:   mov    0xf4(%rsi),%edi
  0x0000775055219f2d:   add    $0x2,%edi
  0x0000775055219f30:   mov    %edi,0xf4(%rsi)
  0x0000775055219f36:   and    $0x1ffffe,%edi
  0x0000775055219f3c:   cmp    $0x0,%edi
  0x0000775055219f3f:   je     0x000077505521a03f
  0x0000775055219f45:   movabs $0x77502038e580,%rsi         ;   {metadata(method data for {method} {0x00007750201b3918} 'newStringUTF8NoRepl' '([BII)Ljava/lang/String;' in 'java/lang/System$2')}
  0x0000775055219f4f:   addq   $0x1,0x138(%rsi)
  0x0000775055219f57:   mov    %rdx,%rsi
  0x0000775055219f5a:   mov    %rcx,%rdx
  0x0000775055219f5d:   mov    %r8,%rcx                     ;*invokestatic newStringUTF8NoRepl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.System$2::newStringUTF8NoRepl@3 (line 2402)
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@55 (line 227)
  0x0000775055219f60:   nopl   0x0(%rax)
  0x0000775055219f67:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic newStringUTF8NoRepl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.System$2::newStringUTF8NoRepl@3 (line 2402)
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@55 (line 227)
                                                            ;   {static_call}
  0x0000775055219f6c:   movabs $0x77502038e2f8,%rsi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219f76:   addq   $0x1,0x1e8(%rsi)
  0x0000775055219f7e:   mov    %rax,%rsi                    ;*invokestatic hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@60 (line 227)
  0x0000775055219f81:   nopw   0x0(%rax,%rax,1)
  0x0000775055219f87:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@60 (line 227)
                                                            ;   {static_call}
  0x0000775055219f8c:   add    $0x50,%rsp
  0x0000775055219f90:   pop    %rbp
  0x0000775055219f91:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055219f98:   ja     0x000077505521a060
  0x0000775055219f9e:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@63 (line 227)
  0x0000775055219f9f:   mov    $0x0,%eax
  0x0000775055219fa4:   add    $0x50,%rsp
  0x0000775055219fa8:   pop    %rbp
  0x0000775055219fa9:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055219fb0:   ja     0x000077505521a076
  0x0000775055219fb6:   ret
  0x0000775055219fb7:   movabs $0x77502032b0f8,%r10         ;   {metadata({method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219fc1:   mov    %r10,0x8(%rsp)
  0x0000775055219fc6:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055219fce:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@-1 (line 209)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055219fd3:   jmp    0x0000775055219d54
  0x0000775055219fd8:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055219fdd:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055219fe2:   mov    %rcx,(%rsp)
  0x0000775055219fe6:   mov    %rdx,0x8(%rsp)
  0x0000775055219feb:   call   0x000077505c828ca0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055219ff0:   movabs $0x77502032b0f8,%r10         ;   {metadata({method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x0000775055219ffa:   mov    %r10,0x8(%rsp)
  0x0000775055219fff:   movq   $0x40,(%rsp)
  0x000077505521a007:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521a00c:   jmp    0x0000775055219e2e
  0x000077505521a011:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521a016:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521a01b:   mov    %rsi,(%rsp)
  0x000077505521a01f:   mov    %rdx,0x8(%rsp)
  0x000077505521a024:   call   0x000077505c828ca0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521a029:   movabs $0x775055219edc,%r10         ;   {internal_word}
  0x000077505521a033:   mov    %r10,0x360(%r15)
  0x000077505521a03a:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521a03f:   movabs $0x7750201b3918,%r10         ;   {metadata({method} {0x00007750201b3918} 'newStringUTF8NoRepl' '([BII)Ljava/lang/String;' in 'java/lang/System$2')}
  0x000077505521a049:   mov    %r10,0x8(%rsp)
  0x000077505521a04e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521a056:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.System$2::newStringUTF8NoRepl@-1 (line 2402)
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@55 (line 227)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521a05b:   jmp    0x0000775055219f45
  0x000077505521a060:   movabs $0x775055219f91,%r10         ;   {internal_word}
  0x000077505521a06a:   mov    %r10,0x360(%r15)
  0x000077505521a071:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521a076:   movabs $0x775055219fa9,%r10         ;   {internal_word}
  0x000077505521a080:   mov    %r10,0x360(%r15)
  0x000077505521a087:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521a08c:   nop
  0x000077505521a08d:   nop
  0x000077505521a08e:   mov    0x3d8(%r15),%rax
  0x000077505521a095:   movq   $0x0,0x3d8(%r15)
  0x000077505521a0a0:   movq   $0x0,0x3e0(%r15)
  0x000077505521a0ab:   add    $0x50,%rsp
  0x000077505521a0af:   pop    %rbp
  0x000077505521a0b0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521a0b5:   hlt
  0x000077505521a0b6:   hlt
  0x000077505521a0b7:   hlt
  0x000077505521a0b8:   hlt
  0x000077505521a0b9:   hlt
  0x000077505521a0ba:   hlt
  0x000077505521a0bb:   hlt
  0x000077505521a0bc:   hlt
  0x000077505521a0bd:   hlt
  0x000077505521a0be:   hlt
  0x000077505521a0bf:   hlt
[Stub Code]
  0x000077505521a0c0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505521a0c5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521a0cf:   jmp    0x000077505521a0cf           ;   {runtime_call}
  0x000077505521a0d4:   nop
  0x000077505521a0d5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521a0df:   jmp    0x000077505521a0df           ;   {runtime_call}
[Exception Handler]
  0x000077505521a0e4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505521a0e9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521a0f3:   and    $0xfffffffffffffff0,%rsp
  0x000077505521a0f7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521a0fc:   hlt
[Deopt Handler Code]
  0x000077505521a0fd:   movabs $0x77505521a0fd,%r10         ;   {section_word}
  0x000077505521a107:   push   %r10
  0x000077505521a109:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521a10e:   hlt
  0x000077505521a10f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     225   72       1       java.util.zip.ZipCoder$UTF8ZipCoder::isUTF8 (2 bytes)
 total in heap  [0x000077505cccca90,0x000077505ccccd38] = 680
 relocation     [0x000077505ccccbf0,0x000077505ccccc18] = 40
 main code      [0x000077505ccccc20,0x000077505cccccc0] = 160
 stub code      [0x000077505cccccc0,0x000077505cccccf0] = 48
 metadata       [0x000077505cccccf0,0x000077505cccccf8] = 8
 scopes data    [0x000077505cccccf8,0x000077505ccccd00] = 8
 scopes pcs     [0x000077505ccccd00,0x000077505ccccd30] = 48
 dependencies   [0x000077505ccccd30,0x000077505ccccd38] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502032ae20} 'isUTF8' '()Z' in 'java/util/zip/ZipCoder$UTF8ZipCoder'
  #           [sp+0x40]  (sp of caller)
  0x000077505ccccc20:   mov    0x8(%rsi),%r10d
  0x000077505ccccc24:   movabs $0x800000000,%r11
  0x000077505ccccc2e:   add    %r11,%r10
  0x000077505ccccc31:   cmp    %rax,%r10
  0x000077505ccccc34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccccc3a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505ccccc40:   mov    %eax,-0x14000(%rsp)
  0x000077505ccccc47:   push   %rbp
  0x000077505ccccc48:   sub    $0x30,%rsp                   ;*iconst_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::isUTF8@0 (line 194)
  0x000077505ccccc4c:   mov    $0x1,%eax
  0x000077505ccccc51:   add    $0x30,%rsp
  0x000077505ccccc55:   pop    %rbp
  0x000077505ccccc56:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccccc5d:   ja     0x000077505ccccc64
  0x000077505ccccc63:   ret
  0x000077505ccccc64:   movabs $0x77505ccccc56,%r10         ;   {internal_word}
  0x000077505ccccc6e:   mov    %r10,0x360(%r15)
  0x000077505ccccc75:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccccc7a:   nop
  0x000077505ccccc7b:   nop
  0x000077505ccccc7c:   mov    0x3d8(%r15),%rax
  0x000077505ccccc83:   movq   $0x0,0x3d8(%r15)
  0x000077505ccccc8e:   movq   $0x0,0x3e0(%r15)
  0x000077505ccccc99:   add    $0x30,%rsp
  0x000077505ccccc9d:   pop    %rbp
  0x000077505ccccc9e:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505ccccca3:   hlt
  0x000077505ccccca4:   hlt
  0x000077505ccccca5:   hlt
  0x000077505ccccca6:   hlt
  0x000077505ccccca7:   hlt
  0x000077505ccccca8:   hlt
  0x000077505ccccca9:   hlt
  0x000077505cccccaa:   hlt
  0x000077505cccccab:   hlt
  0x000077505cccccac:   hlt
  0x000077505cccccad:   hlt
  0x000077505cccccae:   hlt
  0x000077505cccccaf:   hlt
  0x000077505cccccb0:   hlt
  0x000077505cccccb1:   hlt
  0x000077505cccccb2:   hlt
  0x000077505cccccb3:   hlt
  0x000077505cccccb4:   hlt
  0x000077505cccccb5:   hlt
  0x000077505cccccb6:   hlt
  0x000077505cccccb7:   hlt
  0x000077505cccccb8:   hlt
  0x000077505cccccb9:   hlt
  0x000077505cccccba:   hlt
  0x000077505cccccbb:   hlt
  0x000077505cccccbc:   hlt
  0x000077505cccccbd:   hlt
  0x000077505cccccbe:   hlt
  0x000077505cccccbf:   hlt
[Exception Handler]
  0x000077505cccccc0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505cccccc5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505ccccccf:   and    $0xfffffffffffffff0,%rsp
  0x000077505cccccd3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505cccccd8:   hlt
[Deopt Handler Code]
  0x000077505cccccd9:   movabs $0x77505cccccd9,%r10         ;   {section_word}
  0x000077505ccccce3:   push   %r10
  0x000077505ccccce5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccccea:   hlt
  0x000077505ccccceb:   hlt
  0x000077505cccccec:   hlt
  0x000077505ccccced:   hlt
  0x000077505cccccee:   hlt
  0x000077505cccccef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     226   73       3       java.util.zip.ZipUtils::CENEXT (9 bytes)
 total in heap  [0x000077505521a410,0x000077505521a898] = 1160
 relocation     [0x000077505521a570,0x000077505521a5a8] = 56
 main code      [0x000077505521a5c0,0x000077505521a740] = 384
 stub code      [0x000077505521a740,0x000077505521a770] = 48
 metadata       [0x000077505521a770,0x000077505521a780] = 16
 scopes data    [0x000077505521a780,0x000077505521a7c8] = 72
 scopes pcs     [0x000077505521a7c8,0x000077505521a878] = 176
 dependencies   [0x000077505521a878,0x000077505521a880] = 8
 nul chk table  [0x000077505521a880,0x000077505521a898] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x000077505521a5c0:   mov    %eax,-0x14000(%rsp)
  0x000077505521a5c7:   push   %rbp
  0x000077505521a5c8:   sub    $0x50,%rsp
  0x000077505521a5cc:   movabs $0x77502038edf0,%rax         ;   {metadata(method data for {method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521a5d6:   mov    0xf4(%rax),%edi
  0x000077505521a5dc:   add    $0x2,%edi
  0x000077505521a5df:   mov    %edi,0xf4(%rax)
  0x000077505521a5e5:   and    $0x7fe,%edi
  0x000077505521a5eb:   cmp    $0x0,%edi
  0x000077505521a5ee:   je     0x000077505521a67a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::CENEXT@0 (line 273)
  0x000077505521a5f4:   movabs $0x77502038edf0,%rax         ;   {metadata(method data for {method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521a5fe:   addq   $0x1,0x138(%rax)
  0x000077505521a606:   add    $0x1e,%edx
  0x000077505521a609:   movabs $0x77502038e188,%rax         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521a613:   mov    0xf4(%rax),%edi
  0x000077505521a619:   add    $0x2,%edi
  0x000077505521a61c:   mov    %edi,0xf4(%rax)
  0x000077505521a622:   and    $0x1ffffe,%edi
  0x000077505521a628:   cmp    $0x0,%edi
  0x000077505521a62b:   je     0x000077505521a69b
  0x000077505521a631:   cmp    0xc(%rsi),%edx               ; implicit exception: dispatches to 0x000077505521a6bc
  0x000077505521a634:   jae    0x000077505521a6c6
  0x000077505521a63a:   movslq %edx,%rax
  0x000077505521a63d:   movsbl 0x10(%rsi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
  0x000077505521a642:   inc    %edx
  0x000077505521a644:   cmp    0xc(%rsi),%edx
  0x000077505521a647:   jae    0x000077505521a6d4
  0x000077505521a64d:   movslq %edx,%rdx
  0x000077505521a650:   movsbl 0x10(%rsi,%rdx,1),%esi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
  0x000077505521a655:   and    $0xff,%eax
  0x000077505521a65b:   and    $0xff,%esi
  0x000077505521a661:   shl    $0x8,%esi
  0x000077505521a664:   or     %rsi,%rax
  0x000077505521a667:   add    $0x50,%rsp
  0x000077505521a66b:   pop    %rbp
  0x000077505521a66c:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521a673:   ja     0x000077505521a6e2
  0x000077505521a679:   ret
  0x000077505521a67a:   movabs $0x77502038cf70,%r10         ;   {metadata({method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521a684:   mov    %r10,0x8(%rsp)
  0x000077505521a689:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521a691:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::CENEXT@-1 (line 273)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521a696:   jmp    0x000077505521a5f4
  0x000077505521a69b:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521a6a5:   mov    %r10,0x8(%rsp)
  0x000077505521a6aa:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521a6b2:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521a6b7:   jmp    0x000077505521a631
  0x000077505521a6bc:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521a6c1:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521a6c6:   mov    %rdx,(%rsp)
  0x000077505521a6ca:   mov    %rsi,0x8(%rsp)
  0x000077505521a6cf:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521a6d4:   mov    %rdx,(%rsp)
  0x000077505521a6d8:   mov    %rsi,0x8(%rsp)
  0x000077505521a6dd:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521a6e2:   movabs $0x77505521a66c,%r10         ;   {internal_word}
  0x000077505521a6ec:   mov    %r10,0x360(%r15)
  0x000077505521a6f3:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521a6f8:   nop
  0x000077505521a6f9:   nop
  0x000077505521a6fa:   mov    0x3d8(%r15),%rax
  0x000077505521a701:   movq   $0x0,0x3d8(%r15)
  0x000077505521a70c:   movq   $0x0,0x3e0(%r15)
  0x000077505521a717:   add    $0x50,%rsp
  0x000077505521a71b:   pop    %rbp
  0x000077505521a71c:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521a721:   hlt
  0x000077505521a722:   hlt
  0x000077505521a723:   hlt
  0x000077505521a724:   hlt
  0x000077505521a725:   hlt
  0x000077505521a726:   hlt
  0x000077505521a727:   hlt
  0x000077505521a728:   hlt
  0x000077505521a729:   hlt
  0x000077505521a72a:   hlt
  0x000077505521a72b:   hlt
  0x000077505521a72c:   hlt
  0x000077505521a72d:   hlt
  0x000077505521a72e:   hlt
  0x000077505521a72f:   hlt
  0x000077505521a730:   hlt
  0x000077505521a731:   hlt
  0x000077505521a732:   hlt
  0x000077505521a733:   hlt
  0x000077505521a734:   hlt
  0x000077505521a735:   hlt
  0x000077505521a736:   hlt
  0x000077505521a737:   hlt
  0x000077505521a738:   hlt
  0x000077505521a739:   hlt
  0x000077505521a73a:   hlt
  0x000077505521a73b:   hlt
  0x000077505521a73c:   hlt
  0x000077505521a73d:   hlt
  0x000077505521a73e:   hlt
  0x000077505521a73f:   hlt
[Exception Handler]
  0x000077505521a740:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505521a745:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521a74f:   and    $0xfffffffffffffff0,%rsp
  0x000077505521a753:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521a758:   hlt
[Deopt Handler Code]
  0x000077505521a759:   movabs $0x77505521a759,%r10         ;   {section_word}
  0x000077505521a763:   push   %r10
  0x000077505521a765:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521a76a:   hlt
  0x000077505521a76b:   hlt
  0x000077505521a76c:   hlt
  0x000077505521a76d:   hlt
  0x000077505521a76e:   hlt
  0x000077505521a76f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     228   74       3       java.util.zip.ZipUtils::LG (22 bytes)
 total in heap  [0x000077505521a910,0x000077505521aed0] = 1472
 relocation     [0x000077505521aa70,0x000077505521aab8] = 72
 main code      [0x000077505521aac0,0x000077505521ad00] = 576
 stub code      [0x000077505521ad00,0x000077505521ad30] = 48
 metadata       [0x000077505521ad30,0x000077505521ad40] = 16
 scopes data    [0x000077505521ad40,0x000077505521adb0] = 112
 scopes pcs     [0x000077505521adb0,0x000077505521aeb0] = 256
 dependencies   [0x000077505521aeb0,0x000077505521aeb8] = 8
 nul chk table  [0x000077505521aeb8,0x000077505521aed0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502038b608} 'LG' '([BI)J' in 'java/util/zip/ZipUtils'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000077505521aac0:   mov    %eax,-0x14000(%rsp)
  0x000077505521aac7:   push   %rbp
  0x000077505521aac8:   sub    $0x60,%rsp
  0x000077505521aacc:   movabs $0x77502038ef80,%rax         ;   {metadata(method data for {method} {0x000077502038b608} 'LG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521aad6:   mov    0xf4(%rax),%edi
  0x000077505521aadc:   add    $0x2,%edi
  0x000077505521aadf:   mov    %edi,0xf4(%rax)
  0x000077505521aae5:   and    $0x7fe,%edi
  0x000077505521aaeb:   cmp    $0x0,%edi
  0x000077505521aaee:   je     0x000077505521ac03           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::LG@0 (line 207)
  0x000077505521aaf4:   movabs $0x77502038ef80,%rax         ;   {metadata(method data for {method} {0x000077502038b608} 'LG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521aafe:   addq   $0x1,0x138(%rax)
  0x000077505521ab06:   movabs $0x77502038e188,%rax         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ab10:   mov    0xf4(%rax),%edi
  0x000077505521ab16:   add    $0x2,%edi
  0x000077505521ab19:   mov    %edi,0xf4(%rax)
  0x000077505521ab1f:   and    $0x1ffffe,%edi
  0x000077505521ab25:   cmp    $0x0,%edi
  0x000077505521ab28:   je     0x000077505521ac24
  0x000077505521ab2e:   cmp    0xc(%rsi),%edx               ; implicit exception: dispatches to 0x000077505521ac45
  0x000077505521ab31:   jae    0x000077505521ac4f
  0x000077505521ab37:   movslq %edx,%rax
  0x000077505521ab3a:   movsbl 0x10(%rsi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
  0x000077505521ab3f:   mov    %rdx,%rdi
  0x000077505521ab42:   inc    %edi
  0x000077505521ab44:   cmp    0xc(%rsi),%edi
  0x000077505521ab47:   jae    0x000077505521ac5d
  0x000077505521ab4d:   movslq %edi,%rdi
  0x000077505521ab50:   movsbl 0x10(%rsi,%rdi,1),%edi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
  0x000077505521ab55:   movabs $0x77502038ef80,%rbx         ;   {metadata(method data for {method} {0x000077502038b608} 'LG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521ab5f:   addq   $0x1,0x148(%rbx)
  0x000077505521ab67:   add    $0x2,%edx
  0x000077505521ab6a:   and    $0xff,%eax
  0x000077505521ab70:   and    $0xff,%edi
  0x000077505521ab76:   shl    $0x8,%edi
  0x000077505521ab79:   or     %rdi,%rax
  0x000077505521ab7c:   movabs $0x77502038e188,%rdi         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ab86:   mov    0xf4(%rdi),%ebx
  0x000077505521ab8c:   add    $0x2,%ebx
  0x000077505521ab8f:   mov    %ebx,0xf4(%rdi)
  0x000077505521ab95:   and    $0x1ffffe,%ebx
  0x000077505521ab9b:   cmp    $0x0,%ebx
  0x000077505521ab9e:   je     0x000077505521ac6b
  0x000077505521aba4:   cmp    0xc(%rsi),%edx
  0x000077505521aba7:   jae    0x000077505521ac8c
  0x000077505521abad:   movslq %edx,%rdi
  0x000077505521abb0:   movsbl 0x10(%rsi,%rdi,1),%edi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
  0x000077505521abb5:   inc    %edx
  0x000077505521abb7:   cmp    0xc(%rsi),%edx
  0x000077505521abba:   jae    0x000077505521ac9a
  0x000077505521abc0:   movslq %edx,%rdx
  0x000077505521abc3:   movsbl 0x10(%rsi,%rdx,1),%esi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
  0x000077505521abc8:   and    $0xff,%edi
  0x000077505521abce:   and    $0xff,%esi
  0x000077505521abd4:   shl    $0x8,%esi
  0x000077505521abd7:   or     %rsi,%rdi
  0x000077505521abda:   shl    $0x10,%edi
  0x000077505521abdd:   or     %rdi,%rax
  0x000077505521abe0:   movslq %eax,%rax
  0x000077505521abe3:   movabs $0xffffffff,%r10
  0x000077505521abed:   and    %r10,%rax
  0x000077505521abf0:   add    $0x60,%rsp
  0x000077505521abf4:   pop    %rbp
  0x000077505521abf5:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521abfc:   ja     0x000077505521aca8
  0x000077505521ac02:   ret
  0x000077505521ac03:   movabs $0x77502038b608,%r10         ;   {metadata({method} {0x000077502038b608} 'LG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521ac0d:   mov    %r10,0x8(%rsp)
  0x000077505521ac12:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521ac1a:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::LG@-1 (line 207)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521ac1f:   jmp    0x000077505521aaf4
  0x000077505521ac24:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ac2e:   mov    %r10,0x8(%rsp)
  0x000077505521ac33:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521ac3b:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521ac40:   jmp    0x000077505521ab2e
  0x000077505521ac45:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521ac4a:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521ac4f:   mov    %rdx,(%rsp)
  0x000077505521ac53:   mov    %rsi,0x8(%rsp)
  0x000077505521ac58:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521ac5d:   mov    %rdi,(%rsp)
  0x000077505521ac61:   mov    %rsi,0x8(%rsp)
  0x000077505521ac66:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521ac6b:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ac75:   mov    %r10,0x8(%rsp)
  0x000077505521ac7a:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521ac82:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521ac87:   jmp    0x000077505521aba4
  0x000077505521ac8c:   mov    %rdx,(%rsp)
  0x000077505521ac90:   mov    %rsi,0x8(%rsp)
  0x000077505521ac95:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521ac9a:   mov    %rdx,(%rsp)
  0x000077505521ac9e:   mov    %rsi,0x8(%rsp)
  0x000077505521aca3:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521aca8:   movabs $0x77505521abf5,%r10         ;   {internal_word}
  0x000077505521acb2:   mov    %r10,0x360(%r15)
  0x000077505521acb9:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521acbe:   nop
  0x000077505521acbf:   nop
  0x000077505521acc0:   mov    0x3d8(%r15),%rax
  0x000077505521acc7:   movq   $0x0,0x3d8(%r15)
  0x000077505521acd2:   movq   $0x0,0x3e0(%r15)
  0x000077505521acdd:   add    $0x60,%rsp
  0x000077505521ace1:   pop    %rbp
  0x000077505521ace2:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521ace7:   hlt
  0x000077505521ace8:   hlt
  0x000077505521ace9:   hlt
  0x000077505521acea:   hlt
  0x000077505521aceb:   hlt
  0x000077505521acec:   hlt
  0x000077505521aced:   hlt
  0x000077505521acee:   hlt
  0x000077505521acef:   hlt
  0x000077505521acf0:   hlt
  0x000077505521acf1:   hlt
  0x000077505521acf2:   hlt
  0x000077505521acf3:   hlt
  0x000077505521acf4:   hlt
  0x000077505521acf5:   hlt
  0x000077505521acf6:   hlt
  0x000077505521acf7:   hlt
  0x000077505521acf8:   hlt
  0x000077505521acf9:   hlt
  0x000077505521acfa:   hlt
  0x000077505521acfb:   hlt
  0x000077505521acfc:   hlt
  0x000077505521acfd:   hlt
  0x000077505521acfe:   hlt
  0x000077505521acff:   hlt
[Exception Handler]
  0x000077505521ad00:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505521ad05:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521ad0f:   and    $0xfffffffffffffff0,%rsp
  0x000077505521ad13:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521ad18:   hlt
[Deopt Handler Code]
  0x000077505521ad19:   movabs $0x77505521ad19,%r10         ;   {section_word}
  0x000077505521ad23:   push   %r10
  0x000077505521ad25:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521ad2a:   hlt
  0x000077505521ad2b:   hlt
  0x000077505521ad2c:   hlt
  0x000077505521ad2d:   hlt
  0x000077505521ad2e:   hlt
  0x000077505521ad2f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     231   75   !   3       java.util.zip.ZipFile$Source::checkAndAddEntry (262 bytes)
 total in heap  [0x000077505521af10,0x000077505521dd38] = 11816
 relocation     [0x000077505521b070,0x000077505521b2c0] = 592
 main code      [0x000077505521b2c0,0x000077505521c860] = 5536
 stub code      [0x000077505521c860,0x000077505521c980] = 288
 oops           [0x000077505521c980,0x000077505521c9b8] = 56
 metadata       [0x000077505521c9b8,0x000077505521ca30] = 120
 scopes data    [0x000077505521ca30,0x000077505521d218] = 2024
 scopes pcs     [0x000077505521d218,0x000077505521dbc8] = 2480
 dependencies   [0x000077505521dbc8,0x000077505521dbd0] = 8
 handler table  [0x000077505521dbd0,0x000077505521dcf0] = 288
 nul chk table  [0x000077505521dcf0,0x000077505521dd38] = 72

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source'
  # this:     rsi:rsi   = 'java/util/zip/ZipFile$Source'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x120]  (sp of caller)
  0x000077505521b2c0:   mov    0x8(%rsi),%r10d
  0x000077505521b2c4:   movabs $0x800000000,%r11
  0x000077505521b2ce:   add    %r11,%r10
  0x000077505521b2d1:   cmp    %rax,%r10
  0x000077505521b2d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521b2da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505521b2e0:   mov    %eax,-0x14000(%rsp)
  0x000077505521b2e7:   push   %rbp
  0x000077505521b2e8:   sub    $0x110,%rsp
  0x000077505521b2ef:   mov    %rsi,0xa0(%rsp)
  0x000077505521b2f7:   mov    %edx,0x9c(%rsp)
  0x000077505521b2fe:   mov    %ecx,0xb8(%rsp)
  0x000077505521b305:   movabs $0x77502038f120,%r8          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b30f:   mov    0xf4(%r8),%edi
  0x000077505521b316:   add    $0x2,%edi
  0x000077505521b319:   mov    %edi,0xf4(%r8)
  0x000077505521b320:   and    $0x7fe,%edi
  0x000077505521b326:   cmp    $0x0,%edi
  0x000077505521b329:   je     0x000077505521c2c9           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@0 (line 1205)
  0x000077505521b32f:   mov    0x38(%rsi),%edi
  0x000077505521b332:   shl    $0x3,%rdi                    ;*getfield cen {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@1 (line 1205)
  0x000077505521b336:   mov    %rdi,0xa8(%rsp)
  0x000077505521b33e:   movabs $0x77502038f120,%r8          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b348:   addq   $0x1,0x138(%r8)
  0x000077505521b350:   movabs $0x77502038f628,%r8          ;   {metadata(method data for {method} {0x000077502038c7e0} 'CENSIG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521b35a:   mov    0xf4(%r8),%ebx
  0x000077505521b361:   add    $0x2,%ebx
  0x000077505521b364:   mov    %ebx,0xf4(%r8)
  0x000077505521b36b:   and    $0x1ffffe,%ebx
  0x000077505521b371:   cmp    $0x0,%ebx
  0x000077505521b374:   je     0x000077505521c2ea
  0x000077505521b37a:   movabs $0x77502038f628,%r8          ;   {metadata(method data for {method} {0x000077502038c7e0} 'CENSIG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521b384:   addq   $0x1,0x138(%r8)
  0x000077505521b38c:   movabs $0x77502038ef80,%r8          ;   {metadata(method data for {method} {0x000077502038b608} 'LG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521b396:   mov    0xf4(%r8),%ebx
  0x000077505521b39d:   add    $0x2,%ebx
  0x000077505521b3a0:   mov    %ebx,0xf4(%r8)
  0x000077505521b3a7:   and    $0x1ffffe,%ebx
  0x000077505521b3ad:   cmp    $0x0,%ebx
  0x000077505521b3b0:   je     0x000077505521c30b
  0x000077505521b3b6:   movabs $0x77502038ef80,%r8          ;   {metadata(method data for {method} {0x000077502038b608} 'LG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521b3c0:   addq   $0x1,0x138(%r8)
  0x000077505521b3c8:   movabs $0x77502038e188,%r8          ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b3d2:   mov    0xf4(%r8),%ebx
  0x000077505521b3d9:   add    $0x2,%ebx
  0x000077505521b3dc:   mov    %ebx,0xf4(%r8)
  0x000077505521b3e3:   and    $0x1ffffe,%ebx
  0x000077505521b3e9:   cmp    $0x0,%ebx
  0x000077505521b3ec:   je     0x000077505521c32c
  0x000077505521b3f2:   cmp    0xc(%rdi),%edx               ; implicit exception: dispatches to 0x000077505521c34d
  0x000077505521b3f5:   jae    0x000077505521c357
  0x000077505521b3fb:   movslq %edx,%r8
  0x000077505521b3fe:   movsbl 0x10(%rdi,%r8,1),%r8d        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
  0x000077505521b404:   mov    %rdx,%rbx
  0x000077505521b407:   inc    %ebx
  0x000077505521b409:   cmp    0xc(%rdi),%ebx
  0x000077505521b40c:   jae    0x000077505521c365
  0x000077505521b412:   movslq %ebx,%rbx
  0x000077505521b415:   movsbl 0x10(%rdi,%rbx,1),%ebx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
  0x000077505521b41a:   movabs $0x77502038ef80,%rax         ;   {metadata(method data for {method} {0x000077502038b608} 'LG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521b424:   addq   $0x1,0x148(%rax)
  0x000077505521b42c:   mov    %rdx,%rax
  0x000077505521b42f:   add    $0x2,%eax
  0x000077505521b432:   and    $0xff,%r8d
  0x000077505521b439:   and    $0xff,%ebx
  0x000077505521b43f:   shl    $0x8,%ebx
  0x000077505521b442:   or     %rbx,%r8
  0x000077505521b445:   movabs $0x77502038e188,%rbx         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b44f:   mov    0xf4(%rbx),%r9d
  0x000077505521b456:   add    $0x2,%r9d
  0x000077505521b45a:   mov    %r9d,0xf4(%rbx)
  0x000077505521b461:   and    $0x1ffffe,%r9d
  0x000077505521b468:   cmp    $0x0,%r9d
  0x000077505521b46c:   je     0x000077505521c373
  0x000077505521b472:   cmp    0xc(%rdi),%eax
  0x000077505521b475:   jae    0x000077505521c394
  0x000077505521b47b:   movslq %eax,%rbx
  0x000077505521b47e:   movsbl 0x10(%rdi,%rbx,1),%ebx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
  0x000077505521b483:   inc    %eax
  0x000077505521b485:   cmp    0xc(%rdi),%eax
  0x000077505521b488:   jae    0x000077505521c3a2
  0x000077505521b48e:   movslq %eax,%rax
  0x000077505521b491:   movsbl 0x10(%rdi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
  0x000077505521b496:   and    $0xff,%ebx
  0x000077505521b49c:   and    $0xff,%eax
  0x000077505521b4a2:   shl    $0x8,%eax
  0x000077505521b4a5:   or     %rax,%rbx
  0x000077505521b4a8:   shl    $0x10,%ebx
  0x000077505521b4ab:   or     %rbx,%r8
  0x000077505521b4ae:   movslq %r8d,%r8
  0x000077505521b4b1:   movabs $0xffffffff,%r10
  0x000077505521b4bb:   and    %r10,%r8
  0x000077505521b4be:   movabs $0x2014b50,%rbx
  0x000077505521b4c8:   cmp    %rbx,%r8
  0x000077505521b4cb:   movabs $0x77502038f120,%r8          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b4d5:   movabs $0x158,%rbx
  0x000077505521b4df:   jne    0x000077505521b4ef
  0x000077505521b4e5:   movabs $0x148,%rbx
  0x000077505521b4ef:   mov    (%r8,%rbx,1),%rax
  0x000077505521b4f3:   lea    0x1(%rax),%rax
  0x000077505521b4f7:   mov    %rax,(%r8,%rbx,1)
  0x000077505521b4fb:   jne    0x000077505521c191           ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@13 (line 1206)
  0x000077505521b501:   movabs $0x77502038f120,%r8          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b50b:   addq   $0x1,0x178(%r8)
  0x000077505521b513:   movabs $0x77502038f928,%r8          ;   {metadata(method data for {method} {0x000077502038cb50} 'CENHOW' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b51d:   mov    0xf4(%r8),%ebx
  0x000077505521b524:   add    $0x2,%ebx
  0x000077505521b527:   mov    %ebx,0xf4(%r8)
  0x000077505521b52e:   and    $0x1ffffe,%ebx
  0x000077505521b534:   cmp    $0x0,%ebx
  0x000077505521b537:   je     0x000077505521c3b0
  0x000077505521b53d:   movabs $0x77502038f928,%r8          ;   {metadata(method data for {method} {0x000077502038cb50} 'CENHOW' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b547:   addq   $0x1,0x138(%r8)
  0x000077505521b54f:   mov    %rdx,%r8
  0x000077505521b552:   add    $0xa,%r8d
  0x000077505521b556:   movabs $0x77502038e188,%rbx         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b560:   mov    0xf4(%rbx),%eax
  0x000077505521b566:   add    $0x2,%eax
  0x000077505521b569:   mov    %eax,0xf4(%rbx)
  0x000077505521b56f:   and    $0x1ffffe,%eax
  0x000077505521b575:   cmp    $0x0,%eax
  0x000077505521b578:   je     0x000077505521c3d1
  0x000077505521b57e:   cmp    0xc(%rdi),%r8d
  0x000077505521b582:   jae    0x000077505521c3f2
  0x000077505521b588:   movslq %r8d,%rbx
  0x000077505521b58b:   movsbl 0x10(%rdi,%rbx,1),%ebx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENHOW@5 (line 267)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@24 (line 1209)
  0x000077505521b590:   inc    %r8d
  0x000077505521b593:   cmp    0xc(%rdi),%r8d
  0x000077505521b597:   jae    0x000077505521c400
  0x000077505521b59d:   movslq %r8d,%r8
  0x000077505521b5a0:   movsbl 0x10(%rdi,%r8,1),%r8d        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENHOW@5 (line 267)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@24 (line 1209)
  0x000077505521b5a6:   and    $0xff,%ebx
  0x000077505521b5ac:   and    $0xff,%r8d
  0x000077505521b5b3:   shl    $0x8,%r8d
  0x000077505521b5b7:   or     %r8,%rbx
  0x000077505521b5ba:   mov    %ebx,0xbc(%rsp)
  0x000077505521b5c1:   movabs $0x77502038f120,%r8          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b5cb:   addq   $0x1,0x188(%r8)
  0x000077505521b5d3:   movabs $0x77502038fab8,%r8          ;   {metadata(method data for {method} {0x000077502038caa0} 'CENFLG' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b5dd:   mov    0xf4(%r8),%eax
  0x000077505521b5e4:   add    $0x2,%eax
  0x000077505521b5e7:   mov    %eax,0xf4(%r8)
  0x000077505521b5ee:   and    $0x1ffffe,%eax
  0x000077505521b5f4:   cmp    $0x0,%eax
  0x000077505521b5f7:   je     0x000077505521c40e
  0x000077505521b5fd:   movabs $0x77502038fab8,%r8          ;   {metadata(method data for {method} {0x000077502038caa0} 'CENFLG' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b607:   addq   $0x1,0x138(%r8)
  0x000077505521b60f:   mov    %rdx,%r8
  0x000077505521b612:   add    $0x8,%r8d
  0x000077505521b616:   movabs $0x77502038e188,%rax         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b620:   mov    0xf4(%rax),%r9d
  0x000077505521b627:   add    $0x2,%r9d
  0x000077505521b62b:   mov    %r9d,0xf4(%rax)
  0x000077505521b632:   and    $0x1ffffe,%r9d
  0x000077505521b639:   cmp    $0x0,%r9d
  0x000077505521b63d:   je     0x000077505521c42f
  0x000077505521b643:   cmp    0xc(%rdi),%r8d
  0x000077505521b647:   jae    0x000077505521c450
  0x000077505521b64d:   movslq %r8d,%rax
  0x000077505521b650:   movsbl 0x10(%rdi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@31 (line 1210)
  0x000077505521b655:   inc    %r8d
  0x000077505521b658:   movslq %r8d,%r8
  0x000077505521b65b:   movsbl 0x10(%rdi,%r8,1),%r8d        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@31 (line 1210)
  0x000077505521b661:   and    $0xff,%eax
  0x000077505521b667:   and    $0xff,%r8d
  0x000077505521b66e:   shl    $0x8,%r8d
  0x000077505521b672:   or     %r8,%rax
  0x000077505521b675:   and    $0x1,%eax
  0x000077505521b678:   cmp    $0x0,%eax
  0x000077505521b67b:   movabs $0x77502038f120,%r8          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b685:   movabs $0x1a8,%rax
  0x000077505521b68f:   jne    0x000077505521b69f
  0x000077505521b695:   movabs $0x198,%rax
  0x000077505521b69f:   mov    (%r8,%rax,1),%r9
  0x000077505521b6a3:   lea    0x1(%r9),%r9
  0x000077505521b6a7:   mov    %r9,(%r8,%rax,1)
  0x000077505521b6ab:   jne    0x000077505521c101           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@40 (line 1211)
  0x000077505521b6b1:   cmp    $0x0,%ebx
  0x000077505521b6b4:   movabs $0x77502038f120,%r8          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b6be:   movabs $0x1c8,%rax
  0x000077505521b6c8:   je     0x000077505521b6d8
  0x000077505521b6ce:   movabs $0x1d8,%rax
  0x000077505521b6d8:   mov    (%r8,%rax,1),%r9
  0x000077505521b6dc:   lea    0x1(%r9),%r9
  0x000077505521b6e0:   mov    %r9,(%r8,%rax,1)
  0x000077505521b6e4:   je     0x000077505521b723           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@50 (line 1214)
  0x000077505521b6ea:   cmp    $0x8,%ebx
  0x000077505521b6ed:   movabs $0x77502038f120,%r8          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b6f7:   movabs $0x1f8,%rax
  0x000077505521b701:   jne    0x000077505521b711
  0x000077505521b707:   movabs $0x1e8,%rax
  0x000077505521b711:   mov    (%r8,%rax,1),%r9
  0x000077505521b715:   lea    0x1(%r9),%r9
  0x000077505521b719:   mov    %r9,(%r8,%rax,1)
  0x000077505521b71d:   jne    0x000077505521bb6f           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@57 (line 1214)
  0x000077505521b723:   mov    %rdx,%rbx
  0x000077505521b726:   add    $0x2e,%ebx
  0x000077505521b729:   mov    %ebx,0xb0(%rsp)
  0x000077505521b730:   movabs $0x77502038f120,%r8          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b73a:   addq   $0x1,0x308(%r8)
  0x000077505521b742:   movabs $0x775020390ce0,%r8          ;   {metadata(method data for {method} {0x000077502038cec0} 'CENNAM' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b74c:   mov    0xf4(%r8),%eax
  0x000077505521b753:   add    $0x2,%eax
  0x000077505521b756:   mov    %eax,0xf4(%r8)
  0x000077505521b75d:   and    $0x1ffffe,%eax
  0x000077505521b763:   cmp    $0x0,%eax
  0x000077505521b766:   je     0x000077505521c45e
  0x000077505521b76c:   movabs $0x775020390ce0,%r8          ;   {metadata(method data for {method} {0x000077502038cec0} 'CENNAM' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b776:   addq   $0x1,0x138(%r8)
  0x000077505521b77e:   mov    %rdx,%r8
  0x000077505521b781:   add    $0x1c,%r8d
  0x000077505521b785:   movabs $0x77502038e188,%rax         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b78f:   mov    0xf4(%rax),%r9d
  0x000077505521b796:   add    $0x2,%r9d
  0x000077505521b79a:   mov    %r9d,0xf4(%rax)
  0x000077505521b7a1:   and    $0x1ffffe,%r9d
  0x000077505521b7a8:   cmp    $0x0,%r9d
  0x000077505521b7ac:   je     0x000077505521c47f
  0x000077505521b7b2:   cmp    0xc(%rdi),%r8d
  0x000077505521b7b6:   jae    0x000077505521c4a0
  0x000077505521b7bc:   movslq %r8d,%rax
  0x000077505521b7bf:   movsbl 0x10(%rdi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENNAM@5 (line 272)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@96 (line 1218)
  0x000077505521b7c4:   inc    %r8d
  0x000077505521b7c7:   cmp    0xc(%rdi),%r8d
  0x000077505521b7cb:   jae    0x000077505521c4ae
  0x000077505521b7d1:   movslq %r8d,%r8
  0x000077505521b7d4:   movsbl 0x10(%rdi,%r8,1),%r8d        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENNAM@5 (line 272)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@96 (line 1218)
  0x000077505521b7da:   and    $0xff,%eax
  0x000077505521b7e0:   and    $0xff,%r8d
  0x000077505521b7e7:   shl    $0x8,%r8d
  0x000077505521b7eb:   or     %r8,%rax
  0x000077505521b7ee:   mov    %eax,0xb4(%rsp)
  0x000077505521b7f5:   mov    %rbx,%r8
  0x000077505521b7f8:   add    %eax,%r8d
  0x000077505521b7fb:   mov    0xc(%rdi),%r9d               ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@107 (line 1219)
  0x000077505521b7ff:   sub    $0x16,%r9d
  0x000077505521b803:   cmp    %r9d,%r8d
  0x000077505521b806:   movabs $0x77502038f120,%r9          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b810:   movabs $0x328,%r11
  0x000077505521b81a:   jg     0x000077505521b82a
  0x000077505521b820:   movabs $0x318,%r11
  0x000077505521b82a:   mov    (%r9,%r11,1),%r13
  0x000077505521b82e:   lea    0x1(%r13),%r13
  0x000077505521b832:   mov    %r13,(%r9,%r11,1)
  0x000077505521b836:   jg     0x000077505521c071           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@111 (line 1219)
  0x000077505521b83c:   movabs $0x77502038f120,%r9          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b846:   addq   $0x1,0x348(%r9)
  0x000077505521b84e:   movabs $0x77502038edf0,%r9          ;   {metadata(method data for {method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b858:   mov    0xf4(%r9),%r11d
  0x000077505521b85f:   add    $0x2,%r11d
  0x000077505521b863:   mov    %r11d,0xf4(%r9)
  0x000077505521b86a:   and    $0x1ffffe,%r11d
  0x000077505521b871:   cmp    $0x0,%r11d
  0x000077505521b875:   je     0x000077505521c4bc
  0x000077505521b87b:   movabs $0x77502038edf0,%r9          ;   {metadata(method data for {method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b885:   addq   $0x1,0x138(%r9)
  0x000077505521b88d:   mov    %rdx,%r9
  0x000077505521b890:   add    $0x1e,%r9d
  0x000077505521b894:   movabs $0x77502038e188,%r11         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521b89e:   mov    0xf4(%r11),%r13d
  0x000077505521b8a5:   add    $0x2,%r13d
  0x000077505521b8a9:   mov    %r13d,0xf4(%r11)
  0x000077505521b8b0:   and    $0x1ffffe,%r13d
  0x000077505521b8b7:   cmp    $0x0,%r13d
  0x000077505521b8bb:   je     0x000077505521c4dd
  0x000077505521b8c1:   cmp    0xc(%rdi),%r9d
  0x000077505521b8c5:   jae    0x000077505521c4fe
  0x000077505521b8cb:   movslq %r9d,%r11
  0x000077505521b8ce:   movsbl 0x10(%rdi,%r11,1),%r11d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@121 (line 1223)
  0x000077505521b8d4:   inc    %r9d
  0x000077505521b8d7:   cmp    0xc(%rdi),%r9d
  0x000077505521b8db:   jae    0x000077505521c50c
  0x000077505521b8e1:   movslq %r9d,%r9
  0x000077505521b8e4:   movsbl 0x10(%rdi,%r9,1),%r9d        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@121 (line 1223)
  0x000077505521b8ea:   and    $0xff,%r11d
  0x000077505521b8f1:   and    $0xff,%r9d
  0x000077505521b8f8:   shl    $0x8,%r9d
  0x000077505521b8fc:   or     %r9,%r11
  0x000077505521b8ff:   mov    %r11d,0x98(%rsp)
  0x000077505521b907:   cmp    $0x0,%r11d
  0x000077505521b90b:   movabs $0x77502038f120,%r9          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b915:   movabs $0x358,%r13
  0x000077505521b91f:   jle    0x000077505521b92f
  0x000077505521b925:   movabs $0x368,%r13
  0x000077505521b92f:   mov    (%r9,%r13,1),%r14
  0x000077505521b933:   lea    0x1(%r14),%r14
  0x000077505521b937:   mov    %r14,(%r9,%r13,1)
  0x000077505521b93b:   jle    0x000077505521b9db           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@128 (line 1224)
  0x000077505521b941:   movabs $0x77502038f120,%r9          ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b94b:   incl   0x388(%r9)                   ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@134 (line 1224)
  0x000077505521b952:   movslq %r8d,%r8
  0x000077505521b955:   mov    %r8d,%r9d
  0x000077505521b958:   movslq %r9d,%r13
  0x000077505521b95b:   cmp    %r8,%r13
  0x000077505521b95e:   movabs $0x77502038f120,%r13         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b968:   movabs $0x3a8,%r14
  0x000077505521b972:   jne    0x000077505521b982
  0x000077505521b978:   movabs $0x398,%r14
  0x000077505521b982:   mov    0x0(%r13,%r14,1),%r11
  0x000077505521b987:   lea    0x1(%r11),%r11
  0x000077505521b98b:   mov    %r11,0x0(%r13,%r14,1)
  0x000077505521b990:   jne    0x000077505521bfd9           ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@153 (line 1226)
  0x000077505521b996:   mov    0x98(%rsp),%r11d
  0x000077505521b99e:   mov    %rsi,%r8
  0x000077505521b9a1:   movabs $0x77502038f120,%r13         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b9ab:   addq   $0x1,0x3c8(%r13)
  0x000077505521b9b3:   mov    %rdx,%r13
  0x000077505521b9b6:   mov    %r13,%rdx
  0x000077505521b9b9:   mov    %r9,%rcx
  0x000077505521b9bc:   mov    %r11,%r8
  0x000077505521b9bf:   mov    %rsi,%r9
  0x000077505521b9c2:   mov    %r9,%rsi                     ;*invokevirtual checkExtraFields {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@169 (line 1229)
  0x000077505521b9c5:   xchg   %ax,%ax
  0x000077505521b9c7:   call   0x000077505c788080           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*invokevirtual checkExtraFields {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@169 (line 1229)
                                                            ;   {optimized virtual_call}
  0x000077505521b9cc:   mov    0x9c(%rsp),%edx
  0x000077505521b9d3:   mov    0xa0(%rsp),%rsi
  0x000077505521b9db:   mov    %rsi,%rdi
  0x000077505521b9de:   movabs $0x77502038f120,%rbx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521b9e8:   addq   $0x1,0x400(%rbx)
  0x000077505521b9f0:   mov    %rdx,%rdi
  0x000077505521b9f3:   mov    %rdi,%rdx
  0x000077505521b9f6:   mov    %rsi,%rbx
  0x000077505521b9f9:   mov    %rbx,%rsi                    ;*invokevirtual zipCoderForPos {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@174 (line 1233)
  0x000077505521b9fc:   data16 xchg %ax,%ax
  0x000077505521b9ff:   call   0x000077505c788080           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*invokevirtual zipCoderForPos {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@174 (line 1233)
                                                            ;   {optimized virtual_call}
  0x000077505521ba04:   cmp    (%rax),%rax                  ; implicit exception: dispatches to 0x000077505521c51a
  0x000077505521ba07:   mov    %rax,%rdx
  0x000077505521ba0a:   movabs $0x77502038f120,%rcx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521ba14:   mov    0x8(%rdx),%edx
  0x000077505521ba17:   movabs $0x800000000,%r10
  0x000077505521ba21:   add    %r10,%rdx
  0x000077505521ba24:   cmp    0x448(%rcx),%rdx
  0x000077505521ba2b:   jne    0x000077505521ba3a
  0x000077505521ba2d:   addq   $0x1,0x450(%rcx)
  0x000077505521ba35:   jmp    0x000077505521baa0
  0x000077505521ba3a:   cmp    0x458(%rcx),%rdx
  0x000077505521ba41:   jne    0x000077505521ba50
  0x000077505521ba43:   addq   $0x1,0x460(%rcx)
  0x000077505521ba4b:   jmp    0x000077505521baa0
  0x000077505521ba50:   cmpq   $0x0,0x448(%rcx)
  0x000077505521ba5b:   jne    0x000077505521ba74
  0x000077505521ba5d:   mov    %rdx,0x448(%rcx)
  0x000077505521ba64:   movq   $0x1,0x450(%rcx)
  0x000077505521ba6f:   jmp    0x000077505521baa0
  0x000077505521ba74:   cmpq   $0x0,0x458(%rcx)
  0x000077505521ba7f:   jne    0x000077505521ba98
  0x000077505521ba81:   mov    %rdx,0x458(%rcx)
  0x000077505521ba88:   movq   $0x1,0x460(%rcx)
  0x000077505521ba93:   jmp    0x000077505521baa0
  0x000077505521ba98:   addq   $0x1,0x438(%rcx)
  0x000077505521baa0:   mov    0xa8(%rsp),%rdx
  0x000077505521baa8:   mov    0xb0(%rsp),%ecx
  0x000077505521baaf:   mov    0xb4(%rsp),%r8d
  0x000077505521bab7:   mov    %rax,%rsi                    ;*invokevirtual checkedHash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505521baba:   data16 xchg %ax,%ax
  0x000077505521babd:   movabs $0xffffffffffffffff,%rax
  0x000077505521bac7:   call   0x000077505c788380           ; ImmutableOopMap {[160]=Oop }
                                                            ;*invokevirtual checkedHash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
                                                            ;   {virtual_call}
  0x000077505521bacc:   mov    %rax,%rsi                    ;*invokevirtual checkedHash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505521bacf:   mov    0xa0(%rsp),%rbx
  0x000077505521bad7:   mov    0x24(%rbx),%edi              ;*getfield tablelen {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@197 (line 1235)
  0x000077505521bada:   mov    %rsi,%rax
  0x000077505521badd:   and    $0x7fffffff,%eax
  0x000077505521bae3:   cmp    $0x80000000,%eax
  0x000077505521bae9:   jne    0x000077505521bafa
  0x000077505521baef:   xor    %edx,%edx
  0x000077505521baf1:   cmp    $0xffffffff,%edi
  0x000077505521baf4:   je     0x000077505521bafd
  0x000077505521bafa:   cltd
  0x000077505521bafb:   idiv   %edi                         ; implicit exception: dispatches to 0x000077505521c51f
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@200 (line 1235)
  0x000077505521bafd:   mov    0x4c(%rbx),%edi
  0x000077505521bb00:   shl    $0x3,%rdi                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@204 (line 1236)
  0x000077505521bb04:   cmp    0xc(%rdi),%edx               ; implicit exception: dispatches to 0x000077505521c524
  0x000077505521bb07:   jae    0x000077505521c52e
  0x000077505521bb0d:   movslq %edx,%rax
  0x000077505521bb10:   mov    0x10(%rdi,%rax,4),%eax       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@209 (line 1236)
  0x000077505521bb14:   movslq %edx,%rdx
  0x000077505521bb17:   mov    0xb8(%rsp),%ecx
  0x000077505521bb1e:   mov    %ecx,0x10(%rdi,%rdx,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@219 (line 1237)
  0x000077505521bb22:   mov    0x48(%rbx),%edx
  0x000077505521bb25:   shl    $0x3,%rdx                    ;*getfield entries {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@221 (line 1239)
  0x000077505521bb29:   mov    %rcx,%rdi
  0x000077505521bb2c:   inc    %edi
  0x000077505521bb2e:   cmp    0xc(%rdx),%ecx               ; implicit exception: dispatches to 0x000077505521c53c
  0x000077505521bb31:   jae    0x000077505521c546
  0x000077505521bb37:   movslq %ecx,%rcx
  0x000077505521bb3a:   mov    %esi,0x10(%rdx,%rcx,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@230 (line 1239)
  0x000077505521bb3e:   mov    %rdi,%rsi
  0x000077505521bb41:   inc    %esi
  0x000077505521bb43:   cmp    0xc(%rdx),%edi
  0x000077505521bb46:   jae    0x000077505521c554
  0x000077505521bb4c:   movslq %edi,%rdi
  0x000077505521bb4f:   mov    %eax,0x10(%rdx,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@241 (line 1240)
  0x000077505521bb53:   cmp    0xc(%rdx),%esi
  0x000077505521bb56:   jae    0x000077505521c562
  0x000077505521bb5c:   movslq %esi,%rsi
  0x000077505521bb5f:   mov    0x9c(%rsp),%ebx
  0x000077505521bb66:   mov    %ebx,0x10(%rdx,%rsi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@248 (line 1241)
  0x000077505521bb6a:   jmp    0x000077505521bf21           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@249 (line 1244)
  0x000077505521bb6f:   nop
  0x000077505521bb70:   jmp    0x000077505521c57f           ;   {no_reloc}
  0x000077505521bb75:   add    %al,(%rax)
  0x000077505521bb77:   add    %al,(%rax)
  0x000077505521bb79:   add    %cl,-0x75(%rcx)
  0x000077505521bb7c:   xchg   %ecx,(%rax)
  0x000077505521bb7e:   add    %eax,(%rax)
  0x000077505521bb80:   add    %cl,-0x73(%rax)
  0x000077505521bb83:   js     0x000077505521bb9d
  0x000077505521bb85:   cmp    0x118(%r15),%rdi
  0x000077505521bb8c:   ja     0x000077505521c589
  0x000077505521bb92:   mov    %rdi,0x108(%r15)
  0x000077505521bb99:   movq   $0x1,(%rax)
  0x000077505521bba0:   mov    %rdx,%rcx
  0x000077505521bba3:   movabs $0x800000000,%r10
  0x000077505521bbad:   sub    %r10,%rcx
  0x000077505521bbb0:   mov    %ecx,0x8(%rax)
  0x000077505521bbb3:   xor    %rcx,%rcx
  0x000077505521bbb6:   mov    %ecx,0xc(%rax)
  0x000077505521bbb9:   xor    %rcx,%rcx
  0x000077505521bbbc:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@60 (line 1215)
  0x000077505521bbc0:   mov    %rax,%rdx
  0x000077505521bbc3:   movabs $0x77502038f120,%rsi         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bbcd:   addq   $0x1,0x208(%rsi)
  0x000077505521bbd5:   movabs $0x77502038fc48,%rdx         ;   {metadata(method data for {method} {0x00007750200b51e0} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000077505521bbdf:   mov    0xf4(%rdx),%esi
  0x000077505521bbe5:   add    $0x2,%esi
  0x000077505521bbe8:   mov    %esi,0xf4(%rdx)
  0x000077505521bbee:   and    $0x1ffffe,%esi
  0x000077505521bbf4:   cmp    $0x0,%esi
  0x000077505521bbf7:   je     0x000077505521c596
  0x000077505521bbfd:   mov    %rax,%rdx
  0x000077505521bc00:   movabs $0x77502038fc48,%rsi         ;   {metadata(method data for {method} {0x00007750200b51e0} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000077505521bc0a:   addq   $0x1,0x138(%rsi)
  0x000077505521bc12:   mov    $0x10,%edx
  0x000077505521bc17:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::<init>@3 (line 106)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@64 (line 1215)
  0x000077505521bc1a:   mov    %rax,0xc0(%rsp)
  0x000077505521bc22:   nopl   0x0(%rax,%rax,1)
  0x000077505521bc27:   call   0x000077505c788080           ; ImmutableOopMap {[168]=Oop [192]=Oop [160]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::<init>@3 (line 106)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@64 (line 1215)
                                                            ;   {optimized virtual_call}
  0x000077505521bc2c:   mov    0xc0(%rsp),%rax
  0x000077505521bc34:   movabs $0x77502038f120,%rdx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bc3e:   addq   $0x1,0x218(%rdx)
  0x000077505521bc46:   movabs $0x77502038ff88,%rdx         ;   {metadata(method data for {method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505521bc50:   mov    0xf4(%rdx),%esi
  0x000077505521bc56:   add    $0x2,%esi
  0x000077505521bc59:   mov    %esi,0xf4(%rdx)
  0x000077505521bc5f:   and    $0x1ffffe,%esi
  0x000077505521bc65:   cmp    $0x0,%esi
  0x000077505521bc68:   je     0x000077505521c5b7
  0x000077505521bc6e:   mov    0xc0(%rsp),%rax
  0x000077505521bc76:   movabs $0x77502038ff88,%rdx         ;   {metadata(method data for {method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505521bc80:   addq   $0x1,0x138(%rdx)
  0x000077505521bc88:   movabs $0x62acf5ea0,%rdx            ;   {oop("invalid CEN header (bad compression method: "{0x000000062acf5ea0})}
  0x000077505521bc92:   mov    0xc0(%rsp),%rsi              ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@69 (line 1215)
  0x000077505521bc9a:   nopl   0x0(%rax,%rax,1)
  0x000077505521bc9f:   call   0x000077505c788080           ; ImmutableOopMap {[168]=Oop [192]=Oop [160]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@69 (line 1215)
                                                            ;   {optimized virtual_call}
  0x000077505521bca4:   mov    0xc0(%rsp),%rax
  0x000077505521bcac:   movabs $0x77502038f120,%rdx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bcb6:   addq   $0x1,0x250(%rdx)
  0x000077505521bcbe:   movabs $0x775020390380,%rdx         ;   {metadata(method data for {method} {0x00007750200b5c38} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505521bcc8:   mov    0xf4(%rdx),%esi
  0x000077505521bcce:   add    $0x2,%esi
  0x000077505521bcd1:   mov    %esi,0xf4(%rdx)
  0x000077505521bcd7:   and    $0x1ffffe,%esi
  0x000077505521bcdd:   cmp    $0x0,%esi
  0x000077505521bce0:   je     0x000077505521c5d8
  0x000077505521bce6:   mov    0xc0(%rsp),%rax
  0x000077505521bcee:   movabs $0x775020390380,%rdx         ;   {metadata(method data for {method} {0x00007750200b5c38} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505521bcf8:   addq   $0x1,0x138(%rdx)
  0x000077505521bd00:   mov    0xbc(%rsp),%edx
  0x000077505521bd07:   mov    0xc0(%rsp),%rsi              ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 253)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@74 (line 1215)
  0x000077505521bd0f:   call   0x000077505c788080           ; ImmutableOopMap {[168]=Oop [192]=Oop [160]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 253)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@74 (line 1215)
                                                            ;   {optimized virtual_call}
  0x000077505521bd14:   mov    0xc0(%rsp),%rax
  0x000077505521bd1c:   movabs $0x77502038f120,%rdx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bd26:   addq   $0x1,0x288(%rdx)
  0x000077505521bd2e:   movabs $0x77502038ff88,%rdx         ;   {metadata(method data for {method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505521bd38:   mov    0xf4(%rdx),%esi
  0x000077505521bd3e:   add    $0x2,%esi
  0x000077505521bd41:   mov    %esi,0xf4(%rdx)
  0x000077505521bd47:   and    $0x1ffffe,%esi
  0x000077505521bd4d:   cmp    $0x0,%esi
  0x000077505521bd50:   je     0x000077505521c5f9
  0x000077505521bd56:   mov    0xc0(%rsp),%rax
  0x000077505521bd5e:   movabs $0x77502038ff88,%rdx         ;   {metadata(method data for {method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505521bd68:   addq   $0x1,0x138(%rdx)
  0x000077505521bd70:   movabs $0x62acf5ef8,%rdx            ;   {oop(")"{0x000000062acf5ef8})}
  0x000077505521bd7a:   mov    0xc0(%rsp),%rsi              ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@79 (line 1215)
  0x000077505521bd82:   nopl   0x0(%rax,%rax,1)
  0x000077505521bd87:   call   0x000077505c788080           ; ImmutableOopMap {[168]=Oop [192]=Oop [160]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@79 (line 1215)
                                                            ;   {optimized virtual_call}
  0x000077505521bd8c:   mov    0xc0(%rsp),%rax
  0x000077505521bd94:   movabs $0x77502038f120,%rsi         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bd9e:   addq   $0x1,0x2c0(%rsi)
  0x000077505521bda6:   movabs $0x775020390750,%rsi         ;   {metadata(method data for {method} {0x00007750200b6ed0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000077505521bdb0:   mov    0xf4(%rsi),%edx
  0x000077505521bdb6:   add    $0x2,%edx
  0x000077505521bdb9:   mov    %edx,0xf4(%rsi)
  0x000077505521bdbf:   and    $0x1ffffe,%edx
  0x000077505521bdc5:   cmp    $0x0,%edx
  0x000077505521bdc8:   je     0x000077505521c61a
  0x000077505521bdce:   mov    0xc0(%rsp),%rax
  0x000077505521bdd6:   movabs $0x775020390750,%rsi         ;   {metadata(method data for {method} {0x00007750200b6ed0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000077505521bde0:   addq   $0x1,0x138(%rsi)
  0x000077505521bde8:   movabs $0x775020390958,%rsi         ;   {metadata(method data for {method} {0x00007750200b2e20} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000077505521bdf2:   mov    0xf4(%rsi),%edx
  0x000077505521bdf8:   add    $0x2,%edx
  0x000077505521bdfb:   mov    %edx,0xf4(%rsi)
  0x000077505521be01:   and    $0x1ffffe,%edx
  0x000077505521be07:   cmp    $0x0,%edx
  0x000077505521be0a:   je     0x000077505521c63b
  0x000077505521be10:   movabs $0x775020390958,%rsi         ;   {metadata(method data for {method} {0x00007750200b2e20} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000077505521be1a:   incl   0x148(%rsi)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::isLatin1@3 (line 1677)
                                                            ; - java.lang.StringBuilder::toString@1 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521be20:   mov    0xc0(%rsp),%rax
  0x000077505521be28:   movsbl 0x10(%rax),%esi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1677)
                                                            ; - java.lang.StringBuilder::toString@1 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521be2c:   cmp    $0x0,%esi
  0x000077505521be2f:   movabs $0x775020390958,%rsi         ;   {metadata(method data for {method} {0x00007750200b2e20} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000077505521be39:   movabs $0x158,%rdx
  0x000077505521be43:   jne    0x000077505521be53
  0x000077505521be49:   movabs $0x168,%rdx
  0x000077505521be53:   mov    (%rsi,%rdx,1),%rcx
  0x000077505521be57:   lea    0x1(%rcx),%rcx
  0x000077505521be5b:   mov    %rcx,(%rsi,%rdx,1)
  0x000077505521be5f:   jne    0x000077505521be7f           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1677)
                                                            ; - java.lang.StringBuilder::toString@1 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521be65:   movabs $0x775020390958,%rsi         ;   {metadata(method data for {method} {0x00007750200b2e20} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000077505521be6f:   incl   0x178(%rsi)
  0x000077505521be75:   mov    $0x1,%esi
  0x000077505521be7a:   jmp    0x000077505521be84           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::isLatin1@14 (line 1677)
                                                            ; - java.lang.StringBuilder::toString@1 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521be7f:   mov    $0x0,%esi                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::isLatin1@18 (line 1677)
                                                            ; - java.lang.StringBuilder::toString@1 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521be84:   and    $0x1,%esi
  0x000077505521be87:   cmp    $0x0,%esi
  0x000077505521be8a:   movabs $0x775020390750,%rsi         ;   {metadata(method data for {method} {0x00007750200b6ed0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000077505521be94:   movabs $0x170,%rdx
  0x000077505521be9e:   je     0x000077505521beae
  0x000077505521bea4:   movabs $0x180,%rdx
  0x000077505521beae:   mov    (%rsi,%rdx,1),%rcx
  0x000077505521beb2:   lea    0x1(%rcx),%rcx
  0x000077505521beb6:   mov    %rcx,(%rsi,%rdx,1)
  0x000077505521beba:   je     0x000077505521bf01           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@4 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521bec0:   mov    0x14(%rax),%esi
  0x000077505521bec3:   shl    $0x3,%rsi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@8 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521bec7:   mov    0xc(%rax),%ecx               ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@13 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521beca:   movabs $0x775020390750,%rdx         ;   {metadata(method data for {method} {0x00007750200b6ed0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000077505521bed4:   addq   $0x1,0x190(%rdx)
  0x000077505521bedc:   mov    $0x0,%edx                    ;*invokestatic newString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@16 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521bee1:   nopw   0x0(%rax,%rax,1)
  0x000077505521bee7:   call   0x000077505c788680           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*invokestatic newString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@16 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
                                                            ;   {static_call}
  0x000077505521beec:   movabs $0x775020390750,%rsi         ;   {metadata(method data for {method} {0x00007750200b6ed0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000077505521bef6:   incl   0x1a0(%rsi)
  0x000077505521befc:   jmp    0x000077505521bf4e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@19 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521bf01:   mov    0x14(%rax),%esi
  0x000077505521bf04:   shl    $0x3,%rsi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@23 (line 454)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521bf08:   mov    0xc(%rax),%ecx               ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@28 (line 454)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521bf0b:   mov    $0x0,%edx                    ;*invokestatic newString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@31 (line 454)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521bf10:   nopl   0x0(%rax)
  0x000077505521bf17:   call   0x000077505c788680           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*invokestatic newString {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@31 (line 454)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
                                                            ;   {static_call}
  0x000077505521bf1c:   jmp    0x000077505521bf4e           ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@34 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521bf21:   movabs $0x77502038f120,%rax         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bf2b:   incl   0x470(%rax)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@249 (line 1244)
  0x000077505521bf31:   mov    0xb4(%rsp),%eax
  0x000077505521bf38:   add    $0x110,%rsp
  0x000077505521bf3f:   pop    %rbp
  0x000077505521bf40:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521bf47:   ja     0x000077505521c65c
  0x000077505521bf4d:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@261 (line 1245)
  0x000077505521bf4e:   mov    %rax,%rsi                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::toString@19 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
  0x000077505521bf51:   movabs $0x77502038f120,%rdx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bf5b:   addq   $0x1,0x2f8(%rdx)
  0x000077505521bf63:   movabs $0x77502038f7b8,%rdx         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bf6d:   mov    0xf4(%rdx),%eax
  0x000077505521bf73:   add    $0x2,%eax
  0x000077505521bf76:   mov    %eax,0xf4(%rdx)
  0x000077505521bf7c:   and    $0x1ffffe,%eax
  0x000077505521bf82:   cmp    $0x0,%eax
  0x000077505521bf85:   je     0x000077505521c672
  0x000077505521bf8b:   nopl   0x0(%rax,%rax,1)
  0x000077505521bf90:   jmp    0x000077505521c6a2           ;   {no_reloc}
  0x000077505521bf95:   add    %al,(%rax)
  0x000077505521bf97:   add    %al,(%rax)
  0x000077505521bf99:   add    %ch,%cl
  0x000077505521bf9b:   or     $0x48000007,%eax             ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@85 (line 1215)
  0x000077505521bfa0:   mov    %eax,%edx
  0x000077505521bfa2:   movabs $0x77502038f7b8,%rdi         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bfac:   addq   $0x1,0x138(%rdi)
  0x000077505521bfb4:   mov    %rsi,%rdx
  0x000077505521bfb7:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@85 (line 1215)
  0x000077505521bfba:   mov    %rax,0xc8(%rsp)
  0x000077505521bfc2:   nopl   0x0(%rax,%rax,1)
  0x000077505521bfc7:   call   0x000077505c788080           ; ImmutableOopMap {[160]=Oop [168]=Oop [200]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@85 (line 1215)
                                                            ;   {optimized virtual_call}
  0x000077505521bfcc:   mov    0xc8(%rsp),%rax
  0x000077505521bfd4:   jmp    0x000077505521c83b           ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@8 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@85 (line 1215)
  0x000077505521bfd9:   mov    %r8,0xd8(%rsp)
  0x000077505521bfe1:   movabs $0x77502038f120,%rdx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bfeb:   addq   $0x1,0x3b8(%rdx)
  0x000077505521bff3:   movabs $0x77502038f7b8,%rdx         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521bffd:   mov    0xf4(%rdx),%eax
  0x000077505521c003:   add    $0x2,%eax
  0x000077505521c006:   mov    %eax,0xf4(%rdx)
  0x000077505521c00c:   and    $0x1ffffe,%eax
  0x000077505521c012:   cmp    $0x0,%eax
  0x000077505521c015:   je     0x000077505521c6b9
  0x000077505521c01b:   nopl   0x0(%rax,%rax,1)
  0x000077505521c020:   jmp    0x000077505521c6e9           ;   {no_reloc}
  0x000077505521c025:   add    %al,(%rax)
  0x000077505521c027:   add    %al,(%rax)
  0x000077505521c029:   add    %ch,%cl
  0x000077505521c02b:   (bad)
  0x000077505521c02c:   (bad)
  0x000077505521c02d:   add    %al,(%rax)                   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@159 (line 1227)
  0x000077505521c02f:   mov    %rax,%rdx
  0x000077505521c032:   movabs $0x77502038f7b8,%rsi         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c03c:   addq   $0x1,0x138(%rsi)
  0x000077505521c044:   movabs $0x62acf5f78,%rdx            ;   {oop("invalid CEN header (bad extra offset)"{0x000000062acf5f78})}
  0x000077505521c04e:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@159 (line 1227)
  0x000077505521c051:   mov    %rax,0xd0(%rsp)
  0x000077505521c059:   nopw   0x0(%rax,%rax,1)
  0x000077505521c05f:   call   0x000077505c788080           ; ImmutableOopMap {[168]=Oop [160]=Oop [208]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@159 (line 1227)
                                                            ;   {optimized virtual_call}
  0x000077505521c064:   mov    0xd0(%rsp),%rax
  0x000077505521c06c:   jmp    0x000077505521c83b           ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@8 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@159 (line 1227)
  0x000077505521c071:   movabs $0x77502038f120,%rdx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c07b:   addq   $0x1,0x338(%rdx)
  0x000077505521c083:   movabs $0x77502038f7b8,%rdx         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c08d:   mov    0xf4(%rdx),%eax
  0x000077505521c093:   add    $0x2,%eax
  0x000077505521c096:   mov    %eax,0xf4(%rdx)
  0x000077505521c09c:   and    $0x1ffffe,%eax
  0x000077505521c0a2:   cmp    $0x0,%eax
  0x000077505521c0a5:   je     0x000077505521c700
  0x000077505521c0ab:   nopl   0x0(%rax,%rax,1)
  0x000077505521c0b0:   jmp    0x000077505521c730           ;   {no_reloc}
  0x000077505521c0b5:   add    %al,(%rax)
  0x000077505521c0b7:   add    %al,(%rax)
  0x000077505521c0b9:   add    %ch,%cl
  0x000077505521c0bb:   jnp    0x000077505521c0c3
  0x000077505521c0bd:   add    %al,(%rax)                   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@116 (line 1220)
  0x000077505521c0bf:   mov    %rax,%rdx
  0x000077505521c0c2:   movabs $0x77502038f7b8,%rsi         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c0cc:   addq   $0x1,0x138(%rsi)
  0x000077505521c0d4:   movabs $0x62acf5f28,%rdx            ;   {oop("invalid CEN header (bad header size)"{0x000000062acf5f28})}
  0x000077505521c0de:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@116 (line 1220)
  0x000077505521c0e1:   mov    %rax,0xe0(%rsp)
  0x000077505521c0e9:   nopw   0x0(%rax,%rax,1)
  0x000077505521c0ef:   call   0x000077505c788080           ; ImmutableOopMap {[160]=Oop [168]=Oop [224]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@116 (line 1220)
                                                            ;   {optimized virtual_call}
  0x000077505521c0f4:   mov    0xe0(%rsp),%rax
  0x000077505521c0fc:   jmp    0x000077505521c83b           ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@8 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@116 (line 1220)
  0x000077505521c101:   movabs $0x77502038f120,%rdx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c10b:   addq   $0x1,0x1b8(%rdx)
  0x000077505521c113:   movabs $0x77502038f7b8,%rdx         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c11d:   mov    0xf4(%rdx),%eax
  0x000077505521c123:   add    $0x2,%eax
  0x000077505521c126:   mov    %eax,0xf4(%rdx)
  0x000077505521c12c:   and    $0x1ffffe,%eax
  0x000077505521c132:   cmp    $0x0,%eax
  0x000077505521c135:   je     0x000077505521c747
  0x000077505521c13b:   nopl   0x0(%rax,%rax,1)
  0x000077505521c140:   jmp    0x000077505521c777           ;   {no_reloc}
  0x000077505521c145:   add    %al,(%rax)
  0x000077505521c147:   add    %al,(%rax)
  0x000077505521c149:   add    %ch,%cl
  0x000077505521c14b:   xor    (%rsi),%al
  0x000077505521c14d:   add    %al,(%rax)                   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@45 (line 1212)
  0x000077505521c14f:   mov    %rax,%rdx
  0x000077505521c152:   movabs $0x77502038f7b8,%rsi         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c15c:   addq   $0x1,0x138(%rsi)
  0x000077505521c164:   movabs $0x62acf5e50,%rdx            ;   {oop("invalid CEN header (encrypted entry)"{0x000000062acf5e50})}
  0x000077505521c16e:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@45 (line 1212)
  0x000077505521c171:   mov    %rax,0xe8(%rsp)
  0x000077505521c179:   nopw   0x0(%rax,%rax,1)
  0x000077505521c17f:   call   0x000077505c788080           ; ImmutableOopMap {[168]=Oop [160]=Oop [232]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@45 (line 1212)
                                                            ;   {optimized virtual_call}
  0x000077505521c184:   mov    0xe8(%rsp),%rax
  0x000077505521c18c:   jmp    0x000077505521c83b           ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@8 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@45 (line 1212)
  0x000077505521c191:   movabs $0x77502038f120,%rax         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c19b:   addq   $0x1,0x168(%rax)
  0x000077505521c1a3:   movabs $0x77502038f7b8,%rax         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c1ad:   mov    0xf4(%rax),%ebx
  0x000077505521c1b3:   add    $0x2,%ebx
  0x000077505521c1b6:   mov    %ebx,0xf4(%rax)
  0x000077505521c1bc:   and    $0x1ffffe,%ebx
  0x000077505521c1c2:   cmp    $0x0,%ebx
  0x000077505521c1c5:   je     0x000077505521c78e
  0x000077505521c1cb:   nopl   0x0(%rax,%rax,1)
  0x000077505521c1d0:   jmp    0x000077505521c7be           ;   {no_reloc}
  0x000077505521c1d5:   add    %al,(%rax)
  0x000077505521c1d7:   add    %al,(%rax)
  0x000077505521c1d9:   add    %ch,%cl
  0x000077505521c1db:   jmp    0x000077509d21c1e5           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@19 (line 1207)
  0x000077505521c1e0:   mov    %eax,%edx
  0x000077505521c1e2:   movabs $0x77502038f7b8,%r8          ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c1ec:   addq   $0x1,0x138(%r8)
  0x000077505521c1f4:   movabs $0x62acf5e00,%rdx            ;   {oop("invalid CEN header (bad signature)"{0x000000062acf5e00})}
  0x000077505521c1fe:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@19 (line 1207)
  0x000077505521c201:   mov    %rax,0xf0(%rsp)
  0x000077505521c209:   nopw   0x0(%rax,%rax,1)
  0x000077505521c20f:   call   0x000077505c788080           ; ImmutableOopMap {[160]=Oop [240]=Oop [168]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@19 (line 1207)
                                                            ;   {optimized virtual_call}
  0x000077505521c214:   mov    0xf0(%rsp),%rax
  0x000077505521c21c:   jmp    0x000077505521c83b           ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@8 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@19 (line 1207)
  0x000077505521c221:   mov    0x3d8(%r15),%rax
  0x000077505521c228:   xor    %r10,%r10
  0x000077505521c22b:   mov    %r10,0x3d8(%r15)
  0x000077505521c232:   xor    %r10,%r10
  0x000077505521c235:   mov    %r10,0x3e0(%r15)
  0x000077505521c23c:   movabs $0x77502038f120,%rdx         ;   {metadata(method data for {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c246:   addq   $0x1,0x488(%rdx)
  0x000077505521c24e:   movabs $0x77502038f7b8,%rdx         ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c258:   mov    0xf4(%rdx),%eax
  0x000077505521c25e:   add    $0x2,%eax
  0x000077505521c261:   mov    %eax,0xf4(%rdx)
  0x000077505521c267:   and    $0x1ffffe,%eax
  0x000077505521c26d:   cmp    $0x0,%eax
  0x000077505521c270:   je     0x000077505521c7d5
  0x000077505521c276:   xchg   %ax,%ax
  0x000077505521c278:   jmp    0x000077505521c805           ;   {no_reloc}
  0x000077505521c27d:   add    %al,(%rax)
  0x000077505521c27f:   add    %al,(%rax)
  0x000077505521c281:   add    %ch,%cl
  0x000077505521c283:   mov    %al,-0x74b80000(%rip)        # 0x0000774fe069c289
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@256 (line 1243)
  0x000077505521c289:   rorb   -0x42(%rax)                  ;   {metadata(method data for {method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c28c:   mov    $0x502038f7,%eax
  0x000077505521c291:   ja     0x000077505521c293
  0x000077505521c293:   add    %cl,-0x7d(%rax)
  0x000077505521c296:   xchg   %bh,(%rax)
  0x000077505521c298:   add    %eax,(%rax)
  0x000077505521c29a:   add    %al,(%rcx)
  0x000077505521c29c:   movabs $0x62acf5fc8,%rdx            ;   {oop("invalid CEN header (bad entry name)"{0x000000062acf5fc8})}
  0x000077505521c2a6:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@256 (line 1243)
  0x000077505521c2a9:   mov    %rax,0xf8(%rsp)
  0x000077505521c2b1:   nopw   0x0(%rax,%rax,1)
  0x000077505521c2b7:   call   0x000077505c788080           ; ImmutableOopMap {[248]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@5 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@256 (line 1243)
                                                            ;   {optimized virtual_call}
  0x000077505521c2bc:   mov    0xf8(%rsp),%rax
  0x000077505521c2c4:   jmp    0x000077505521c83b
  0x000077505521c2c9:   movabs $0x7750203336c8,%r10         ;   {metadata({method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c2d3:   mov    %r10,0x8(%rsp)
  0x000077505521c2d8:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c2e0:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@-1 (line 1205)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c2e5:   jmp    0x000077505521b32f
  0x000077505521c2ea:   movabs $0x77502038c7e0,%r10         ;   {metadata({method} {0x000077502038c7e0} 'CENSIG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521c2f4:   mov    %r10,0x8(%rsp)
  0x000077505521c2f9:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c301:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::CENSIG@-1 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c306:   jmp    0x000077505521b37a
  0x000077505521c30b:   movabs $0x77502038b608,%r10         ;   {metadata({method} {0x000077502038b608} 'LG' '([BI)J' in 'java/util/zip/ZipUtils')}
  0x000077505521c315:   mov    %r10,0x8(%rsp)
  0x000077505521c31a:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c322:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::LG@-1 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c327:   jmp    0x000077505521b3b6
  0x000077505521c32c:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c336:   mov    %r10,0x8(%rsp)
  0x000077505521c33b:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c343:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c348:   jmp    0x000077505521b3f2
  0x000077505521c34d:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521c352:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521c357:   mov    %rdx,(%rsp)
  0x000077505521c35b:   mov    %rdi,0x8(%rsp)
  0x000077505521c360:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c365:   mov    %rbx,(%rsp)
  0x000077505521c369:   mov    %rdi,0x8(%rsp)
  0x000077505521c36e:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c373:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c37d:   mov    %r10,0x8(%rsp)
  0x000077505521c382:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c38a:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c38f:   jmp    0x000077505521b472
  0x000077505521c394:   mov    %rax,(%rsp)
  0x000077505521c398:   mov    %rdi,0x8(%rsp)
  0x000077505521c39d:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c3a2:   mov    %rax,(%rsp)
  0x000077505521c3a6:   mov    %rdi,0x8(%rsp)
  0x000077505521c3ab:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@9 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c3b0:   movabs $0x77502038cb50,%r10         ;   {metadata({method} {0x000077502038cb50} 'CENHOW' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c3ba:   mov    %r10,0x8(%rsp)
  0x000077505521c3bf:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c3c7:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::CENHOW@-1 (line 267)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@24 (line 1209)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c3cc:   jmp    0x000077505521b53d
  0x000077505521c3d1:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c3db:   mov    %r10,0x8(%rsp)
  0x000077505521c3e0:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c3e8:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENHOW@5 (line 267)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@24 (line 1209)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c3ed:   jmp    0x000077505521b57e
  0x000077505521c3f2:   mov    %r8,(%rsp)
  0x000077505521c3f6:   mov    %rdi,0x8(%rsp)
  0x000077505521c3fb:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENHOW@5 (line 267)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@24 (line 1209)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c400:   mov    %r8,(%rsp)
  0x000077505521c404:   mov    %rdi,0x8(%rsp)
  0x000077505521c409:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENHOW@5 (line 267)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@24 (line 1209)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c40e:   movabs $0x77502038caa0,%r10         ;   {metadata({method} {0x000077502038caa0} 'CENFLG' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c418:   mov    %r10,0x8(%rsp)
  0x000077505521c41d:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c425:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::CENFLG@-1 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@31 (line 1210)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c42a:   jmp    0x000077505521b5fd
  0x000077505521c42f:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c439:   mov    %r10,0x8(%rsp)
  0x000077505521c43e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c446:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@31 (line 1210)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c44b:   jmp    0x000077505521b643
  0x000077505521c450:   mov    %r8,(%rsp)
  0x000077505521c454:   mov    %rdi,0x8(%rsp)
  0x000077505521c459:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@31 (line 1210)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c45e:   movabs $0x77502038cec0,%r10         ;   {metadata({method} {0x000077502038cec0} 'CENNAM' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c468:   mov    %r10,0x8(%rsp)
  0x000077505521c46d:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c475:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::CENNAM@-1 (line 272)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@96 (line 1218)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c47a:   jmp    0x000077505521b76c
  0x000077505521c47f:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c489:   mov    %r10,0x8(%rsp)
  0x000077505521c48e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c496:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENNAM@5 (line 272)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@96 (line 1218)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c49b:   jmp    0x000077505521b7b2
  0x000077505521c4a0:   mov    %r8,(%rsp)
  0x000077505521c4a4:   mov    %rdi,0x8(%rsp)
  0x000077505521c4a9:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENNAM@5 (line 272)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@96 (line 1218)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c4ae:   mov    %r8,(%rsp)
  0x000077505521c4b2:   mov    %rdi,0x8(%rsp)
  0x000077505521c4b7:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENNAM@5 (line 272)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@96 (line 1218)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c4bc:   movabs $0x77502038cf70,%r10         ;   {metadata({method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c4c6:   mov    %r10,0x8(%rsp)
  0x000077505521c4cb:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c4d3:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::CENEXT@-1 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@121 (line 1223)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c4d8:   jmp    0x000077505521b87b
  0x000077505521c4dd:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521c4e7:   mov    %r10,0x8(%rsp)
  0x000077505521c4ec:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c4f4:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@121 (line 1223)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c4f9:   jmp    0x000077505521b8c1
  0x000077505521c4fe:   mov    %r9,(%rsp)
  0x000077505521c502:   mov    %rdi,0x8(%rsp)
  0x000077505521c507:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@121 (line 1223)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c50c:   mov    %r9,(%rsp)
  0x000077505521c510:   mov    %rdi,0x8(%rsp)
  0x000077505521c515:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop [160]=Oop rdi=Oop [168]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@121 (line 1223)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c51a:   call   0x000077505c8295a0           ; ImmutableOopMap {[168]=Oop [160]=Oop rax=Oop }
                                                            ;*invokevirtual checkedHash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521c51f:   call   0x000077505c8292a0           ; ImmutableOopMap {rbx=Oop [160]=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@200 (line 1235)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000077505521c524:   call   0x000077505c8295a0           ; ImmutableOopMap {rbx=Oop [160]=Oop rdi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@209 (line 1236)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521c529:   call   0x000077505c8295a0           ; ImmutableOopMap {rbx=Oop [160]=Oop rdi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@209 (line 1236)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521c52e:   mov    %rdx,(%rsp)
  0x000077505521c532:   mov    %rdi,0x8(%rsp)
  0x000077505521c537:   call   0x000077505c828ca0           ; ImmutableOopMap {rbx=Oop [160]=Oop rdi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@209 (line 1236)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c53c:   call   0x000077505c8295a0           ; ImmutableOopMap {rbx=Oop [160]=Oop rdx=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@230 (line 1239)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521c541:   call   0x000077505c8295a0           ; ImmutableOopMap {rbx=Oop [160]=Oop rdx=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@230 (line 1239)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521c546:   mov    %rcx,(%rsp)
  0x000077505521c54a:   mov    %rdx,0x8(%rsp)
  0x000077505521c54f:   call   0x000077505c828ca0           ; ImmutableOopMap {rbx=Oop [160]=Oop rdx=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@230 (line 1239)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c554:   mov    %rdi,(%rsp)
  0x000077505521c558:   mov    %rdx,0x8(%rsp)
  0x000077505521c55d:   call   0x000077505c828ca0           ; ImmutableOopMap {rbx=Oop [160]=Oop rdx=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@241 (line 1240)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c562:   mov    %rsi,(%rsp)
  0x000077505521c566:   mov    %rdx,0x8(%rsp)
  0x000077505521c56b:   call   0x000077505c828ca0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@248 (line 1241)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521c570:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505521c57a:   mov    $0xa050f00,%eax
  0x000077505521c57f:   call   0x000077505c82d600           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::checkAndAddEntry@60 (line 1215)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505521c584:   jmp    0x000077505521bb70
  0x000077505521c589:   mov    %rdx,%rdx
  0x000077505521c58c:   call   0x000077505c829e80           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@60 (line 1215)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505521c591:   jmp    0x000077505521bbc0
  0x000077505521c596:   movabs $0x7750200b51e0,%r10         ;   {metadata({method} {0x00007750200b51e0} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000077505521c5a0:   mov    %r10,0x8(%rsp)
  0x000077505521c5a5:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c5ad:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop [160]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::<init>@-1 (line 106)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@64 (line 1215)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c5b2:   jmp    0x000077505521bbfd
  0x000077505521c5b7:   movabs $0x7750200b5648,%r10         ;   {metadata({method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505521c5c1:   mov    %r10,0x8(%rsp)
  0x000077505521c5c6:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c5ce:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop [192]=Oop [160]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 179)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@69 (line 1215)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c5d3:   jmp    0x000077505521bc6e
  0x000077505521c5d8:   movabs $0x7750200b5c38,%r10         ;   {metadata({method} {0x00007750200b5c38} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505521c5e2:   mov    %r10,0x8(%rsp)
  0x000077505521c5e7:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c5ef:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop [192]=Oop [160]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 253)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@74 (line 1215)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c5f4:   jmp    0x000077505521bce6
  0x000077505521c5f9:   movabs $0x7750200b5648,%r10         ;   {metadata({method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505521c603:   mov    %r10,0x8(%rsp)
  0x000077505521c608:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c610:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop [192]=Oop [160]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 179)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@79 (line 1215)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c615:   jmp    0x000077505521bd56
  0x000077505521c61a:   movabs $0x7750200b6ed0,%r10         ;   {metadata({method} {0x00007750200b6ed0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000077505521c624:   mov    %r10,0x8(%rsp)
  0x000077505521c629:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c631:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop [192]=Oop [160]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::toString@-1 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c636:   jmp    0x000077505521bdce
  0x000077505521c63b:   movabs $0x7750200b2e20,%r10         ;   {metadata({method} {0x00007750200b2e20} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000077505521c645:   mov    %r10,0x8(%rsp)
  0x000077505521c64a:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c652:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop [192]=Oop [160]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.AbstractStringBuilder::isLatin1@-1 (line 1677)
                                                            ; - java.lang.StringBuilder::toString@1 (line 453)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@82 (line 1215)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c657:   jmp    0x000077505521be10
  0x000077505521c65c:   movabs $0x77505521bf40,%r10         ;   {internal_word}
  0x000077505521c666:   mov    %r10,0x360(%r15)
  0x000077505521c66d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521c672:   movabs $0x775020334ef0,%r10         ;   {metadata({method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c67c:   mov    %r10,0x8(%rsp)
  0x000077505521c681:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c689:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [160]=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::zerror@-1 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@85 (line 1215)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c68e:   jmp    0x000077505521bf8b
  0x000077505521c693:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505521c69d:   mov    $0xa050f00,%eax
  0x000077505521c6a2:   call   0x000077505c82d600           ; ImmutableOopMap {rsi=Oop [160]=Oop [168]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@85 (line 1215)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505521c6a7:   jmp    0x000077505521bf90
  0x000077505521c6ac:   mov    %rdx,%rdx
  0x000077505521c6af:   call   0x000077505c829b80           ; ImmutableOopMap {rsi=Oop [160]=Oop [168]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@85 (line 1215)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x000077505521c6b4:   jmp    0x000077505521bf9f
  0x000077505521c6b9:   movabs $0x775020334ef0,%r10         ;   {metadata({method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c6c3:   mov    %r10,0x8(%rsp)
  0x000077505521c6c8:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c6d0:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::zerror@-1 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@159 (line 1227)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c6d5:   jmp    0x000077505521c01b
  0x000077505521c6da:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505521c6e4:   mov    $0xa050f00,%eax
  0x000077505521c6e9:   call   0x000077505c82d600           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@159 (line 1227)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505521c6ee:   jmp    0x000077505521c020
  0x000077505521c6f3:   mov    %rdx,%rdx
  0x000077505521c6f6:   call   0x000077505c829b80           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@159 (line 1227)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x000077505521c6fb:   jmp    0x000077505521c02f
  0x000077505521c700:   movabs $0x775020334ef0,%r10         ;   {metadata({method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c70a:   mov    %r10,0x8(%rsp)
  0x000077505521c70f:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c717:   call   0x000077505c82e680           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::zerror@-1 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@116 (line 1220)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c71c:   jmp    0x000077505521c0ab
  0x000077505521c721:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505521c72b:   mov    $0xa050f00,%eax
  0x000077505521c730:   call   0x000077505c82d600           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@116 (line 1220)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505521c735:   jmp    0x000077505521c0b0
  0x000077505521c73a:   mov    %rdx,%rdx
  0x000077505521c73d:   call   0x000077505c829b80           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@116 (line 1220)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x000077505521c742:   jmp    0x000077505521c0bf
  0x000077505521c747:   movabs $0x775020334ef0,%r10         ;   {metadata({method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c751:   mov    %r10,0x8(%rsp)
  0x000077505521c756:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c75e:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::zerror@-1 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@45 (line 1212)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c763:   jmp    0x000077505521c13b
  0x000077505521c768:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505521c772:   mov    $0xa050f00,%eax
  0x000077505521c777:   call   0x000077505c82d600           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@45 (line 1212)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505521c77c:   jmp    0x000077505521c140
  0x000077505521c781:   mov    %rdx,%rdx
  0x000077505521c784:   call   0x000077505c829b80           ; ImmutableOopMap {[168]=Oop [160]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@45 (line 1212)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x000077505521c789:   jmp    0x000077505521c14f
  0x000077505521c78e:   movabs $0x775020334ef0,%r10         ;   {metadata({method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c798:   mov    %r10,0x8(%rsp)
  0x000077505521c79d:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c7a5:   call   0x000077505c82e680           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::zerror@-1 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@19 (line 1207)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c7aa:   jmp    0x000077505521c1cb
  0x000077505521c7af:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505521c7b9:   mov    $0xa050f00,%eax
  0x000077505521c7be:   call   0x000077505c82d600           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@19 (line 1207)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505521c7c3:   jmp    0x000077505521c1d0
  0x000077505521c7c8:   mov    %rdx,%rdx
  0x000077505521c7cb:   call   0x000077505c829b80           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@19 (line 1207)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x000077505521c7d0:   jmp    0x000077505521c1df
  0x000077505521c7d5:   movabs $0x775020334ef0,%r10         ;   {metadata({method} {0x0000775020334ef0} 'zerror' '(Ljava/lang/String;)V' in 'java/util/zip/ZipFile$Source')}
  0x000077505521c7df:   mov    %r10,0x8(%rsp)
  0x000077505521c7e4:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521c7ec:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::zerror@-1 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@256 (line 1243)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521c7f1:   jmp    0x000077505521c276
  0x000077505521c7f6:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505521c800:   mov    $0xa050f00,%eax
  0x000077505521c805:   call   0x000077505c82d600           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@256 (line 1243)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505521c80a:   jmp    0x000077505521c278
  0x000077505521c80f:   mov    %rdx,%rdx
  0x000077505521c812:   call   0x000077505c829b80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zerror@0 (line 1762)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@256 (line 1243)
                                                            ;   {runtime_call new_instance Runtime1 stub}
  0x000077505521c817:   jmp    0x000077505521c287
  0x000077505521c81c:   nop
  0x000077505521c81d:   nop
  0x000077505521c81e:   mov    0x3d8(%r15),%rax
  0x000077505521c825:   movq   $0x0,0x3d8(%r15)
  0x000077505521c830:   movq   $0x0,0x3e0(%r15)
  0x000077505521c83b:   add    $0x110,%rsp
  0x000077505521c842:   pop    %rbp
  0x000077505521c843:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521c848:   hlt
  0x000077505521c849:   hlt
  0x000077505521c84a:   hlt
  0x000077505521c84b:   hlt
  0x000077505521c84c:   hlt
  0x000077505521c84d:   hlt
  0x000077505521c84e:   hlt
  0x000077505521c84f:   hlt
  0x000077505521c850:   hlt
  0x000077505521c851:   hlt
  0x000077505521c852:   hlt
  0x000077505521c853:   hlt
  0x000077505521c854:   hlt
  0x000077505521c855:   hlt
  0x000077505521c856:   hlt
  0x000077505521c857:   hlt
  0x000077505521c858:   hlt
  0x000077505521c859:   hlt
  0x000077505521c85a:   hlt
  0x000077505521c85b:   hlt
  0x000077505521c85c:   hlt
  0x000077505521c85d:   hlt
  0x000077505521c85e:   hlt
  0x000077505521c85f:   hlt
[Stub Code]
  0x000077505521c860:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505521c865:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c86f:   jmp    0x000077505521c86f           ;   {runtime_call}
  0x000077505521c874:   nop
  0x000077505521c875:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c87f:   jmp    0x000077505521c87f           ;   {runtime_call}
  0x000077505521c884:   nop
  0x000077505521c885:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c88f:   jmp    0x000077505521c88f           ;   {runtime_call}
  0x000077505521c894:   nop
  0x000077505521c895:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c89f:   jmp    0x000077505521c89f           ;   {runtime_call}
  0x000077505521c8a4:   nop
  0x000077505521c8a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c8af:   jmp    0x000077505521c8af           ;   {runtime_call}
  0x000077505521c8b4:   nop
  0x000077505521c8b5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c8bf:   jmp    0x000077505521c8bf           ;   {runtime_call}
  0x000077505521c8c4:   nop
  0x000077505521c8c5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c8cf:   jmp    0x000077505521c8cf           ;   {runtime_call}
  0x000077505521c8d4:   nop
  0x000077505521c8d5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c8df:   jmp    0x000077505521c8df           ;   {runtime_call}
  0x000077505521c8e4:   nop
  0x000077505521c8e5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c8ef:   jmp    0x000077505521c8ef           ;   {runtime_call}
  0x000077505521c8f4:   nop
  0x000077505521c8f5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c8ff:   jmp    0x000077505521c8ff           ;   {runtime_call}
  0x000077505521c904:   nop
  0x000077505521c905:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c90f:   jmp    0x000077505521c90f           ;   {runtime_call}
  0x000077505521c914:   nop
  0x000077505521c915:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c91f:   jmp    0x000077505521c91f           ;   {runtime_call}
  0x000077505521c924:   nop
  0x000077505521c925:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c92f:   jmp    0x000077505521c92f           ;   {runtime_call}
  0x000077505521c934:   nop
  0x000077505521c935:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c93f:   jmp    0x000077505521c93f           ;   {runtime_call}
  0x000077505521c944:   nop
  0x000077505521c945:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521c94f:   jmp    0x000077505521c94f           ;   {runtime_call}
[Exception Handler]
  0x000077505521c954:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505521c959:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521c963:   and    $0xfffffffffffffff0,%rsp
  0x000077505521c967:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521c96c:   hlt
[Deopt Handler Code]
  0x000077505521c96d:   movabs $0x77505521c96d,%r10         ;   {section_word}
  0x000077505521c977:   push   %r10
  0x000077505521c979:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521c97e:   hlt
  0x000077505521c97f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     250   76       3       java.util.zip.ZipFile$Source::isMetaName (141 bytes)
 total in heap  [0x000077505521dd90,0x000077505521e7d0] = 2624
 relocation     [0x000077505521def0,0x000077505521df48] = 88
 main code      [0x000077505521df60,0x000077505521e420] = 1216
 stub code      [0x000077505521e420,0x000077505521e450] = 48
 metadata       [0x000077505521e450,0x000077505521e458] = 8
 scopes data    [0x000077505521e458,0x000077505521e540] = 232
 scopes pcs     [0x000077505521e540,0x000077505521e7b0] = 624
 dependencies   [0x000077505521e7b0,0x000077505521e7b8] = 8
 nul chk table  [0x000077505521e7b8,0x000077505521e7d0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000077505521df60:   mov    %eax,-0x14000(%rsp)
  0x000077505521df67:   push   %rbp
  0x000077505521df68:   sub    $0x30,%rsp
  0x000077505521df6c:   movabs $0x775020391408,%rax         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521df76:   mov    0xf4(%rax),%edi
  0x000077505521df7c:   add    $0x2,%edi
  0x000077505521df7f:   mov    %edi,0xf4(%rax)
  0x000077505521df85:   and    $0x7fe,%edi
  0x000077505521df8b:   cmp    $0x0,%edi
  0x000077505521df8e:   je     0x000077505521e327           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@0 (line 1831)
  0x000077505521df94:   cmp    $0x9,%ecx
  0x000077505521df97:   movabs $0x775020391408,%rax         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521dfa1:   movabs $0x138,%rdi
  0x000077505521dfab:   jle    0x000077505521dfbb
  0x000077505521dfb1:   movabs $0x148,%rdi
  0x000077505521dfbb:   mov    (%rax,%rdi,1),%rbx
  0x000077505521dfbf:   lea    0x1(%rbx),%rbx
  0x000077505521dfc3:   mov    %rbx,(%rax,%rdi,1)
  0x000077505521dfc7:   jle    0x000077505521e2f2           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@3 (line 1831)
  0x000077505521dfcd:   add    %edx,%ecx
  0x000077505521dfcf:   dec    %ecx
  0x000077505521dfd1:   cmp    0xc(%rsi),%ecx               ; implicit exception: dispatches to 0x000077505521e348
  0x000077505521dfd4:   jae    0x000077505521e352
  0x000077505521dfda:   movslq %ecx,%rcx
  0x000077505521dfdd:   movsbl 0x10(%rsi,%rcx,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@12 (line 1831)
  0x000077505521dfe2:   cmp    $0x2f,%eax
  0x000077505521dfe5:   movabs $0x775020391408,%rax         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521dfef:   movabs $0x158,%rdi
  0x000077505521dff9:   je     0x000077505521e009
  0x000077505521dfff:   movabs $0x168,%rdi
  0x000077505521e009:   mov    (%rax,%rdi,1),%rbx
  0x000077505521e00d:   lea    0x1(%rbx),%rbx
  0x000077505521e011:   mov    %rbx,(%rax,%rdi,1)
  0x000077505521e015:   je     0x000077505521e2f2           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@15 (line 1831)
  0x000077505521e01b:   mov    %rdx,%rax
  0x000077505521e01e:   inc    %eax
  0x000077505521e020:   cmp    0xc(%rsi),%edx
  0x000077505521e023:   jae    0x000077505521e360
  0x000077505521e029:   movslq %edx,%rdx
  0x000077505521e02c:   movsbl 0x10(%rsi,%rdx,1),%edi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@23 (line 1831)
  0x000077505521e031:   or     $0x20,%edi
  0x000077505521e034:   cmp    $0x6d,%edi
  0x000077505521e037:   movabs $0x775020391408,%rdi         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e041:   movabs $0x178,%rbx
  0x000077505521e04b:   jne    0x000077505521e05b
  0x000077505521e051:   movabs $0x188,%rbx
  0x000077505521e05b:   mov    (%rdi,%rbx,1),%rdx
  0x000077505521e05f:   lea    0x1(%rdx),%rdx
  0x000077505521e063:   mov    %rdx,(%rdi,%rbx,1)
  0x000077505521e067:   jne    0x000077505521e2f2           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@29 (line 1831)
  0x000077505521e06d:   mov    %rax,%rdi
  0x000077505521e070:   inc    %edi
  0x000077505521e072:   cmp    0xc(%rsi),%eax
  0x000077505521e075:   jae    0x000077505521e36e
  0x000077505521e07b:   movslq %eax,%rax
  0x000077505521e07e:   movsbl 0x10(%rsi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@37 (line 1831)
  0x000077505521e083:   or     $0x20,%eax
  0x000077505521e086:   cmp    $0x65,%eax
  0x000077505521e089:   movabs $0x775020391408,%rax         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e093:   movabs $0x198,%rbx
  0x000077505521e09d:   jne    0x000077505521e0ad
  0x000077505521e0a3:   movabs $0x1a8,%rbx
  0x000077505521e0ad:   mov    (%rax,%rbx,1),%rdx
  0x000077505521e0b1:   lea    0x1(%rdx),%rdx
  0x000077505521e0b5:   mov    %rdx,(%rax,%rbx,1)
  0x000077505521e0b9:   jne    0x000077505521e2f2           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@43 (line 1831)
  0x000077505521e0bf:   mov    %rdi,%rax
  0x000077505521e0c2:   inc    %eax
  0x000077505521e0c4:   cmp    0xc(%rsi),%edi
  0x000077505521e0c7:   jae    0x000077505521e37c
  0x000077505521e0cd:   movslq %edi,%rdi
  0x000077505521e0d0:   movsbl 0x10(%rsi,%rdi,1),%edi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@51 (line 1831)
  0x000077505521e0d5:   or     $0x20,%edi
  0x000077505521e0d8:   cmp    $0x74,%edi
  0x000077505521e0db:   movabs $0x775020391408,%rdi         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e0e5:   movabs $0x1b8,%rbx
  0x000077505521e0ef:   jne    0x000077505521e0ff
  0x000077505521e0f5:   movabs $0x1c8,%rbx
  0x000077505521e0ff:   mov    (%rdi,%rbx,1),%rdx
  0x000077505521e103:   lea    0x1(%rdx),%rdx
  0x000077505521e107:   mov    %rdx,(%rdi,%rbx,1)
  0x000077505521e10b:   jne    0x000077505521e2f2           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@57 (line 1831)
  0x000077505521e111:   mov    %rax,%rdi
  0x000077505521e114:   inc    %edi
  0x000077505521e116:   cmp    0xc(%rsi),%eax
  0x000077505521e119:   jae    0x000077505521e38a
  0x000077505521e11f:   movslq %eax,%rax
  0x000077505521e122:   movsbl 0x10(%rsi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@65 (line 1831)
  0x000077505521e127:   or     $0x20,%eax
  0x000077505521e12a:   cmp    $0x61,%eax
  0x000077505521e12d:   movabs $0x775020391408,%rax         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e137:   movabs $0x1d8,%rbx
  0x000077505521e141:   jne    0x000077505521e151
  0x000077505521e147:   movabs $0x1e8,%rbx
  0x000077505521e151:   mov    (%rax,%rbx,1),%rdx
  0x000077505521e155:   lea    0x1(%rdx),%rdx
  0x000077505521e159:   mov    %rdx,(%rax,%rbx,1)
  0x000077505521e15d:   jne    0x000077505521e2f2           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@71 (line 1831)
  0x000077505521e163:   mov    %rdi,%rax
  0x000077505521e166:   inc    %eax
  0x000077505521e168:   cmp    0xc(%rsi),%edi
  0x000077505521e16b:   jae    0x000077505521e398
  0x000077505521e171:   movslq %edi,%rdi
  0x000077505521e174:   movsbl 0x10(%rsi,%rdi,1),%edi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@79 (line 1831)
  0x000077505521e179:   cmp    $0x2d,%edi
  0x000077505521e17c:   movabs $0x775020391408,%rdi         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e186:   movabs $0x1f8,%rbx
  0x000077505521e190:   jne    0x000077505521e1a0
  0x000077505521e196:   movabs $0x208,%rbx
  0x000077505521e1a0:   mov    (%rdi,%rbx,1),%rdx
  0x000077505521e1a4:   lea    0x1(%rdx),%rdx
  0x000077505521e1a8:   mov    %rdx,(%rdi,%rbx,1)
  0x000077505521e1ac:   jne    0x000077505521e2f2           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@82 (line 1831)
  0x000077505521e1b2:   mov    %rax,%rdi
  0x000077505521e1b5:   inc    %edi
  0x000077505521e1b7:   cmp    0xc(%rsi),%eax
  0x000077505521e1ba:   jae    0x000077505521e3a6
  0x000077505521e1c0:   movslq %eax,%rax
  0x000077505521e1c3:   movsbl 0x10(%rsi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@90 (line 1831)
  0x000077505521e1c8:   or     $0x20,%eax
  0x000077505521e1cb:   cmp    $0x69,%eax
  0x000077505521e1ce:   movabs $0x775020391408,%rax         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e1d8:   movabs $0x218,%rbx
  0x000077505521e1e2:   jne    0x000077505521e1f2
  0x000077505521e1e8:   movabs $0x228,%rbx
  0x000077505521e1f2:   mov    (%rax,%rbx,1),%rdx
  0x000077505521e1f6:   lea    0x1(%rdx),%rdx
  0x000077505521e1fa:   mov    %rdx,(%rax,%rbx,1)
  0x000077505521e1fe:   jne    0x000077505521e2f2           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@96 (line 1831)
  0x000077505521e204:   mov    %rdi,%rax
  0x000077505521e207:   inc    %eax
  0x000077505521e209:   cmp    0xc(%rsi),%edi
  0x000077505521e20c:   jae    0x000077505521e3b4
  0x000077505521e212:   movslq %edi,%rdi
  0x000077505521e215:   movsbl 0x10(%rsi,%rdi,1),%edi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@104 (line 1831)
  0x000077505521e21a:   or     $0x20,%edi
  0x000077505521e21d:   cmp    $0x6e,%edi
  0x000077505521e220:   movabs $0x775020391408,%rdi         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e22a:   movabs $0x238,%rbx
  0x000077505521e234:   jne    0x000077505521e244
  0x000077505521e23a:   movabs $0x248,%rbx
  0x000077505521e244:   mov    (%rdi,%rbx,1),%rdx
  0x000077505521e248:   lea    0x1(%rdx),%rdx
  0x000077505521e24c:   mov    %rdx,(%rdi,%rbx,1)
  0x000077505521e250:   jne    0x000077505521e2f2           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@110 (line 1831)
  0x000077505521e256:   mov    %rax,%rdi
  0x000077505521e259:   inc    %edi
  0x000077505521e25b:   cmp    0xc(%rsi),%eax
  0x000077505521e25e:   jae    0x000077505521e3c2
  0x000077505521e264:   movslq %eax,%rax
  0x000077505521e267:   movsbl 0x10(%rsi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@118 (line 1831)
  0x000077505521e26c:   or     $0x20,%eax
  0x000077505521e26f:   cmp    $0x66,%eax
  0x000077505521e272:   movabs $0x775020391408,%rax         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e27c:   movabs $0x258,%rbx
  0x000077505521e286:   jne    0x000077505521e296
  0x000077505521e28c:   movabs $0x268,%rbx
  0x000077505521e296:   mov    (%rax,%rbx,1),%rdx
  0x000077505521e29a:   lea    0x1(%rdx),%rdx
  0x000077505521e29e:   mov    %rdx,(%rax,%rbx,1)
  0x000077505521e2a2:   jne    0x000077505521e2f2           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@124 (line 1831)
  0x000077505521e2a8:   cmp    0xc(%rsi),%edi
  0x000077505521e2ab:   jae    0x000077505521e3d0
  0x000077505521e2b1:   movslq %edi,%rdi
  0x000077505521e2b4:   movsbl 0x10(%rsi,%rdi,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@129 (line 1831)
  0x000077505521e2b9:   cmp    $0x2f,%eax
  0x000077505521e2bc:   movabs $0x775020391408,%rax         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e2c6:   movabs $0x288,%rsi
  0x000077505521e2d0:   je     0x000077505521e2e0
  0x000077505521e2d6:   movabs $0x278,%rsi
  0x000077505521e2e0:   mov    (%rax,%rsi,1),%rdi
  0x000077505521e2e4:   lea    0x1(%rdi),%rdi
  0x000077505521e2e8:   mov    %rdi,(%rax,%rsi,1)
  0x000077505521e2ec:   je     0x000077505521e2fc           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@132 (line 1831)
  0x000077505521e2f2:   mov    $0x0,%eax
  0x000077505521e2f7:   jmp    0x000077505521e311           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@140 (line 1831)
  0x000077505521e2fc:   movabs $0x775020391408,%rax         ;   {metadata(method data for {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e306:   incl   0x298(%rax)
  0x000077505521e30c:   mov    $0x1,%eax                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@136 (line 1831)
  0x000077505521e311:   and    $0x1,%eax
  0x000077505521e314:   add    $0x30,%rsp
  0x000077505521e318:   pop    %rbp
  0x000077505521e319:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521e320:   ja     0x000077505521e3de
  0x000077505521e326:   ret
  0x000077505521e327:   movabs $0x775020335308,%r10         ;   {metadata({method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source')}
  0x000077505521e331:   mov    %r10,0x8(%rsp)
  0x000077505521e336:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521e33e:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@-1 (line 1831)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521e343:   jmp    0x000077505521df94
  0x000077505521e348:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@12 (line 1831)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521e34d:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@12 (line 1831)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521e352:   mov    %rcx,(%rsp)
  0x000077505521e356:   mov    %rsi,0x8(%rsp)
  0x000077505521e35b:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@12 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e360:   mov    %rdx,(%rsp)
  0x000077505521e364:   mov    %rsi,0x8(%rsp)
  0x000077505521e369:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@23 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e36e:   mov    %rax,(%rsp)
  0x000077505521e372:   mov    %rsi,0x8(%rsp)
  0x000077505521e377:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@37 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e37c:   mov    %rdi,(%rsp)
  0x000077505521e380:   mov    %rsi,0x8(%rsp)
  0x000077505521e385:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@51 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e38a:   mov    %rax,(%rsp)
  0x000077505521e38e:   mov    %rsi,0x8(%rsp)
  0x000077505521e393:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@65 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e398:   mov    %rdi,(%rsp)
  0x000077505521e39c:   mov    %rsi,0x8(%rsp)
  0x000077505521e3a1:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@79 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e3a6:   mov    %rax,(%rsp)
  0x000077505521e3aa:   mov    %rsi,0x8(%rsp)
  0x000077505521e3af:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@90 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e3b4:   mov    %rdi,(%rsp)
  0x000077505521e3b8:   mov    %rsi,0x8(%rsp)
  0x000077505521e3bd:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@104 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e3c2:   mov    %rax,(%rsp)
  0x000077505521e3c6:   mov    %rsi,0x8(%rsp)
  0x000077505521e3cb:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@118 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e3d0:   mov    %rdi,(%rsp)
  0x000077505521e3d4:   mov    %rsi,0x8(%rsp)
  0x000077505521e3d9:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@129 (line 1831)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521e3de:   movabs $0x77505521e319,%r10         ;   {internal_word}
  0x000077505521e3e8:   mov    %r10,0x360(%r15)
  0x000077505521e3ef:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521e3f4:   nop
  0x000077505521e3f5:   nop
  0x000077505521e3f6:   mov    0x3d8(%r15),%rax
  0x000077505521e3fd:   movq   $0x0,0x3d8(%r15)
  0x000077505521e408:   movq   $0x0,0x3e0(%r15)
  0x000077505521e413:   add    $0x30,%rsp
  0x000077505521e417:   pop    %rbp
  0x000077505521e418:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521e41d:   hlt
  0x000077505521e41e:   hlt
  0x000077505521e41f:   hlt
[Exception Handler]
  0x000077505521e420:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505521e425:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521e42f:   and    $0xfffffffffffffff0,%rsp
  0x000077505521e433:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521e438:   hlt
[Deopt Handler Code]
  0x000077505521e439:   movabs $0x77505521e439,%r10         ;   {section_word}
  0x000077505521e443:   push   %r10
  0x000077505521e445:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521e44a:   hlt
  0x000077505521e44b:   hlt
  0x000077505521e44c:   hlt
  0x000077505521e44d:   hlt
  0x000077505521e44e:   hlt
  0x000077505521e44f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     255   77       3       java.util.zip.ZipFile$Source::nextEntryPos (22 bytes)
 total in heap  [0x000077505521e810,0x000077505521ef28] = 1816
 relocation     [0x000077505521e970,0x000077505521e9c8] = 88
 main code      [0x000077505521e9e0,0x000077505521ece0] = 768
 stub code      [0x000077505521ece0,0x000077505521ed10] = 48
 metadata       [0x000077505521ed10,0x000077505521ed30] = 32
 scopes data    [0x000077505521ed30,0x000077505521ede8] = 184
 scopes pcs     [0x000077505521ede8,0x000077505521ef08] = 288
 dependencies   [0x000077505521ef08,0x000077505521ef10] = 8
 nul chk table  [0x000077505521ef10,0x000077505521ef28] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020334e48} 'nextEntryPos' '(III)I' in 'java/util/zip/ZipFile$Source'
  # this:     rsi:rsi   = 'java/util/zip/ZipFile$Source'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x000077505521e9e0:   mov    0x8(%rsi),%r10d
  0x000077505521e9e4:   movabs $0x800000000,%r11
  0x000077505521e9ee:   add    %r11,%r10
  0x000077505521e9f1:   cmp    %rax,%r10
  0x000077505521e9f4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521e9fa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505521ea00:   mov    %eax,-0x14000(%rsp)
  0x000077505521ea07:   push   %rbp
  0x000077505521ea08:   sub    $0x70,%rsp
  0x000077505521ea0c:   movabs $0x775020391708,%rax         ;   {metadata(method data for {method} {0x0000775020334e48} 'nextEntryPos' '(III)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521ea16:   mov    0xf4(%rax),%edi
  0x000077505521ea1c:   add    $0x2,%edi
  0x000077505521ea1f:   mov    %edi,0xf4(%rax)
  0x000077505521ea25:   and    $0x7fe,%edi
  0x000077505521ea2b:   cmp    $0x0,%edi
  0x000077505521ea2e:   je     0x000077505521ebb1           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@0 (line 1758)
  0x000077505521ea34:   mov    0x38(%rsi),%eax
  0x000077505521ea37:   shl    $0x3,%rax                    ;*getfield cen {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@4 (line 1758)
  0x000077505521ea3b:   movabs $0x775020391708,%rdi         ;   {metadata(method data for {method} {0x0000775020334e48} 'nextEntryPos' '(III)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521ea45:   addq   $0x1,0x138(%rdi)
  0x000077505521ea4d:   add    %r8d,%ecx
  0x000077505521ea50:   movabs $0x7750203918b8,%rdi         ;   {metadata(method data for {method} {0x000077502038d020} 'CENCOM' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ea5a:   mov    0xf4(%rdi),%ebx
  0x000077505521ea60:   add    $0x2,%ebx
  0x000077505521ea63:   mov    %ebx,0xf4(%rdi)
  0x000077505521ea69:   and    $0x1ffffe,%ebx
  0x000077505521ea6f:   cmp    $0x0,%ebx
  0x000077505521ea72:   je     0x000077505521ebd2
  0x000077505521ea78:   movabs $0x7750203918b8,%rdi         ;   {metadata(method data for {method} {0x000077502038d020} 'CENCOM' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ea82:   addq   $0x1,0x138(%rdi)
  0x000077505521ea8a:   mov    %rdx,%rdi
  0x000077505521ea8d:   add    $0x20,%edi
  0x000077505521ea90:   movabs $0x77502038e188,%rbx         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ea9a:   mov    0xf4(%rbx),%r8d
  0x000077505521eaa1:   add    $0x2,%r8d
  0x000077505521eaa5:   mov    %r8d,0xf4(%rbx)
  0x000077505521eaac:   and    $0x1ffffe,%r8d
  0x000077505521eab3:   cmp    $0x0,%r8d
  0x000077505521eab7:   je     0x000077505521ebf3
  0x000077505521eabd:   cmp    0xc(%rax),%edi               ; implicit exception: dispatches to 0x000077505521ec14
  0x000077505521eac0:   jae    0x000077505521ec1e
  0x000077505521eac6:   movslq %edi,%rbx
  0x000077505521eac9:   movsbl 0x10(%rax,%rbx,1),%ebx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
  0x000077505521eace:   inc    %edi
  0x000077505521ead0:   cmp    0xc(%rax),%edi
  0x000077505521ead3:   jae    0x000077505521ec2c
  0x000077505521ead9:   movslq %edi,%rdi
  0x000077505521eadc:   movsbl 0x10(%rax,%rdi,1),%esi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
  0x000077505521eae1:   movabs $0x775020391708,%rdi         ;   {metadata(method data for {method} {0x0000775020334e48} 'nextEntryPos' '(III)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521eaeb:   addq   $0x1,0x148(%rdi)
  0x000077505521eaf3:   and    $0xff,%ebx
  0x000077505521eaf9:   and    $0xff,%esi
  0x000077505521eaff:   shl    $0x8,%esi
  0x000077505521eb02:   or     %rsi,%rbx
  0x000077505521eb05:   add    %ebx,%ecx
  0x000077505521eb07:   movabs $0x77502038edf0,%rsi         ;   {metadata(method data for {method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521eb11:   mov    0xf4(%rsi),%edi
  0x000077505521eb17:   add    $0x2,%edi
  0x000077505521eb1a:   mov    %edi,0xf4(%rsi)
  0x000077505521eb20:   and    $0x1ffffe,%edi
  0x000077505521eb26:   cmp    $0x0,%edi
  0x000077505521eb29:   je     0x000077505521ec3a
  0x000077505521eb2f:   movabs $0x77502038edf0,%rsi         ;   {metadata(method data for {method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521eb39:   addq   $0x1,0x138(%rsi)
  0x000077505521eb41:   add    $0x1e,%edx
  0x000077505521eb44:   movabs $0x77502038e188,%rsi         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521eb4e:   mov    0xf4(%rsi),%edi
  0x000077505521eb54:   add    $0x2,%edi
  0x000077505521eb57:   mov    %edi,0xf4(%rsi)
  0x000077505521eb5d:   and    $0x1ffffe,%edi
  0x000077505521eb63:   cmp    $0x0,%edi
  0x000077505521eb66:   je     0x000077505521ec5b
  0x000077505521eb6c:   cmp    0xc(%rax),%edx
  0x000077505521eb6f:   jae    0x000077505521ec7c
  0x000077505521eb75:   movslq %edx,%rsi
  0x000077505521eb78:   movsbl 0x10(%rax,%rsi,1),%esi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@17 (line 1758)
  0x000077505521eb7d:   inc    %edx
  0x000077505521eb7f:   movslq %edx,%rdx
  0x000077505521eb82:   movsbl 0x10(%rax,%rdx,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@17 (line 1758)
  0x000077505521eb87:   and    $0xff,%esi
  0x000077505521eb8d:   and    $0xff,%eax
  0x000077505521eb93:   shl    $0x8,%eax
  0x000077505521eb96:   or     %rax,%rsi
  0x000077505521eb99:   add    %esi,%ecx
  0x000077505521eb9b:   mov    %rcx,%rax
  0x000077505521eb9e:   add    $0x70,%rsp
  0x000077505521eba2:   pop    %rbp
  0x000077505521eba3:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521ebaa:   ja     0x000077505521ec8a
  0x000077505521ebb0:   ret
  0x000077505521ebb1:   movabs $0x775020334e48,%r10         ;   {metadata({method} {0x0000775020334e48} 'nextEntryPos' '(III)I' in 'java/util/zip/ZipFile$Source')}
  0x000077505521ebbb:   mov    %r10,0x8(%rsp)
  0x000077505521ebc0:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521ebc8:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@-1 (line 1758)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521ebcd:   jmp    0x000077505521ea34
  0x000077505521ebd2:   movabs $0x77502038d020,%r10         ;   {metadata({method} {0x000077502038d020} 'CENCOM' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ebdc:   mov    %r10,0x8(%rsp)
  0x000077505521ebe1:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521ebe9:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::CENCOM@-1 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521ebee:   jmp    0x000077505521ea78
  0x000077505521ebf3:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ebfd:   mov    %r10,0x8(%rsp)
  0x000077505521ec02:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521ec0a:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521ec0f:   jmp    0x000077505521eabd
  0x000077505521ec14:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521ec19:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521ec1e:   mov    %rdi,(%rsp)
  0x000077505521ec22:   mov    %rax,0x8(%rsp)
  0x000077505521ec27:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521ec2c:   mov    %rdi,(%rsp)
  0x000077505521ec30:   mov    %rax,0x8(%rsp)
  0x000077505521ec35:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521ec3a:   movabs $0x77502038cf70,%r10         ;   {metadata({method} {0x000077502038cf70} 'CENEXT' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ec44:   mov    %r10,0x8(%rsp)
  0x000077505521ec49:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521ec51:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::CENEXT@-1 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@17 (line 1758)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521ec56:   jmp    0x000077505521eb2f
  0x000077505521ec5b:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521ec65:   mov    %r10,0x8(%rsp)
  0x000077505521ec6a:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521ec72:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@17 (line 1758)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521ec77:   jmp    0x000077505521eb6c
  0x000077505521ec7c:   mov    %rdx,(%rsp)
  0x000077505521ec80:   mov    %rax,0x8(%rsp)
  0x000077505521ec85:   call   0x000077505c828ca0           ; ImmutableOopMap {rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@17 (line 1758)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521ec8a:   movabs $0x77505521eba3,%r10         ;   {internal_word}
  0x000077505521ec94:   mov    %r10,0x360(%r15)
  0x000077505521ec9b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521eca0:   nop
  0x000077505521eca1:   nop
  0x000077505521eca2:   mov    0x3d8(%r15),%rax
  0x000077505521eca9:   movq   $0x0,0x3d8(%r15)
  0x000077505521ecb4:   movq   $0x0,0x3e0(%r15)
  0x000077505521ecbf:   add    $0x70,%rsp
  0x000077505521ecc3:   pop    %rbp
  0x000077505521ecc4:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521ecc9:   hlt
  0x000077505521ecca:   hlt
  0x000077505521eccb:   hlt
  0x000077505521eccc:   hlt
  0x000077505521eccd:   hlt
  0x000077505521ecce:   hlt
  0x000077505521eccf:   hlt
  0x000077505521ecd0:   hlt
  0x000077505521ecd1:   hlt
  0x000077505521ecd2:   hlt
  0x000077505521ecd3:   hlt
  0x000077505521ecd4:   hlt
  0x000077505521ecd5:   hlt
  0x000077505521ecd6:   hlt
  0x000077505521ecd7:   hlt
  0x000077505521ecd8:   hlt
  0x000077505521ecd9:   hlt
  0x000077505521ecda:   hlt
  0x000077505521ecdb:   hlt
  0x000077505521ecdc:   hlt
  0x000077505521ecdd:   hlt
  0x000077505521ecde:   hlt
  0x000077505521ecdf:   hlt
[Exception Handler]
  0x000077505521ece0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505521ece5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521ecef:   and    $0xfffffffffffffff0,%rsp
  0x000077505521ecf3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521ecf8:   hlt
[Deopt Handler Code]
  0x000077505521ecf9:   movabs $0x77505521ecf9,%r10         ;   {section_word}
  0x000077505521ed03:   push   %r10
  0x000077505521ed05:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521ed0a:   hlt
  0x000077505521ed0b:   hlt
  0x000077505521ed0c:   hlt
  0x000077505521ed0d:   hlt
  0x000077505521ed0e:   hlt
  0x000077505521ed0f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     259   78       3       java.util.zip.ZipFile$Source::zipCoderForPos (39 bytes)
 total in heap  [0x000077505521ef90,0x000077505521f7b8] = 2088
 relocation     [0x000077505521f0f0,0x000077505521f160] = 112
 main code      [0x000077505521f160,0x000077505521f520] = 960
 stub code      [0x000077505521f520,0x000077505521f560] = 64
 metadata       [0x000077505521f560,0x000077505521f578] = 24
 scopes data    [0x000077505521f578,0x000077505521f620] = 168
 scopes pcs     [0x000077505521f620,0x000077505521f790] = 368
 dependencies   [0x000077505521f790,0x000077505521f798] = 8
 nul chk table  [0x000077505521f798,0x000077505521f7b8] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750203351c8} 'zipCoderForPos' '(I)Ljava/util/zip/ZipCoder;' in 'java/util/zip/ZipFile$Source'
  # this:     rsi:rsi   = 'java/util/zip/ZipFile$Source'
  # parm0:    rdx       = int
  #           [sp+0x90]  (sp of caller)
  0x000077505521f160:   mov    0x8(%rsi),%r10d
  0x000077505521f164:   movabs $0x800000000,%r11
  0x000077505521f16e:   add    %r11,%r10
  0x000077505521f171:   cmp    %rax,%r10
  0x000077505521f174:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521f17a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505521f180:   mov    %eax,-0x14000(%rsp)
  0x000077505521f187:   push   %rbp
  0x000077505521f188:   sub    $0x80,%rsp
  0x000077505521f18f:   movabs $0x775020391200,%rdi         ;   {metadata(method data for {method} {0x00007750203351c8} 'zipCoderForPos' '(I)Ljava/util/zip/ZipCoder;' in 'java/util/zip/ZipFile$Source')}
  0x000077505521f199:   mov    0xf4(%rdi),%ebx
  0x000077505521f19f:   add    $0x2,%ebx
  0x000077505521f1a2:   mov    %ebx,0xf4(%rdi)
  0x000077505521f1a8:   and    $0x7fe,%ebx
  0x000077505521f1ae:   cmp    $0x0,%ebx
  0x000077505521f1b1:   je     0x000077505521f410           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@0 (line 1815)
  0x000077505521f1b7:   mov    %edx,0x68(%rsp)
  0x000077505521f1bb:   mov    0x30(%rsi),%edi
  0x000077505521f1be:   shl    $0x3,%rdi                    ;*getfield zc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@1 (line 1815)
  0x000077505521f1c2:   cmp    (%rdi),%rax                  ; implicit exception: dispatches to 0x000077505521f431
  0x000077505521f1c5:   mov    %rdi,%rbx
  0x000077505521f1c8:   movabs $0x775020391200,%rax         ;   {metadata(method data for {method} {0x00007750203351c8} 'zipCoderForPos' '(I)Ljava/util/zip/ZipCoder;' in 'java/util/zip/ZipFile$Source')}
  0x000077505521f1d2:   mov    0x8(%rbx),%ebx
  0x000077505521f1d5:   movabs $0x800000000,%r10
  0x000077505521f1df:   add    %r10,%rbx
  0x000077505521f1e2:   cmp    0x148(%rax),%rbx
  0x000077505521f1e9:   jne    0x000077505521f1f8
  0x000077505521f1eb:   addq   $0x1,0x150(%rax)
  0x000077505521f1f3:   jmp    0x000077505521f25e
  0x000077505521f1f8:   cmp    0x158(%rax),%rbx
  0x000077505521f1ff:   jne    0x000077505521f20e
  0x000077505521f201:   addq   $0x1,0x160(%rax)
  0x000077505521f209:   jmp    0x000077505521f25e
  0x000077505521f20e:   cmpq   $0x0,0x148(%rax)
  0x000077505521f219:   jne    0x000077505521f232
  0x000077505521f21b:   mov    %rbx,0x148(%rax)
  0x000077505521f222:   movq   $0x1,0x150(%rax)
  0x000077505521f22d:   jmp    0x000077505521f25e
  0x000077505521f232:   cmpq   $0x0,0x158(%rax)
  0x000077505521f23d:   jne    0x000077505521f256
  0x000077505521f23f:   mov    %rbx,0x158(%rax)
  0x000077505521f246:   movq   $0x1,0x160(%rax)
  0x000077505521f251:   jmp    0x000077505521f25e
  0x000077505521f256:   addq   $0x1,0x138(%rax)
  0x000077505521f25e:   mov    %rsi,0x60(%rsp)
  0x000077505521f263:   mov    %rdi,%rsi                    ;*invokevirtual isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@4 (line 1815)
  0x000077505521f266:   nopl   0x0(%rax)
  0x000077505521f26d:   movabs $0xffffffffffffffff,%rax
  0x000077505521f277:   call   0x000077505c788380           ; ImmutableOopMap {[96]=Oop }
                                                            ;*invokevirtual isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@4 (line 1815)
                                                            ;   {virtual_call}
  0x000077505521f27c:   cmp    $0x0,%eax
  0x000077505521f27f:   movabs $0x775020391200,%rax         ;   {metadata(method data for {method} {0x00007750203351c8} 'zipCoderForPos' '(I)Ljava/util/zip/ZipCoder;' in 'java/util/zip/ZipFile$Source')}
  0x000077505521f289:   movabs $0x180,%rsi
  0x000077505521f293:   jne    0x000077505521f2a3
  0x000077505521f299:   movabs $0x170,%rsi
  0x000077505521f2a3:   mov    (%rax,%rsi,1),%rdi
  0x000077505521f2a7:   lea    0x1(%rdi),%rdi
  0x000077505521f2ab:   mov    %rdi,(%rax,%rsi,1)
  0x000077505521f2af:   jne    0x000077505521f3ee           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@7 (line 1815)
  0x000077505521f2b5:   mov    0x68(%rsp),%edx
  0x000077505521f2b9:   mov    0x60(%rsp),%rsi
  0x000077505521f2be:   mov    0x38(%rsi),%eax
  0x000077505521f2c1:   shl    $0x3,%rax                    ;*getfield cen {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@16 (line 1818)
  0x000077505521f2c5:   movabs $0x775020391200,%rdi         ;   {metadata(method data for {method} {0x00007750203351c8} 'zipCoderForPos' '(I)Ljava/util/zip/ZipCoder;' in 'java/util/zip/ZipFile$Source')}
  0x000077505521f2cf:   addq   $0x1,0x190(%rdi)
  0x000077505521f2d7:   movabs $0x77502038fab8,%rdi         ;   {metadata(method data for {method} {0x000077502038caa0} 'CENFLG' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521f2e1:   mov    0xf4(%rdi),%ebx
  0x000077505521f2e7:   add    $0x2,%ebx
  0x000077505521f2ea:   mov    %ebx,0xf4(%rdi)
  0x000077505521f2f0:   and    $0x1ffffe,%ebx
  0x000077505521f2f6:   cmp    $0x0,%ebx
  0x000077505521f2f9:   je     0x000077505521f436
  0x000077505521f2ff:   movabs $0x77502038fab8,%rdi         ;   {metadata(method data for {method} {0x000077502038caa0} 'CENFLG' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521f309:   addq   $0x1,0x138(%rdi)
  0x000077505521f311:   add    $0x8,%edx
  0x000077505521f314:   movabs $0x77502038e188,%rdi         ;   {metadata(method data for {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521f31e:   mov    0xf4(%rdi),%ebx
  0x000077505521f324:   add    $0x2,%ebx
  0x000077505521f327:   mov    %ebx,0xf4(%rdi)
  0x000077505521f32d:   and    $0x1ffffe,%ebx
  0x000077505521f333:   cmp    $0x0,%ebx
  0x000077505521f336:   je     0x000077505521f457
  0x000077505521f33c:   cmp    0xc(%rax),%edx               ; implicit exception: dispatches to 0x000077505521f478
  0x000077505521f33f:   jae    0x000077505521f482
  0x000077505521f345:   movslq %edx,%rdi
  0x000077505521f348:   movsbl 0x10(%rax,%rdi,1),%edi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@20 (line 1818)
  0x000077505521f34d:   inc    %edx
  0x000077505521f34f:   cmp    0xc(%rax),%edx
  0x000077505521f352:   jae    0x000077505521f490
  0x000077505521f358:   movslq %edx,%rdx
  0x000077505521f35b:   movsbl 0x10(%rax,%rdx,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@20 (line 1818)
  0x000077505521f360:   and    $0xff,%edi
  0x000077505521f366:   and    $0xff,%eax
  0x000077505521f36c:   shl    $0x8,%eax
  0x000077505521f36f:   or     %rax,%rdi
  0x000077505521f372:   and    $0x800,%edi
  0x000077505521f378:   cmp    $0x0,%edi
  0x000077505521f37b:   movabs $0x775020391200,%rax         ;   {metadata(method data for {method} {0x00007750203351c8} 'zipCoderForPos' '(I)Ljava/util/zip/ZipCoder;' in 'java/util/zip/ZipFile$Source')}
  0x000077505521f385:   movabs $0x1a0,%rdi
  0x000077505521f38f:   je     0x000077505521f39f
  0x000077505521f395:   movabs $0x1b0,%rdi
  0x000077505521f39f:   mov    (%rax,%rdi,1),%rbx
  0x000077505521f3a3:   lea    0x1(%rbx),%rbx
  0x000077505521f3a7:   mov    %rbx,(%rax,%rdi,1)
  0x000077505521f3ab:   je     0x000077505521f3d1           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@27 (line 1818)
  0x000077505521f3b1:   movabs $0x62ad75e30,%rax            ;   {oop(a 'java/util/zip/ZipCoder$UTF8ZipCoder'{0x000000062ad75e30})}
  0x000077505521f3bb:   add    $0x80,%rsp
  0x000077505521f3c2:   pop    %rbp
  0x000077505521f3c3:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521f3ca:   ja     0x000077505521f49e
  0x000077505521f3d0:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@33 (line 1819)
  0x000077505521f3d1:   mov    0x30(%rsi),%eax
  0x000077505521f3d4:   shl    $0x3,%rax                    ;*getfield zc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@35 (line 1821)
  0x000077505521f3d8:   add    $0x80,%rsp
  0x000077505521f3df:   pop    %rbp
  0x000077505521f3e0:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521f3e7:   ja     0x000077505521f4b4
  0x000077505521f3ed:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@38 (line 1821)
  0x000077505521f3ee:   mov    0x60(%rsp),%rsi
  0x000077505521f3f3:   mov    0x30(%rsi),%eax
  0x000077505521f3f6:   shl    $0x3,%rax                    ;*getfield zc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@11 (line 1816)
  0x000077505521f3fa:   add    $0x80,%rsp
  0x000077505521f401:   pop    %rbp
  0x000077505521f402:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521f409:   ja     0x000077505521f4ca
  0x000077505521f40f:   ret
  0x000077505521f410:   movabs $0x7750203351c8,%r10         ;   {metadata({method} {0x00007750203351c8} 'zipCoderForPos' '(I)Ljava/util/zip/ZipCoder;' in 'java/util/zip/ZipFile$Source')}
  0x000077505521f41a:   mov    %r10,0x8(%rsp)
  0x000077505521f41f:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521f427:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@-1 (line 1815)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521f42c:   jmp    0x000077505521f1b7
  0x000077505521f431:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rdi=Oop }
                                                            ;*invokevirtual isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@4 (line 1815)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521f436:   movabs $0x77502038caa0,%r10         ;   {metadata({method} {0x000077502038caa0} 'CENFLG' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521f440:   mov    %r10,0x8(%rsp)
  0x000077505521f445:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521f44d:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::CENFLG@-1 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@20 (line 1818)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521f452:   jmp    0x000077505521f2ff
  0x000077505521f457:   movabs $0x77502038b548,%r10         ;   {metadata({method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x000077505521f461:   mov    %r10,0x8(%rsp)
  0x000077505521f466:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521f46e:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@20 (line 1818)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521f473:   jmp    0x000077505521f33c
  0x000077505521f478:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@20 (line 1818)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521f47d:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@20 (line 1818)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521f482:   mov    %rdx,(%rsp)
  0x000077505521f486:   mov    %rax,0x8(%rsp)
  0x000077505521f48b:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@20 (line 1818)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521f490:   mov    %rdx,(%rsp)
  0x000077505521f494:   mov    %rax,0x8(%rsp)
  0x000077505521f499:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENFLG@5 (line 266)
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@20 (line 1818)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521f49e:   movabs $0x77505521f3c3,%r10         ;   {internal_word}
  0x000077505521f4a8:   mov    %r10,0x360(%r15)
  0x000077505521f4af:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521f4b4:   movabs $0x77505521f3e0,%r10         ;   {internal_word}
  0x000077505521f4be:   mov    %r10,0x360(%r15)
  0x000077505521f4c5:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521f4ca:   movabs $0x77505521f402,%r10         ;   {internal_word}
  0x000077505521f4d4:   mov    %r10,0x360(%r15)
  0x000077505521f4db:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521f4e0:   nop
  0x000077505521f4e1:   nop
  0x000077505521f4e2:   mov    0x3d8(%r15),%rax
  0x000077505521f4e9:   movq   $0x0,0x3d8(%r15)
  0x000077505521f4f4:   movq   $0x0,0x3e0(%r15)
  0x000077505521f4ff:   add    $0x80,%rsp
  0x000077505521f506:   pop    %rbp
  0x000077505521f507:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521f50c:   hlt
  0x000077505521f50d:   hlt
  0x000077505521f50e:   hlt
  0x000077505521f50f:   hlt
  0x000077505521f510:   hlt
  0x000077505521f511:   hlt
  0x000077505521f512:   hlt
  0x000077505521f513:   hlt
  0x000077505521f514:   hlt
  0x000077505521f515:   hlt
  0x000077505521f516:   hlt
  0x000077505521f517:   hlt
  0x000077505521f518:   hlt
  0x000077505521f519:   hlt
  0x000077505521f51a:   hlt
  0x000077505521f51b:   hlt
  0x000077505521f51c:   hlt
  0x000077505521f51d:   hlt
  0x000077505521f51e:   hlt
  0x000077505521f51f:   hlt
[Stub Code]
  0x000077505521f520:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505521f525:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521f52f:   jmp    0x000077505521f52f           ;   {runtime_call}
[Exception Handler]
  0x000077505521f534:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505521f539:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521f543:   and    $0xfffffffffffffff0,%rsp
  0x000077505521f547:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521f54c:   hlt
[Deopt Handler Code]
  0x000077505521f54d:   movabs $0x77505521f54d,%r10         ;   {section_word}
  0x000077505521f557:   push   %r10
  0x000077505521f559:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521f55e:   hlt
  0x000077505521f55f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     267   79       4       java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash (91 bytes)
 total in heap  [0x000077505ccccd90,0x000077505cccd5f8] = 2152
 relocation     [0x000077505ccccef0,0x000077505ccccf10] = 32
 main code      [0x000077505ccccf20,0x000077505cccd1c0] = 672
 stub code      [0x000077505cccd1c0,0x000077505cccd1d8] = 24
 metadata       [0x000077505cccd1d8,0x000077505cccd1e0] = 8
 scopes data    [0x000077505cccd1e0,0x000077505cccd2e8] = 264
 scopes pcs     [0x000077505cccd2e8,0x000077505cccd5d8] = 752
 dependencies   [0x000077505cccd5d8,0x000077505cccd5e0] = 8
 nul chk table  [0x000077505cccd5e0,0x000077505cccd5f8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder'
  # this:     rsi:rsi   = 'java/util/zip/ZipCoder$UTF8ZipCoder'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000077505ccccf20:   mov    0x8(%rsi),%r10d
  0x000077505ccccf24:   movabs $0x800000000,%r11
  0x000077505ccccf2e:   add    %r11,%r10
  0x000077505ccccf31:   cmp    %r10,%rax
  0x000077505ccccf34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccccf3a:   xchg   %ax,%ax
  0x000077505ccccf3c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccccf40:   mov    %eax,-0x14000(%rsp)
  0x000077505ccccf47:   push   %rbp
  0x000077505ccccf48:   sub    $0x30,%rsp                   ;*synchronization entry
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@-1 (line 209)
  0x000077505ccccf4c:   test   %r8d,%r8d
  0x000077505ccccf4f:   je     0x000077505cccd15f           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@1 (line 209)
  0x000077505ccccf55:   mov    %ecx,%r14d
  0x000077505ccccf58:   add    %r8d,%r14d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@8 (line 213)
  0x000077505ccccf5b:   xor    %r9d,%r9d
  0x000077505ccccf5e:   cmp    %r14d,%ecx
  0x000077505ccccf61:   jge    0x000077505cccd0a5           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505ccccf67:   mov    0xc(%rdx),%r10d              ; implicit exception: dispatches to 0x000077505cccd138
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccccf6b:   cmp    %r10d,%ecx
  0x000077505ccccf6e:   jae    0x000077505cccd138
  0x000077505ccccf74:   movslq %r14d,%r11
  0x000077505ccccf77:   movslq %r10d,%r10
  0x000077505ccccf7a:   dec    %r11
  0x000077505ccccf7d:   cmp    %r10,%r11
  0x000077505ccccf80:   jae    0x000077505cccd138
  0x000077505ccccf86:   mov    %ecx,%r11d
  0x000077505ccccf89:   inc    %r11d
  0x000077505ccccf8c:   xor    %ebx,%ebx                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@20 (line 216)
  0x000077505ccccf8e:   movsbl 0x10(%rdx,%rcx,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccccf93:   test   %eax,%eax
  0x000077505ccccf95:   jl     0x000077505cccd154           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505ccccf9b:   mov    %ebx,%r10d
  0x000077505ccccf9e:   shl    $0x5,%r10d
  0x000077505ccccfa2:   sub    %ebx,%r10d
  0x000077505ccccfa5:   add    %eax,%r10d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505ccccfa8:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505ccccfaa:   cmp    %r11d,%ecx
  0x000077505ccccfad:   jge    0x000077505ccccfb4           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505ccccfaf:   mov    %r10d,%ebx
  0x000077505ccccfb2:   jmp    0x000077505ccccf8e
  0x000077505ccccfb4:   mov    %r14d,%r11d
  0x000077505ccccfb7:   add    $0xfffffffd,%r11d
  0x000077505ccccfbb:   mov    $0x80000000,%edi
  0x000077505ccccfc0:   cmp    %r11d,%r14d
  0x000077505ccccfc3:   cmovl  %edi,%r11d
  0x000077505ccccfc7:   cmp    %r11d,%ecx
  0x000077505ccccfca:   jge    0x000077505cccd076
  0x000077505ccccfd0:   mov    $0xfa0,%ebp
  0x000077505ccccfd5:   mov    %r11d,%edi
  0x000077505ccccfd8:   sub    %ecx,%edi
  0x000077505ccccfda:   cmp    %ecx,%r11d
  0x000077505ccccfdd:   cmovl  %r9d,%edi
  0x000077505ccccfe1:   cmp    $0xfa0,%edi
  0x000077505ccccfe7:   cmova  %ebp,%edi
  0x000077505ccccfea:   add    %ecx,%edi
  0x000077505ccccfec:   nopl   0x0(%rax)                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@20 (line 216)
  0x000077505ccccff0:   movsbl 0x10(%rdx,%rcx,1),%r13d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccccff6:   test   %r13d,%r13d
  0x000077505ccccff9:   jl     0x000077505cccd0e1           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505ccccfff:   movslq %ecx,%rsi
  0x000077505cccd002:   movsbl 0x11(%rdx,%rsi,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd007:   mov    %r10d,%ebx
  0x000077505cccd00a:   shl    $0x5,%ebx
  0x000077505cccd00d:   sub    %r10d,%ebx
  0x000077505cccd010:   add    %r13d,%ebx                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd013:   test   %eax,%eax
  0x000077505cccd015:   jl     0x000077505cccd0eb           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd01b:   movsbl 0x12(%rdx,%rsi,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd021:   mov    %ebx,%r13d
  0x000077505cccd024:   shl    $0x5,%r13d
  0x000077505cccd028:   sub    %ebx,%r13d
  0x000077505cccd02b:   add    %eax,%r13d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd02e:   test   %r10d,%r10d
  0x000077505cccd031:   jl     0x000077505cccd0f1           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd037:   movsbl 0x13(%rdx,%rsi,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd03c:   mov    %r13d,%ebx
  0x000077505cccd03f:   shl    $0x5,%ebx
  0x000077505cccd042:   sub    %r13d,%ebx
  0x000077505cccd045:   add    %r10d,%ebx                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd048:   test   %eax,%eax
  0x000077505cccd04a:   jl     0x000077505cccd0fe           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd050:   mov    %ebx,%r10d
  0x000077505cccd053:   shl    $0x5,%r10d
  0x000077505cccd057:   sub    %ebx,%r10d
  0x000077505cccd05a:   add    %eax,%r10d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd05d:   add    $0x4,%ecx                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505cccd060:   cmp    %edi,%ecx
  0x000077505cccd062:   jl     0x000077505ccccff0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505cccd064:   mov    0x350(%r15),%rbx             ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
  0x000077505cccd06b:   test   %eax,(%rbx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
                                                            ;   {poll}
  0x000077505cccd06d:   cmp    %r11d,%ecx
  0x000077505cccd070:   jl     0x000077505ccccfd5
  0x000077505cccd076:   cmp    %r14d,%ecx
  0x000077505cccd079:   jge    0x000077505cccd0a2
  0x000077505cccd07b:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@20 (line 216)
  0x000077505cccd07c:   movsbl 0x10(%rdx,%rcx,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd081:   test   %eax,%eax
  0x000077505cccd083:   jl     0x000077505cccd158           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd089:   mov    %r10d,%r9d
  0x000077505cccd08c:   shl    $0x5,%r9d
  0x000077505cccd090:   sub    %r10d,%r9d
  0x000077505cccd093:   add    %eax,%r9d                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd096:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505cccd098:   cmp    %r14d,%ecx
  0x000077505cccd09b:   jge    0x000077505cccd0a5
  0x000077505cccd09d:   mov    %r9d,%r10d
  0x000077505cccd0a0:   jmp    0x000077505cccd07c
  0x000077505cccd0a2:   mov    %r10d,%r9d                   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505cccd0a5:   mov    %r14d,%ebp
  0x000077505cccd0a8:   dec    %ebp                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@71 (line 231)
  0x000077505cccd0aa:   mov    0xc(%rdx),%r11d              ; implicit exception: dispatches to 0x000077505cccd184
  0x000077505cccd0ae:   cmp    %r11d,%ebp
  0x000077505cccd0b1:   jae    0x000077505cccd124
  0x000077505cccd0b3:   movsbl 0xf(%rdx,%r14,1),%ebp        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
  0x000077505cccd0b9:   cmp    $0x2f,%ebp
  0x000077505cccd0bc:   je     0x000077505cccd174           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@75 (line 231)
  0x000077505cccd0c2:   mov    %r9d,%eax
  0x000077505cccd0c5:   shl    $0x5,%eax
  0x000077505cccd0c8:   sub    %r9d,%eax
  0x000077505cccd0cb:   add    $0x2f,%eax                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@85 (line 232)
  0x000077505cccd0ce:   add    $0x30,%rsp
  0x000077505cccd0d2:   pop    %rbp
  0x000077505cccd0d3:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505cccd0da:   ja     0x000077505cccd190
  0x000077505cccd0e0:   ret
  0x000077505cccd0e1:   mov    %r13d,%eax
  0x000077505cccd0e4:   mov    %r10d,%ebx
  0x000077505cccd0e7:   mov    %ecx,%ebp
  0x000077505cccd0e9:   jmp    0x000077505cccd103
  0x000077505cccd0eb:   mov    %ecx,%ebp
  0x000077505cccd0ed:   inc    %ebp
  0x000077505cccd0ef:   jmp    0x000077505cccd103
  0x000077505cccd0f1:   mov    %ecx,%ebp
  0x000077505cccd0f3:   add    $0x2,%ebp
  0x000077505cccd0f6:   mov    %r10d,%eax
  0x000077505cccd0f9:   mov    %r13d,%ebx
  0x000077505cccd0fc:   jmp    0x000077505cccd103
  0x000077505cccd0fe:   mov    %ecx,%ebp
  0x000077505cccd100:   add    $0x3,%ebp                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505cccd103:   mov    $0xffffff45,%esi
  0x000077505cccd108:   mov    %rdx,(%rsp)
  0x000077505cccd10c:   mov    %r8d,0x8(%rsp)
  0x000077505cccd111:   mov    %r14d,0xc(%rsp)
  0x000077505cccd116:   mov    %ebx,0x10(%rsp)
  0x000077505cccd11a:   mov    %eax,0x18(%rsp)
  0x000077505cccd11e:   nop
  0x000077505cccd11f:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccd124:   mov    $0xffffffe4,%esi
  0x000077505cccd129:   mov    %r9d,(%rsp)
  0x000077505cccd12d:   mov    %rdx,0x8(%rsp)
  0x000077505cccd132:   nop
  0x000077505cccd133:   call   0x000077505c78d600           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccd138:   mov    $0xffffff76,%esi
  0x000077505cccd13d:   mov    %rdx,%rbp
  0x000077505cccd140:   mov    %r8d,0x4(%rsp)
  0x000077505cccd145:   mov    %ecx,0xc(%rsp)
  0x000077505cccd149:   mov    %r14d,0x10(%rsp)
  0x000077505cccd14e:   nop
  0x000077505cccd14f:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccd154:   mov    %ecx,%ebp
  0x000077505cccd156:   jmp    0x000077505cccd103
  0x000077505cccd158:   mov    %r10d,%ebx
  0x000077505cccd15b:   mov    %ecx,%ebp
  0x000077505cccd15d:   jmp    0x000077505cccd103
  0x000077505cccd15f:   mov    $0xffffff45,%esi
  0x000077505cccd164:   mov    %rdx,%rbp
  0x000077505cccd167:   mov    %ecx,(%rsp)
  0x000077505cccd16a:   mov    %r8d,0x8(%rsp)
  0x000077505cccd16f:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@1 (line 209)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccd174:   mov    $0xffffff45,%esi
  0x000077505cccd179:   mov    %r9d,(%rsp)
  0x000077505cccd17d:   xchg   %ax,%ax
  0x000077505cccd17f:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@75 (line 231)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccd184:   mov    $0xfffffff6,%esi
  0x000077505cccd189:   xchg   %ax,%ax
  0x000077505cccd18b:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccd190:   movabs $0x77505cccd0d3,%r10         ;   {internal_word}
  0x000077505cccd19a:   mov    %r10,0x360(%r15)
  0x000077505cccd1a1:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505cccd1a6:   hlt
  0x000077505cccd1a7:   hlt
  0x000077505cccd1a8:   hlt
  0x000077505cccd1a9:   hlt
  0x000077505cccd1aa:   hlt
  0x000077505cccd1ab:   hlt
  0x000077505cccd1ac:   hlt
  0x000077505cccd1ad:   hlt
  0x000077505cccd1ae:   hlt
  0x000077505cccd1af:   hlt
  0x000077505cccd1b0:   hlt
  0x000077505cccd1b1:   hlt
  0x000077505cccd1b2:   hlt
  0x000077505cccd1b3:   hlt
  0x000077505cccd1b4:   hlt
  0x000077505cccd1b5:   hlt
  0x000077505cccd1b6:   hlt
  0x000077505cccd1b7:   hlt
  0x000077505cccd1b8:   hlt
  0x000077505cccd1b9:   hlt
  0x000077505cccd1ba:   hlt
  0x000077505cccd1bb:   hlt
  0x000077505cccd1bc:   hlt
  0x000077505cccd1bd:   hlt
  0x000077505cccd1be:   hlt
  0x000077505cccd1bf:   hlt
[Exception Handler]
  0x000077505cccd1c0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505cccd1c5:   call   0x000077505cccd1ca
  0x000077505cccd1ca:   subq   $0x5,(%rsp)
  0x000077505cccd1cf:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccd1d4:   hlt
  0x000077505cccd1d5:   hlt
  0x000077505cccd1d6:   hlt
  0x000077505cccd1d7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     271   80       3       java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash (91 bytes)
 total in heap  [0x000077505521f810,0x00007750552200f8] = 2280
 relocation     [0x000077505521f970,0x000077505521f9f8] = 136
 main code      [0x000077505521fa00,0x000077505521fdc0] = 960
 stub code      [0x000077505521fdc0,0x000077505521fe10] = 80
 metadata       [0x000077505521fe10,0x000077505521fe28] = 24
 scopes data    [0x000077505521fe28,0x000077505521fef8] = 208
 scopes pcs     [0x000077505521fef8,0x00007750552200c8] = 464
 dependencies   [0x00007750552200c8,0x00007750552200d0] = 8
 nul chk table  [0x00007750552200d0,0x00007750552200f8] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder'
  # this:     rsi:rsi   = 'java/util/zip/ZipCoder$UTF8ZipCoder'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x60]  (sp of caller)
  0x000077505521fa00:   mov    0x8(%rsi),%r10d
  0x000077505521fa04:   movabs $0x800000000,%r11
  0x000077505521fa0e:   add    %r11,%r10
  0x000077505521fa11:   cmp    %rax,%r10
  0x000077505521fa14:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505521fa1a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505521fa20:   mov    %eax,-0x14000(%rsp)
  0x000077505521fa27:   push   %rbp
  0x000077505521fa28:   sub    $0x50,%rsp
  0x000077505521fa2c:   movabs $0x77502038e2f8,%rax         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fa36:   mov    0xf4(%rax),%edi
  0x000077505521fa3c:   add    $0x2,%edi
  0x000077505521fa3f:   mov    %edi,0xf4(%rax)
  0x000077505521fa45:   and    $0x7fe,%edi
  0x000077505521fa4b:   cmp    $0x0,%edi
  0x000077505521fa4e:   je     0x000077505521fcb7           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@0 (line 209)
  0x000077505521fa54:   cmp    $0x0,%r8d
  0x000077505521fa58:   movabs $0x77502038e2f8,%rax         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fa62:   movabs $0x148,%rsi
  0x000077505521fa6c:   je     0x000077505521fa7c
  0x000077505521fa72:   movabs $0x138,%rsi
  0x000077505521fa7c:   mov    (%rax,%rsi,1),%rdi
  0x000077505521fa80:   lea    0x1(%rdi),%rdi
  0x000077505521fa84:   mov    %rdi,(%rax,%rsi,1)
  0x000077505521fa88:   je     0x000077505521fc9f           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@1 (line 209)
  0x000077505521fa8e:   mov    %rcx,%rsi
  0x000077505521fa91:   add    %r8d,%esi
  0x000077505521fa94:   mov    $0x0,%eax
  0x000077505521fa99:   jmp    0x000077505521fb48           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@14 (line 215)
  0x000077505521fa9e:   xchg   %ax,%ax
  0x000077505521faa0:   cmp    0xc(%rdx),%ecx               ; implicit exception: dispatches to 0x000077505521fcd8
  0x000077505521faa3:   jae    0x000077505521fce2
  0x000077505521faa9:   movslq %ecx,%rdi
  0x000077505521faac:   movsbl 0x10(%rdx,%rdi,1),%edi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505521fab1:   cmp    $0x0,%edi
  0x000077505521fab4:   movabs $0x77502038e2f8,%rbx         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fabe:   movabs $0x178,%r9
  0x000077505521fac8:   jl     0x000077505521fad8
  0x000077505521face:   movabs $0x188,%r9
  0x000077505521fad8:   mov    (%rbx,%r9,1),%r11
  0x000077505521fadc:   lea    0x1(%r11),%r11
  0x000077505521fae0:   mov    %r11,(%rbx,%r9,1)
  0x000077505521fae4:   jl     0x000077505521fbea           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505521faea:   mov    %rax,%rbx
  0x000077505521faed:   shl    $0x5,%eax
  0x000077505521faf0:   sub    %ebx,%eax
  0x000077505521faf2:   add    %edi,%eax
  0x000077505521faf4:   inc    %ecx
  0x000077505521faf6:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fb00:   incl   0x198(%rdi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@43 (line 220)
  0x000077505521fb06:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fb10:   mov    0xf8(%rdi),%ebx
  0x000077505521fb16:   add    $0x2,%ebx
  0x000077505521fb19:   mov    %ebx,0xf8(%rdi)
  0x000077505521fb1f:   and    $0x3ffe,%ebx
  0x000077505521fb25:   cmp    $0x0,%ebx
  0x000077505521fb28:   je     0x000077505521fcf0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
  0x000077505521fb2e:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
  0x000077505521fb35:   test   %eax,(%r10)                  ;   {poll}
  0x000077505521fb38:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fb42:   incl   0x1f8(%rdi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
  0x000077505521fb48:   cmp    %esi,%ecx
  0x000077505521fb4a:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fb54:   movabs $0x168,%rbx
  0x000077505521fb5e:   jl     0x000077505521fb6e
  0x000077505521fb64:   movabs $0x158,%rbx
  0x000077505521fb6e:   mov    (%rdi,%rbx,1),%r9
  0x000077505521fb72:   lea    0x1(%r9),%r9
  0x000077505521fb76:   mov    %r9,(%rdi,%rbx,1)
  0x000077505521fb7a:   jl     0x000077505521faa0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505521fb80:   dec    %esi
  0x000077505521fb82:   cmp    0xc(%rdx),%esi               ; implicit exception: dispatches to 0x000077505521fd11
  0x000077505521fb85:   jae    0x000077505521fd1b
  0x000077505521fb8b:   movslq %esi,%rsi
  0x000077505521fb8e:   movsbl 0x10(%rdx,%rsi,1),%esi       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
  0x000077505521fb93:   cmp    $0x2f,%esi
  0x000077505521fb96:   movabs $0x77502038e2f8,%rsi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fba0:   movabs $0x210,%rdx
  0x000077505521fbaa:   je     0x000077505521fbba
  0x000077505521fbb0:   movabs $0x220,%rdx
  0x000077505521fbba:   mov    (%rsi,%rdx,1),%rcx
  0x000077505521fbbe:   lea    0x1(%rcx),%rcx
  0x000077505521fbc2:   mov    %rcx,(%rsi,%rdx,1)
  0x000077505521fbc6:   je     0x000077505521fbd7           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@75 (line 231)
  0x000077505521fbcc:   mov    %rax,%rsi
  0x000077505521fbcf:   shl    $0x5,%eax
  0x000077505521fbd2:   sub    %esi,%eax
  0x000077505521fbd4:   add    $0x2f,%eax
  0x000077505521fbd7:   add    $0x50,%rsp
  0x000077505521fbdb:   pop    %rbp
  0x000077505521fbdc:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521fbe3:   ja     0x000077505521fd29
  0x000077505521fbe9:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@90 (line 234)
  0x000077505521fbea:   movabs $0x62ac0c390,%rcx            ;   {oop(a 'java/lang/System$2'{0x000000062ac0c390})}
  0x000077505521fbf4:   movabs $0x77502038e2f8,%rdi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fbfe:   movabs $0x8000650c0,%r10            ;   {metadata('java/lang/System$2')}
  0x000077505521fc08:   mov    %r10,0x1c0(%rdi)
  0x000077505521fc0f:   addq   $0x1,0x1c8(%rdi)
  0x000077505521fc17:   mov    %rsi,%rcx
  0x000077505521fc1a:   sub    %r8d,%ecx
  0x000077505521fc1d:   movabs $0x77502038e580,%rsi         ;   {metadata(method data for {method} {0x00007750201b3918} 'newStringUTF8NoRepl' '([BII)Ljava/lang/String;' in 'java/lang/System$2')}
  0x000077505521fc27:   mov    0xf4(%rsi),%edi
  0x000077505521fc2d:   add    $0x2,%edi
  0x000077505521fc30:   mov    %edi,0xf4(%rsi)
  0x000077505521fc36:   and    $0x1ffffe,%edi
  0x000077505521fc3c:   cmp    $0x0,%edi
  0x000077505521fc3f:   je     0x000077505521fd3f
  0x000077505521fc45:   movabs $0x77502038e580,%rsi         ;   {metadata(method data for {method} {0x00007750201b3918} 'newStringUTF8NoRepl' '([BII)Ljava/lang/String;' in 'java/lang/System$2')}
  0x000077505521fc4f:   addq   $0x1,0x138(%rsi)
  0x000077505521fc57:   mov    %rdx,%rsi
  0x000077505521fc5a:   mov    %rcx,%rdx
  0x000077505521fc5d:   mov    %r8,%rcx                     ;*invokestatic newStringUTF8NoRepl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.System$2::newStringUTF8NoRepl@3 (line 2402)
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@55 (line 227)
  0x000077505521fc60:   nopl   0x0(%rax)
  0x000077505521fc67:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic newStringUTF8NoRepl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.System$2::newStringUTF8NoRepl@3 (line 2402)
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@55 (line 227)
                                                            ;   {static_call}
  0x000077505521fc6c:   movabs $0x77502038e2f8,%rsi         ;   {metadata(method data for {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fc76:   addq   $0x1,0x1e8(%rsi)
  0x000077505521fc7e:   mov    %rax,%rsi                    ;*invokestatic hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@60 (line 227)
  0x000077505521fc81:   nopw   0x0(%rax,%rax,1)
  0x000077505521fc87:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@60 (line 227)
                                                            ;   {static_call}
  0x000077505521fc8c:   add    $0x50,%rsp
  0x000077505521fc90:   pop    %rbp
  0x000077505521fc91:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521fc98:   ja     0x000077505521fd60
  0x000077505521fc9e:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@63 (line 227)
  0x000077505521fc9f:   mov    $0x0,%eax
  0x000077505521fca4:   add    $0x50,%rsp
  0x000077505521fca8:   pop    %rbp
  0x000077505521fca9:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505521fcb0:   ja     0x000077505521fd76
  0x000077505521fcb6:   ret
  0x000077505521fcb7:   movabs $0x77502032b0f8,%r10         ;   {metadata({method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fcc1:   mov    %r10,0x8(%rsp)
  0x000077505521fcc6:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521fcce:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@-1 (line 209)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521fcd3:   jmp    0x000077505521fa54
  0x000077505521fcd8:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521fcdd:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521fce2:   mov    %rcx,(%rsp)
  0x000077505521fce6:   mov    %rdx,0x8(%rsp)
  0x000077505521fceb:   call   0x000077505c828ca0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521fcf0:   movabs $0x77502032b0f8,%r10         ;   {metadata({method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505521fcfa:   mov    %r10,0x8(%rsp)
  0x000077505521fcff:   movq   $0x40,(%rsp)
  0x000077505521fd07:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521fd0c:   jmp    0x000077505521fb2e
  0x000077505521fd11:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521fd16:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505521fd1b:   mov    %rsi,(%rsp)
  0x000077505521fd1f:   mov    %rdx,0x8(%rsp)
  0x000077505521fd24:   call   0x000077505c828ca0           ; ImmutableOopMap {rdx=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505521fd29:   movabs $0x77505521fbdc,%r10         ;   {internal_word}
  0x000077505521fd33:   mov    %r10,0x360(%r15)
  0x000077505521fd3a:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521fd3f:   movabs $0x7750201b3918,%r10         ;   {metadata({method} {0x00007750201b3918} 'newStringUTF8NoRepl' '([BII)Ljava/lang/String;' in 'java/lang/System$2')}
  0x000077505521fd49:   mov    %r10,0x8(%rsp)
  0x000077505521fd4e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505521fd56:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.System$2::newStringUTF8NoRepl@-1 (line 2402)
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@55 (line 227)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505521fd5b:   jmp    0x000077505521fc45
  0x000077505521fd60:   movabs $0x77505521fc91,%r10         ;   {internal_word}
  0x000077505521fd6a:   mov    %r10,0x360(%r15)
  0x000077505521fd71:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521fd76:   movabs $0x77505521fca9,%r10         ;   {internal_word}
  0x000077505521fd80:   mov    %r10,0x360(%r15)
  0x000077505521fd87:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505521fd8c:   nop
  0x000077505521fd8d:   nop
  0x000077505521fd8e:   mov    0x3d8(%r15),%rax
  0x000077505521fd95:   movq   $0x0,0x3d8(%r15)
  0x000077505521fda0:   movq   $0x0,0x3e0(%r15)
  0x000077505521fdab:   add    $0x50,%rsp
  0x000077505521fdaf:   pop    %rbp
  0x000077505521fdb0:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505521fdb5:   hlt
  0x000077505521fdb6:   hlt
  0x000077505521fdb7:   hlt
  0x000077505521fdb8:   hlt
  0x000077505521fdb9:   hlt
  0x000077505521fdba:   hlt
  0x000077505521fdbb:   hlt
  0x000077505521fdbc:   hlt
  0x000077505521fdbd:   hlt
  0x000077505521fdbe:   hlt
  0x000077505521fdbf:   hlt
[Stub Code]
  0x000077505521fdc0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505521fdc5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521fdcf:   jmp    0x000077505521fdcf           ;   {runtime_call}
  0x000077505521fdd4:   nop
  0x000077505521fdd5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505521fddf:   jmp    0x000077505521fddf           ;   {runtime_call}
[Exception Handler]
  0x000077505521fde4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505521fde9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505521fdf3:   and    $0xfffffffffffffff0,%rsp
  0x000077505521fdf7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505521fdfc:   hlt
[Deopt Handler Code]
  0x000077505521fdfd:   movabs $0x77505521fdfd,%r10         ;   {section_word}
  0x000077505521fe07:   push   %r10
  0x000077505521fe09:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505521fe0e:   hlt
  0x000077505521fe0f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     279   81 %     4       java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash @ 14 (91 bytes)
 total in heap  [0x000077505cccd610,0x000077505cccde08] = 2040
 relocation     [0x000077505cccd770,0x000077505cccd790] = 32
 main code      [0x000077505cccd7a0,0x000077505cccda60] = 704
 stub code      [0x000077505cccda60,0x000077505cccda78] = 24
 metadata       [0x000077505cccda78,0x000077505cccda88] = 16
 scopes data    [0x000077505cccda88,0x000077505cccdb60] = 216
 scopes pcs     [0x000077505cccdb60,0x000077505cccddf0] = 656
 dependencies   [0x000077505cccddf0,0x000077505cccddf8] = 8
 nul chk table  [0x000077505cccddf8,0x000077505cccde08] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder'
  0x000077505cccd7a0:   call   0x0000775073e5ef40           ;   {runtime_call}
  0x000077505cccd7a5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x000077505cccd7b0:   mov    %eax,-0x14000(%rsp)
  0x000077505cccd7b7:   push   %rbp
  0x000077505cccd7b8:   sub    $0x30,%rsp
  0x000077505cccd7bc:   mov    0x28(%rsi),%rbx
  0x000077505cccd7c0:   mov    0x20(%rsi),%ebp
  0x000077505cccd7c3:   mov    0x18(%rsi),%r10d
  0x000077505cccd7c7:   mov    %r10d,0x8(%rsp)
  0x000077505cccd7cc:   mov    0x10(%rsi),%r13d
  0x000077505cccd7d0:   mov    0x8(%rsi),%r14d
  0x000077505cccd7d4:   mov    %rsi,%rdi
  0x000077505cccd7d7:   movabs $0x775073f23700,%r10
  0x000077505cccd7e1:   call   *%r10
  0x000077505cccd7e4:   mov    0x8(%rbx),%r10d              ; implicit exception: dispatches to 0x000077505cccda09
  0x000077505cccd7e8:   cmp    $0x407e0,%r10d               ;   {metadata({type array byte})}
  0x000077505cccd7ef:   jne    0x000077505cccd9ec           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@14 (line 215)
  0x000077505cccd7f5:   mov    0xc(%rbx),%esi               ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd7f8:   cmp    %r13d,%ebp
  0x000077505cccd7fb:   jge    0x000077505cccd953           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505cccd801:   mov    %ebp,%ecx
  0x000077505cccd803:   inc    %ecx
  0x000077505cccd805:   xor    %r9d,%r9d
  0x000077505cccd808:   test   %ecx,%ecx
  0x000077505cccd80a:   cmovl  %r9d,%ecx
  0x000077505cccd80e:   cmp    %r13d,%ecx
  0x000077505cccd811:   cmovg  %r13d,%ecx
  0x000077505cccd815:   cmp    %esi,%ebp
  0x000077505cccd817:   jae    0x000077505cccd9b9
  0x000077505cccd81d:   movsbl 0x10(%rbx,%rbp,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd823:   test   %r10d,%r10d
  0x000077505cccd826:   jl     0x000077505cccd995           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd82c:   mov    %r14d,%r11d
  0x000077505cccd82f:   shl    $0x5,%r11d
  0x000077505cccd833:   sub    %r14d,%r11d
  0x000077505cccd836:   add    %r10d,%r11d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd839:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505cccd83b:   cmp    %ecx,%ebp
  0x000077505cccd83d:   jge    0x000077505cccd844           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505cccd83f:   mov    %r11d,%r14d
  0x000077505cccd842:   jmp    0x000077505cccd815
  0x000077505cccd844:   movslq %esi,%r10
  0x000077505cccd847:   movslq %r13d,%r8
  0x000077505cccd84a:   cmp    %r10,%r8
  0x000077505cccd84d:   mov    %r13d,%r10d
  0x000077505cccd850:   cmovg  %esi,%r10d
  0x000077505cccd854:   mov    %r10d,%r8d
  0x000077505cccd857:   add    $0xfffffffd,%r8d
  0x000077505cccd85b:   mov    $0x80000000,%ecx
  0x000077505cccd860:   cmp    %r8d,%r10d
  0x000077505cccd863:   cmovl  %ecx,%r8d
  0x000077505cccd867:   cmp    %r8d,%ebp
  0x000077505cccd86a:   jge    0x000077505cccd919
  0x000077505cccd870:   mov    $0xfa0,%edi
  0x000077505cccd875:   mov    %r8d,%ecx
  0x000077505cccd878:   sub    %ebp,%ecx
  0x000077505cccd87a:   cmp    %ebp,%r8d
  0x000077505cccd87d:   cmovl  %r9d,%ecx
  0x000077505cccd881:   cmp    $0xfa0,%ecx
  0x000077505cccd887:   cmova  %edi,%ecx
  0x000077505cccd88a:   add    %ebp,%ecx
  0x000077505cccd88c:   nopl   0x0(%rax)
  0x000077505cccd890:   movsbl 0x10(%rbx,%rbp,1),%edx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd895:   test   %edx,%edx
  0x000077505cccd897:   jl     0x000077505cccd986           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd89d:   movslq %ebp,%rax
  0x000077505cccd8a0:   movsbl 0x11(%rbx,%rax,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd8a6:   mov    %r11d,%r14d
  0x000077505cccd8a9:   shl    $0x5,%r14d
  0x000077505cccd8ad:   sub    %r11d,%r14d
  0x000077505cccd8b0:   add    %edx,%r14d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd8b3:   test   %r10d,%r10d
  0x000077505cccd8b6:   jl     0x000077505cccd98e           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd8bc:   movsbl 0x12(%rbx,%rax,1),%edx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd8c1:   mov    %r14d,%r11d
  0x000077505cccd8c4:   shl    $0x5,%r11d
  0x000077505cccd8c8:   sub    %r14d,%r11d
  0x000077505cccd8cb:   add    %r10d,%r11d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd8ce:   test   %edx,%edx
  0x000077505cccd8d0:   jl     0x000077505cccd983           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd8d6:   movsbl 0x13(%rbx,%rax,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd8dc:   mov    %r11d,%r14d
  0x000077505cccd8df:   shl    $0x5,%r14d
  0x000077505cccd8e3:   sub    %r11d,%r14d
  0x000077505cccd8e6:   add    %edx,%r14d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd8e9:   test   %r10d,%r10d
  0x000077505cccd8ec:   jl     0x000077505cccd992           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd8f2:   mov    %r14d,%r11d
  0x000077505cccd8f5:   shl    $0x5,%r11d
  0x000077505cccd8f9:   sub    %r14d,%r11d
  0x000077505cccd8fc:   add    %r10d,%r11d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd8ff:   add    $0x4,%ebp                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505cccd902:   cmp    %ecx,%ebp
  0x000077505cccd904:   jl     0x000077505cccd890           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505cccd906:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
  0x000077505cccd90d:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
                                                            ;   {poll}
  0x000077505cccd910:   cmp    %r8d,%ebp
  0x000077505cccd913:   jl     0x000077505cccd875
  0x000077505cccd919:   cmp    %r13d,%ebp
  0x000077505cccd91c:   jge    0x000077505cccd950
  0x000077505cccd91e:   xchg   %ax,%ax
  0x000077505cccd920:   cmp    %esi,%ebp
  0x000077505cccd922:   jae    0x000077505cccd9bc
  0x000077505cccd928:   movsbl 0x10(%rbx,%rbp,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505cccd92e:   test   %r10d,%r10d
  0x000077505cccd931:   jl     0x000077505cccda04           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd937:   mov    %r11d,%r14d
  0x000077505cccd93a:   shl    $0x5,%r14d
  0x000077505cccd93e:   sub    %r11d,%r14d
  0x000077505cccd941:   add    %r10d,%r14d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505cccd944:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505cccd946:   cmp    %r13d,%ebp
  0x000077505cccd949:   jge    0x000077505cccd953           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505cccd94b:   mov    %r14d,%r11d
  0x000077505cccd94e:   jmp    0x000077505cccd920
  0x000077505cccd950:   mov    %r11d,%r14d                  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
  0x000077505cccd953:   mov    %r13d,%ebp
  0x000077505cccd956:   dec    %ebp                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@71 (line 231)
  0x000077505cccd958:   cmp    %esi,%ebp
  0x000077505cccd95a:   jae    0x000077505cccd9d8
  0x000077505cccd95c:   cmpb   $0x2f,0xf(%rbx,%r13,1)
  0x000077505cccd962:   je     0x000077505cccd9b4           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@75 (line 231)
  0x000077505cccd964:   mov    %r14d,%eax
  0x000077505cccd967:   shl    $0x5,%eax
  0x000077505cccd96a:   sub    %r14d,%eax
  0x000077505cccd96d:   add    $0x2f,%eax                   ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@14 (line 215)
  0x000077505cccd970:   add    $0x30,%rsp
  0x000077505cccd974:   pop    %rbp
  0x000077505cccd975:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505cccd97c:   ja     0x000077505cccda30
  0x000077505cccd982:   ret
  0x000077505cccd983:   add    $0x2,%ebp
  0x000077505cccd986:   mov    %edx,%r10d
  0x000077505cccd989:   mov    %r11d,%r14d
  0x000077505cccd98c:   jmp    0x000077505cccd995
  0x000077505cccd98e:   inc    %ebp
  0x000077505cccd990:   jmp    0x000077505cccd995
  0x000077505cccd992:   add    $0x3,%ebp                    ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505cccd995:   mov    $0xffffff45,%esi
  0x000077505cccd99a:   mov    %rbx,(%rsp)
  0x000077505cccd99e:   mov    %r13d,0xc(%rsp)
  0x000077505cccd9a3:   mov    %r14d,0x10(%rsp)
  0x000077505cccd9a8:   mov    %r10d,0x18(%rsp)
  0x000077505cccd9ad:   xchg   %ax,%ax
  0x000077505cccd9af:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccd9b4:   mov    %r14d,%eax
  0x000077505cccd9b7:   jmp    0x000077505cccd970
  0x000077505cccd9b9:   mov    %r14d,%r11d
  0x000077505cccd9bc:   mov    $0xffffffe4,%esi
  0x000077505cccd9c1:   mov    %r13d,0xc(%rsp)
  0x000077505cccd9c6:   mov    %r11d,0x10(%rsp)
  0x000077505cccd9cb:   mov    %rbx,0x18(%rsp)
  0x000077505cccd9d0:   data16 xchg %ax,%ax
  0x000077505cccd9d3:   call   0x000077505c78d600           ; ImmutableOopMap {[24]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccd9d8:   mov    $0xffffffe4,%esi
  0x000077505cccd9dd:   mov    %r14d,(%rsp)
  0x000077505cccd9e1:   mov    %rbx,0x8(%rsp)
  0x000077505cccd9e6:   nop
  0x000077505cccd9e7:   call   0x000077505c78d600           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccd9ec:   mov    $0xffffff8d,%esi
  0x000077505cccd9f1:   mov    %rbx,(%rsp)
  0x000077505cccd9f5:   mov    %r13d,0xc(%rsp)
  0x000077505cccd9fa:   mov    %r14d,0x10(%rsp)
  0x000077505cccd9ff:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@14 (line 215)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccda04:   mov    %r11d,%r14d
  0x000077505cccda07:   jmp    0x000077505cccd995
  0x000077505cccda09:   mov    $0xffffffbe,%esi
  0x000077505cccda0e:   mov    %rax,-0x8(%rsp)
  0x000077505cccda13:   mov    0x8(%rsp),%eax
  0x000077505cccda17:   mov    %eax,(%rsp)
  0x000077505cccda1a:   mov    -0x8(%rsp),%rax
  0x000077505cccda1f:   mov    %r13d,0x4(%rsp)
  0x000077505cccda24:   mov    %r14d,0x8(%rsp)
  0x000077505cccda29:   xchg   %ax,%ax
  0x000077505cccda2b:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@14 (line 215)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccda30:   movabs $0x77505cccd975,%r10         ;   {internal_word}
  0x000077505cccda3a:   mov    %r10,0x360(%r15)
  0x000077505cccda41:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505cccda46:   hlt
  0x000077505cccda47:   hlt
  0x000077505cccda48:   hlt
  0x000077505cccda49:   hlt
  0x000077505cccda4a:   hlt
  0x000077505cccda4b:   hlt
  0x000077505cccda4c:   hlt
  0x000077505cccda4d:   hlt
  0x000077505cccda4e:   hlt
  0x000077505cccda4f:   hlt
  0x000077505cccda50:   hlt
  0x000077505cccda51:   hlt
  0x000077505cccda52:   hlt
  0x000077505cccda53:   hlt
  0x000077505cccda54:   hlt
  0x000077505cccda55:   hlt
  0x000077505cccda56:   hlt
  0x000077505cccda57:   hlt
  0x000077505cccda58:   hlt
  0x000077505cccda59:   hlt
  0x000077505cccda5a:   hlt
  0x000077505cccda5b:   hlt
  0x000077505cccda5c:   hlt
  0x000077505cccda5d:   hlt
  0x000077505cccda5e:   hlt
  0x000077505cccda5f:   hlt
[Exception Handler]
  0x000077505cccda60:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505cccda65:   call   0x000077505cccda6a
  0x000077505cccda6a:   subq   $0x5,(%rsp)
  0x000077505cccda6f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccda74:   hlt
  0x000077505cccda75:   hlt
  0x000077505cccda76:   hlt
  0x000077505cccda77:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     285   82       4       java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash (91 bytes)
 total in heap  [0x000077505cccde90,0x000077505ccce680] = 2032
 relocation     [0x000077505cccdff0,0x000077505ccce010] = 32
 main code      [0x000077505ccce020,0x000077505ccce280] = 608
 stub code      [0x000077505ccce280,0x000077505ccce298] = 24
 metadata       [0x000077505ccce298,0x000077505ccce2a0] = 8
 scopes data    [0x000077505ccce2a0,0x000077505ccce390] = 240
 scopes pcs     [0x000077505ccce390,0x000077505ccce660] = 720
 dependencies   [0x000077505ccce660,0x000077505ccce668] = 8
 nul chk table  [0x000077505ccce668,0x000077505ccce680] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502032b0f8} 'checkedHash' '([BII)I' in 'java/util/zip/ZipCoder$UTF8ZipCoder'
  # this:     rsi:rsi   = 'java/util/zip/ZipCoder$UTF8ZipCoder'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000077505ccce020:   mov    0x8(%rsi),%r10d
  0x000077505ccce024:   movabs $0x800000000,%r11
  0x000077505ccce02e:   add    %r11,%r10
  0x000077505ccce031:   cmp    %r10,%rax
  0x000077505ccce034:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccce03a:   xchg   %ax,%ax
  0x000077505ccce03c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccce040:   mov    %eax,-0x14000(%rsp)
  0x000077505ccce047:   push   %rbp
  0x000077505ccce048:   sub    $0x30,%rsp                   ;*synchronization entry
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@-1 (line 209)
  0x000077505ccce04c:   test   %r8d,%r8d
  0x000077505ccce04f:   je     0x000077505ccce243           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@1 (line 209)
  0x000077505ccce055:   mov    %ecx,%r11d
  0x000077505ccce058:   add    %r8d,%r11d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@8 (line 213)
  0x000077505ccce05b:   xor    %edi,%edi
  0x000077505ccce05d:   cmp    %r11d,%ecx
  0x000077505ccce060:   jge    0x000077505ccce19f           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505ccce066:   mov    0xc(%rdx),%r10d              ; implicit exception: dispatches to 0x000077505ccce220
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccce06a:   cmp    %r10d,%ecx
  0x000077505ccce06d:   jae    0x000077505ccce220
  0x000077505ccce073:   movslq %r11d,%r9
  0x000077505ccce076:   movslq %r10d,%r10
  0x000077505ccce079:   dec    %r9
  0x000077505ccce07c:   cmp    %r10,%r9
  0x000077505ccce07f:   jae    0x000077505ccce220
  0x000077505ccce085:   mov    %ecx,%esi
  0x000077505ccce087:   inc    %esi
  0x000077505ccce089:   xor    %r10d,%r10d                  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@20 (line 216)
  0x000077505ccce08c:   movsbl 0x10(%rdx,%rcx,1),%ebx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccce091:   test   %ebx,%ebx
  0x000077505ccce093:   jl     0x000077505ccce1e4           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505ccce099:   mov    %r10d,%ebp
  0x000077505ccce09c:   shl    $0x5,%ebp
  0x000077505ccce09f:   sub    %r10d,%ebp
  0x000077505ccce0a2:   add    %ebx,%ebp                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505ccce0a4:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505ccce0a6:   cmp    %esi,%ecx
  0x000077505ccce0a8:   jge    0x000077505ccce0af           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505ccce0aa:   mov    %ebp,%r10d
  0x000077505ccce0ad:   jmp    0x000077505ccce08c
  0x000077505ccce0af:   mov    %r11d,%r9d
  0x000077505ccce0b2:   add    $0xfffffffd,%r9d
  0x000077505ccce0b6:   mov    $0x80000000,%r10d
  0x000077505ccce0bc:   cmp    %r9d,%r11d
  0x000077505ccce0bf:   cmovl  %r10d,%r9d
  0x000077505ccce0c3:   cmp    %r9d,%ecx
  0x000077505ccce0c6:   jge    0x000077505ccce177
  0x000077505ccce0cc:   mov    $0xfa0,%eax
  0x000077505ccce0d1:   mov    %r9d,%esi
  0x000077505ccce0d4:   sub    %ecx,%esi
  0x000077505ccce0d6:   cmp    %ecx,%r9d
  0x000077505ccce0d9:   cmovl  %edi,%esi
  0x000077505ccce0dc:   cmp    $0xfa0,%esi
  0x000077505ccce0e2:   cmova  %eax,%esi
  0x000077505ccce0e5:   add    %ecx,%esi
  0x000077505ccce0e7:   nopw   0x0(%rax,%rax,1)             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@20 (line 216)
  0x000077505ccce0f0:   movsbl 0x10(%rdx,%rcx,1),%r13d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccce0f6:   test   %r13d,%r13d
  0x000077505ccce0f9:   jl     0x000077505ccce1d5           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505ccce0ff:   movslq %ecx,%r14
  0x000077505ccce102:   movsbl 0x11(%rdx,%r14,1),%ebx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccce108:   mov    %ebp,%r10d
  0x000077505ccce10b:   shl    $0x5,%r10d
  0x000077505ccce10f:   sub    %ebp,%r10d
  0x000077505ccce112:   add    %r13d,%r10d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505ccce115:   test   %ebx,%ebx
  0x000077505ccce117:   jl     0x000077505ccce1dd           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505ccce11d:   movsbl 0x12(%rdx,%r14,1),%r13d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccce123:   mov    %r10d,%ebp
  0x000077505ccce126:   shl    $0x5,%ebp
  0x000077505ccce129:   sub    %r10d,%ebp
  0x000077505ccce12c:   add    %ebx,%ebp                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505ccce12e:   test   %r13d,%r13d
  0x000077505ccce131:   jl     0x000077505ccce1d2           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505ccce137:   movsbl 0x13(%rdx,%r14,1),%ebx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccce13d:   mov    %ebp,%r10d
  0x000077505ccce140:   shl    $0x5,%r10d
  0x000077505ccce144:   sub    %ebp,%r10d
  0x000077505ccce147:   add    %r13d,%r10d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505ccce14a:   test   %ebx,%ebx
  0x000077505ccce14c:   jl     0x000077505ccce1e1           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505ccce152:   mov    %r10d,%ebp
  0x000077505ccce155:   shl    $0x5,%ebp
  0x000077505ccce158:   sub    %r10d,%ebp
  0x000077505ccce15b:   add    %ebx,%ebp                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505ccce15d:   add    $0x4,%ecx                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505ccce160:   cmp    %esi,%ecx
  0x000077505ccce162:   jl     0x000077505ccce0f0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505ccce164:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rdx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
  0x000077505ccce16b:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
                                                            ;   {poll}
  0x000077505ccce16e:   cmp    %r9d,%ecx
  0x000077505ccce171:   jl     0x000077505ccce0d1
  0x000077505ccce177:   cmp    %r11d,%ecx
  0x000077505ccce17a:   jge    0x000077505ccce19d           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@20 (line 216)
  0x000077505ccce17c:   movsbl 0x10(%rdx,%rcx,1),%ebx       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
  0x000077505ccce181:   test   %ebx,%ebx
  0x000077505ccce183:   jl     0x000077505ccce23c           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
  0x000077505ccce189:   mov    %ebp,%edi
  0x000077505ccce18b:   shl    $0x5,%edi
  0x000077505ccce18e:   sub    %ebp,%edi
  0x000077505ccce190:   add    %ebx,%edi                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
  0x000077505ccce192:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505ccce194:   cmp    %r11d,%ecx
  0x000077505ccce197:   jge    0x000077505ccce19f
  0x000077505ccce199:   mov    %edi,%ebp
  0x000077505ccce19b:   jmp    0x000077505ccce17c
  0x000077505ccce19d:   mov    %ebp,%edi                    ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
  0x000077505ccce19f:   mov    %r11d,%ebp
  0x000077505ccce1a2:   dec    %ebp                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@71 (line 231)
  0x000077505ccce1a4:   mov    0xc(%rdx),%r10d              ; implicit exception: dispatches to 0x000077505ccce258
  0x000077505ccce1a8:   cmp    %r10d,%ebp
  0x000077505ccce1ab:   jae    0x000077505ccce20c
  0x000077505ccce1ad:   cmpb   $0x2f,0xf(%rdx,%r11,1)
  0x000077505ccce1b3:   je     0x000077505ccce208           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@75 (line 231)
  0x000077505ccce1b5:   mov    %edi,%eax
  0x000077505ccce1b7:   shl    $0x5,%eax
  0x000077505ccce1ba:   sub    %edi,%eax
  0x000077505ccce1bc:   add    $0x2f,%eax                   ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@88 (line 234)
  0x000077505ccce1bf:   add    $0x30,%rsp
  0x000077505ccce1c3:   pop    %rbp
  0x000077505ccce1c4:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccce1cb:   ja     0x000077505ccce264
  0x000077505ccce1d1:   ret
  0x000077505ccce1d2:   add    $0x2,%ecx
  0x000077505ccce1d5:   mov    %r13d,%ebx
  0x000077505ccce1d8:   mov    %ebp,%r10d
  0x000077505ccce1db:   jmp    0x000077505ccce1e4
  0x000077505ccce1dd:   inc    %ecx
  0x000077505ccce1df:   jmp    0x000077505ccce1e4
  0x000077505ccce1e1:   add    $0x3,%ecx                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
  0x000077505ccce1e4:   mov    %ecx,%ebp
  0x000077505ccce1e6:   mov    $0xffffff45,%esi
  0x000077505ccce1eb:   mov    %rdx,(%rsp)
  0x000077505ccce1ef:   mov    %r8d,0x8(%rsp)
  0x000077505ccce1f4:   mov    %r11d,0xc(%rsp)
  0x000077505ccce1f9:   mov    %r10d,0x10(%rsp)
  0x000077505ccce1fe:   mov    %ebx,0x18(%rsp)
  0x000077505ccce202:   nop
  0x000077505ccce203:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccce208:   mov    %edi,%eax
  0x000077505ccce20a:   jmp    0x000077505ccce1bf
  0x000077505ccce20c:   mov    $0xffffffe4,%esi
  0x000077505ccce211:   mov    %edi,(%rsp)
  0x000077505ccce214:   mov    %rdx,0x8(%rsp)
  0x000077505ccce219:   xchg   %ax,%ax
  0x000077505ccce21b:   call   0x000077505c78d600           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccce220:   mov    $0xffffff76,%esi
  0x000077505ccce225:   mov    %rdx,%rbp
  0x000077505ccce228:   mov    %r8d,0x4(%rsp)
  0x000077505ccce22d:   mov    %ecx,0xc(%rsp)
  0x000077505ccce231:   mov    %r11d,0x10(%rsp)
  0x000077505ccce236:   nop
  0x000077505ccce237:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccce23c:   mov    %ebp,%r10d
  0x000077505ccce23f:   mov    %ecx,%ebp
  0x000077505ccce241:   jmp    0x000077505ccce1e6
  0x000077505ccce243:   mov    $0xffffff45,%esi
  0x000077505ccce248:   mov    %rdx,%rbp
  0x000077505ccce24b:   mov    %ecx,(%rsp)
  0x000077505ccce24e:   mov    %r8d,0x8(%rsp)
  0x000077505ccce253:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@1 (line 209)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccce258:   mov    $0xfffffff6,%esi
  0x000077505ccce25d:   xchg   %ax,%ax
  0x000077505ccce25f:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccce264:   movabs $0x77505ccce1c4,%r10         ;   {internal_word}
  0x000077505ccce26e:   mov    %r10,0x360(%r15)
  0x000077505ccce275:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccce27a:   hlt
  0x000077505ccce27b:   hlt
  0x000077505ccce27c:   hlt
  0x000077505ccce27d:   hlt
  0x000077505ccce27e:   hlt
  0x000077505ccce27f:   hlt
[Exception Handler]
  0x000077505ccce280:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccce285:   call   0x000077505ccce28a
  0x000077505ccce28a:   subq   $0x5,(%rsp)
  0x000077505ccce28f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccce294:   hlt
  0x000077505ccce295:   hlt
  0x000077505ccce296:   hlt
  0x000077505ccce297:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     291   83       3       java.util.HashMap::resize (356 bytes)
 total in heap  [0x0000775055220110,0x0000775055222340] = 8752
 relocation     [0x0000775055220270,0x0000775055220398] = 296
 constants      [0x00007750552203a0,0x00007750552203c0] = 32
 main code      [0x00007750552203c0,0x00007750552218a0] = 5344
 stub code      [0x00007750552218a0,0x00007750552218e0] = 64
 metadata       [0x00007750552218e0,0x00007750552218e8] = 8
 scopes data    [0x00007750552218e8,0x0000775055221bf0] = 776
 scopes pcs     [0x0000775055221bf0,0x00007750552222a0] = 1712
 dependencies   [0x00007750552222a0,0x00007750552222a8] = 8
 nul chk table  [0x00007750552222a8,0x0000775055222340] = 152

[Disassembly]
--------------------------------------------------------------------------------

[Constant Pool]
             Address          hex4                    hex8
  0x00007750552203a0:   0x4e800000      0xf4f4f4f44e800000
  0x00007750552203a4:   0xf4f4f4f4
  0x00007750552203a8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4
  0x00007750552203ac:   0xf4f4f4f4
  0x00007750552203b0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4
  0x00007750552203b4:   0xf4f4f4f4
  0x00007750552203b8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4
  0x00007750552203bc:   0xf4f4f4f4

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  #           [sp+0x70]  (sp of caller)
  0x00007750552203c0:   mov    0x8(%rsi),%r10d              ;   {no_reloc}
  0x00007750552203c4:   movabs $0x800000000,%r11
  0x00007750552203ce:   add    %r11,%r10
  0x00007750552203d1:   cmp    %rax,%r10
  0x00007750552203d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552203da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552203e0:   mov    %eax,-0x14000(%rsp)
  0x00007750552203e7:   push   %rbp
  0x00007750552203e8:   sub    $0x60,%rsp
  0x00007750552203ec:   mov    %rsi,0x40(%rsp)
  0x00007750552203f1:   movabs $0x7750202fb6f0,%rbx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552203fb:   mov    0xf4(%rbx),%edx
  0x0000775055220401:   add    $0x2,%edx
  0x0000775055220404:   mov    %edx,0xf4(%rbx)
  0x000077505522040a:   and    $0x7fe,%edx
  0x0000775055220410:   cmp    $0x0,%edx
  0x0000775055220413:   je     0x0000775055221548           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@0 (line 676)
  0x0000775055220419:   mov    0x24(%rsi),%r11d
  0x000077505522041d:   shl    $0x3,%r11                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@1 (line 676)
  0x0000775055220421:   mov    %r11,0x50(%rsp)
  0x0000775055220426:   cmp    $0x0,%r11
  0x000077505522042a:   movabs $0x7750202fb6f0,%rbx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220434:   movabs $0x138,%rdx
  0x000077505522043e:   jne    0x000077505522044e
  0x0000775055220444:   movabs $0x148,%rdx
  0x000077505522044e:   mov    (%rbx,%rdx,1),%rdi
  0x0000775055220452:   lea    0x1(%rdi),%rdi
  0x0000775055220456:   mov    %rdi,(%rbx,%rdx,1)
  0x000077505522045a:   jne    0x000077505522047b           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@6 (line 677)
  0x0000775055220460:   movabs $0x7750202fb6f0,%rbx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505522046a:   incl   0x158(%rbx)
  0x0000775055220470:   mov    $0x0,%r13d
  0x0000775055220476:   jmp    0x0000775055220482           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@10 (line 677)
  0x000077505522047b:   mov    0xc(%r11),%ebx               ; implicit exception: dispatches to 0x0000775055221569
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@14 (line 677)
  0x000077505522047f:   mov    %rbx,%r13                    ;*istore_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@15 (line 677)
  0x0000775055220482:   mov    0x1c(%rsi),%ebx              ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@17 (line 678)
  0x0000775055220485:   cmp    $0x0,%r13d
  0x0000775055220489:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220493:   movabs $0x170,%rdi
  0x000077505522049d:   jle    0x00007750552204ad
  0x00007750552204a3:   movabs $0x180,%rdi
  0x00007750552204ad:   mov    (%rdx,%rdi,1),%rax
  0x00007750552204b1:   lea    0x1(%rax),%rax
  0x00007750552204b5:   mov    %rax,(%rdx,%rdi,1)
  0x00007750552204b9:   jle    0x00007750552205a2           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@25 (line 680)
  0x00007750552204bf:   cmp    $0x40000000,%r13d
  0x00007750552204c6:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552204d0:   movabs $0x1a0,%rdi
  0x00007750552204da:   jge    0x00007750552204ea
  0x00007750552204e0:   movabs $0x190,%rdi
  0x00007750552204ea:   mov    (%rdx,%rdi,1),%rax
  0x00007750552204ee:   lea    0x1(%rax),%rax
  0x00007750552204f2:   mov    %rax,(%rdx,%rdi,1)
  0x00007750552204f6:   jge    0x000077505522152b           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@31 (line 681)
  0x00007750552204fc:   mov    %r13,%rdx
  0x00007750552204ff:   shl    %edx
  0x0000775055220501:   cmp    $0x40000000,%edx
  0x0000775055220507:   movabs $0x7750202fb6f0,%rdi         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220511:   movabs $0x1c0,%rax
  0x000077505522051b:   jl     0x000077505522052b
  0x0000775055220521:   movabs $0x1b0,%rax
  0x000077505522052b:   mov    (%rdi,%rax,1),%rcx
  0x000077505522052f:   lea    0x1(%rcx),%rcx
  0x0000775055220533:   mov    %rcx,(%rdi,%rax,1)
  0x0000775055220537:   jl     0x0000775055220547           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@50 (line 685)
  0x000077505522053d:   mov    $0x0,%ebx
  0x0000775055220542:   jmp    0x0000775055220602           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@85 (line 695)
  0x0000775055220547:   cmp    $0x10,%r13d
  0x000077505522054b:   movabs $0x7750202fb6f0,%rdi         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220555:   movabs $0x1e0,%rax
  0x000077505522055f:   jge    0x000077505522056f
  0x0000775055220565:   movabs $0x1d0,%rax
  0x000077505522056f:   mov    (%rdi,%rax,1),%rcx
  0x0000775055220573:   lea    0x1(%rcx),%rcx
  0x0000775055220577:   mov    %rcx,(%rdi,%rax,1)
  0x000077505522057b:   jge    0x000077505522058b           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@56 (line 685)
  0x0000775055220581:   mov    $0x0,%ebx
  0x0000775055220586:   jmp    0x0000775055220602           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@85 (line 695)
  0x000077505522058b:   shl    %ebx
  0x000077505522058d:   movabs $0x7750202fb6f0,%rdi         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220597:   incl   0x1f0(%rdi)
  0x000077505522059d:   jmp    0x0000775055220602           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@64 (line 687)
  0x00007750552205a2:   cmp    $0x0,%ebx
  0x00007750552205a5:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552205af:   movabs $0x208,%rdi
  0x00007750552205b9:   jle    0x00007750552205c9
  0x00007750552205bf:   movabs $0x218,%rdi
  0x00007750552205c9:   mov    (%rdx,%rdi,1),%rax
  0x00007750552205cd:   lea    0x1(%rax),%rax
  0x00007750552205d1:   mov    %rax,(%rdx,%rdi,1)
  0x00007750552205d5:   jle    0x00007750552205f8           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@68 (line 689)
  0x00007750552205db:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552205e5:   incl   0x228(%rdx)
  0x00007750552205eb:   mov    %rbx,%rdx
  0x00007750552205ee:   mov    $0x0,%ebx
  0x00007750552205f3:   jmp    0x0000775055220602           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@74 (line 690)
  0x00007750552205f8:   mov    $0xc,%ebx
  0x00007750552205fd:   mov    $0x10,%edx                   ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@85 (line 695)
  0x0000775055220602:   cmp    $0x0,%ebx
  0x0000775055220605:   movabs $0x7750202fb6f0,%rdi         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505522060f:   movabs $0x240,%rax
  0x0000775055220619:   jne    0x0000775055220629
  0x000077505522061f:   movabs $0x250,%rax
  0x0000775055220629:   mov    (%rdi,%rax,1),%rcx
  0x000077505522062d:   lea    0x1(%rcx),%rcx
  0x0000775055220631:   mov    %rcx,(%rdi,%rax,1)
  0x0000775055220635:   jne    0x000077505522071c           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@87 (line 695)
  0x000077505522063b:   vmovss 0x20(%rsi),%xmm0             ;*getfield loadFactor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@94 (line 696)
  0x0000775055220640:   vcvtsi2ss %edx,%xmm1,%xmm1
  0x0000775055220644:   vmulss %xmm0,%xmm1,%xmm1
  0x0000775055220648:   cmp    $0x40000000,%edx
  0x000077505522064e:   movabs $0x7750202fb6f0,%rbx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220658:   movabs $0x260,%rdi
  0x0000775055220662:   jge    0x0000775055220672
  0x0000775055220668:   movabs $0x270,%rdi
  0x0000775055220672:   mov    (%rbx,%rdi,1),%rax
  0x0000775055220676:   lea    0x1(%rax),%rax
  0x000077505522067a:   mov    %rax,(%rbx,%rdi,1)
  0x000077505522067e:   jge    0x00007750552206e7           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@104 (line 697)
  0x0000775055220684:   vmovss -0x2ec(%rip),%xmm0        # 0x00007750552203a0
                                                            ;   {section_word}
  0x000077505522068c:   vucomiss %xmm0,%xmm1
  0x0000775055220690:   mov    $0x1,%ebx
  0x0000775055220695:   jp     0x00007750552206ae
  0x000077505522069b:   ja     0x00007750552206ae
  0x00007750552206a1:   mov    $0x0,%ebx
  0x00007750552206a6:   je     0x00007750552206ae
  0x00007750552206ac:   dec    %ebx                         ;*fcmpg {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@111 (line 697)
  0x00007750552206ae:   cmp    $0x0,%ebx
  0x00007750552206b1:   movabs $0x7750202fb6f0,%rbx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552206bb:   movabs $0x290,%rdi
  0x00007750552206c5:   jl     0x00007750552206d5
  0x00007750552206cb:   movabs $0x280,%rdi
  0x00007750552206d5:   mov    (%rbx,%rdi,1),%rax
  0x00007750552206d9:   lea    0x1(%rax),%rax
  0x00007750552206dd:   mov    %rax,(%rbx,%rdi,1)
  0x00007750552206e1:   jl     0x00007750552206f1           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@112 (line 697)
  0x00007750552206e7:   mov    $0x7fffffff,%ebx
  0x00007750552206ec:   jmp    0x000077505522071c           ;*istore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@123 (line 698)
  0x00007750552206f1:   vcvttss2si %xmm1,%ebx
  0x00007750552206f5:   cmp    $0x80000000,%ebx
  0x00007750552206fb:   jne    0x000077505522070c
  0x00007750552206fd:   sub    $0x8,%rsp
  0x0000775055220701:   vmovss %xmm1,(%rsp)
  0x0000775055220706:   call   Stub::f2i_fixup              ;   {runtime_call StubRoutines (1)}
  0x000077505522070b:   pop    %rbx
  0x000077505522070c:   movabs $0x7750202fb6f0,%rdi         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220716:   incl   0x2a0(%rdi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@118 (line 698)
  0x000077505522071c:   mov    %ebx,0x1c(%rsi)              ;*putfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@128 (line 700)
  0x000077505522071f:   mov    %rdx,%rbx
  0x0000775055220722:   mov    %rdx,%r14
  0x0000775055220725:   movabs $0x8000610b8,%rdx            ;   {metadata('java/util/HashMap$Node'[])}
  0x000077505522072f:   mov    %rsi,%r9
  0x0000775055220732:   movslq %ebx,%rbx
  0x0000775055220735:   mov    %rbx,%rdi
  0x0000775055220738:   cmp    $0xffffff,%rbx
  0x000077505522073f:   ja     0x000077505522156e
  0x0000775055220745:   movabs $0x17,%rsi
  0x000077505522074f:   lea    (%rsi,%rbx,4),%rsi
  0x0000775055220753:   and    $0xfffffffffffffff8,%rsi
  0x0000775055220757:   mov    0x108(%r15),%rax
  0x000077505522075e:   lea    (%rax,%rsi,1),%rsi
  0x0000775055220762:   cmp    0x118(%r15),%rsi
  0x0000775055220769:   ja     0x000077505522156e
  0x000077505522076f:   mov    %rsi,0x108(%r15)
  0x0000775055220776:   sub    %rax,%rsi
  0x0000775055220779:   movq   $0x1,(%rax)
  0x0000775055220780:   mov    %rdx,%rcx
  0x0000775055220783:   movabs $0x800000000,%r10
  0x000077505522078d:   sub    %r10,%rcx
  0x0000775055220790:   mov    %ecx,0x8(%rax)
  0x0000775055220793:   mov    %ebx,0xc(%rax)
  0x0000775055220796:   sub    $0x10,%rsi
  0x000077505522079a:   je     0x00007750552207ba
  0x00007750552207a0:   test   %rsi,%rsi
  0x00007750552207a3:   je     0x00007750552207ba
  0x00007750552207a9:   xor    %rbx,%rbx
  0x00007750552207ac:   shr    $0x3,%rsi
  0x00007750552207b0:   mov    %rbx,0x8(%rax,%rsi,8)
  0x00007750552207b5:   dec    %rsi
  0x00007750552207b8:   jne    0x00007750552207b0           ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@133 (line 702)
  0x00007750552207ba:   mov    %rax,0x38(%rsp)
  0x00007750552207bf:   movsbl 0x38(%r15),%edx
  0x00007750552207c4:   cmp    $0x0,%edx
  0x00007750552207c7:   jne    0x0000775055221578
  0x00007750552207cd:   mov    %rax,%r10
  0x00007750552207d0:   shr    $0x3,%r10
  0x00007750552207d4:   mov    %r10d,0x24(%r9)
  0x00007750552207d8:   mov    %r9,%rsi
  0x00007750552207db:   xor    %rax,%rsi
  0x00007750552207de:   shr    $0x16,%rsi
  0x00007750552207e2:   cmp    $0x0,%rsi
  0x00007750552207e6:   jne    0x0000775055221598           ;*putfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@141 (line 703)
  0x00007750552207ec:   cmp    $0x0,%r11
  0x00007750552207f0:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552207fa:   movabs $0x2b8,%rcx
  0x0000775055220804:   je     0x0000775055220814
  0x000077505522080a:   movabs $0x2c8,%rcx
  0x0000775055220814:   mov    (%rdx,%rcx,1),%r8
  0x0000775055220818:   lea    0x1(%r8),%r8
  0x000077505522081c:   mov    %r8,(%rdx,%rcx,1)
  0x0000775055220820:   je     0x0000775055221512           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@145 (line 704)
  0x0000775055220826:   mov    $0x0,%edi                    ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@151 (line 705)
  0x000077505522082b:   nopl   0x0(%rax,%rax,1)
  0x0000775055220830:   cmp    %r13d,%edi
  0x0000775055220833:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505522083d:   movabs $0x2d8,%rcx
  0x0000775055220847:   jge    0x0000775055220857
  0x000077505522084d:   movabs $0x2e8,%rcx
  0x0000775055220857:   mov    (%rdx,%rcx,1),%r8
  0x000077505522085b:   lea    0x1(%r8),%r8
  0x000077505522085f:   mov    %r8,(%rdx,%rcx,1)
  0x0000775055220863:   jge    0x0000775055221512           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@154 (line 705)
  0x0000775055220869:   cmp    0xc(%r11),%edi               ; implicit exception: dispatches to 0x00007750552215b0
  0x000077505522086d:   jae    0x00007750552215ba
  0x0000775055220873:   movslq %edi,%rdx
  0x0000775055220876:   mov    0x10(%r11,%rdx,4),%esi
  0x000077505522087b:   shl    $0x3,%rsi                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@160 (line 707)
  0x000077505522087f:   cmp    $0x0,%rsi
  0x0000775055220883:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505522088d:   movabs $0x308,%rcx
  0x0000775055220897:   jne    0x00007750552208a7
  0x000077505522089d:   movabs $0x2f8,%rcx
  0x00007750552208a7:   mov    (%rdx,%rcx,1),%r8
  0x00007750552208ab:   lea    0x1(%r8),%r8
  0x00007750552208af:   mov    %r8,(%rdx,%rcx,1)
  0x00007750552208b3:   jne    0x00007750552208c9           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@164 (line 707)
  0x00007750552208b9:   mov    %rdi,%rcx
  0x00007750552208bc:   mov    %rax,%rbx
  0x00007750552208bf:   mov    %r14d,0x48(%rsp)
  0x00007750552208c4:   jmp    0x00007750552214ae           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@347 (line 705)
  0x00007750552208c9:   movabs $0x0,%rdx                    ;   {oop(NULL)}
  0x00007750552208d3:   cmp    0xc(%r11),%edi
  0x00007750552208d7:   jae    0x00007750552215c8
  0x00007750552208dd:   cmp    $0x0,%rdx
  0x00007750552208e1:   jne    0x00007750552208fa
  0x00007750552208e3:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552208ed:   orb    $0x1,0x311(%r8)
  0x00007750552208f5:   jmp    0x00007750552209fd
  0x00007750552208fa:   mov    0x8(%r11),%ecx               ; implicit exception: dispatches to 0x00007750552215d6
  0x00007750552208fe:   movabs $0x800000000,%r10
  0x0000775055220908:   add    %r10,%rcx
  0x000077505522090b:   mov    0x8(%rdx),%r8d
  0x000077505522090f:   movabs $0x800000000,%r10
  0x0000775055220919:   add    %r10,%r8
  0x000077505522091c:   mov    0xe0(%rcx),%rcx
  0x0000775055220923:   cmp    %rcx,%r8
  0x0000775055220926:   je     0x0000775055220956
  0x000077505522092c:   mov    0x14(%rcx),%ebx
  0x000077505522092f:   cmp    (%r8,%rbx,1),%rcx
  0x0000775055220933:   je     0x0000775055220956
  0x0000775055220939:   cmp    $0x20,%ebx
  0x000077505522093c:   jne    0x00007750552209e6
  0x0000775055220942:   push   %r8
  0x0000775055220944:   push   %rcx
  0x0000775055220945:   call   0x000077505c82bf80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000077505522094a:   pop    %r8
  0x000077505522094c:   pop    %rcx
  0x000077505522094d:   cmp    $0x0,%ecx
  0x0000775055220950:   je     0x00007750552209e6
  0x0000775055220956:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220960:   mov    0x8(%rdx),%ecx
  0x0000775055220963:   movabs $0x800000000,%r10
  0x000077505522096d:   add    %r10,%rcx
  0x0000775055220970:   cmp    0x328(%r8),%rcx
  0x0000775055220977:   jne    0x0000775055220986
  0x0000775055220979:   addq   $0x1,0x330(%r8)
  0x0000775055220981:   jmp    0x00007750552209fd
  0x0000775055220986:   cmp    0x338(%r8),%rcx
  0x000077505522098d:   jne    0x000077505522099c
  0x000077505522098f:   addq   $0x1,0x340(%r8)
  0x0000775055220997:   jmp    0x00007750552209fd
  0x000077505522099c:   cmpq   $0x0,0x328(%r8)
  0x00007750552209a7:   jne    0x00007750552209c0
  0x00007750552209a9:   mov    %rcx,0x328(%r8)
  0x00007750552209b0:   movq   $0x1,0x330(%r8)
  0x00007750552209bb:   jmp    0x00007750552209fd
  0x00007750552209c0:   cmpq   $0x0,0x338(%r8)
  0x00007750552209cb:   jne    0x00007750552209e4
  0x00007750552209cd:   mov    %rcx,0x338(%r8)
  0x00007750552209d4:   movq   $0x1,0x340(%r8)
  0x00007750552209df:   jmp    0x00007750552209fd
  0x00007750552209e4:   jmp    0x00007750552209fd
  0x00007750552209e6:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552209f0:   subq   $0x1,0x318(%r8)
  0x00007750552209f8:   jmp    0x00007750552215db
  0x00007750552209fd:   movslq %edi,%rcx
  0x0000775055220a00:   lea    0x10(%r11,%rcx,4),%rcx
  0x0000775055220a05:   movsbl 0x38(%r15),%r8d
  0x0000775055220a0a:   cmp    $0x0,%r8d
  0x0000775055220a0e:   jne    0x00007750552215e4
  0x0000775055220a14:   mov    %rdx,%r10
  0x0000775055220a17:   shr    $0x3,%r10
  0x0000775055220a1b:   mov    %r10d,(%rcx)
  0x0000775055220a1e:   mov    %rcx,%r8
  0x0000775055220a21:   xor    %rdx,%r8
  0x0000775055220a24:   shr    $0x16,%r8
  0x0000775055220a28:   cmp    $0x0,%r8
  0x0000775055220a2c:   jne    0x0000775055221603           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@171 (line 708)
  0x0000775055220a32:   mov    0x18(%rsi),%edx              ; implicit exception: dispatches to 0x000077505522161b
  0x0000775055220a35:   shl    $0x3,%rdx                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@174 (line 709)
  0x0000775055220a39:   cmp    $0x0,%rdx
  0x0000775055220a3d:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220a47:   movabs $0x350,%rcx
  0x0000775055220a51:   jne    0x0000775055220a61
  0x0000775055220a57:   movabs $0x360,%rcx
  0x0000775055220a61:   mov    (%rdx,%rcx,1),%r8
  0x0000775055220a65:   lea    0x1(%r8),%r8
  0x0000775055220a69:   mov    %r8,(%rdx,%rcx,1)
  0x0000775055220a6d:   jne    0x0000775055220bfa           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@177 (line 709)
  0x0000775055220a73:   mov    0xc(%rsi),%edx               ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@184 (line 710)
  0x0000775055220a76:   mov    %r14,%rcx
  0x0000775055220a79:   dec    %ecx
  0x0000775055220a7b:   and    %rcx,%rdx
  0x0000775055220a7e:   cmp    0xc(%rax),%edx
  0x0000775055220a81:   jae    0x0000775055221620
  0x0000775055220a87:   cmp    $0x0,%rsi
  0x0000775055220a8b:   jne    0x0000775055220aa4
  0x0000775055220a8d:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220a97:   orb    $0x1,0x369(%r8)
  0x0000775055220a9f:   jmp    0x0000775055220ba6
  0x0000775055220aa4:   mov    0x8(%rax),%ecx               ; implicit exception: dispatches to 0x000077505522162e
  0x0000775055220aa7:   movabs $0x800000000,%r10
  0x0000775055220ab1:   add    %r10,%rcx
  0x0000775055220ab4:   mov    0x8(%rsi),%r8d
  0x0000775055220ab8:   movabs $0x800000000,%r10
  0x0000775055220ac2:   add    %r10,%r8
  0x0000775055220ac5:   mov    0xe0(%rcx),%rcx
  0x0000775055220acc:   cmp    %rcx,%r8
  0x0000775055220acf:   je     0x0000775055220aff
  0x0000775055220ad5:   mov    0x14(%rcx),%ebx
  0x0000775055220ad8:   cmp    (%r8,%rbx,1),%rcx
  0x0000775055220adc:   je     0x0000775055220aff
  0x0000775055220ae2:   cmp    $0x20,%ebx
  0x0000775055220ae5:   jne    0x0000775055220b8f
  0x0000775055220aeb:   push   %r8
  0x0000775055220aed:   push   %rcx
  0x0000775055220aee:   call   0x000077505c82bf80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x0000775055220af3:   pop    %r8
  0x0000775055220af5:   pop    %rcx
  0x0000775055220af6:   cmp    $0x0,%ecx
  0x0000775055220af9:   je     0x0000775055220b8f
  0x0000775055220aff:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220b09:   mov    0x8(%rsi),%ecx
  0x0000775055220b0c:   movabs $0x800000000,%r10
  0x0000775055220b16:   add    %r10,%rcx
  0x0000775055220b19:   cmp    0x380(%r8),%rcx
  0x0000775055220b20:   jne    0x0000775055220b2f
  0x0000775055220b22:   addq   $0x1,0x388(%r8)
  0x0000775055220b2a:   jmp    0x0000775055220ba6
  0x0000775055220b2f:   cmp    0x390(%r8),%rcx
  0x0000775055220b36:   jne    0x0000775055220b45
  0x0000775055220b38:   addq   $0x1,0x398(%r8)
  0x0000775055220b40:   jmp    0x0000775055220ba6
  0x0000775055220b45:   cmpq   $0x0,0x380(%r8)
  0x0000775055220b50:   jne    0x0000775055220b69
  0x0000775055220b52:   mov    %rcx,0x380(%r8)
  0x0000775055220b59:   movq   $0x1,0x388(%r8)
  0x0000775055220b64:   jmp    0x0000775055220ba6
  0x0000775055220b69:   cmpq   $0x0,0x390(%r8)
  0x0000775055220b74:   jne    0x0000775055220b8d
  0x0000775055220b76:   mov    %rcx,0x390(%r8)
  0x0000775055220b7d:   movq   $0x1,0x398(%r8)
  0x0000775055220b88:   jmp    0x0000775055220ba6
  0x0000775055220b8d:   jmp    0x0000775055220ba6
  0x0000775055220b8f:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220b99:   subq   $0x1,0x370(%r8)
  0x0000775055220ba1:   jmp    0x0000775055221633
  0x0000775055220ba6:   movslq %edx,%rdx
  0x0000775055220ba9:   lea    0x10(%rax,%rdx,4),%rdx
  0x0000775055220bae:   movsbl 0x38(%r15),%ecx
  0x0000775055220bb3:   cmp    $0x0,%ecx
  0x0000775055220bb6:   jne    0x000077505522163c
  0x0000775055220bbc:   mov    %rsi,%r10
  0x0000775055220bbf:   shr    $0x3,%r10
  0x0000775055220bc3:   mov    %r10d,(%rdx)
  0x0000775055220bc6:   mov    %rdx,%rcx
  0x0000775055220bc9:   xor    %rsi,%rcx
  0x0000775055220bcc:   shr    $0x16,%rcx
  0x0000775055220bd0:   cmp    $0x0,%rcx
  0x0000775055220bd4:   jne    0x000077505522165a           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@194 (line 710)
  0x0000775055220bda:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220be4:   incl   0x3a8(%rdx)
  0x0000775055220bea:   mov    %rdi,%rcx
  0x0000775055220bed:   mov    %rax,%rbx
  0x0000775055220bf0:   mov    %r14d,0x48(%rsp)
  0x0000775055220bf5:   jmp    0x00007750552214ae           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@195 (line 710)
  0x0000775055220bfa:   cmp    $0x0,%rsi
  0x0000775055220bfe:   jne    0x0000775055220c17
  0x0000775055220c00:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220c0a:   orb    $0x1,0x3b9(%r8)
  0x0000775055220c12:   jmp    0x0000775055220ce9
  0x0000775055220c17:   movabs $0x8000614f8,%rbx            ;   {metadata('java/util/HashMap$TreeNode')}
  0x0000775055220c21:   mov    0x8(%rsi),%ecx
  0x0000775055220c24:   movabs $0x800000000,%r10
  0x0000775055220c2e:   add    %r10,%rcx
  0x0000775055220c31:   cmp    %rcx,%rbx
  0x0000775055220c34:   jne    0x0000775055220ccd
  0x0000775055220c3a:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220c44:   mov    0x8(%rsi),%ebx
  0x0000775055220c47:   movabs $0x800000000,%r10
  0x0000775055220c51:   add    %r10,%rbx
  0x0000775055220c54:   cmp    0x3d0(%r8),%rbx
  0x0000775055220c5b:   jne    0x0000775055220c6a
  0x0000775055220c5d:   addq   $0x1,0x3d8(%r8)
  0x0000775055220c65:   jmp    0x0000775055220cee
  0x0000775055220c6a:   cmp    0x3e0(%r8),%rbx
  0x0000775055220c71:   jne    0x0000775055220c80
  0x0000775055220c73:   addq   $0x1,0x3e8(%r8)
  0x0000775055220c7b:   jmp    0x0000775055220cee
  0x0000775055220c80:   cmpq   $0x0,0x3d0(%r8)
  0x0000775055220c8b:   jne    0x0000775055220ca4
  0x0000775055220c8d:   mov    %rbx,0x3d0(%r8)
  0x0000775055220c94:   movq   $0x1,0x3d8(%r8)
  0x0000775055220c9f:   jmp    0x0000775055220cee
  0x0000775055220ca4:   cmpq   $0x0,0x3e0(%r8)
  0x0000775055220caf:   jne    0x0000775055220cc8
  0x0000775055220cb1:   mov    %rbx,0x3e0(%r8)
  0x0000775055220cb8:   movq   $0x1,0x3e8(%r8)
  0x0000775055220cc3:   jmp    0x0000775055220cee
  0x0000775055220cc8:   jmp    0x0000775055220cee
  0x0000775055220ccd:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220cd7:   subq   $0x1,0x3c0(%r8)
  0x0000775055220cdf:   jmp    0x0000775055220ce9
  0x0000775055220ce4:   jmp    0x0000775055220cee
  0x0000775055220ce9:   xor    %rdx,%rdx
  0x0000775055220cec:   jmp    0x0000775055220cf8
  0x0000775055220cee:   movabs $0x1,%rdx                    ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@200 (line 711)
  0x0000775055220cf8:   cmp    $0x0,%edx
  0x0000775055220cfb:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220d05:   movabs $0x3f8,%rcx
  0x0000775055220d0f:   je     0x0000775055220d1f
  0x0000775055220d15:   movabs $0x408,%rcx
  0x0000775055220d1f:   mov    (%rdx,%rcx,1),%r8
  0x0000775055220d23:   lea    0x1(%r8),%r8
  0x0000775055220d27:   mov    %r8,(%rdx,%rcx,1)
  0x0000775055220d2b:   je     0x0000775055220eff           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@203 (line 711)
  0x0000775055220d31:   mov    %r14d,0x48(%rsp)
  0x0000775055220d36:   cmp    $0x0,%rsi
  0x0000775055220d3a:   jne    0x0000775055220d53
  0x0000775055220d3c:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220d46:   orb    $0x1,0x411(%r8)
  0x0000775055220d4e:   jmp    0x0000775055220e25
  0x0000775055220d53:   movabs $0x8000614f8,%rbx            ;   {metadata('java/util/HashMap$TreeNode')}
  0x0000775055220d5d:   mov    0x8(%rsi),%ecx
  0x0000775055220d60:   movabs $0x800000000,%r10
  0x0000775055220d6a:   add    %r10,%rcx
  0x0000775055220d6d:   cmp    %rcx,%rbx
  0x0000775055220d70:   jne    0x0000775055220e09
  0x0000775055220d76:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220d80:   mov    0x8(%rsi),%ebx
  0x0000775055220d83:   movabs $0x800000000,%r10
  0x0000775055220d8d:   add    %r10,%rbx
  0x0000775055220d90:   cmp    0x428(%r8),%rbx
  0x0000775055220d97:   jne    0x0000775055220da6
  0x0000775055220d99:   addq   $0x1,0x430(%r8)
  0x0000775055220da1:   jmp    0x0000775055220e25
  0x0000775055220da6:   cmp    0x438(%r8),%rbx
  0x0000775055220dad:   jne    0x0000775055220dbc
  0x0000775055220daf:   addq   $0x1,0x440(%r8)
  0x0000775055220db7:   jmp    0x0000775055220e25
  0x0000775055220dbc:   cmpq   $0x0,0x428(%r8)
  0x0000775055220dc7:   jne    0x0000775055220de0
  0x0000775055220dc9:   mov    %rbx,0x428(%r8)
  0x0000775055220dd0:   movq   $0x1,0x430(%r8)
  0x0000775055220ddb:   jmp    0x0000775055220e25
  0x0000775055220de0:   cmpq   $0x0,0x438(%r8)
  0x0000775055220deb:   jne    0x0000775055220e04
  0x0000775055220ded:   mov    %rbx,0x438(%r8)
  0x0000775055220df4:   movq   $0x1,0x440(%r8)
  0x0000775055220dff:   jmp    0x0000775055220e25
  0x0000775055220e04:   jmp    0x0000775055220e25
  0x0000775055220e09:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220e13:   subq   $0x1,0x418(%r8)
  0x0000775055220e1b:   jmp    0x0000775055221672
  0x0000775055220e20:   jmp    0x0000775055220e25           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@208 (line 712)
  0x0000775055220e25:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x000077505522167b
  0x0000775055220e28:   mov    %rsi,%rcx
  0x0000775055220e2b:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220e35:   mov    0x8(%rcx),%ecx
  0x0000775055220e38:   movabs $0x800000000,%r10
  0x0000775055220e42:   add    %r10,%rcx
  0x0000775055220e45:   cmp    0x460(%r8),%rcx
  0x0000775055220e4c:   jne    0x0000775055220e5b
  0x0000775055220e4e:   addq   $0x1,0x468(%r8)
  0x0000775055220e56:   jmp    0x0000775055220ec1
  0x0000775055220e5b:   cmp    0x470(%r8),%rcx
  0x0000775055220e62:   jne    0x0000775055220e71
  0x0000775055220e64:   addq   $0x1,0x478(%r8)
  0x0000775055220e6c:   jmp    0x0000775055220ec1
  0x0000775055220e71:   cmpq   $0x0,0x460(%r8)
  0x0000775055220e7c:   jne    0x0000775055220e95
  0x0000775055220e7e:   mov    %rcx,0x460(%r8)
  0x0000775055220e85:   movq   $0x1,0x468(%r8)
  0x0000775055220e90:   jmp    0x0000775055220ec1
  0x0000775055220e95:   cmpq   $0x0,0x470(%r8)
  0x0000775055220ea0:   jne    0x0000775055220eb9
  0x0000775055220ea2:   mov    %rcx,0x470(%r8)
  0x0000775055220ea9:   movq   $0x1,0x478(%r8)
  0x0000775055220eb4:   jmp    0x0000775055220ec1
  0x0000775055220eb9:   addq   $0x1,0x450(%r8)
  0x0000775055220ec1:   mov    %r9,%rdx
  0x0000775055220ec4:   mov    %rax,%rcx
  0x0000775055220ec7:   mov    %rdi,%r8
  0x0000775055220eca:   mov    %r13,%r9                     ;*invokevirtual split {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@217 (line 712)
  0x0000775055220ecd:   mov    %edi,0x34(%rsp)
  0x0000775055220ed1:   mov    %r13d,0x30(%rsp)
  0x0000775055220ed6:   nop
  0x0000775055220ed7:   call   0x000077505c788080           ; ImmutableOopMap {[64]=Oop [80]=Oop [56]=Oop }
                                                            ;*invokevirtual split {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@217 (line 712)
                                                            ;   {optimized virtual_call}
  0x0000775055220edc:   movabs $0x7750202fb6f0,%rax         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220ee6:   incl   0x488(%rax)
  0x0000775055220eec:   mov    0x34(%rsp),%ecx
  0x0000775055220ef0:   mov    0x38(%rsp),%rbx
  0x0000775055220ef5:   mov    0x30(%rsp),%r13d
  0x0000775055220efa:   jmp    0x00007750552214ae           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@220 (line 712)
  0x0000775055220eff:   mov    %edi,0x34(%rsp)
  0x0000775055220f03:   mov    %r14d,0x48(%rsp)
  0x0000775055220f08:   mov    %r13d,0x30(%rsp)
  0x0000775055220f0d:   movabs $0x0,%rax                    ;   {oop(NULL)}
  0x0000775055220f17:   movabs $0x0,%rdi                    ;   {oop(NULL)}
  0x0000775055220f21:   movabs $0x0,%rbx                    ;   {oop(NULL)}
  0x0000775055220f2b:   movabs $0x0,%rdx                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@235 (line 718)
                                                            ;   {oop(NULL)}
  0x0000775055220f35:   mov    0x30(%rsp),%r13d
  0x0000775055220f3a:   nopw   0x0(%rax,%rax,1)
  0x0000775055220f40:   mov    0x18(%rsi),%ecx              ; implicit exception: dispatches to 0x0000775055221680
  0x0000775055220f43:   shl    $0x3,%rcx                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@237 (line 718)
  0x0000775055220f47:   mov    0xc(%rsi),%r8d               ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@244 (line 719)
  0x0000775055220f4b:   and    %r13,%r8
  0x0000775055220f4e:   cmp    $0x0,%r8d
  0x0000775055220f52:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220f5c:   movabs $0x4a0,%r9
  0x0000775055220f66:   jne    0x0000775055220f76
  0x0000775055220f6c:   movabs $0x4b0,%r9
  0x0000775055220f76:   mov    (%r8,%r9,1),%r11
  0x0000775055220f7a:   lea    0x1(%r11),%r11
  0x0000775055220f7e:   mov    %r11,(%r8,%r9,1)
  0x0000775055220f82:   jne    0x0000775055221023           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@249 (line 719)
  0x0000775055220f88:   cmp    $0x0,%rbx
  0x0000775055220f8c:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220f96:   movabs $0x4c0,%r9
  0x0000775055220fa0:   jne    0x0000775055220fb0
  0x0000775055220fa6:   movabs $0x4d0,%r9
  0x0000775055220fb0:   mov    (%r8,%r9,1),%r11
  0x0000775055220fb4:   lea    0x1(%r11),%r11
  0x0000775055220fb8:   mov    %r11,(%r8,%r9,1)
  0x0000775055220fbc:   jne    0x0000775055220fda           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@254 (line 720)
  0x0000775055220fc2:   movabs $0x7750202fb6f0,%rbx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055220fcc:   incl   0x4e0(%rbx)
  0x0000775055220fd2:   mov    %rsi,%rbx
  0x0000775055220fd5:   jmp    0x000077505522100b           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@261 (line 721)
  0x0000775055220fda:   movsbl 0x38(%r15),%r8d
  0x0000775055220fdf:   cmp    $0x0,%r8d
  0x0000775055220fe3:   jne    0x0000775055221685
  0x0000775055220fe9:   mov    %rsi,%r10
  0x0000775055220fec:   shr    $0x3,%r10
  0x0000775055220ff0:   mov    %r10d,0x18(%rbx)             ; implicit exception: dispatches to 0x00007750552216a5
  0x0000775055220ff4:   mov    %rbx,%r8
  0x0000775055220ff7:   xor    %rsi,%r8
  0x0000775055220ffa:   shr    $0x16,%r8
  0x0000775055220ffe:   cmp    $0x0,%r8
  0x0000775055221002:   jne    0x00007750552216aa           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@268 (line 723)
  0x0000775055221008:   mov    %rdx,%rbx                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@271 (line 724)
  0x000077505522100b:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055221015:   incl   0x4f8(%rdx)
  0x000077505522101b:   mov    %rbx,%rdx
  0x000077505522101e:   jmp    0x00007750552210a9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@275 (line 724)
  0x0000775055221023:   cmp    $0x0,%rax
  0x0000775055221027:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055221031:   movabs $0x510,%r9
  0x000077505522103b:   jne    0x000077505522104b
  0x0000775055221041:   movabs $0x520,%r9
  0x000077505522104b:   mov    (%r8,%r9,1),%r11
  0x000077505522104f:   lea    0x1(%r11),%r11
  0x0000775055221053:   mov    %r11,(%r8,%r9,1)
  0x0000775055221057:   jne    0x0000775055221075           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@280 (line 727)
  0x000077505522105d:   movabs $0x7750202fb6f0,%rax         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055221067:   incl   0x530(%rax)
  0x000077505522106d:   mov    %rsi,%rdi
  0x0000775055221070:   jmp    0x00007750552210a3           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@287 (line 728)
  0x0000775055221075:   movsbl 0x38(%r15),%r8d
  0x000077505522107a:   cmp    $0x0,%r8d
  0x000077505522107e:   jne    0x00007750552216c2
  0x0000775055221084:   mov    %rsi,%r10
  0x0000775055221087:   shr    $0x3,%r10
  0x000077505522108b:   mov    %r10d,0x18(%rax)             ; implicit exception: dispatches to 0x00007750552216e2
  0x000077505522108f:   mov    %rax,%r8
  0x0000775055221092:   xor    %rsi,%r8
  0x0000775055221095:   shr    $0x16,%r8
  0x0000775055221099:   cmp    $0x0,%r8
  0x000077505522109d:   jne    0x00007750552216e7           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@294 (line 730)
  0x00007750552210a3:   mov    %rsi,%rax
  0x00007750552210a6:   mov    %rbx,%rsi                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@301 (line 733)
  0x00007750552210a9:   cmp    $0x0,%rcx
  0x00007750552210ad:   mov    $0x2,%ebx
  0x00007750552210b2:   jne    0x00007750552210bd
  0x00007750552210b8:   mov    $0x0,%ebx
  0x00007750552210bd:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552210c7:   mov    0xf8(%r8),%r9d
  0x00007750552210ce:   add    %ebx,%r9d
  0x00007750552210d1:   mov    %r9d,0xf8(%r8)
  0x00007750552210d8:   cmp    $0x0,%ebx
  0x00007750552210db:   jne    0x00007750552210e7
  0x00007750552210e1:   mov    $0x2,%r9d
  0x00007750552210e7:   and    $0x3ffe,%r9d
  0x00007750552210ee:   cmp    $0x0,%r9d
  0x00007750552210f2:   je     0x00007750552216ff           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@306 (line 733)
  0x00007750552210f8:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }
                                                            ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@306 (line 733)
  0x00007750552210ff:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055221102:   cmp    $0x0,%rcx
  0x0000775055221106:   movabs $0x7750202fb6f0,%rbx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055221110:   movabs $0x558,%r8
  0x000077505522111a:   je     0x000077505522112a
  0x0000775055221120:   movabs $0x548,%r8
  0x000077505522112a:   mov    (%rbx,%r8,1),%r9
  0x000077505522112e:   lea    0x1(%r9),%r9
  0x0000775055221132:   mov    %r9,(%rbx,%r8,1)
  0x0000775055221136:   je     0x0000775055221147           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@306 (line 733)
  0x000077505522113c:   mov    %rsi,%rbx
  0x000077505522113f:   mov    %rcx,%rsi
  0x0000775055221142:   jmp    0x0000775055220f40           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@235 (line 718)
  0x0000775055221147:   cmp    $0x0,%rsi
  0x000077505522114b:   movabs $0x7750202fb6f0,%rbx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055221155:   movabs $0x568,%rcx
  0x000077505522115f:   je     0x000077505522116f
  0x0000775055221165:   movabs $0x578,%rcx
  0x000077505522116f:   mov    (%rbx,%rcx,1),%r8
  0x0000775055221173:   lea    0x1(%r8),%r8
  0x0000775055221177:   mov    %r8,(%rbx,%rcx,1)
  0x000077505522117b:   mov    0x34(%rsp),%ecx
  0x000077505522117f:   mov    0x38(%rsp),%rbx
  0x0000775055221184:   je     0x00007750552212ff           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@311 (line 734)
  0x000077505522118a:   movsbl 0x38(%r15),%r8d
  0x000077505522118f:   cmp    $0x0,%r8d
  0x0000775055221193:   jne    0x0000775055221720
  0x0000775055221199:   movl   $0x0,0x18(%rsi)              ; implicit exception: dispatches to 0x0000775055221740
                                                            ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@317 (line 735)
  0x00007750552211a0:   cmp    0xc(%rbx),%ecx
  0x00007750552211a3:   jae    0x0000775055221745
  0x00007750552211a9:   cmp    $0x0,%rdx
  0x00007750552211ad:   jne    0x00007750552211c6
  0x00007750552211af:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552211b9:   orb    $0x1,0x581(%r8)
  0x00007750552211c1:   jmp    0x00007750552212ca
  0x00007750552211c6:   mov    0x8(%rbx),%esi               ; implicit exception: dispatches to 0x0000775055221753
  0x00007750552211c9:   movabs $0x800000000,%r10
  0x00007750552211d3:   add    %r10,%rsi
  0x00007750552211d6:   mov    0x8(%rdx),%r8d
  0x00007750552211da:   movabs $0x800000000,%r10
  0x00007750552211e4:   add    %r10,%r8
  0x00007750552211e7:   mov    0xe0(%rsi),%rsi
  0x00007750552211ee:   cmp    %rsi,%r8
  0x00007750552211f1:   je     0x0000775055221223
  0x00007750552211f7:   mov    0x14(%rsi),%r9d
  0x00007750552211fb:   cmp    (%r8,%r9,1),%rsi
  0x00007750552211ff:   je     0x0000775055221223
  0x0000775055221205:   cmp    $0x20,%r9d
  0x0000775055221209:   jne    0x00007750552212b3
  0x000077505522120f:   push   %r8
  0x0000775055221211:   push   %rsi
  0x0000775055221212:   call   0x000077505c82bf80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x0000775055221217:   pop    %r8
  0x0000775055221219:   pop    %rsi
  0x000077505522121a:   cmp    $0x0,%esi
  0x000077505522121d:   je     0x00007750552212b3
  0x0000775055221223:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505522122d:   mov    0x8(%rdx),%esi
  0x0000775055221230:   movabs $0x800000000,%r10
  0x000077505522123a:   add    %r10,%rsi
  0x000077505522123d:   cmp    0x598(%r8),%rsi
  0x0000775055221244:   jne    0x0000775055221253
  0x0000775055221246:   addq   $0x1,0x5a0(%r8)
  0x000077505522124e:   jmp    0x00007750552212ca
  0x0000775055221253:   cmp    0x5a8(%r8),%rsi
  0x000077505522125a:   jne    0x0000775055221269
  0x000077505522125c:   addq   $0x1,0x5b0(%r8)
  0x0000775055221264:   jmp    0x00007750552212ca
  0x0000775055221269:   cmpq   $0x0,0x598(%r8)
  0x0000775055221274:   jne    0x000077505522128d
  0x0000775055221276:   mov    %rsi,0x598(%r8)
  0x000077505522127d:   movq   $0x1,0x5a0(%r8)
  0x0000775055221288:   jmp    0x00007750552212ca
  0x000077505522128d:   cmpq   $0x0,0x5a8(%r8)
  0x0000775055221298:   jne    0x00007750552212b1
  0x000077505522129a:   mov    %rsi,0x5a8(%r8)
  0x00007750552212a1:   movq   $0x1,0x5b0(%r8)
  0x00007750552212ac:   jmp    0x00007750552212ca
  0x00007750552212b1:   jmp    0x00007750552212ca
  0x00007750552212b3:   movabs $0x7750202fb6f0,%r8          ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552212bd:   subq   $0x1,0x588(%r8)
  0x00007750552212c5:   jmp    0x0000775055221758
  0x00007750552212ca:   movslq %ecx,%rsi
  0x00007750552212cd:   lea    0x10(%rbx,%rsi,4),%rsi
  0x00007750552212d2:   movsbl 0x38(%r15),%r8d
  0x00007750552212d7:   cmp    $0x0,%r8d
  0x00007750552212db:   jne    0x0000775055221761
  0x00007750552212e1:   mov    %rdx,%r10
  0x00007750552212e4:   shr    $0x3,%r10
  0x00007750552212e8:   mov    %r10d,(%rsi)
  0x00007750552212eb:   mov    %rsi,%r8
  0x00007750552212ee:   xor    %rdx,%r8
  0x00007750552212f1:   shr    $0x16,%r8
  0x00007750552212f5:   cmp    $0x0,%r8
  0x00007750552212f9:   jne    0x0000775055221780           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@326 (line 736)
  0x00007750552212ff:   cmp    $0x0,%rax
  0x0000775055221303:   movabs $0x7750202fb6f0,%rsi         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505522130d:   movabs $0x5c0,%rdx
  0x0000775055221317:   je     0x0000775055221327
  0x000077505522131d:   movabs $0x5d0,%rdx
  0x0000775055221327:   mov    (%rsi,%rdx,1),%r8
  0x000077505522132b:   lea    0x1(%r8),%r8
  0x000077505522132f:   mov    %r8,(%rsi,%rdx,1)
  0x0000775055221333:   je     0x00007750552214ae           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@329 (line 738)
  0x0000775055221339:   movsbl 0x38(%r15),%esi
  0x000077505522133e:   cmp    $0x0,%esi
  0x0000775055221341:   jne    0x0000775055221798
  0x0000775055221347:   movl   $0x0,0x18(%rax)              ; implicit exception: dispatches to 0x00007750552217b7
                                                            ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@335 (line 739)
  0x000077505522134e:   mov    %rcx,%rax
  0x0000775055221351:   add    %r13d,%eax
  0x0000775055221354:   cmp    0xc(%rbx),%eax
  0x0000775055221357:   jae    0x00007750552217bc
  0x000077505522135d:   cmp    $0x0,%rdi
  0x0000775055221361:   jne    0x0000775055221379
  0x0000775055221363:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505522136d:   orb    $0x1,0x5d9(%rdx)
  0x0000775055221374:   jmp    0x000077505522147a
  0x0000775055221379:   mov    0x8(%rbx),%esi               ; implicit exception: dispatches to 0x00007750552217ca
  0x000077505522137c:   movabs $0x800000000,%r10
  0x0000775055221386:   add    %r10,%rsi
  0x0000775055221389:   mov    0x8(%rdi),%edx
  0x000077505522138c:   movabs $0x800000000,%r10
  0x0000775055221396:   add    %r10,%rdx
  0x0000775055221399:   mov    0xe0(%rsi),%rsi
  0x00007750552213a0:   cmp    %rsi,%rdx
  0x00007750552213a3:   je     0x00007750552213d3
  0x00007750552213a9:   mov    0x14(%rsi),%r8d
  0x00007750552213ad:   cmp    (%rdx,%r8,1),%rsi
  0x00007750552213b1:   je     0x00007750552213d3
  0x00007750552213b7:   cmp    $0x20,%r8d
  0x00007750552213bb:   jne    0x0000775055221463
  0x00007750552213c1:   push   %rdx
  0x00007750552213c2:   push   %rsi
  0x00007750552213c3:   call   0x000077505c82bf80           ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007750552213c8:   pop    %rdx
  0x00007750552213c9:   pop    %rsi
  0x00007750552213ca:   cmp    $0x0,%esi
  0x00007750552213cd:   je     0x0000775055221463
  0x00007750552213d3:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552213dd:   mov    0x8(%rdi),%esi
  0x00007750552213e0:   movabs $0x800000000,%r10
  0x00007750552213ea:   add    %r10,%rsi
  0x00007750552213ed:   cmp    0x5f0(%rdx),%rsi
  0x00007750552213f4:   jne    0x0000775055221403
  0x00007750552213f6:   addq   $0x1,0x5f8(%rdx)
  0x00007750552213fe:   jmp    0x000077505522147a
  0x0000775055221403:   cmp    0x600(%rdx),%rsi
  0x000077505522140a:   jne    0x0000775055221419
  0x000077505522140c:   addq   $0x1,0x608(%rdx)
  0x0000775055221414:   jmp    0x000077505522147a
  0x0000775055221419:   cmpq   $0x0,0x5f0(%rdx)
  0x0000775055221424:   jne    0x000077505522143d
  0x0000775055221426:   mov    %rsi,0x5f0(%rdx)
  0x000077505522142d:   movq   $0x1,0x5f8(%rdx)
  0x0000775055221438:   jmp    0x000077505522147a
  0x000077505522143d:   cmpq   $0x0,0x600(%rdx)
  0x0000775055221448:   jne    0x0000775055221461
  0x000077505522144a:   mov    %rsi,0x600(%rdx)
  0x0000775055221451:   movq   $0x1,0x608(%rdx)
  0x000077505522145c:   jmp    0x000077505522147a
  0x0000775055221461:   jmp    0x000077505522147a
  0x0000775055221463:   movabs $0x7750202fb6f0,%rdx         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000077505522146d:   subq   $0x1,0x5e0(%rdx)
  0x0000775055221475:   jmp    0x00007750552217cf
  0x000077505522147a:   movslq %eax,%rax
  0x000077505522147d:   lea    0x10(%rbx,%rax,4),%rax
  0x0000775055221482:   movsbl 0x38(%r15),%esi
  0x0000775055221487:   cmp    $0x0,%esi
  0x000077505522148a:   jne    0x00007750552217d8
  0x0000775055221490:   mov    %rdi,%r10
  0x0000775055221493:   shr    $0x3,%r10
  0x0000775055221497:   mov    %r10d,(%rax)
  0x000077505522149a:   mov    %rax,%rsi
  0x000077505522149d:   xor    %rdi,%rsi
  0x00007750552214a0:   shr    $0x16,%rsi
  0x00007750552214a4:   cmp    $0x0,%rsi
  0x00007750552214a8:   jne    0x00007750552217f6           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@346 (line 740)
  0x00007750552214ae:   mov    %rcx,%rdi
  0x00007750552214b1:   inc    %edi
  0x00007750552214b3:   movabs $0x7750202fb6f0,%rax         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552214bd:   mov    0xf8(%rax),%esi
  0x00007750552214c3:   add    $0x2,%esi
  0x00007750552214c6:   mov    %esi,0xf8(%rax)
  0x00007750552214cc:   and    $0x3ffe,%esi
  0x00007750552214d2:   cmp    $0x0,%esi
  0x00007750552214d5:   je     0x000077505522180e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@350 (line 705)
  0x00007750552214db:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[64]=Oop [80]=Oop rbx=Oop [56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@350 (line 705)
  0x00007750552214e2:   test   %eax,(%r10)                  ;   {poll}
  0x00007750552214e5:   movabs $0x7750202fb6f0,%rax         ;   {metadata(method data for {method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007750552214ef:   incl   0x618(%rax)
  0x00007750552214f5:   mov    %rdi,%rcx
  0x00007750552214f8:   mov    %rcx,%rdi
  0x00007750552214fb:   mov    %rbx,%rax
  0x00007750552214fe:   mov    0x48(%rsp),%r14d
  0x0000775055221503:   mov    0x50(%rsp),%r11
  0x0000775055221508:   mov    0x40(%rsp),%r9
  0x000077505522150d:   jmp    0x0000775055220830           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@350 (line 705)
  0x0000775055221512:   mov    %rax,%rbx
  0x0000775055221515:   mov    %rbx,%rax
  0x0000775055221518:   add    $0x60,%rsp
  0x000077505522151c:   pop    %rbp
  0x000077505522151d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055221524:   ja     0x000077505522182f
  0x000077505522152a:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@355 (line 746)
  0x000077505522152b:   movl   $0x7fffffff,0x1c(%rsi)       ;*putfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@37 (line 682)
  0x0000775055221532:   mov    %r11,%rax
  0x0000775055221535:   add    $0x60,%rsp
  0x0000775055221539:   pop    %rbp
  0x000077505522153a:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055221541:   ja     0x0000775055221845
  0x0000775055221547:   ret
  0x0000775055221548:   movabs $0x775020190138,%r10         ;   {metadata({method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055221552:   mov    %r10,0x8(%rsp)
  0x0000775055221557:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522155f:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::resize@-1 (line 676)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055221564:   jmp    0x0000775055220419
  0x0000775055221569:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [64]=Oop r11=Oop [80]=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@14 (line 677)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522156e:   call   0x000077505c82a780           ; ImmutableOopMap {r11=Oop [80]=Oop r9=Oop [64]=Oop }
                                                            ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@133 (line 702)
                                                            ;   {runtime_call new_object_array Runtime1 stub}
  0x0000775055221573:   jmp    0x00007750552207ba
  0x0000775055221578:   mov    0x24(%r9),%edx
  0x000077505522157c:   shl    $0x3,%rdx
  0x0000775055221580:   cmp    $0x0,%rdx
  0x0000775055221584:   je     0x00007750552207cd
  0x000077505522158a:   mov    %rdx,(%rsp)
  0x000077505522158e:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055221593:   jmp    0x00007750552207cd
  0x0000775055221598:   cmp    $0x0,%rax
  0x000077505522159c:   je     0x00007750552207ec
  0x00007750552215a2:   mov    %r9,(%rsp)
  0x00007750552215a6:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x00007750552215ab:   jmp    0x00007750552207ec
  0x00007750552215b0:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@160 (line 707)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552215b5:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@160 (line 707)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552215ba:   mov    %rdi,(%rsp)
  0x00007750552215be:   mov    %r11,0x8(%rsp)
  0x00007750552215c3:   call   0x000077505c828ca0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }
                                                            ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@160 (line 707)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007750552215c8:   mov    %rdi,(%rsp)
  0x00007750552215cc:   mov    %r11,0x8(%rsp)
  0x00007750552215d1:   call   0x000077505c828ca0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop rdx=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@171 (line 708)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007750552215d6:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop rdx=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@171 (line 708)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552215db:   mov    %rdx,(%rsp)
  0x00007750552215df:   call   0x000077505c82b6a0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop rdx=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@171 (line 708)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x00007750552215e4:   mov    (%rcx),%r8d
  0x00007750552215e7:   shl    $0x3,%r8
  0x00007750552215eb:   cmp    $0x0,%r8
  0x00007750552215ef:   je     0x0000775055220a14
  0x00007750552215f5:   mov    %r8,(%rsp)
  0x00007750552215f9:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552215fe:   jmp    0x0000775055220a14
  0x0000775055221603:   cmp    $0x0,%rdx
  0x0000775055221607:   je     0x0000775055220a32
  0x000077505522160d:   mov    %rcx,(%rsp)
  0x0000775055221611:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055221616:   jmp    0x0000775055220a32
  0x000077505522161b:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                            ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@174 (line 709)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055221620:   mov    %rdx,(%rsp)
  0x0000775055221624:   mov    %rax,0x8(%rsp)
  0x0000775055221629:   call   0x000077505c828ca0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@194 (line 710)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505522162e:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@194 (line 710)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055221633:   mov    %rsi,(%rsp)
  0x0000775055221637:   call   0x000077505c82b6a0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@194 (line 710)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000077505522163c:   mov    (%rdx),%ecx
  0x000077505522163e:   shl    $0x3,%rcx
  0x0000775055221642:   cmp    $0x0,%rcx
  0x0000775055221646:   je     0x0000775055220bbc
  0x000077505522164c:   mov    %rcx,(%rsp)
  0x0000775055221650:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055221655:   jmp    0x0000775055220bbc
  0x000077505522165a:   cmp    $0x0,%rsi
  0x000077505522165e:   je     0x0000775055220bda
  0x0000775055221664:   mov    %rdx,(%rsp)
  0x0000775055221668:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505522166d:   jmp    0x0000775055220bda
  0x0000775055221672:   mov    %rsi,(%rsp)
  0x0000775055221676:   call   0x000077505c82b9a0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@208 (line 712)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000077505522167b:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop rsi=Oop }
                                                            ;*invokevirtual split {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::resize@217 (line 712)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055221680:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rbx=Oop rdx=Oop }
                                                            ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@237 (line 718)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055221685:   mov    0x18(%rbx),%r8d              ; implicit exception: dispatches to 0x000077505522185b
  0x0000775055221689:   shl    $0x3,%r8
  0x000077505522168d:   cmp    $0x0,%r8
  0x0000775055221691:   je     0x0000775055220fe9
  0x0000775055221697:   mov    %r8,(%rsp)
  0x000077505522169b:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552216a0:   jmp    0x0000775055220fe9
  0x00007750552216a5:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }
                                                            ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@268 (line 723)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552216aa:   cmp    $0x0,%rsi
  0x00007750552216ae:   je     0x0000775055221008
  0x00007750552216b4:   mov    %rbx,(%rsp)
  0x00007750552216b8:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x00007750552216bd:   jmp    0x0000775055221008
  0x00007750552216c2:   mov    0x18(%rax),%r8d              ; implicit exception: dispatches to 0x0000775055221860
  0x00007750552216c6:   shl    $0x3,%r8
  0x00007750552216ca:   cmp    $0x0,%r8
  0x00007750552216ce:   je     0x0000775055221084
  0x00007750552216d4:   mov    %r8,(%rsp)
  0x00007750552216d8:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552216dd:   jmp    0x0000775055221084
  0x00007750552216e2:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }
                                                            ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@294 (line 730)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552216e7:   cmp    $0x0,%rsi
  0x00007750552216eb:   je     0x00007750552210a3
  0x00007750552216f1:   mov    %rax,(%rsp)
  0x00007750552216f5:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x00007750552216fa:   jmp    0x00007750552210a3
  0x00007750552216ff:   movabs $0x775020190138,%r10         ;   {metadata({method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055221709:   mov    %r10,0x8(%rsp)
  0x000077505522170e:   movq   $0x132,(%rsp)
  0x0000775055221716:   call   0x000077505c82e680           ; ImmutableOopMap {[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }
                                                            ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@306 (line 733)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522171b:   jmp    0x00007750552210f8
  0x0000775055221720:   mov    0x18(%rsi),%r8d              ; implicit exception: dispatches to 0x0000775055221865
  0x0000775055221724:   shl    $0x3,%r8
  0x0000775055221728:   cmp    $0x0,%r8
  0x000077505522172c:   je     0x0000775055221199
  0x0000775055221732:   mov    %r8,(%rsp)
  0x0000775055221736:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522173b:   jmp    0x0000775055221199
  0x0000775055221740:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                            ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@317 (line 735)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055221745:   mov    %rcx,(%rsp)
  0x0000775055221749:   mov    %rbx,0x8(%rsp)
  0x000077505522174e:   call   0x000077505c828ca0           ; ImmutableOopMap {[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@326 (line 736)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055221753:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@326 (line 736)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055221758:   mov    %rdx,(%rsp)
  0x000077505522175c:   call   0x000077505c82b6a0           ; ImmutableOopMap {[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@326 (line 736)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x0000775055221761:   mov    (%rsi),%r8d
  0x0000775055221764:   shl    $0x3,%r8
  0x0000775055221768:   cmp    $0x0,%r8
  0x000077505522176c:   je     0x00007750552212e1
  0x0000775055221772:   mov    %r8,(%rsp)
  0x0000775055221776:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522177b:   jmp    0x00007750552212e1
  0x0000775055221780:   cmp    $0x0,%rdx
  0x0000775055221784:   je     0x00007750552212ff
  0x000077505522178a:   mov    %rsi,(%rsp)
  0x000077505522178e:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055221793:   jmp    0x00007750552212ff
  0x0000775055221798:   mov    0x18(%rax),%esi              ; implicit exception: dispatches to 0x000077505522186a
  0x000077505522179b:   shl    $0x3,%rsi
  0x000077505522179f:   cmp    $0x0,%rsi
  0x00007750552217a3:   je     0x0000775055221347
  0x00007750552217a9:   mov    %rsi,(%rsp)
  0x00007750552217ad:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552217b2:   jmp    0x0000775055221347
  0x00007750552217b7:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                            ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@335 (line 739)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552217bc:   mov    %rax,(%rsp)
  0x00007750552217c0:   mov    %rbx,0x8(%rsp)
  0x00007750552217c5:   call   0x000077505c828ca0           ; ImmutableOopMap {[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@346 (line 740)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007750552217ca:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@346 (line 740)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552217cf:   mov    %rdi,(%rsp)
  0x00007750552217d3:   call   0x000077505c82b6a0           ; ImmutableOopMap {[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                            ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@346 (line 740)
                                                            ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x00007750552217d8:   mov    (%rax),%esi
  0x00007750552217da:   shl    $0x3,%rsi
  0x00007750552217de:   cmp    $0x0,%rsi
  0x00007750552217e2:   je     0x0000775055221490
  0x00007750552217e8:   mov    %rsi,(%rsp)
  0x00007750552217ec:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552217f1:   jmp    0x0000775055221490
  0x00007750552217f6:   cmp    $0x0,%rdi
  0x00007750552217fa:   je     0x00007750552214ae
  0x0000775055221800:   mov    %rax,(%rsp)
  0x0000775055221804:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055221809:   jmp    0x00007750552214ae
  0x000077505522180e:   movabs $0x775020190138,%r10         ;   {metadata({method} {0x0000775020190138} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x0000775055221818:   mov    %r10,0x8(%rsp)
  0x000077505522181d:   movq   $0x15e,(%rsp)
  0x0000775055221825:   call   0x000077505c82e680           ; ImmutableOopMap {[64]=Oop [80]=Oop rbx=Oop [56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@350 (line 705)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522182a:   jmp    0x00007750552214db
  0x000077505522182f:   movabs $0x77505522151d,%r10         ;   {internal_word}
  0x0000775055221839:   mov    %r10,0x360(%r15)
  0x0000775055221840:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055221845:   movabs $0x77505522153a,%r10         ;   {internal_word}
  0x000077505522184f:   mov    %r10,0x360(%r15)
  0x0000775055221856:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522185b:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }
                                                            ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@268 (line 723)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055221860:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }
                                                            ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@294 (line 730)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055221865:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop rsi=Oop }
                                                            ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@317 (line 735)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522186a:   call   0x000077505c8295a0           ; ImmutableOopMap {[64]=Oop [80]=Oop rbx=Oop [56]=Oop rax=Oop rdi=Oop }
                                                            ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.HashMap::resize@335 (line 739)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522186f:   nop
  0x0000775055221870:   nop
  0x0000775055221871:   mov    0x3d8(%r15),%rax
  0x0000775055221878:   movq   $0x0,0x3d8(%r15)
  0x0000775055221883:   movq   $0x0,0x3e0(%r15)
  0x000077505522188e:   add    $0x60,%rsp
  0x0000775055221892:   pop    %rbp
  0x0000775055221893:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055221898:   hlt
  0x0000775055221899:   hlt
  0x000077505522189a:   hlt
  0x000077505522189b:   hlt
  0x000077505522189c:   hlt
  0x000077505522189d:   hlt
  0x000077505522189e:   hlt
  0x000077505522189f:   hlt
[Stub Code]
  0x00007750552218a0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x00007750552218a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552218af:   jmp    0x00007750552218af           ;   {runtime_call}
[Exception Handler]
  0x00007750552218b4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007750552218b9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552218c3:   and    $0xfffffffffffffff0,%rsp
  0x00007750552218c7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552218cc:   hlt
[Deopt Handler Code]
  0x00007750552218cd:   movabs $0x7750552218cd,%r10         ;   {section_word}
  0x00007750552218d7:   push   %r10
  0x00007750552218d9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552218de:   hlt
  0x00007750552218df:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     309   84       3       java.util.HashMap::put (13 bytes)
 total in heap  [0x0000775055222390,0x00007750552229e0] = 1616
 relocation     [0x00007750552224f0,0x0000775055222548] = 88
 main code      [0x0000775055222560,0x0000775055222800] = 672
 stub code      [0x0000775055222800,0x0000775055222850] = 80
 metadata       [0x0000775055222850,0x0000775055222860] = 16
 scopes data    [0x0000775055222860,0x00007750552228f8] = 152
 scopes pcs     [0x00007750552228f8,0x00007750552229c8] = 208
 dependencies   [0x00007750552229c8,0x00007750552229d0] = 8
 nul chk table  [0x00007750552229d0,0x00007750552229e0] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x90]  (sp of caller)
  0x0000775055222560:   mov    0x8(%rsi),%r10d
  0x0000775055222564:   movabs $0x800000000,%r11
  0x000077505522256e:   add    %r11,%r10
  0x0000775055222571:   cmp    %rax,%r10
  0x0000775055222574:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522257a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055222580:   mov    %eax,-0x14000(%rsp)
  0x0000775055222587:   push   %rbp
  0x0000775055222588:   sub    $0x80,%rsp
  0x000077505522258f:   movabs $0x7750202fca58,%rdi         ;   {metadata(method data for {method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x0000775055222599:   mov    0xf4(%rdi),%ebx
  0x000077505522259f:   add    $0x2,%ebx
  0x00007750552225a2:   mov    %ebx,0xf4(%rdi)
  0x00007750552225a8:   and    $0x7fe,%ebx
  0x00007750552225ae:   cmp    $0x0,%ebx
  0x00007750552225b1:   je     0x0000775055222772           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::put@0 (line 610)
  0x00007750552225b7:   movabs $0x7750202fca58,%rdi         ;   {metadata(method data for {method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007750552225c1:   addq   $0x1,0x138(%rdi)
  0x00007750552225c9:   movabs $0x7750202f3548,%rdi         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007750552225d3:   mov    0xf4(%rdi),%ebx
  0x00007750552225d9:   add    $0x2,%ebx
  0x00007750552225dc:   mov    %ebx,0xf4(%rdi)
  0x00007750552225e2:   and    $0x1ffffe,%ebx
  0x00007750552225e8:   cmp    $0x0,%ebx
  0x00007750552225eb:   je     0x0000775055222793
  0x00007750552225f1:   cmp    $0x0,%rdx
  0x00007750552225f5:   movabs $0x7750202f3548,%rdi         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007750552225ff:   movabs $0x138,%rbx
  0x0000775055222609:   jne    0x0000775055222619
  0x000077505522260f:   movabs $0x148,%rbx
  0x0000775055222619:   mov    (%rdi,%rbx,1),%rax
  0x000077505522261d:   lea    0x1(%rax),%rax
  0x0000775055222621:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055222625:   jne    0x0000775055222654           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@1 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
  0x000077505522262b:   movabs $0x7750202f3548,%rdi         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000775055222635:   incl   0x158(%rdi)
  0x000077505522263b:   mov    $0x0,%edi
  0x0000775055222640:   mov    %rcx,0x68(%rsp)
  0x0000775055222645:   mov    %rdx,0x60(%rsp)
  0x000077505522264a:   mov    %rsi,0x58(%rsp)
  0x000077505522264f:   jmp    0x0000775055222720           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@5 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
  0x0000775055222654:   mov    %rcx,0x68(%rsp)
  0x0000775055222659:   mov    %rsi,0x58(%rsp)
  0x000077505522265e:   cmp    (%rdx),%rax                  ; implicit exception: dispatches to 0x00007750552227b4
  0x0000775055222661:   mov    %rdx,%rdi
  0x0000775055222664:   movabs $0x7750202f3548,%rbx         ;   {metadata(method data for {method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000077505522266e:   mov    0x8(%rdi),%edi
  0x0000775055222671:   movabs $0x800000000,%r10
  0x000077505522267b:   add    %r10,%rdi
  0x000077505522267e:   cmp    0x180(%rbx),%rdi
  0x0000775055222685:   jne    0x0000775055222694
  0x0000775055222687:   addq   $0x1,0x188(%rbx)
  0x000077505522268f:   jmp    0x00007750552226fa
  0x0000775055222694:   cmp    0x190(%rbx),%rdi
  0x000077505522269b:   jne    0x00007750552226aa
  0x000077505522269d:   addq   $0x1,0x198(%rbx)
  0x00007750552226a5:   jmp    0x00007750552226fa
  0x00007750552226aa:   cmpq   $0x0,0x180(%rbx)
  0x00007750552226b5:   jne    0x00007750552226ce
  0x00007750552226b7:   mov    %rdi,0x180(%rbx)
  0x00007750552226be:   movq   $0x1,0x188(%rbx)
  0x00007750552226c9:   jmp    0x00007750552226fa
  0x00007750552226ce:   cmpq   $0x0,0x190(%rbx)
  0x00007750552226d9:   jne    0x00007750552226f2
  0x00007750552226db:   mov    %rdi,0x190(%rbx)
  0x00007750552226e2:   movq   $0x1,0x198(%rbx)
  0x00007750552226ed:   jmp    0x00007750552226fa
  0x00007750552226f2:   addq   $0x1,0x170(%rbx)
  0x00007750552226fa:   mov    %rdx,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
  0x00007750552226fd:   mov    %rdx,0x60(%rsp)
  0x0000775055222702:   data16 xchg %ax,%ax
  0x0000775055222705:   movabs $0xffffffffffffffff,%rax
  0x000077505522270f:   call   0x000077505c788380           ; ImmutableOopMap {[88]=Oop [104]=Oop [96]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
                                                            ;   {virtual_call}
  0x0000775055222714:   mov    %rax,%rdx
  0x0000775055222717:   shr    $0x10,%edx
  0x000077505522271a:   xor    %rax,%rdx
  0x000077505522271d:   mov    %rdx,%rdi                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@19 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
  0x0000775055222720:   mov    0x68(%rsp),%r8
  0x0000775055222725:   mov    0x60(%rsp),%rcx
  0x000077505522272a:   mov    0x58(%rsp),%rsi
  0x000077505522272f:   mov    %rsi,%rdx
  0x0000775055222732:   movabs $0x7750202fca58,%r9          ;   {metadata(method data for {method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505522273c:   addq   $0x1,0x148(%r9)
  0x0000775055222744:   mov    %rdi,%rdx
  0x0000775055222747:   mov    $0x0,%r9d
  0x000077505522274d:   mov    $0x1,%edi                    ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::put@9 (line 610)
  0x0000775055222752:   nopl   0x0(%rax,%rax,1)
  0x0000775055222757:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::put@9 (line 610)
                                                            ;   {optimized virtual_call}
  0x000077505522275c:   add    $0x80,%rsp
  0x0000775055222763:   pop    %rbp
  0x0000775055222764:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522276b:   ja     0x00007750552227b9
  0x0000775055222771:   ret
  0x0000775055222772:   movabs $0x77502018fb88,%r10         ;   {metadata({method} {0x000077502018fb88} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000077505522277c:   mov    %r10,0x8(%rsp)
  0x0000775055222781:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055222789:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::put@-1 (line 610)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522278e:   jmp    0x00007750552225b7
  0x0000775055222793:   movabs $0x77502018ee68,%r10         ;   {metadata({method} {0x000077502018ee68} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000077505522279d:   mov    %r10,0x8(%rsp)
  0x00007750552227a2:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552227aa:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.HashMap::hash@-1 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552227af:   jmp    0x00007750552225f1
  0x00007750552227b4:   call   0x000077505c8295a0           ; ImmutableOopMap {rdx=Oop [104]=Oop [88]=Oop }
                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.HashMap::hash@9 (line 338)
                                                            ; - java.util.HashMap::put@2 (line 610)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552227b9:   movabs $0x775055222764,%r10         ;   {internal_word}
  0x00007750552227c3:   mov    %r10,0x360(%r15)
  0x00007750552227ca:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552227cf:   nop
  0x00007750552227d0:   nop
  0x00007750552227d1:   mov    0x3d8(%r15),%rax
  0x00007750552227d8:   movq   $0x0,0x3d8(%r15)
  0x00007750552227e3:   movq   $0x0,0x3e0(%r15)
  0x00007750552227ee:   add    $0x80,%rsp
  0x00007750552227f5:   pop    %rbp
  0x00007750552227f6:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552227fb:   hlt
  0x00007750552227fc:   hlt
  0x00007750552227fd:   hlt
  0x00007750552227fe:   hlt
  0x00007750552227ff:   hlt
[Stub Code]
  0x0000775055222800:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055222805:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522280f:   jmp    0x000077505522280f           ;   {runtime_call}
  0x0000775055222814:   nop
  0x0000775055222815:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522281f:   jmp    0x000077505522281f           ;   {runtime_call}
[Exception Handler]
  0x0000775055222824:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055222829:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055222833:   and    $0xfffffffffffffff0,%rsp
  0x0000775055222837:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522283c:   hlt
[Deopt Handler Code]
  0x000077505522283d:   movabs $0x77505522283d,%r10         ;   {section_word}
  0x0000775055222847:   push   %r10
  0x0000775055222849:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522284e:   hlt
  0x000077505522284f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     312   85       3       java.lang.String::isEmpty (14 bytes)
 total in heap  [0x0000775055222a10,0x0000775055222e08] = 1016
 relocation     [0x0000775055222b70,0x0000775055222ba0] = 48
 main code      [0x0000775055222ba0,0x0000775055222ce0] = 320
 stub code      [0x0000775055222ce0,0x0000775055222d10] = 48
 metadata       [0x0000775055222d10,0x0000775055222d18] = 8
 scopes data    [0x0000775055222d18,0x0000775055222d50] = 56
 scopes pcs     [0x0000775055222d50,0x0000775055222df0] = 160
 dependencies   [0x0000775055222df0,0x0000775055222df8] = 8
 nul chk table  [0x0000775055222df8,0x0000775055222e08] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020009950} 'isEmpty' '()Z' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000775055222ba0:   mov    0x8(%rsi),%r10d
  0x0000775055222ba4:   movabs $0x800000000,%r11
  0x0000775055222bae:   add    %r11,%r10
  0x0000775055222bb1:   cmp    %rax,%r10
  0x0000775055222bb4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055222bba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055222bc0:   mov    %eax,-0x14000(%rsp)
  0x0000775055222bc7:   push   %rbp
  0x0000775055222bc8:   sub    $0x30,%rsp
  0x0000775055222bcc:   movabs $0x7750203f9e80,%rax         ;   {metadata(method data for {method} {0x0000775020009950} 'isEmpty' '()Z' in 'java/lang/String')}
  0x0000775055222bd6:   mov    0xf4(%rax),%edi
  0x0000775055222bdc:   add    $0x2,%edi
  0x0000775055222bdf:   mov    %edi,0xf4(%rax)
  0x0000775055222be5:   and    $0x7fe,%edi
  0x0000775055222beb:   cmp    $0x0,%edi
  0x0000775055222bee:   je     0x0000775055222c6c           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isEmpty@0 (line 1494)
  0x0000775055222bf4:   mov    0x14(%rsi),%eax
  0x0000775055222bf7:   shl    $0x3,%rax                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isEmpty@1 (line 1494)
  0x0000775055222bfb:   mov    0xc(%rax),%eax               ; implicit exception: dispatches to 0x0000775055222c8d
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isEmpty@4 (line 1494)
  0x0000775055222bfe:   cmp    $0x0,%eax
  0x0000775055222c01:   movabs $0x7750203f9e80,%rax         ;   {metadata(method data for {method} {0x0000775020009950} 'isEmpty' '()Z' in 'java/lang/String')}
  0x0000775055222c0b:   movabs $0x138,%rsi
  0x0000775055222c15:   jne    0x0000775055222c25
  0x0000775055222c1b:   movabs $0x148,%rsi
  0x0000775055222c25:   mov    (%rax,%rsi,1),%rdi
  0x0000775055222c29:   lea    0x1(%rdi),%rdi
  0x0000775055222c2d:   mov    %rdi,(%rax,%rsi,1)
  0x0000775055222c31:   jne    0x0000775055222c51           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isEmpty@5 (line 1494)
  0x0000775055222c37:   movabs $0x7750203f9e80,%rax         ;   {metadata(method data for {method} {0x0000775020009950} 'isEmpty' '()Z' in 'java/lang/String')}
  0x0000775055222c41:   incl   0x158(%rax)
  0x0000775055222c47:   mov    $0x1,%eax
  0x0000775055222c4c:   jmp    0x0000775055222c56           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isEmpty@9 (line 1494)
  0x0000775055222c51:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isEmpty@13 (line 1494)
  0x0000775055222c56:   and    $0x1,%eax
  0x0000775055222c59:   add    $0x30,%rsp
  0x0000775055222c5d:   pop    %rbp
  0x0000775055222c5e:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055222c65:   ja     0x0000775055222c92
  0x0000775055222c6b:   ret
  0x0000775055222c6c:   movabs $0x775020009950,%r10         ;   {metadata({method} {0x0000775020009950} 'isEmpty' '()Z' in 'java/lang/String')}
  0x0000775055222c76:   mov    %r10,0x8(%rsp)
  0x0000775055222c7b:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055222c83:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::isEmpty@-1 (line 1494)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055222c88:   jmp    0x0000775055222bf4
  0x0000775055222c8d:   call   0x000077505c8295a0           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isEmpty@4 (line 1494)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055222c92:   movabs $0x775055222c5e,%r10         ;   {internal_word}
  0x0000775055222c9c:   mov    %r10,0x360(%r15)
  0x0000775055222ca3:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055222ca8:   nop
  0x0000775055222ca9:   nop
  0x0000775055222caa:   mov    0x3d8(%r15),%rax
  0x0000775055222cb1:   movq   $0x0,0x3d8(%r15)
  0x0000775055222cbc:   movq   $0x0,0x3e0(%r15)
  0x0000775055222cc7:   add    $0x30,%rsp
  0x0000775055222ccb:   pop    %rbp
  0x0000775055222ccc:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055222cd1:   hlt
  0x0000775055222cd2:   hlt
  0x0000775055222cd3:   hlt
  0x0000775055222cd4:   hlt
  0x0000775055222cd5:   hlt
  0x0000775055222cd6:   hlt
  0x0000775055222cd7:   hlt
  0x0000775055222cd8:   hlt
  0x0000775055222cd9:   hlt
  0x0000775055222cda:   hlt
  0x0000775055222cdb:   hlt
  0x0000775055222cdc:   hlt
  0x0000775055222cdd:   hlt
  0x0000775055222cde:   hlt
  0x0000775055222cdf:   hlt
[Exception Handler]
  0x0000775055222ce0:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055222ce5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055222cef:   and    $0xfffffffffffffff0,%rsp
  0x0000775055222cf3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055222cf8:   hlt
[Deopt Handler Code]
  0x0000775055222cf9:   movabs $0x775055222cf9,%r10         ;   {section_word}
  0x0000775055222d03:   push   %r10
  0x0000775055222d05:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055222d0a:   hlt
  0x0000775055222d0b:   hlt
  0x0000775055222d0c:   hlt
  0x0000775055222d0d:   hlt
  0x0000775055222d0e:   hlt
  0x0000775055222d0f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     313   86       3       java.lang.Math::min (11 bytes)
 total in heap  [0x0000775055222e90,0x00007750552231f8] = 872
 relocation     [0x0000775055222ff0,0x0000775055223020] = 48
 main code      [0x0000775055223020,0x0000775055223120] = 256
 stub code      [0x0000775055223120,0x0000775055223150] = 48
 metadata       [0x0000775055223150,0x0000775055223158] = 8
 scopes data    [0x0000775055223158,0x0000775055223180] = 40
 scopes pcs     [0x0000775055223180,0x00007750552231f0] = 112
 dependencies   [0x00007750552231f0,0x00007750552231f8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000775055223020:   mov    %eax,-0x14000(%rsp)
  0x0000775055223027:   push   %rbp
  0x0000775055223028:   sub    $0x30,%rsp
  0x000077505522302c:   movabs $0x7750203ffa50,%rax         ;   {metadata(method data for {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x0000775055223036:   mov    0xf4(%rax),%edi
  0x000077505522303c:   add    $0x2,%edi
  0x000077505522303f:   mov    %edi,0xf4(%rax)
  0x0000775055223045:   and    $0x7fe,%edi
  0x000077505522304b:   cmp    $0x0,%edi
  0x000077505522304e:   je     0x00007750552230ba           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@0 (line 1649)
  0x0000775055223054:   cmp    %edx,%esi
  0x0000775055223056:   movabs $0x7750203ffa50,%rax         ;   {metadata(method data for {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x0000775055223060:   movabs $0x138,%rdi
  0x000077505522306a:   jg     0x000077505522307a
  0x0000775055223070:   movabs $0x148,%rdi
  0x000077505522307a:   mov    (%rax,%rdi,1),%rbx
  0x000077505522307e:   lea    0x1(%rbx),%rbx
  0x0000775055223082:   mov    %rbx,(%rax,%rdi,1)
  0x0000775055223086:   jg     0x00007750552230a1           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@2 (line 1649)
  0x000077505522308c:   movabs $0x7750203ffa50,%rax         ;   {metadata(method data for {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x0000775055223096:   incl   0x158(%rax)
  0x000077505522309c:   jmp    0x00007750552230a4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@6 (line 1649)
  0x00007750552230a1:   mov    %rdx,%rsi                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@10 (line 1649)
  0x00007750552230a4:   mov    %rsi,%rax
  0x00007750552230a7:   add    $0x30,%rsp
  0x00007750552230ab:   pop    %rbp
  0x00007750552230ac:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552230b3:   ja     0x00007750552230db
  0x00007750552230b9:   ret
  0x00007750552230ba:   movabs $0x77502018a548,%r10         ;   {metadata({method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x00007750552230c4:   mov    %r10,0x8(%rsp)
  0x00007750552230c9:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552230d1:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.lang.Math::min@-1 (line 1649)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552230d6:   jmp    0x0000775055223054
  0x00007750552230db:   movabs $0x7750552230ac,%r10         ;   {internal_word}
  0x00007750552230e5:   mov    %r10,0x360(%r15)
  0x00007750552230ec:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552230f1:   nop
  0x00007750552230f2:   nop
  0x00007750552230f3:   mov    0x3d8(%r15),%rax
  0x00007750552230fa:   movq   $0x0,0x3d8(%r15)
  0x0000775055223105:   movq   $0x0,0x3e0(%r15)
  0x0000775055223110:   add    $0x30,%rsp
  0x0000775055223114:   pop    %rbp
  0x0000775055223115:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522311a:   hlt
  0x000077505522311b:   hlt
  0x000077505522311c:   hlt
  0x000077505522311d:   hlt
  0x000077505522311e:   hlt
  0x000077505522311f:   hlt
[Exception Handler]
  0x0000775055223120:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055223125:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522312f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055223133:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055223138:   hlt
[Deopt Handler Code]
  0x0000775055223139:   movabs $0x775055223139,%r10         ;   {section_word}
  0x0000775055223143:   push   %r10
  0x0000775055223145:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522314a:   hlt
  0x000077505522314b:   hlt
  0x000077505522314c:   hlt
  0x000077505522314d:   hlt
  0x000077505522314e:   hlt
  0x000077505522314f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     316   87       4       java.util.zip.ZipFile$Source::zipCoderForPos (39 bytes)
 total in heap  [0x000077505ccce690,0x000077505ccce9b0] = 800
 relocation     [0x000077505ccce7f0,0x000077505ccce808] = 24
 main code      [0x000077505ccce820,0x000077505ccce8c0] = 160
 stub code      [0x000077505ccce8c0,0x000077505ccce8d8] = 24
 metadata       [0x000077505ccce8d8,0x000077505ccce8e8] = 16
 scopes data    [0x000077505ccce8e8,0x000077505ccce918] = 48
 scopes pcs     [0x000077505ccce918,0x000077505ccce998] = 128
 dependencies   [0x000077505ccce998,0x000077505ccce9a0] = 8
 nul chk table  [0x000077505ccce9a0,0x000077505ccce9b0] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750203351c8} 'zipCoderForPos' '(I)Ljava/util/zip/ZipCoder;' in 'java/util/zip/ZipFile$Source'
  # this:     rsi:rsi   = 'java/util/zip/ZipFile$Source'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000077505ccce820:   mov    0x8(%rsi),%r10d
  0x000077505ccce824:   movabs $0x800000000,%r11
  0x000077505ccce82e:   add    %r11,%r10
  0x000077505ccce831:   cmp    %r10,%rax
  0x000077505ccce834:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccce83a:   xchg   %ax,%ax
  0x000077505ccce83c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccce840:   mov    %eax,-0x14000(%rsp)
  0x000077505ccce847:   push   %rbp
  0x000077505ccce848:   sub    $0x20,%rsp                   ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@-1 (line 1815)
  0x000077505ccce84c:   mov    0x30(%rsi),%r11d             ;*getfield zc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@1 (line 1815)
  0x000077505ccce850:   mov    0x8(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x000077505ccce890
  0x000077505ccce855:   cmp    $0x24100,%r10d               ;   {metadata('java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505ccce85c:   jne    0x000077505ccce878           ;*invokevirtual isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@4 (line 1815)
  0x000077505ccce85e:   mov    %r11,%rax
  0x000077505ccce861:   shl    $0x3,%rax                    ;*getfield zc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@1 (line 1815)
  0x000077505ccce865:   add    $0x20,%rsp
  0x000077505ccce869:   pop    %rbp
  0x000077505ccce86a:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccce871:   ja     0x000077505ccce89c
  0x000077505ccce877:   ret
  0x000077505ccce878:   mov    %rsi,%rbp
  0x000077505ccce87b:   mov    %edx,(%rsp)
  0x000077505ccce87e:   mov    %r11d,0x4(%rsp)
  0x000077505ccce883:   mov    $0xffffffde,%esi
  0x000077505ccce888:   data16 xchg %ax,%ax
  0x000077505ccce88b:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [4]=NarrowOop }
                                                            ;*invokevirtual isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@4 (line 1815)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccce890:   mov    $0xfffffff6,%esi
  0x000077505ccce895:   xchg   %ax,%ax
  0x000077505ccce897:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@4 (line 1815)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccce89c:   movabs $0x77505ccce86a,%r10         ;   {internal_word}
  0x000077505ccce8a6:   mov    %r10,0x360(%r15)
  0x000077505ccce8ad:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccce8b2:   hlt
  0x000077505ccce8b3:   hlt
  0x000077505ccce8b4:   hlt
  0x000077505ccce8b5:   hlt
  0x000077505ccce8b6:   hlt
  0x000077505ccce8b7:   hlt
  0x000077505ccce8b8:   hlt
  0x000077505ccce8b9:   hlt
  0x000077505ccce8ba:   hlt
  0x000077505ccce8bb:   hlt
  0x000077505ccce8bc:   hlt
  0x000077505ccce8bd:   hlt
  0x000077505ccce8be:   hlt
  0x000077505ccce8bf:   hlt
[Exception Handler]
  0x000077505ccce8c0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccce8c5:   call   0x000077505ccce8ca
  0x000077505ccce8ca:   subq   $0x5,(%rsp)
  0x000077505ccce8cf:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccce8d4:   hlt
  0x000077505ccce8d5:   hlt
  0x000077505ccce8d6:   hlt
  0x000077505ccce8d7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     324   88   !   4       java.util.zip.ZipFile$Source::checkAndAddEntry (262 bytes)
 total in heap  [0x000077505cccea10,0x000077505cccff78] = 5480
 relocation     [0x000077505ccceb70,0x000077505cccebc0] = 80
 main code      [0x000077505cccebc0,0x000077505cccf360] = 1952
 stub code      [0x000077505cccf360,0x000077505cccf388] = 40
 metadata       [0x000077505cccf388,0x000077505cccf3d8] = 80
 scopes data    [0x000077505cccf3d8,0x000077505cccf930] = 1368
 scopes pcs     [0x000077505cccf930,0x000077505cccff30] = 1536
 dependencies   [0x000077505cccff30,0x000077505cccff38] = 8
 handler table  [0x000077505cccff38,0x000077505cccff50] = 24
 nul chk table  [0x000077505cccff50,0x000077505cccff78] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750203336c8} 'checkAndAddEntry' '(II)I' in 'java/util/zip/ZipFile$Source'
  # this:     rsi:rsi   = 'java/util/zip/ZipFile$Source'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000077505cccebc0:   mov    0x8(%rsi),%r10d
  0x000077505cccebc4:   movabs $0x800000000,%r11
  0x000077505cccebce:   add    %r11,%r10
  0x000077505cccebd1:   cmp    %r10,%rax
  0x000077505cccebd4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505cccebda:   xchg   %ax,%ax
  0x000077505cccebdc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505cccebe0:   mov    %eax,-0x14000(%rsp)
  0x000077505cccebe7:   push   %rbp
  0x000077505cccebe8:   sub    $0x40,%rsp                   ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@-1 (line 1205)
  0x000077505cccebec:   mov    %ecx,0xc(%rsp)
  0x000077505cccebf0:   mov    %edx,%r10d
  0x000077505cccebf3:   mov    %rsi,%r13
  0x000077505cccebf6:   mov    0x38(%rsi),%edx              ;*getfield cen {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@1 (line 1205)
  0x000077505cccebf9:   mov    0xc(%r12,%rdx,8),%ecx        ; implicit exception: dispatches to 0x000077505cccf298
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
  0x000077505cccebfe:   mov    %r10d,%edi
  0x000077505cccec01:   cmp    %ecx,%r10d
  0x000077505cccec04:   jae    0x000077505cccf042
  0x000077505cccec0a:   mov    %r10d,%r8d
  0x000077505cccec0d:   add    $0x1f,%r8d
  0x000077505cccec11:   lea    (%r12,%rdx,8),%rax           ;*getfield cen {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@1 (line 1205)
  0x000077505cccec15:   movzbl 0x10(%rax,%r10,1),%r10d      ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@6 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
  0x000077505cccec1b:   cmp    %ecx,%r8d
  0x000077505cccec1e:   jae    0x000077505cccf06c
  0x000077505cccec24:   movslq %edi,%r8
  0x000077505cccec27:   movzbl 0x11(%rax,%r8,1),%r9d
  0x000077505cccec2d:   movzbl 0x13(%rax,%r8,1),%r11d
  0x000077505cccec33:   movzbl 0x12(%rax,%r8,1),%esi
  0x000077505cccec39:   shl    $0x8,%r9d
  0x000077505cccec3d:   or     %r10d,%r9d
  0x000077505cccec40:   shl    $0x8,%r11d
  0x000077505cccec44:   or     %r11d,%esi
  0x000077505cccec47:   shl    $0x10,%esi
  0x000077505cccec4a:   or     %esi,%r9d
  0x000077505cccec4d:   mov    %r9d,%r10d                   ;*land {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::LG@20 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
  0x000077505cccec50:   cmp    $0x2014b50,%r10
  0x000077505cccec57:   jne    0x000077505cccf1a8           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@14 (line 1206)
  0x000077505cccec5d:   movzbl 0x1b(%rax,%r8,1),%r9d
  0x000077505cccec63:   movzbl 0x18(%rax,%r8,1),%r11d
  0x000077505cccec69:   movzbl 0x1a(%rax,%r8,1),%r10d
  0x000077505cccec6f:   movzbl 0x19(%rax,%r8,1),%esi
  0x000077505cccec75:   shl    $0x8,%r9d
  0x000077505cccec79:   or     %r9d,%r10d                   ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@19 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENHOW@5 (line 267)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@24 (line 1209)
  0x000077505cccec7c:   shl    $0x8,%esi
  0x000077505cccec7f:   or     %esi,%r11d
  0x000077505cccec82:   and    $0x1,%r11d                   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@39 (line 1211)
  0x000077505cccec86:   test   %r11d,%r11d
  0x000077505cccec89:   jne    0x000077505cccf1d8           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@40 (line 1211)
  0x000077505cccec8f:   test   %r10d,%r10d
  0x000077505cccec92:   je     0x000077505cccf200           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@50 (line 1214)
  0x000077505cccec98:   cmp    $0x8,%r10d
  0x000077505cccec9c:   jne    0x000077505cccf224           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@57 (line 1214)
  0x000077505ccceca2:   movzbl 0x2d(%rax,%r8,1),%r10d
  0x000077505ccceca8:   movzbl 0x2c(%rax,%r8,1),%esi
  0x000077505cccecae:   mov    %edi,%r11d
  0x000077505cccecb1:   add    $0x2e,%r11d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@91 (line 1217)
  0x000077505cccecb5:   shl    $0x8,%r10d
  0x000077505cccecb9:   or     %r10d,%esi                   ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@19 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENNAM@5 (line 272)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@96 (line 1218)
  0x000077505cccecbc:   mov    %edi,%r9d
  0x000077505cccecbf:   add    %esi,%r9d                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@91 (line 1217)
  0x000077505cccecc2:   mov    %ecx,%ebp
  0x000077505cccecc4:   add    $0xffffffea,%ebp             ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@110 (line 1219)
  0x000077505cccecc7:   mov    %r9d,%ebx
  0x000077505cccecca:   add    $0x2e,%ebx                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@105 (line 1219)
  0x000077505ccceccd:   cmp    %ebp,%ebx
  0x000077505ccceccf:   jg     0x000077505cccf248           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@111 (line 1219)
  0x000077505cccecd5:   movzbl 0x2f(%rax,%r8,1),%r10d
  0x000077505cccecdb:   movzbl 0x2e(%rax,%r8,1),%r8d
  0x000077505cccece1:   shl    $0x8,%r10d
  0x000077505cccece5:   or     %r10d,%r8d                   ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@19 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@121 (line 1223)
  0x000077505cccece8:   test   %r8d,%r8d
  0x000077505ccceceb:   jg     0x000077505cccefe4           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@172 (line 1233)
  0x000077505cccecf1:   mov    0x30(%r13),%ebp              ;*getfield zc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@1 (line 1815)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@174 (line 1233)
  0x000077505cccecf5:   mov    0x8(%r12,%rbp,8),%r10d       ; implicit exception: dispatches to 0x000077505cccf2b8
  0x000077505cccecfa:   cmp    $0x24100,%r10d               ;   {metadata('java/util/zip/ZipCoder$UTF8ZipCoder')}
  0x000077505ccced01:   jne    0x000077505cccf154           ;*invokevirtual isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@4 (line 1815)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@174 (line 1233)
  0x000077505ccced07:   test   %esi,%esi
  0x000077505ccced09:   je     0x000077505cccf26c           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@1 (line 209)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced0f:   cmp    %ebx,%r11d
  0x000077505ccced12:   jge    0x000077505cccef77           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced18:   cmp    %ecx,%r11d
  0x000077505ccced1b:   jae    0x000077505cccf174
  0x000077505ccced21:   movslq %ebx,%r10
  0x000077505ccced24:   movslq %ecx,%r8
  0x000077505ccced27:   dec    %r10
  0x000077505ccced2a:   cmp    %r8,%r10
  0x000077505ccced2d:   jae    0x000077505cccf174
  0x000077505ccced33:   mov    %edi,%r10d
  0x000077505ccced36:   add    $0x2f,%r10d
  0x000077505ccced3a:   xor    %r14d,%r14d
  0x000077505ccced3d:   xor    %ebp,%ebp                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@20 (line 216)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced3f:   movsbl 0x10(%rax,%r11,1),%r8d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced45:   test   %r8d,%r8d
  0x000077505ccced48:   jl     0x000077505cccefa5           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced4e:   mov    %ebp,(%rsp)
  0x000077505ccced51:   mov    %r14d,%ebp
  0x000077505ccced54:   shl    $0x5,%ebp
  0x000077505ccced57:   sub    %r14d,%ebp
  0x000077505ccced5a:   add    %r8d,%ebp                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced5d:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced60:   cmp    %r10d,%r11d
  0x000077505ccced63:   jge    0x000077505ccced6d           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced65:   mov    %ebp,%r14d
  0x000077505ccced68:   mov    (%rsp),%ebp
  0x000077505ccced6b:   jmp    0x000077505ccced3f
  0x000077505ccced6d:   mov    %r9d,%r8d
  0x000077505ccced70:   add    $0x2b,%r8d
  0x000077505ccced74:   mov    $0x80000000,%r10d
  0x000077505ccced7a:   cmp    %r8d,%ebx
  0x000077505ccced7d:   cmovl  %r10d,%r8d
  0x000077505ccced81:   cmp    %r8d,%r11d
  0x000077505ccced84:   jge    0x000077505cccee78           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced8a:   jmp    0x000077505cccee38
  0x000077505ccced8f:   nop
  0x000077505ccced90:   vmovd  %xmm0,%ebx                   ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@20 (line 216)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced94:   movsbl 0x10(%rax,%r11,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccced9a:   test   %r10d,%r10d
  0x000077505ccced9d:   jl     0x000077505cccef8a           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccceda3:   vmovd  %ebx,%xmm0
  0x000077505ccceda7:   mov    %r11d,%ebx
  0x000077505cccedaa:   movslq %r11d,%r11
  0x000077505cccedad:   movsbl 0x11(%rax,%r11,1),%r8d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccedb3:   mov    %ebp,%r14d
  0x000077505cccedb6:   shl    $0x5,%r14d
  0x000077505cccedba:   sub    %ebp,%r14d
  0x000077505cccedbd:   add    %r10d,%r14d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccedc0:   test   %r8d,%r8d
  0x000077505cccedc3:   jl     0x000077505cccef92           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccedc9:   movsbl 0x12(%rax,%r11,1),%r10d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccedcf:   mov    %r14d,%ebp
  0x000077505cccedd2:   shl    $0x5,%ebp
  0x000077505cccedd5:   sub    %r14d,%ebp
  0x000077505cccedd8:   add    %r8d,%ebp                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccceddb:   test   %r10d,%r10d
  0x000077505cccedde:   jl     0x000077505cccef7f           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccede4:   movsbl 0x13(%rax,%r11,1),%r8d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccedea:   mov    %ebp,%r14d
  0x000077505ccceded:   shl    $0x5,%r14d
  0x000077505cccedf1:   sub    %ebp,%r14d
  0x000077505cccedf4:   add    %r10d,%r14d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccedf7:   test   %r8d,%r8d
  0x000077505cccedfa:   jl     0x000077505cccef9a           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee00:   mov    %r14d,%ebp
  0x000077505cccee03:   shl    $0x5,%ebp
  0x000077505cccee06:   sub    %r14d,%ebp
  0x000077505cccee09:   add    %r8d,%ebp                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee0c:   mov    %ebx,%r11d
  0x000077505cccee0f:   add    $0x4,%r11d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee13:   cmp    0x8(%rsp),%r11d
  0x000077505cccee18:   jl     0x000077505ccced90           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee1e:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rdx=NarrowOop rax=Oop r13=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee25:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@64 (line 229)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
                                                            ;   {poll}
  0x000077505cccee28:   cmp    0x4(%rsp),%r11d
  0x000077505cccee2d:   jge    0x000077505cccee74
  0x000077505cccee2f:   vmovd  %xmm0,%ebx
  0x000077505cccee33:   mov    0x4(%rsp),%r8d
  0x000077505cccee38:   mov    %r8d,0x4(%rsp)
  0x000077505cccee3d:   mov    %r8d,%r10d
  0x000077505cccee40:   sub    %r11d,%r10d
  0x000077505cccee43:   mov    %r10d,%r8d
  0x000077505cccee46:   mov    0x4(%rsp),%r10d
  0x000077505cccee4b:   cmp    %r11d,%r10d
  0x000077505cccee4e:   mov    %r8d,%r10d
  0x000077505cccee51:   cmovl  (%rsp),%r10d
  0x000077505cccee56:   cmp    $0xfa0,%r10d
  0x000077505cccee5d:   mov    $0xfa0,%r8d
  0x000077505cccee63:   cmova  %r8d,%r10d
  0x000077505cccee67:   add    %r11d,%r10d
  0x000077505cccee6a:   mov    %r10d,0x8(%rsp)
  0x000077505cccee6f:   jmp    0x000077505ccced94
  0x000077505cccee74:   vmovd  %xmm0,%ebx
  0x000077505cccee78:   cmp    %ebx,%r11d
  0x000077505cccee7b:   jge    0x000077505ccceea9
  0x000077505cccee7d:   data16 xchg %ax,%ax                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@20 (line 216)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee80:   movsbl 0x10(%rax,%r11,1),%r8d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@22 (line 216)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee86:   test   %r8d,%r8d
  0x000077505cccee89:   jl     0x000077505cccf1a0           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee8f:   mov    %ebp,%r10d
  0x000077505cccee92:   shl    $0x5,%r10d
  0x000077505cccee96:   sub    %ebp,%r10d
  0x000077505cccee99:   add    %r8d,%r10d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@37 (line 219)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee9c:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccee9f:   cmp    %ebx,%r11d
  0x000077505ccceea2:   jge    0x000077505ccceeac
  0x000077505ccceea4:   mov    %r10d,%ebp
  0x000077505ccceea7:   jmp    0x000077505cccee80
  0x000077505ccceea9:   mov    %ebp,%r10d                   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccceeac:   mov    %r9d,%ebp
  0x000077505ccceeaf:   add    $0x2d,%ebp                   ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@71 (line 231)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccceeb2:   cmp    %ecx,%ebp
  0x000077505ccceeb4:   jae    0x000077505cccf090
  0x000077505ccceeba:   movslq %r9d,%r11
  0x000077505ccceebd:   cmpb   $0x2f,0x3d(%rax,%r11,1)
  0x000077505ccceec3:   je     0x000077505cccefdc           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@75 (line 231)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccceec9:   mov    %r10d,%r8d
  0x000077505ccceecc:   shl    $0x5,%r8d
  0x000077505ccceed0:   sub    %r10d,%r8d
  0x000077505ccceed3:   add    $0x2f,%r8d                   ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@88 (line 234)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505ccceed7:   mov    0x24(%r13),%r11d             ;*getfield tablelen {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@197 (line 1235)
  0x000077505ccceedb:   mov    %r8d,%eax
  0x000077505ccceede:   and    $0x7fffffff,%eax             ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@195 (line 1235)
  0x000077505ccceee4:   test   %r11d,%r11d
  0x000077505ccceee7:   je     0x000077505cccf0b0
  0x000077505ccceeed:   cmp    $0x80000000,%eax
  0x000077505ccceef2:   jne    0x000077505ccceefc
  0x000077505ccceef4:   xor    %edx,%edx
  0x000077505ccceef6:   cmp    $0xffffffff,%r11d
  0x000077505ccceefa:   je     0x000077505cccef00
  0x000077505ccceefc:   cltd
  0x000077505ccceefd:   idiv   %r11d                        ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@200 (line 1235)
  0x000077505cccef00:   mov    0x4c(%r13),%r11d             ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@204 (line 1236)
  0x000077505cccef04:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x000077505cccf2e0
  0x000077505cccef09:   cmp    %r10d,%edx
  0x000077505cccef0c:   jae    0x000077505cccf0d8
  0x000077505cccef12:   mov    0x48(%r13),%ebx              ;*getfield entries {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@221 (line 1239)
  0x000077505cccef16:   mov    0xc(%rsp),%r9d
  0x000077505cccef1b:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@225 (line 1239)
  0x000077505cccef1e:   lea    (%r12,%r11,8),%r10
  0x000077505cccef22:   mov    0x10(%r10,%rdx,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@209 (line 1236)
  0x000077505cccef27:   mov    0xc(%rsp),%eax
  0x000077505cccef2b:   mov    %eax,0x10(%r10,%rdx,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@219 (line 1237)
  0x000077505cccef30:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x000077505cccf308
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@230 (line 1239)
  0x000077505cccef35:   cmp    %r10d,%eax
  0x000077505cccef38:   jae    0x000077505cccf104
  0x000077505cccef3e:   mov    %eax,%ebp
  0x000077505cccef40:   add    $0x2,%ebp                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@236 (line 1240)
  0x000077505cccef43:   lea    (%r12,%rbx,8),%rcx
  0x000077505cccef47:   mov    %r8d,0x10(%rcx,%rax,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@230 (line 1239)
  0x000077505cccef4c:   cmp    %r10d,%ebp
  0x000077505cccef4f:   jae    0x000077505cccf130
  0x000077505cccef55:   movslq %eax,%r10
  0x000077505cccef58:   mov    %r11d,0x14(%rcx,%r10,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@241 (line 1240)
  0x000077505cccef5d:   mov    %edi,0x18(%rcx,%r10,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@248 (line 1241)
  0x000077505cccef62:   mov    %esi,%eax
  0x000077505cccef64:   add    $0x40,%rsp
  0x000077505cccef68:   pop    %rbp
  0x000077505cccef69:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505cccef70:   ja     0x000077505cccf33d
  0x000077505cccef76:   ret
  0x000077505cccef77:   xor    %r10d,%r10d
  0x000077505cccef7a:   jmp    0x000077505ccceeac
  0x000077505cccef7f:   mov    %ebx,%r11d
  0x000077505cccef82:   add    $0x2,%r11d
  0x000077505cccef86:   vmovd  %xmm0,%ebx
  0x000077505cccef8a:   mov    %r10d,%r8d
  0x000077505cccef8d:   mov    %ebp,%r14d
  0x000077505cccef90:   jmp    0x000077505cccefa5
  0x000077505cccef92:   mov    %ebx,%r11d
  0x000077505cccef95:   inc    %r11d
  0x000077505cccef98:   jmp    0x000077505cccefa1
  0x000077505cccef9a:   mov    %ebx,%r11d
  0x000077505cccef9d:   add    $0x3,%r11d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@40 (line 220)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
  0x000077505cccefa1:   vmovd  %xmm0,%ebx
  0x000077505cccefa5:   mov    %r13,%rbp
  0x000077505cccefa8:   mov    %edi,(%rsp)
  0x000077505cccefab:   mov    0xc(%rsp),%r10d
  0x000077505cccefb0:   mov    %r10d,0x4(%rsp)
  0x000077505cccefb5:   mov    %r11d,0xc(%rsp)
  0x000077505cccefba:   mov    %esi,0x10(%rsp)
  0x000077505cccefbe:   mov    %ebx,0x14(%rsp)
  0x000077505cccefc2:   mov    %r14d,0x18(%rsp)
  0x000077505cccefc7:   mov    %r8d,0x20(%rsp)
  0x000077505cccefcc:   mov    %edx,0x24(%rsp)
  0x000077505cccefd0:   mov    $0xffffff45,%esi
  0x000077505cccefd5:   xchg   %ax,%ax
  0x000077505cccefd7:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                                                            ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@27 (line 217)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccefdc:   mov    %r10d,%r8d
  0x000077505cccefdf:   jmp    0x000077505ccceed7
  0x000077505cccefe4:   mov    %ebx,0x24(%rsp)
  0x000077505cccefe8:   mov    %r9d,0x20(%rsp)
  0x000077505cccefed:   mov    %esi,0x1c(%rsp)
  0x000077505ccceff1:   mov    %r11d,0x18(%rsp)
  0x000077505ccceff6:   mov    %rax,0x10(%rsp)
  0x000077505ccceffb:   mov    %ecx,0x8(%rsp)
  0x000077505cccefff:   mov    %edx,0x4(%rsp)
  0x000077505cccf003:   mov    %edi,(%rsp)
  0x000077505cccf006:   mov    %r13,%rbp
  0x000077505cccf009:   mov    %rbp,%rsi
  0x000077505cccf00c:   mov    %edi,%edx
  0x000077505cccf00e:   mov    %ebx,%ecx
  0x000077505cccf010:   data16 xchg %ax,%ax
  0x000077505cccf013:   call   0x000077505c788080           ; ImmutableOopMap {rbp=Oop [4]=NarrowOop [16]=Oop }
                                                            ;*invokevirtual checkExtraFields {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@169 (line 1229)
                                                            ;   {optimized virtual_call}
  0x000077505cccf018:   mov    %rbp,%r13
  0x000077505cccf01b:   mov    (%rsp),%edi
  0x000077505cccf01e:   mov    0x4(%rsp),%edx
  0x000077505cccf022:   mov    0x8(%rsp),%ecx
  0x000077505cccf026:   mov    0x10(%rsp),%rax
  0x000077505cccf02b:   mov    0x18(%rsp),%r11d
  0x000077505cccf030:   mov    0x1c(%rsp),%esi
  0x000077505cccf034:   mov    0x20(%rsp),%r9d
  0x000077505cccf039:   mov    0x24(%rsp),%ebx
  0x000077505cccf03d:   jmp    0x000077505cccecf1
  0x000077505cccf042:   mov    %rsi,%rbp
  0x000077505cccf045:   mov    0xc(%rsp),%r11d
  0x000077505cccf04a:   mov    %r11d,0x4(%rsp)
  0x000077505cccf04f:   mov    %r10d,0x8(%rsp)
  0x000077505cccf054:   mov    %r10d,0xc(%rsp)
  0x000077505cccf059:   mov    %edx,0x18(%rsp)
  0x000077505cccf05d:   mov    %edx,0x1c(%rsp)
  0x000077505cccf061:   mov    $0xffffffe4,%esi
  0x000077505cccf066:   nop
  0x000077505cccf067:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [24]=NarrowOop [28]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf06c:   mov    %edi,%ebp
  0x000077505cccf06e:   inc    %ebp                         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@10 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
  0x000077505cccf070:   mov    %rsi,(%rsp)
  0x000077505cccf074:   mov    %edi,0x10(%rsp)
  0x000077505cccf078:   mov    %edx,0x18(%rsp)
  0x000077505cccf07c:   mov    %r10d,0x1c(%rsp)
  0x000077505cccf081:   mov    %edx,0x20(%rsp)
  0x000077505cccf085:   mov    $0xffffffe4,%esi
  0x000077505cccf08a:   nop
  0x000077505cccf08b:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop [24]=NarrowOop [32]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf090:   mov    %r13,(%rsp)
  0x000077505cccf094:   mov    %edi,0x8(%rsp)
  0x000077505cccf098:   mov    %esi,0x10(%rsp)
  0x000077505cccf09c:   mov    %r10d,0x14(%rsp)
  0x000077505cccf0a1:   mov    %edx,0x18(%rsp)
  0x000077505cccf0a5:   mov    $0xffffffe4,%esi
  0x000077505cccf0aa:   nop
  0x000077505cccf0ab:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop [24]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@72 (line 231)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf0b0:   mov    %r13,%rbp
  0x000077505cccf0b3:   mov    %edi,(%rsp)
  0x000077505cccf0b6:   mov    0xc(%rsp),%r10d
  0x000077505cccf0bb:   mov    %r10d,0x4(%rsp)
  0x000077505cccf0c0:   mov    %esi,0x8(%rsp)
  0x000077505cccf0c4:   mov    %r8d,0xc(%rsp)
  0x000077505cccf0c9:   mov    %eax,0x10(%rsp)
  0x000077505cccf0cd:   mov    $0xffffff86,%esi
  0x000077505cccf0d2:   nop
  0x000077505cccf0d3:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@200 (line 1235)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf0d8:   mov    %r13,%rbp
  0x000077505cccf0db:   mov    %edi,(%rsp)
  0x000077505cccf0de:   mov    0xc(%rsp),%r9d
  0x000077505cccf0e3:   mov    %r9d,0x4(%rsp)
  0x000077505cccf0e8:   mov    %esi,0x8(%rsp)
  0x000077505cccf0ec:   mov    %r8d,0xc(%rsp)
  0x000077505cccf0f1:   mov    %r11d,0x14(%rsp)
  0x000077505cccf0f6:   mov    %edx,0x18(%rsp)
  0x000077505cccf0fa:   mov    $0xffffffe4,%esi
  0x000077505cccf0ff:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [20]=NarrowOop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@209 (line 1236)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf104:   mov    %r13,%rbp
  0x000077505cccf107:   mov    %edi,(%rsp)
  0x000077505cccf10a:   mov    %esi,0x4(%rsp)
  0x000077505cccf10e:   mov    %eax,0x8(%rsp)
  0x000077505cccf112:   mov    %r9d,0xc(%rsp)
  0x000077505cccf117:   mov    %r11d,0x10(%rsp)
  0x000077505cccf11c:   mov    %ebx,0x14(%rsp)
  0x000077505cccf120:   mov    %r8d,0x18(%rsp)
  0x000077505cccf125:   mov    $0xffffffe4,%esi
  0x000077505cccf12a:   nop
  0x000077505cccf12b:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [20]=NarrowOop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@230 (line 1239)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf130:   mov    %r13,(%rsp)
  0x000077505cccf134:   mov    %edi,0x8(%rsp)
  0x000077505cccf138:   mov    %esi,0xc(%rsp)
  0x000077505cccf13c:   mov    %ebx,0x10(%rsp)
  0x000077505cccf140:   mov    %r9d,0x14(%rsp)
  0x000077505cccf145:   mov    %r11d,0x18(%rsp)
  0x000077505cccf14a:   mov    $0xffffffe4,%esi
  0x000077505cccf14f:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop [16]=NarrowOop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@241 (line 1240)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf154:   mov    %r11d,0x10(%rsp)
  0x000077505cccf159:   mov    %esi,0x14(%rsp)
  0x000077505cccf15d:   mov    %r13,0x18(%rsp)
  0x000077505cccf162:   mov    %edi,0x20(%rsp)
  0x000077505cccf166:   mov    %edx,0x24(%rsp)
  0x000077505cccf16a:   mov    $0xffffffde,%esi
  0x000077505cccf16f:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=NarrowOop [24]=Oop [36]=NarrowOop }
                                                            ;*invokevirtual isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@4 (line 1815)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@174 (line 1233)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf174:   mov    %r13,%rbp
  0x000077505cccf177:   mov    %edi,(%rsp)
  0x000077505cccf17a:   mov    0xc(%rsp),%r10d
  0x000077505cccf17f:   mov    %r10d,0x4(%rsp)
  0x000077505cccf184:   mov    %esi,0x10(%rsp)
  0x000077505cccf188:   mov    %r11d,0x18(%rsp)
  0x000077505cccf18d:   mov    %ebx,0x1c(%rsp)
  0x000077505cccf191:   mov    %edx,0x20(%rsp)
  0x000077505cccf195:   mov    $0xffffff76,%esi
  0x000077505cccf19a:   nop
  0x000077505cccf19b:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@17 (line 215)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf1a0:   mov    %ebp,%r14d
  0x000077505cccf1a3:   jmp    0x000077505cccefa5
  0x000077505cccf1a8:   mov    $0x2014b50,%r11d
  0x000077505cccf1ae:   cmp    %r11,%r10
  0x000077505cccf1b1:   mov    $0xffffffff,%ebp
  0x000077505cccf1b6:   jl     0x000077505cccf1c0
  0x000077505cccf1b8:   setne  %bpl
  0x000077505cccf1bc:   movzbl %bpl,%ebp                    ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@13 (line 1206)
  0x000077505cccf1c0:   mov    %r13,(%rsp)
  0x000077505cccf1c4:   mov    %edi,0x8(%rsp)
  0x000077505cccf1c8:   mov    %edx,0x10(%rsp)
  0x000077505cccf1cc:   mov    $0xffffff45,%esi
  0x000077505cccf1d1:   xchg   %ax,%ax
  0x000077505cccf1d3:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop [16]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::checkAndAddEntry@14 (line 1206)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf1d8:   mov    %r13,%rbp
  0x000077505cccf1db:   mov    %edi,(%rsp)
  0x000077505cccf1de:   mov    0xc(%rsp),%r9d
  0x000077505cccf1e3:   mov    %r9d,0x4(%rsp)
  0x000077505cccf1e8:   mov    %edx,0x8(%rsp)
  0x000077505cccf1ec:   mov    %r10d,0xc(%rsp)
  0x000077505cccf1f1:   mov    %r11d,0x10(%rsp)
  0x000077505cccf1f6:   mov    $0xffffff45,%esi
  0x000077505cccf1fb:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [8]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::checkAndAddEntry@40 (line 1211)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf200:   mov    %r13,%rbp
  0x000077505cccf203:   mov    %edi,(%rsp)
  0x000077505cccf206:   mov    0xc(%rsp),%r8d
  0x000077505cccf20b:   mov    %r8d,0x4(%rsp)
  0x000077505cccf210:   mov    %edx,0x8(%rsp)
  0x000077505cccf214:   mov    %r10d,0x10(%rsp)
  0x000077505cccf219:   mov    $0xffffff45,%esi
  0x000077505cccf21e:   nop
  0x000077505cccf21f:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [8]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::checkAndAddEntry@50 (line 1214)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf224:   mov    %r13,%rbp
  0x000077505cccf227:   mov    %edi,(%rsp)
  0x000077505cccf22a:   mov    0xc(%rsp),%r8d
  0x000077505cccf22f:   mov    %r8d,0x4(%rsp)
  0x000077505cccf234:   mov    %edx,0x8(%rsp)
  0x000077505cccf238:   mov    %r10d,0x10(%rsp)
  0x000077505cccf23d:   mov    $0xffffff45,%esi
  0x000077505cccf242:   nop
  0x000077505cccf243:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [8]=NarrowOop }
                                                            ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::checkAndAddEntry@57 (line 1214)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf248:   mov    %r13,(%rsp)
  0x000077505cccf24c:   mov    %edi,0x8(%rsp)
  0x000077505cccf250:   mov    %r11d,0x10(%rsp)
  0x000077505cccf255:   mov    %esi,0x14(%rsp)
  0x000077505cccf259:   mov    %ebx,0x18(%rsp)
  0x000077505cccf25d:   mov    %edx,0x1c(%rsp)
  0x000077505cccf261:   mov    $0xffffff45,%esi
  0x000077505cccf266:   nop
  0x000077505cccf267:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop [28]=NarrowOop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::checkAndAddEntry@111 (line 1219)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf26c:   mov    %r13,%rbp
  0x000077505cccf26f:   mov    %edi,(%rsp)
  0x000077505cccf272:   mov    0xc(%rsp),%r8d
  0x000077505cccf277:   mov    %r8d,0x4(%rsp)
  0x000077505cccf27c:   mov    %r11d,0xc(%rsp)
  0x000077505cccf281:   mov    %esi,0x10(%rsp)
  0x000077505cccf285:   mov    %esi,0x14(%rsp)
  0x000077505cccf289:   mov    %edx,0x18(%rsp)
  0x000077505cccf28d:   mov    $0xffffff45,%esi
  0x000077505cccf292:   nop
  0x000077505cccf293:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [24]=NarrowOop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash@1 (line 209)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@186 (line 1234)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf298:   mov    $0xfffffff6,%esi
  0x000077505cccf29d:   mov    %r13,%rbp
  0x000077505cccf2a0:   mov    0xc(%rsp),%r8d
  0x000077505cccf2a5:   mov    %r8d,0x4(%rsp)
  0x000077505cccf2aa:   mov    %r10d,0x8(%rsp)
  0x000077505cccf2af:   mov    %edx,0xc(%rsp)
  0x000077505cccf2b3:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [12]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::LG@2 (line 207)
                                                            ; - java.util.zip.ZipUtils::CENSIG@4 (line 262)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@7 (line 1206)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf2b8:   mov    %r13,%rbp
  0x000077505cccf2bb:   mov    %edi,(%rsp)
  0x000077505cccf2be:   mov    0xc(%rsp),%r10d
  0x000077505cccf2c3:   mov    %r10d,0x4(%rsp)
  0x000077505cccf2c8:   mov    %r11d,0x8(%rsp)
  0x000077505cccf2cd:   mov    %esi,0xc(%rsp)
  0x000077505cccf2d1:   mov    %edx,0x10(%rsp)
  0x000077505cccf2d5:   mov    $0xfffffff6,%esi
  0x000077505cccf2da:   nop
  0x000077505cccf2db:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [16]=NarrowOop }
                                                            ;*invokevirtual isUTF8 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::zipCoderForPos@4 (line 1815)
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@174 (line 1233)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf2e0:   mov    %r13,%rbp
  0x000077505cccf2e3:   mov    %edi,(%rsp)
  0x000077505cccf2e6:   mov    0xc(%rsp),%r11d
  0x000077505cccf2eb:   mov    %r11d,0x4(%rsp)
  0x000077505cccf2f0:   mov    %esi,0x8(%rsp)
  0x000077505cccf2f4:   mov    %r8d,0xc(%rsp)
  0x000077505cccf2f9:   mov    %edx,0x14(%rsp)
  0x000077505cccf2fd:   mov    $0xfffffff6,%esi
  0x000077505cccf302:   nop
  0x000077505cccf303:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@209 (line 1236)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf308:   mov    %r13,%rbp
  0x000077505cccf30b:   mov    %edi,(%rsp)
  0x000077505cccf30e:   mov    %esi,0x4(%rsp)
  0x000077505cccf312:   mov    %eax,0x8(%rsp)
  0x000077505cccf316:   mov    %r9d,0xc(%rsp)
  0x000077505cccf31b:   mov    %r11d,0x10(%rsp)
  0x000077505cccf320:   mov    %r8d,0x14(%rsp)
  0x000077505cccf325:   mov    $0xfffffff6,%esi
  0x000077505cccf32a:   nop
  0x000077505cccf32b:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::checkAndAddEntry@230 (line 1239)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505cccf330:   mov    %rax,%rsi
  0x000077505cccf333:   add    $0x40,%rsp
  0x000077505cccf337:   pop    %rbp
  0x000077505cccf338:   jmp    0x000077505c834a00           ;   {runtime_call _rethrow_Java}
  0x000077505cccf33d:   movabs $0x77505cccef69,%r10         ;   {internal_word}
  0x000077505cccf347:   mov    %r10,0x360(%r15)
  0x000077505cccf34e:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505cccf353:   hlt
  0x000077505cccf354:   hlt
  0x000077505cccf355:   hlt
  0x000077505cccf356:   hlt
  0x000077505cccf357:   hlt
  0x000077505cccf358:   hlt
  0x000077505cccf359:   hlt
  0x000077505cccf35a:   hlt
  0x000077505cccf35b:   hlt
  0x000077505cccf35c:   hlt
  0x000077505cccf35d:   hlt
  0x000077505cccf35e:   hlt
  0x000077505cccf35f:   hlt
[Stub Code]
  0x000077505cccf360:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x000077505cccf36a:   jmp    0x000077505cccf36a           ;   {runtime_call}
[Exception Handler]
  0x000077505cccf36f:   jmp    0x000077505c828980           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x000077505cccf374:   call   0x000077505cccf379
  0x000077505cccf379:   subq   $0x5,(%rsp)
  0x000077505cccf37e:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505cccf383:   hlt
  0x000077505cccf384:   hlt
  0x000077505cccf385:   hlt
  0x000077505cccf386:   hlt
  0x000077505cccf387:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     339   89       4       java.util.zip.ZipFile$Source::isMetaName (141 bytes)
 total in heap  [0x000077505cccff90,0x000077505ccd0590] = 1536
 relocation     [0x000077505ccd00f0,0x000077505ccd0108] = 24
 main code      [0x000077505ccd0120,0x000077505ccd02a0] = 384
 stub code      [0x000077505ccd02a0,0x000077505ccd02b8] = 24
 metadata       [0x000077505ccd02b8,0x000077505ccd02c0] = 8
 scopes data    [0x000077505ccd02c0,0x000077505ccd03a8] = 232
 scopes pcs     [0x000077505ccd03a8,0x000077505ccd0578] = 464
 dependencies   [0x000077505ccd0578,0x000077505ccd0580] = 8
 nul chk table  [0x000077505ccd0580,0x000077505ccd0590] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020335308} 'isMetaName' '([BII)Z' in 'java/util/zip/ZipFile$Source'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000077505ccd0120:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd0127:   push   %rbp
  0x000077505ccd0128:   sub    $0x30,%rsp                   ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@-1 (line 1831)
  0x000077505ccd012c:   cmp    $0x9,%ecx
  0x000077505ccd012f:   jle    0x000077505ccd0250           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@3 (line 1831)
  0x000077505ccd0135:   mov    %edx,%r10d
  0x000077505ccd0138:   add    %ecx,%r10d                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@9 (line 1831)
  0x000077505ccd013b:   mov    %r10d,%ebp
  0x000077505ccd013e:   dec    %ebp                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@11 (line 1831)
  0x000077505ccd0140:   mov    0xc(%rsi),%r8d               ; implicit exception: dispatches to 0x000077505ccd027c
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@12 (line 1831)
  0x000077505ccd0144:   cmp    %r8d,%ebp
  0x000077505ccd0147:   jae    0x000077505ccd0224
  0x000077505ccd014d:   cmpb   $0x2f,0xf(%rsi,%r10,1)
  0x000077505ccd0153:   je     0x000077505ccd0172           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@15 (line 1831)
  0x000077505ccd0155:   mov    %edx,%ecx
  0x000077505ccd0157:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@20 (line 1831)
  0x000077505ccd0159:   cmp    %r8d,%edx
  0x000077505ccd015c:   jae    0x000077505ccd0238
  0x000077505ccd0162:   movsbl 0x10(%rsi,%rdx,1),%r10d
  0x000077505ccd0168:   or     $0x20,%r10d
  0x000077505ccd016c:   cmp    $0x6d,%r10d
  0x000077505ccd0170:   je     0x000077505ccd0187           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@139 (line 1831)
  0x000077505ccd0172:   xor    %eax,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@140 (line 1831)
  0x000077505ccd0174:   add    $0x30,%rsp
  0x000077505ccd0178:   pop    %rbp
  0x000077505ccd0179:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd0180:   ja     0x000077505ccd0288
  0x000077505ccd0186:   ret
  0x000077505ccd0187:   mov    %edx,%r11d
  0x000077505ccd018a:   add    $0x8,%r11d
  0x000077505ccd018e:   cmp    %r8d,%r11d
  0x000077505ccd0191:   jae    0x000077505ccd0264
  0x000077505ccd0197:   movslq %edx,%r10
  0x000077505ccd019a:   movsbl 0x11(%rsi,%r10,1),%r11d
  0x000077505ccd01a0:   or     $0x20,%r11d
  0x000077505ccd01a4:   cmp    $0x65,%r11d
  0x000077505ccd01a8:   jne    0x000077505ccd0172           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@43 (line 1831)
  0x000077505ccd01aa:   movsbl 0x12(%rsi,%r10,1),%r8d
  0x000077505ccd01b0:   or     $0x20,%r8d
  0x000077505ccd01b4:   cmp    $0x74,%r8d
  0x000077505ccd01b8:   jne    0x000077505ccd0172           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@57 (line 1831)
  0x000077505ccd01ba:   movsbl 0x13(%rsi,%r10,1),%r11d
  0x000077505ccd01c0:   or     $0x20,%r11d
  0x000077505ccd01c4:   cmp    $0x61,%r11d
  0x000077505ccd01c8:   jne    0x000077505ccd0172           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@71 (line 1831)
  0x000077505ccd01ca:   cmpb   $0x2d,0x14(%rsi,%r10,1)
  0x000077505ccd01d0:   jne    0x000077505ccd0172           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@82 (line 1831)
  0x000077505ccd01d2:   movsbl 0x15(%rsi,%r10,1),%r11d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@90 (line 1831)
  0x000077505ccd01d8:   or     $0x20,%r11d
  0x000077505ccd01dc:   cmp    $0x69,%r11d
  0x000077505ccd01e0:   jne    0x000077505ccd0172           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@96 (line 1831)
  0x000077505ccd01e2:   movsbl 0x16(%rsi,%r10,1),%r8d       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@104 (line 1831)
  0x000077505ccd01e8:   or     $0x20,%r8d
  0x000077505ccd01ec:   cmp    $0x6e,%r8d
  0x000077505ccd01f0:   jne    0x000077505ccd0172           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@110 (line 1831)
  0x000077505ccd01f6:   movsbl 0x17(%rsi,%r10,1),%r11d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@118 (line 1831)
  0x000077505ccd01fc:   or     $0x20,%r11d
  0x000077505ccd0200:   cmp    $0x66,%r11d
  0x000077505ccd0204:   jne    0x000077505ccd0172           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@124 (line 1831)
  0x000077505ccd020a:   movsbl 0x18(%rsi,%r10,1),%r11d      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@129 (line 1831)
  0x000077505ccd0210:   cmp    $0x2f,%r11d
  0x000077505ccd0214:   jne    0x000077505ccd0172           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@132 (line 1831)
  0x000077505ccd021a:   mov    $0x1,%eax
  0x000077505ccd021f:   jmp    0x000077505ccd0174
  0x000077505ccd0224:   mov    %edx,0x8(%rsp)
  0x000077505ccd0228:   mov    %rsi,0x10(%rsp)
  0x000077505ccd022d:   mov    $0xffffffe4,%esi
  0x000077505ccd0232:   nop
  0x000077505ccd0233:   call   0x000077505c78d600           ; ImmutableOopMap {[16]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@12 (line 1831)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd0238:   mov    %rsi,(%rsp)
  0x000077505ccd023c:   mov    %edx,0x8(%rsp)
  0x000077505ccd0240:   mov    %ecx,0xc(%rsp)
  0x000077505ccd0244:   mov    $0xffffffe4,%esi
  0x000077505ccd0249:   xchg   %ax,%ax
  0x000077505ccd024b:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@23 (line 1831)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd0250:   mov    %rsi,%rbp
  0x000077505ccd0253:   mov    %edx,(%rsp)
  0x000077505ccd0256:   mov    %ecx,0x8(%rsp)
  0x000077505ccd025a:   mov    $0xffffff45,%esi
  0x000077505ccd025f:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.zip.ZipFile$Source::isMetaName@3 (line 1831)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd0264:   mov    %edx,%ebp
  0x000077505ccd0266:   add    $0x2,%ebp                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@34 (line 1831)
  0x000077505ccd0269:   mov    %rsi,0x8(%rsp)
  0x000077505ccd026e:   mov    %ecx,0x10(%rsp)
  0x000077505ccd0272:   mov    $0xffffffe4,%esi
  0x000077505ccd0277:   call   0x000077505c78d600           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@37 (line 1831)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd027c:   mov    $0xfffffff6,%esi
  0x000077505ccd0281:   xchg   %ax,%ax
  0x000077505ccd0283:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::isMetaName@12 (line 1831)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd0288:   movabs $0x77505ccd0179,%r10         ;   {internal_word}
  0x000077505ccd0292:   mov    %r10,0x360(%r15)
  0x000077505ccd0299:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd029e:   hlt
  0x000077505ccd029f:   hlt
[Exception Handler]
  0x000077505ccd02a0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd02a5:   call   0x000077505ccd02aa
  0x000077505ccd02aa:   subq   $0x5,(%rsp)
  0x000077505ccd02af:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd02b4:   hlt
  0x000077505ccd02b5:   hlt
  0x000077505ccd02b6:   hlt
  0x000077505ccd02b7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     343   90       4       java.util.zip.ZipFile$Source::nextEntryPos (22 bytes)
 total in heap  [0x000077505ccd0610,0x000077505ccd0af8] = 1256
 relocation     [0x000077505ccd0770,0x000077505ccd0788] = 24
 main code      [0x000077505ccd07a0,0x000077505ccd08c0] = 288
 stub code      [0x000077505ccd08c0,0x000077505ccd08d8] = 24
 metadata       [0x000077505ccd08d8,0x000077505ccd08f8] = 32
 scopes data    [0x000077505ccd08f8,0x000077505ccd09e0] = 232
 scopes pcs     [0x000077505ccd09e0,0x000077505ccd0ae0] = 256
 dependencies   [0x000077505ccd0ae0,0x000077505ccd0ae8] = 8
 nul chk table  [0x000077505ccd0ae8,0x000077505ccd0af8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020334e48} 'nextEntryPos' '(III)I' in 'java/util/zip/ZipFile$Source'
  # this:     rsi:rsi   = 'java/util/zip/ZipFile$Source'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000077505ccd07a0:   mov    0x8(%rsi),%r10d
  0x000077505ccd07a4:   movabs $0x800000000,%r11
  0x000077505ccd07ae:   add    %r11,%r10
  0x000077505ccd07b1:   cmp    %r10,%rax
  0x000077505ccd07b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd07ba:   xchg   %ax,%ax
  0x000077505ccd07bc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd07c0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd07c7:   push   %rbp
  0x000077505ccd07c8:   sub    $0x30,%rsp                   ;*synchronization entry
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@-1 (line 1758)
  0x000077505ccd07cc:   mov    %rsi,%rdi
  0x000077505ccd07cf:   mov    0x38(%rsi),%ebx              ;*getfield cen {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@4 (line 1758)
  0x000077505ccd07d2:   mov    %edx,%r11d
  0x000077505ccd07d5:   add    $0x20,%r11d                  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::CENCOM@4 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
  0x000077505ccd07d9:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd088c
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
  0x000077505ccd07de:   add    %r8d,%ecx                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@2 (line 1758)
  0x000077505ccd07e1:   cmp    %r10d,%r11d
  0x000077505ccd07e4:   jae    0x000077505ccd083b
  0x000077505ccd07e6:   movslq %edx,%r8
  0x000077505ccd07e9:   lea    (%r12,%rbx,8),%r9
  0x000077505ccd07ed:   movzbl 0x30(%r9,%r8,1),%r11d        ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@6 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
  0x000077505ccd07f3:   mov    %edx,%ebp
  0x000077505ccd07f5:   add    $0x21,%ebp                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@10 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
  0x000077505ccd07f8:   cmp    %r10d,%ebp
  0x000077505ccd07fb:   jae    0x000077505ccd0858
  0x000077505ccd07fd:   movzbl 0x31(%r9,%r8,1),%ebp
  0x000077505ccd0803:   add    $0x1e,%edx                   ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::CENEXT@4 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@17 (line 1758)
  0x000077505ccd0806:   shl    $0x8,%ebp
  0x000077505ccd0809:   or     %r11d,%ebp
  0x000077505ccd080c:   add    %ecx,%ebp                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@11 (line 1758)
  0x000077505ccd080e:   cmp    %r10d,%edx
  0x000077505ccd0811:   jae    0x000077505ccd0878
  0x000077505ccd0813:   movzbl 0x2e(%r9,%r8,1),%eax
  0x000077505ccd0819:   movzbl 0x2f(%r9,%r8,1),%r11d
  0x000077505ccd081f:   shl    $0x8,%r11d
  0x000077505ccd0823:   or     %r11d,%eax
  0x000077505ccd0826:   add    %ebp,%eax                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@20 (line 1758)
  0x000077505ccd0828:   add    $0x30,%rsp
  0x000077505ccd082c:   pop    %rbp
  0x000077505ccd082d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd0834:   ja     0x000077505ccd089c
  0x000077505ccd083a:   ret
  0x000077505ccd083b:   mov    $0xffffffe4,%esi
  0x000077505ccd0840:   mov    %rdi,%rbp
  0x000077505ccd0843:   mov    %edx,(%rsp)
  0x000077505ccd0846:   mov    %ecx,0x4(%rsp)
  0x000077505ccd084a:   mov    %ebx,0x10(%rsp)
  0x000077505ccd084e:   mov    %r11d,0x14(%rsp)
  0x000077505ccd0853:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [16]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd0858:   mov    $0xffffffe4,%esi
  0x000077505ccd085d:   mov    %rdi,(%rsp)
  0x000077505ccd0861:   mov    %edx,0x8(%rsp)
  0x000077505ccd0865:   mov    %ecx,0xc(%rsp)
  0x000077505ccd0869:   mov    %ebx,0x10(%rsp)
  0x000077505ccd086d:   mov    %r11d,0x14(%rsp)
  0x000077505ccd0872:   nop
  0x000077505ccd0873:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop [16]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd0878:   mov    $0xffffffe4,%esi
  0x000077505ccd087d:   mov    %ebx,0x8(%rsp)
  0x000077505ccd0881:   mov    %edx,0xc(%rsp)
  0x000077505ccd0885:   xchg   %ax,%ax
  0x000077505ccd0887:   call   0x000077505c78d600           ; ImmutableOopMap {[8]=NarrowOop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENEXT@5 (line 273)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@17 (line 1758)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd088c:   mov    $0xfffffff6,%esi
  0x000077505ccd0891:   mov    %r11d,%ebp
  0x000077505ccd0894:   data16 xchg %ax,%ax
  0x000077505ccd0897:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ; - java.util.zip.ZipUtils::CENCOM@5 (line 274)
                                                            ; - java.util.zip.ZipFile$Source::nextEntryPos@8 (line 1758)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd089c:   movabs $0x77505ccd082d,%r10         ;   {internal_word}
  0x000077505ccd08a6:   mov    %r10,0x360(%r15)
  0x000077505ccd08ad:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd08b2:   hlt
  0x000077505ccd08b3:   hlt
  0x000077505ccd08b4:   hlt
  0x000077505ccd08b5:   hlt
  0x000077505ccd08b6:   hlt
  0x000077505ccd08b7:   hlt
  0x000077505ccd08b8:   hlt
  0x000077505ccd08b9:   hlt
  0x000077505ccd08ba:   hlt
  0x000077505ccd08bb:   hlt
  0x000077505ccd08bc:   hlt
  0x000077505ccd08bd:   hlt
  0x000077505ccd08be:   hlt
  0x000077505ccd08bf:   hlt
[Exception Handler]
  0x000077505ccd08c0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd08c5:   call   0x000077505ccd08ca
  0x000077505ccd08ca:   subq   $0x5,(%rsp)
  0x000077505ccd08cf:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd08d4:   hlt
  0x000077505ccd08d5:   hlt
  0x000077505ccd08d6:   hlt
  0x000077505ccd08d7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     348   91       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)
 total in heap  [0x0000775055223210,0x0000775055223778] = 1384
 relocation     [0x0000775055223370,0x00007750552233c0] = 80
 main code      [0x00007750552233c0,0x00007750552235a0] = 480
 stub code      [0x00007750552235a0,0x00007750552235f0] = 80
 metadata       [0x00007750552235f0,0x00007750552235f8] = 8
 scopes data    [0x00007750552235f8,0x0000775055223670] = 120
 scopes pcs     [0x0000775055223670,0x0000775055223760] = 240
 dependencies   [0x0000775055223760,0x0000775055223768] = 8
 nul chk table  [0x0000775055223768,0x0000775055223778] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200afa48} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007750552233c0:   mov    0x8(%rsi),%r10d
  0x00007750552233c4:   movabs $0x800000000,%r11
  0x00007750552233ce:   add    %r11,%r10
  0x00007750552233d1:   cmp    %rax,%r10
  0x00007750552233d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552233da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552233e0:   mov    %eax,-0x14000(%rsp)
  0x00007750552233e7:   push   %rbp
  0x00007750552233e8:   sub    $0x40,%rsp
  0x00007750552233ec:   mov    %rsi,0x28(%rsp)
  0x00007750552233f1:   movabs $0x77502041c830,%rcx         ;   {metadata(method data for {method} {0x00007750200afa48} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00007750552233fb:   mov    0xf4(%rcx),%edi
  0x0000775055223401:   add    $0x2,%edi
  0x0000775055223404:   mov    %edi,0xf4(%rcx)
  0x000077505522340a:   and    $0x7fe,%edi
  0x0000775055223410:   cmp    $0x0,%edi
  0x0000775055223413:   je     0x0000775055223501           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 226)
  0x0000775055223419:   mov    0x14(%rsi),%edi
  0x000077505522341c:   shl    $0x3,%rdi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 226)
  0x0000775055223420:   mov    0xc(%rdi),%ebx               ; implicit exception: dispatches to 0x0000775055223522
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 226)
  0x0000775055223423:   movsbl 0x10(%rsi),%ecx              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 226)
  0x0000775055223427:   sar    %cl,%ebx
  0x0000775055223429:   mov    %rdx,%rax
  0x000077505522342c:   sub    %ebx,%eax
  0x000077505522342e:   cmp    $0x0,%eax
  0x0000775055223431:   movabs $0x77502041c830,%rbx         ;   {metadata(method data for {method} {0x00007750200afa48} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522343b:   movabs $0x138,%rax
  0x0000775055223445:   jle    0x0000775055223455
  0x000077505522344b:   movabs $0x148,%rax
  0x0000775055223455:   mov    (%rbx,%rax,1),%rcx
  0x0000775055223459:   lea    0x1(%rcx),%rcx
  0x000077505522345d:   mov    %rcx,(%rbx,%rax,1)
  0x0000775055223461:   jle    0x00007750552234ee           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14 (line 227)
  0x0000775055223467:   mov    %rdi,0x30(%rsp)
  0x000077505522346c:   mov    %rsi,%rbx
  0x000077505522346f:   movabs $0x77502041c830,%rax         ;   {metadata(method data for {method} {0x00007750200afa48} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000775055223479:   addq   $0x1,0x158(%rax)
  0x0000775055223481:   mov    %rsi,%rbx
  0x0000775055223484:   mov    %rbx,%rsi                    ;*invokevirtual newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 229)
  0x0000775055223487:   call   0x000077505c788080           ; ImmutableOopMap {[40]=Oop [48]=Oop }
                                                            ;*invokevirtual newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 229)
                                                            ;   {optimized virtual_call}
  0x000077505522348c:   mov    0x28(%rsp),%rsi
  0x0000775055223491:   movsbl 0x10(%rsi),%ecx              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@28 (line 229)
  0x0000775055223495:   movabs $0x77502041c830,%rdx         ;   {metadata(method data for {method} {0x00007750200afa48} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522349f:   addq   $0x1,0x190(%rdx)
  0x00007750552234a7:   shl    %cl,%eax
  0x00007750552234a9:   mov    0x30(%rsp),%rsi
  0x00007750552234ae:   mov    %rax,%rdx                    ;*invokestatic copyOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 228)
  0x00007750552234b1:   nopw   0x0(%rax,%rax,1)
  0x00007750552234b7:   call   0x000077505c788680           ; ImmutableOopMap {[40]=Oop }
                                                            ;*invokestatic copyOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 228)
                                                            ;   {static_call}
  0x00007750552234bc:   movsbl 0x38(%r15),%esi
  0x00007750552234c1:   cmp    $0x0,%esi
  0x00007750552234c4:   mov    0x28(%rsp),%rsi
  0x00007750552234c9:   jne    0x0000775055223527
  0x00007750552234cf:   mov    %rax,%r10
  0x00007750552234d2:   shr    $0x3,%r10
  0x00007750552234d6:   mov    %r10d,0x14(%rsi)
  0x00007750552234da:   mov    %rsi,%rdi
  0x00007750552234dd:   xor    %rax,%rdi
  0x00007750552234e0:   shr    $0x16,%rdi
  0x00007750552234e4:   cmp    $0x0,%rdi
  0x00007750552234e8:   jne    0x000077505522353f           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 228)
  0x00007750552234ee:   add    $0x40,%rsp
  0x00007750552234f2:   pop    %rbp
  0x00007750552234f3:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552234fa:   ja     0x0000775055223550
  0x0000775055223500:   ret
  0x0000775055223501:   movabs $0x7750200afa48,%r10         ;   {metadata({method} {0x00007750200afa48} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522350b:   mov    %r10,0x8(%rsp)
  0x0000775055223510:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055223518:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [40]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 226)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522351d:   jmp    0x0000775055223419
  0x0000775055223522:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [40]=Oop rdi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 226)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055223527:   mov    0x14(%rsi),%edi
  0x000077505522352a:   shl    $0x3,%rdi
  0x000077505522352e:   cmp    $0x0,%rdi
  0x0000775055223532:   je     0x00007750552234cf
  0x0000775055223534:   mov    %rdi,(%rsp)
  0x0000775055223538:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522353d:   jmp    0x00007750552234cf
  0x000077505522353f:   cmp    $0x0,%rax
  0x0000775055223543:   je     0x00007750552234ee
  0x0000775055223545:   mov    %rsi,(%rsp)
  0x0000775055223549:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505522354e:   jmp    0x00007750552234ee
  0x0000775055223550:   movabs $0x7750552234f3,%r10         ;   {internal_word}
  0x000077505522355a:   mov    %r10,0x360(%r15)
  0x0000775055223561:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055223566:   nop
  0x0000775055223567:   nop
  0x0000775055223568:   mov    0x3d8(%r15),%rax
  0x000077505522356f:   movq   $0x0,0x3d8(%r15)
  0x000077505522357a:   movq   $0x0,0x3e0(%r15)
  0x0000775055223585:   add    $0x40,%rsp
  0x0000775055223589:   pop    %rbp
  0x000077505522358a:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522358f:   hlt
  0x0000775055223590:   hlt
  0x0000775055223591:   hlt
  0x0000775055223592:   hlt
  0x0000775055223593:   hlt
  0x0000775055223594:   hlt
  0x0000775055223595:   hlt
  0x0000775055223596:   hlt
  0x0000775055223597:   hlt
  0x0000775055223598:   hlt
  0x0000775055223599:   hlt
  0x000077505522359a:   hlt
  0x000077505522359b:   hlt
  0x000077505522359c:   hlt
  0x000077505522359d:   hlt
  0x000077505522359e:   hlt
  0x000077505522359f:   hlt
[Stub Code]
  0x00007750552235a0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x00007750552235a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552235af:   jmp    0x00007750552235af           ;   {runtime_call}
  0x00007750552235b4:   nop
  0x00007750552235b5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552235bf:   jmp    0x00007750552235bf           ;   {runtime_call}
[Exception Handler]
  0x00007750552235c4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007750552235c9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552235d3:   and    $0xfffffffffffffff0,%rsp
  0x00007750552235d7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552235dc:   hlt
[Deopt Handler Code]
  0x00007750552235dd:   movabs $0x7750552235dd,%r10         ;   {section_word}
  0x00007750552235e7:   push   %r10
  0x00007750552235e9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552235ee:   hlt
  0x00007750552235ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     350   92       3       java.lang.StringLatin1::canEncode (13 bytes)
 total in heap  [0x0000775055223790,0x0000775055223b18] = 904
 relocation     [0x00007750552238f0,0x0000775055223920] = 48
 main code      [0x0000775055223920,0x0000775055223a40] = 288
 stub code      [0x0000775055223a40,0x0000775055223a70] = 48
 metadata       [0x0000775055223a70,0x0000775055223a78] = 8
 scopes data    [0x0000775055223a78,0x0000775055223aa0] = 40
 scopes pcs     [0x0000775055223aa0,0x0000775055223b10] = 112
 dependencies   [0x0000775055223b10,0x0000775055223b18] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020175570} 'canEncode' '(I)Z' in 'java/lang/StringLatin1'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x0000775055223920:   mov    %eax,-0x14000(%rsp)
  0x0000775055223927:   push   %rbp
  0x0000775055223928:   sub    $0x30,%rsp
  0x000077505522392c:   movabs $0x77502041cd78,%rax         ;   {metadata(method data for {method} {0x0000775020175570} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x0000775055223936:   mov    0xf4(%rax),%edi
  0x000077505522393c:   add    $0x2,%edi
  0x000077505522393f:   mov    %edi,0xf4(%rax)
  0x0000775055223945:   and    $0x7fe,%edi
  0x000077505522394b:   cmp    $0x0,%edi
  0x000077505522394e:   je     0x00007750552239c5           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@0 (line 54)
  0x0000775055223954:   shr    $0x8,%esi
  0x0000775055223957:   cmp    $0x0,%esi
  0x000077505522395a:   movabs $0x77502041cd78,%rax         ;   {metadata(method data for {method} {0x0000775020175570} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x0000775055223964:   movabs $0x138,%rsi
  0x000077505522396e:   jne    0x000077505522397e
  0x0000775055223974:   movabs $0x148,%rsi
  0x000077505522397e:   mov    (%rax,%rsi,1),%rdi
  0x0000775055223982:   lea    0x1(%rdi),%rdi
  0x0000775055223986:   mov    %rdi,(%rax,%rsi,1)
  0x000077505522398a:   jne    0x00007750552239aa           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@4 (line 54)
  0x0000775055223990:   movabs $0x77502041cd78,%rax         ;   {metadata(method data for {method} {0x0000775020175570} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000077505522399a:   incl   0x158(%rax)
  0x00007750552239a0:   mov    $0x1,%eax
  0x00007750552239a5:   jmp    0x00007750552239af           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@8 (line 54)
  0x00007750552239aa:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@12 (line 54)
  0x00007750552239af:   and    $0x1,%eax
  0x00007750552239b2:   add    $0x30,%rsp
  0x00007750552239b6:   pop    %rbp
  0x00007750552239b7:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552239be:   ja     0x00007750552239e6
  0x00007750552239c4:   ret
  0x00007750552239c5:   movabs $0x775020175570,%r10         ;   {metadata({method} {0x0000775020175570} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007750552239cf:   mov    %r10,0x8(%rsp)
  0x00007750552239d4:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552239dc:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::canEncode@-1 (line 54)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552239e1:   jmp    0x0000775055223954
  0x00007750552239e6:   movabs $0x7750552239b7,%r10         ;   {internal_word}
  0x00007750552239f0:   mov    %r10,0x360(%r15)
  0x00007750552239f7:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552239fc:   nop
  0x00007750552239fd:   nop
  0x00007750552239fe:   mov    0x3d8(%r15),%rax
  0x0000775055223a05:   movq   $0x0,0x3d8(%r15)
  0x0000775055223a10:   movq   $0x0,0x3e0(%r15)
  0x0000775055223a1b:   add    $0x30,%rsp
  0x0000775055223a1f:   pop    %rbp
  0x0000775055223a20:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055223a25:   hlt
  0x0000775055223a26:   hlt
  0x0000775055223a27:   hlt
  0x0000775055223a28:   hlt
  0x0000775055223a29:   hlt
  0x0000775055223a2a:   hlt
  0x0000775055223a2b:   hlt
  0x0000775055223a2c:   hlt
  0x0000775055223a2d:   hlt
  0x0000775055223a2e:   hlt
  0x0000775055223a2f:   hlt
  0x0000775055223a30:   hlt
  0x0000775055223a31:   hlt
  0x0000775055223a32:   hlt
  0x0000775055223a33:   hlt
  0x0000775055223a34:   hlt
  0x0000775055223a35:   hlt
  0x0000775055223a36:   hlt
  0x0000775055223a37:   hlt
  0x0000775055223a38:   hlt
  0x0000775055223a39:   hlt
  0x0000775055223a3a:   hlt
  0x0000775055223a3b:   hlt
  0x0000775055223a3c:   hlt
  0x0000775055223a3d:   hlt
  0x0000775055223a3e:   hlt
  0x0000775055223a3f:   hlt
[Exception Handler]
  0x0000775055223a40:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055223a45:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055223a4f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055223a53:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055223a58:   hlt
[Deopt Handler Code]
  0x0000775055223a59:   movabs $0x775055223a59,%r10         ;   {section_word}
  0x0000775055223a63:   push   %r10
  0x0000775055223a65:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055223a6a:   hlt
  0x0000775055223a6b:   hlt
  0x0000775055223a6c:   hlt
  0x0000775055223a6d:   hlt
  0x0000775055223a6e:   hlt
  0x0000775055223a6f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     351   93       3       java.lang.StringLatin1::indexOfChar (33 bytes)
 total in heap  [0x0000775055223b90,0x0000775055224100] = 1392
 relocation     [0x0000775055223cf0,0x0000775055223d38] = 72
 main code      [0x0000775055223d40,0x0000775055223f40] = 512
 stub code      [0x0000775055223f40,0x0000775055223f70] = 48
 metadata       [0x0000775055223f70,0x0000775055223f78] = 8
 scopes data    [0x0000775055223f78,0x0000775055223fe0] = 104
 scopes pcs     [0x0000775055223fe0,0x00007750552240e0] = 256
 dependencies   [0x00007750552240e0,0x00007750552240e8] = 8
 nul chk table  [0x00007750552240e8,0x0000775055224100] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020176730} 'indexOfChar' '([BIII)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000775055223d40:   mov    %eax,-0x14000(%rsp)
  0x0000775055223d47:   push   %rbp
  0x0000775055223d48:   sub    $0x30,%rsp
  0x0000775055223d4c:   movabs $0x77502041cf00,%rax         ;   {metadata(method data for {method} {0x0000775020176730} 'indexOfChar' '([BIII)I' in 'java/lang/StringLatin1')}
  0x0000775055223d56:   mov    0xf4(%rax),%edi
  0x0000775055223d5c:   add    $0x2,%edi
  0x0000775055223d5f:   mov    %edi,0xf4(%rax)
  0x0000775055223d65:   and    $0x7fe,%edi
  0x0000775055223d6b:   cmp    $0x0,%edi
  0x0000775055223d6e:   je     0x0000775055223e79           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@0 (line 218)
  0x0000775055223d74:   movsbl %dl,%edx
  0x0000775055223d77:   jmp    0x0000775055223e0d           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@7 (line 219)
  0x0000775055223d7c:   nopl   0x0(%rax)
  0x0000775055223d80:   cmp    0xc(%rsi),%ecx               ; implicit exception: dispatches to 0x0000775055223e9a
  0x0000775055223d83:   jae    0x0000775055223ea4
  0x0000775055223d89:   movslq %ecx,%rax
  0x0000775055223d8c:   movsbl 0x10(%rsi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@16 (line 220)
  0x0000775055223d91:   cmp    %edx,%eax
  0x0000775055223d93:   movabs $0x77502041cf00,%rax         ;   {metadata(method data for {method} {0x0000775020176730} 'indexOfChar' '([BIII)I' in 'java/lang/StringLatin1')}
  0x0000775055223d9d:   movabs $0x168,%rdi
  0x0000775055223da7:   je     0x0000775055223db7
  0x0000775055223dad:   movabs $0x158,%rdi
  0x0000775055223db7:   mov    (%rax,%rdi,1),%rbx
  0x0000775055223dbb:   lea    0x1(%rbx),%rbx
  0x0000775055223dbf:   mov    %rbx,(%rax,%rdi,1)
  0x0000775055223dc3:   je     0x0000775055223e4b           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@19 (line 220)
  0x0000775055223dc9:   inc    %ecx
  0x0000775055223dcb:   movabs $0x77502041cf00,%rax         ;   {metadata(method data for {method} {0x0000775020176730} 'indexOfChar' '([BIII)I' in 'java/lang/StringLatin1')}
  0x0000775055223dd5:   mov    0xf8(%rax),%edi
  0x0000775055223ddb:   add    $0x2,%edi
  0x0000775055223dde:   mov    %edi,0xf8(%rax)
  0x0000775055223de4:   and    $0x3ffe,%edi
  0x0000775055223dea:   cmp    $0x0,%edi
  0x0000775055223ded:   je     0x0000775055223eb2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@28 (line 219)
  0x0000775055223df3:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::indexOfChar@28 (line 219)
  0x0000775055223dfa:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055223dfd:   movabs $0x77502041cf00,%rax         ;   {metadata(method data for {method} {0x0000775020176730} 'indexOfChar' '([BIII)I' in 'java/lang/StringLatin1')}
  0x0000775055223e07:   incl   0x178(%rax)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@28 (line 219)
  0x0000775055223e0d:   cmp    %r8d,%ecx
  0x0000775055223e10:   movabs $0x77502041cf00,%rax         ;   {metadata(method data for {method} {0x0000775020176730} 'indexOfChar' '([BIII)I' in 'java/lang/StringLatin1')}
  0x0000775055223e1a:   movabs $0x138,%rdi
  0x0000775055223e24:   jge    0x0000775055223e34
  0x0000775055223e2a:   movabs $0x148,%rdi
  0x0000775055223e34:   mov    (%rax,%rdi,1),%rbx
  0x0000775055223e38:   lea    0x1(%rbx),%rbx
  0x0000775055223e3c:   mov    %rbx,(%rax,%rdi,1)
  0x0000775055223e40:   jge    0x0000775055223e61
  0x0000775055223e46:   jmp    0x0000775055223d80           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@10 (line 219)
  0x0000775055223e4b:   mov    %rcx,%rax
  0x0000775055223e4e:   add    $0x30,%rsp
  0x0000775055223e52:   pop    %rbp
  0x0000775055223e53:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055223e5a:   ja     0x0000775055223ed3
  0x0000775055223e60:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@24 (line 221)
  0x0000775055223e61:   mov    $0xffffffff,%eax
  0x0000775055223e66:   add    $0x30,%rsp
  0x0000775055223e6a:   pop    %rbp
  0x0000775055223e6b:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055223e72:   ja     0x0000775055223ee9
  0x0000775055223e78:   ret
  0x0000775055223e79:   movabs $0x775020176730,%r10         ;   {metadata({method} {0x0000775020176730} 'indexOfChar' '([BIII)I' in 'java/lang/StringLatin1')}
  0x0000775055223e83:   mov    %r10,0x8(%rsp)
  0x0000775055223e88:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055223e90:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::indexOfChar@-1 (line 218)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055223e95:   jmp    0x0000775055223d74
  0x0000775055223e9a:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@16 (line 220)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055223e9f:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@16 (line 220)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055223ea4:   mov    %rcx,(%rsp)
  0x0000775055223ea8:   mov    %rsi,0x8(%rsp)
  0x0000775055223ead:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::indexOfChar@16 (line 220)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055223eb2:   movabs $0x775020176730,%r10         ;   {metadata({method} {0x0000775020176730} 'indexOfChar' '([BIII)I' in 'java/lang/StringLatin1')}
  0x0000775055223ebc:   mov    %r10,0x8(%rsp)
  0x0000775055223ec1:   movq   $0x1c,(%rsp)
  0x0000775055223ec9:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::indexOfChar@28 (line 219)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055223ece:   jmp    0x0000775055223df3
  0x0000775055223ed3:   movabs $0x775055223e53,%r10         ;   {internal_word}
  0x0000775055223edd:   mov    %r10,0x360(%r15)
  0x0000775055223ee4:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055223ee9:   movabs $0x775055223e6b,%r10         ;   {internal_word}
  0x0000775055223ef3:   mov    %r10,0x360(%r15)
  0x0000775055223efa:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055223eff:   nop
  0x0000775055223f00:   nop
  0x0000775055223f01:   mov    0x3d8(%r15),%rax
  0x0000775055223f08:   movq   $0x0,0x3d8(%r15)
  0x0000775055223f13:   movq   $0x0,0x3e0(%r15)
  0x0000775055223f1e:   add    $0x30,%rsp
  0x0000775055223f22:   pop    %rbp
  0x0000775055223f23:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055223f28:   hlt
  0x0000775055223f29:   hlt
  0x0000775055223f2a:   hlt
  0x0000775055223f2b:   hlt
  0x0000775055223f2c:   hlt
  0x0000775055223f2d:   hlt
  0x0000775055223f2e:   hlt
  0x0000775055223f2f:   hlt
  0x0000775055223f30:   hlt
  0x0000775055223f31:   hlt
  0x0000775055223f32:   hlt
  0x0000775055223f33:   hlt
  0x0000775055223f34:   hlt
  0x0000775055223f35:   hlt
  0x0000775055223f36:   hlt
  0x0000775055223f37:   hlt
  0x0000775055223f38:   hlt
  0x0000775055223f39:   hlt
  0x0000775055223f3a:   hlt
  0x0000775055223f3b:   hlt
  0x0000775055223f3c:   hlt
  0x0000775055223f3d:   hlt
  0x0000775055223f3e:   hlt
  0x0000775055223f3f:   hlt
[Exception Handler]
  0x0000775055223f40:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055223f45:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055223f4f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055223f53:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055223f58:   hlt
[Deopt Handler Code]
  0x0000775055223f59:   movabs $0x775055223f59,%r10         ;   {section_word}
  0x0000775055223f63:   push   %r10
  0x0000775055223f65:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055223f6a:   hlt
  0x0000775055223f6b:   hlt
  0x0000775055223f6c:   hlt
  0x0000775055223f6d:   hlt
  0x0000775055223f6e:   hlt
  0x0000775055223f6f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     354   94       3       java.lang.String::<init> (15 bytes)
 total in heap  [0x0000775055224110,0x0000775055224550] = 1088
 relocation     [0x0000775055224270,0x00007750552242a8] = 56
 main code      [0x00007750552242c0,0x0000775055224460] = 416
 stub code      [0x0000775055224460,0x0000775055224490] = 48
 metadata       [0x0000775055224490,0x00007750552244a0] = 16
 scopes data    [0x00007750552244a0,0x00007750552244d8] = 56
 scopes pcs     [0x00007750552244d8,0x0000775055224548] = 112
 dependencies   [0x0000775055224548,0x0000775055224550] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502000f048} '<init>' '([BB)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = byte
  #           [sp+0x40]  (sp of caller)
  0x00007750552242c0:   mov    0x8(%rsi),%r10d
  0x00007750552242c4:   movabs $0x800000000,%r11
  0x00007750552242ce:   add    %r11,%r10
  0x00007750552242d1:   cmp    %rax,%r10
  0x00007750552242d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552242da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552242e0:   mov    %eax,-0x14000(%rsp)
  0x00007750552242e7:   push   %rbp
  0x00007750552242e8:   sub    $0x30,%rsp
  0x00007750552242ec:   movabs $0x77502041d850,%rdi         ;   {metadata(method data for {method} {0x000077502000f048} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007750552242f6:   mov    0xf4(%rdi),%ebx
  0x00007750552242fc:   add    $0x2,%ebx
  0x00007750552242ff:   mov    %ebx,0xf4(%rdi)
  0x0000775055224305:   and    $0x7fe,%ebx
  0x000077505522430b:   cmp    $0x0,%ebx
  0x000077505522430e:   je     0x0000775055224394           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::<init>@0 (line 4539)
  0x0000775055224314:   mov    %rsi,%rdi
  0x0000775055224317:   movabs $0x77502041d850,%rbx         ;   {metadata(method data for {method} {0x000077502000f048} '<init>' '([BB)V' in 'java/lang/String')}
  0x0000775055224321:   addq   $0x1,0x138(%rbx)
  0x0000775055224329:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055224333:   mov    0xf4(%rdi),%ebx
  0x0000775055224339:   add    $0x2,%ebx
  0x000077505522433c:   mov    %ebx,0xf4(%rdi)
  0x0000775055224342:   and    $0x1ffffe,%ebx
  0x0000775055224348:   cmp    $0x0,%ebx
  0x000077505522434b:   je     0x00007750552243b5
  0x0000775055224351:   movsbl 0x38(%r15),%edi
  0x0000775055224356:   cmp    $0x0,%edi
  0x0000775055224359:   jne    0x00007750552243d6
  0x000077505522435f:   mov    %rdx,%r10
  0x0000775055224362:   shr    $0x3,%r10
  0x0000775055224366:   mov    %r10d,0x14(%rsi)
  0x000077505522436a:   mov    %rsi,%rdi
  0x000077505522436d:   xor    %rdx,%rdi
  0x0000775055224370:   shr    $0x16,%rdi
  0x0000775055224374:   cmp    $0x0,%rdi
  0x0000775055224378:   jne    0x00007750552243f5           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::<init>@6 (line 4540)
  0x000077505522437e:   mov    %cl,0x10(%rsi)               ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::<init>@11 (line 4541)
  0x0000775055224381:   add    $0x30,%rsp
  0x0000775055224385:   pop    %rbp
  0x0000775055224386:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522438d:   ja     0x0000775055224409
  0x0000775055224393:   ret
  0x0000775055224394:   movabs $0x77502000f048,%r10         ;   {metadata({method} {0x000077502000f048} '<init>' '([BB)V' in 'java/lang/String')}
  0x000077505522439e:   mov    %r10,0x8(%rsp)
  0x00007750552243a3:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552243ab:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::<init>@-1 (line 4539)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552243b0:   jmp    0x0000775055224314
  0x00007750552243b5:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552243bf:   mov    %r10,0x8(%rsp)
  0x00007750552243c4:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552243cc:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.lang.String::<init>@1 (line 4539)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552243d1:   jmp    0x0000775055224351
  0x00007750552243d6:   mov    0x14(%rsi),%edi
  0x00007750552243d9:   shl    $0x3,%rdi
  0x00007750552243dd:   cmp    $0x0,%rdi
  0x00007750552243e1:   je     0x000077505522435f
  0x00007750552243e7:   mov    %rdi,(%rsp)
  0x00007750552243eb:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552243f0:   jmp    0x000077505522435f
  0x00007750552243f5:   cmp    $0x0,%rdx
  0x00007750552243f9:   je     0x000077505522437e
  0x00007750552243fb:   mov    %rsi,(%rsp)
  0x00007750552243ff:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055224404:   jmp    0x000077505522437e
  0x0000775055224409:   movabs $0x775055224386,%r10         ;   {internal_word}
  0x0000775055224413:   mov    %r10,0x360(%r15)
  0x000077505522441a:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522441f:   nop
  0x0000775055224420:   nop
  0x0000775055224421:   mov    0x3d8(%r15),%rax
  0x0000775055224428:   movq   $0x0,0x3d8(%r15)
  0x0000775055224433:   movq   $0x0,0x3e0(%r15)
  0x000077505522443e:   add    $0x30,%rsp
  0x0000775055224442:   pop    %rbp
  0x0000775055224443:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055224448:   hlt
  0x0000775055224449:   hlt
  0x000077505522444a:   hlt
  0x000077505522444b:   hlt
  0x000077505522444c:   hlt
  0x000077505522444d:   hlt
  0x000077505522444e:   hlt
  0x000077505522444f:   hlt
  0x0000775055224450:   hlt
  0x0000775055224451:   hlt
  0x0000775055224452:   hlt
  0x0000775055224453:   hlt
  0x0000775055224454:   hlt
  0x0000775055224455:   hlt
  0x0000775055224456:   hlt
  0x0000775055224457:   hlt
  0x0000775055224458:   hlt
  0x0000775055224459:   hlt
  0x000077505522445a:   hlt
  0x000077505522445b:   hlt
  0x000077505522445c:   hlt
  0x000077505522445d:   hlt
  0x000077505522445e:   hlt
  0x000077505522445f:   hlt
[Exception Handler]
  0x0000775055224460:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055224465:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522446f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055224473:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055224478:   hlt
[Deopt Handler Code]
  0x0000775055224479:   movabs $0x775055224479,%r10         ;   {section_word}
  0x0000775055224483:   push   %r10
  0x0000775055224485:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522448a:   hlt
  0x000077505522448b:   hlt
  0x000077505522448c:   hlt
  0x000077505522448d:   hlt
  0x000077505522448e:   hlt
  0x000077505522448f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     357   95       4       java.util.zip.ZipUtils::SH (21 bytes)
 total in heap  [0x000077505ccd0b10,0x000077505ccd0e68] = 856
 relocation     [0x000077505ccd0c70,0x000077505ccd0c88] = 24
 main code      [0x000077505ccd0ca0,0x000077505ccd0d40] = 160
 stub code      [0x000077505ccd0d40,0x000077505ccd0d58] = 24
 metadata       [0x000077505ccd0d58,0x000077505ccd0d60] = 8
 scopes data    [0x000077505ccd0d60,0x000077505ccd0db0] = 80
 scopes pcs     [0x000077505ccd0db0,0x000077505ccd0e50] = 160
 dependencies   [0x000077505ccd0e50,0x000077505ccd0e58] = 8
 nul chk table  [0x000077505ccd0e58,0x000077505ccd0e68] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502038b548} 'SH' '([BI)I' in 'java/util/zip/ZipUtils'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000077505ccd0ca0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd0ca7:   push   %rbp
  0x000077505ccd0ca8:   sub    $0x20,%rsp                   ;*synchronization entry
                                                            ; - java.util.zip.ZipUtils::SH@-1 (line 203)
  0x000077505ccd0cac:   mov    0xc(%rsi),%r10d              ; implicit exception: dispatches to 0x000077505ccd0d10
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
  0x000077505ccd0cb0:   cmp    %r10d,%edx
  0x000077505ccd0cb3:   jae    0x000077505ccd0ce6
  0x000077505ccd0cb5:   movzbl 0x10(%rsi,%rdx,1),%r11d      ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@6 (line 203)
  0x000077505ccd0cbb:   mov    %edx,%ebp
  0x000077505ccd0cbd:   inc    %ebp                         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@10 (line 203)
  0x000077505ccd0cbf:   cmp    %r10d,%ebp
  0x000077505ccd0cc2:   jae    0x000077505ccd0cfc
  0x000077505ccd0cc4:   movslq %edx,%r10
  0x000077505ccd0cc7:   movzbl 0x11(%rsi,%r10,1),%eax
  0x000077505ccd0ccd:   shl    $0x8,%eax
  0x000077505ccd0cd0:   or     %r11d,%eax                   ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@19 (line 203)
  0x000077505ccd0cd3:   add    $0x20,%rsp
  0x000077505ccd0cd7:   pop    %rbp
  0x000077505ccd0cd8:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd0cdf:   ja     0x000077505ccd0d1c
  0x000077505ccd0ce5:   ret
  0x000077505ccd0ce6:   mov    %rsi,0x8(%rsp)
  0x000077505ccd0ceb:   mov    %edx,0x4(%rsp)
  0x000077505ccd0cef:   mov    $0xffffffe4,%esi
  0x000077505ccd0cf4:   data16 xchg %ax,%ax
  0x000077505ccd0cf7:   call   0x000077505c78d600           ; ImmutableOopMap {[8]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd0cfc:   mov    %rsi,(%rsp)
  0x000077505ccd0d00:   mov    %r11d,0x8(%rsp)
  0x000077505ccd0d05:   mov    $0xffffffe4,%esi
  0x000077505ccd0d0a:   nop
  0x000077505ccd0d0b:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@11 (line 203)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd0d10:   mov    $0xfffffff6,%esi
  0x000077505ccd0d15:   mov    %edx,%ebp
  0x000077505ccd0d17:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.ZipUtils::SH@2 (line 203)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd0d1c:   movabs $0x77505ccd0cd8,%r10         ;   {internal_word}
  0x000077505ccd0d26:   mov    %r10,0x360(%r15)
  0x000077505ccd0d2d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd0d32:   hlt
  0x000077505ccd0d33:   hlt
  0x000077505ccd0d34:   hlt
  0x000077505ccd0d35:   hlt
  0x000077505ccd0d36:   hlt
  0x000077505ccd0d37:   hlt
  0x000077505ccd0d38:   hlt
  0x000077505ccd0d39:   hlt
  0x000077505ccd0d3a:   hlt
  0x000077505ccd0d3b:   hlt
  0x000077505ccd0d3c:   hlt
  0x000077505ccd0d3d:   hlt
  0x000077505ccd0d3e:   hlt
  0x000077505ccd0d3f:   hlt
[Exception Handler]
  0x000077505ccd0d40:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd0d45:   call   0x000077505ccd0d4a
  0x000077505ccd0d4a:   subq   $0x5,(%rsp)
  0x000077505ccd0d4f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd0d54:   hlt
  0x000077505ccd0d55:   hlt
  0x000077505ccd0d56:   hlt
  0x000077505ccd0d57:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     359   96       3       java.lang.AbstractStringBuilder::putStringAt (12 bytes)
 total in heap  [0x0000775055224590,0x0000775055224b48] = 1464
 relocation     [0x00007750552246f0,0x0000775055224740] = 80
 main code      [0x0000775055224740,0x0000775055224940] = 512
 stub code      [0x0000775055224940,0x0000775055224980] = 64
 metadata       [0x0000775055224980,0x0000775055224998] = 24
 scopes data    [0x0000775055224998,0x0000775055224a28] = 144
 scopes pcs     [0x0000775055224a28,0x0000775055224b28] = 256
 dependencies   [0x0000775055224b28,0x0000775055224b30] = 8
 nul chk table  [0x0000775055224b30,0x0000775055224b48] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200b32b0} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/String'
  #           [sp+0x70]  (sp of caller)
  0x0000775055224740:   mov    0x8(%rsi),%r10d
  0x0000775055224744:   movabs $0x800000000,%r11
  0x000077505522474e:   add    %r11,%r10
  0x0000775055224751:   cmp    %rax,%r10
  0x0000775055224754:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522475a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055224760:   mov    %eax,-0x14000(%rsp)
  0x0000775055224767:   push   %rbp
  0x0000775055224768:   sub    $0x60,%rsp
  0x000077505522476c:   mov    %rcx,%r8
  0x000077505522476f:   movabs $0x77502041deb0,%rcx         ;   {metadata(method data for {method} {0x00007750200b32b0} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x0000775055224779:   mov    0xf4(%rcx),%r9d
  0x0000775055224780:   add    $0x2,%r9d
  0x0000775055224784:   mov    %r9d,0xf4(%rcx)
  0x000077505522478b:   and    $0x7fe,%r9d
  0x0000775055224792:   cmp    $0x0,%r9d
  0x0000775055224796:   je     0x000077505522488f           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@0 (line 1724)
  0x000077505522479c:   cmp    (%r8),%rax                   ; implicit exception: dispatches to 0x00007750552248b0
                                                            ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
  0x000077505522479f:   mov    %r8,%rcx
  0x00007750552247a2:   movabs $0x77502041deb0,%r9          ;   {metadata(method data for {method} {0x00007750200b32b0} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007750552247ac:   addq   $0x1,0x138(%r9)
  0x00007750552247b4:   movabs $0x7750202a8f80,%rcx         ;   {metadata(method data for {method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String')}
  0x00007750552247be:   mov    0xf4(%rcx),%r9d
  0x00007750552247c5:   add    $0x2,%r9d
  0x00007750552247c9:   mov    %r9d,0xf4(%rcx)
  0x00007750552247d0:   and    $0x1ffffe,%r9d
  0x00007750552247d7:   cmp    $0x0,%r9d
  0x00007750552247db:   je     0x00007750552248b5
  0x00007750552247e1:   mov    0x14(%r8),%ecx
  0x00007750552247e5:   shl    $0x3,%rcx                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@1 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
  0x00007750552247e9:   mov    0xc(%rcx),%r9d               ; implicit exception: dispatches to 0x00007750552248d6
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
  0x00007750552247ed:   mov    %r8,%rcx
  0x00007750552247f0:   movabs $0x7750202a8f80,%rdi         ;   {metadata(method data for {method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String')}
  0x00007750552247fa:   addq   $0x1,0x138(%rdi)
  0x0000775055224802:   movabs $0x7750202a8de0,%rcx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x000077505522480c:   mov    0xf4(%rcx),%edi
  0x0000775055224812:   add    $0x2,%edi
  0x0000775055224815:   mov    %edi,0xf4(%rcx)
  0x000077505522481b:   and    $0x1ffffe,%edi
  0x0000775055224821:   cmp    $0x0,%edi
  0x0000775055224824:   je     0x00007750552248db
  0x000077505522482a:   movabs $0x7750202a8de0,%rcx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055224834:   incl   0x148(%rcx)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
  0x000077505522483a:   movsbl 0x10(%r8),%ecx               ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
  0x000077505522483f:   movabs $0x7750202a8de0,%rdi         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055224849:   incl   0x158(%rdi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
  0x000077505522484f:   shl    $0x18,%ecx
  0x0000775055224852:   sar    $0x18,%ecx
  0x0000775055224855:   sar    %cl,%r9d
  0x0000775055224858:   mov    %rsi,%rcx
  0x000077505522485b:   movabs $0x77502041deb0,%rdi         ;   {metadata(method data for {method} {0x00007750200b32b0} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x0000775055224865:   addq   $0x1,0x170(%rdi)
  0x000077505522486d:   mov    %r8,%rcx
  0x0000775055224870:   mov    $0x0,%r8d                    ;*invokevirtual putStringAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1724)
  0x0000775055224876:   nop
  0x0000775055224877:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual putStringAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1724)
                                                            ;   {optimized virtual_call}
  0x000077505522487c:   add    $0x60,%rsp
  0x0000775055224880:   pop    %rbp
  0x0000775055224881:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055224888:   ja     0x00007750552248fc
  0x000077505522488e:   ret
  0x000077505522488f:   movabs $0x7750200b32b0,%r10         ;   {metadata({method} {0x00007750200b32b0} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x0000775055224899:   mov    %r10,0x8(%rsp)
  0x000077505522489e:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552248a6:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@-1 (line 1724)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552248ab:   jmp    0x000077505522479c
  0x00007750552248b0:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop r8=Oop }
                                                            ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552248b5:   movabs $0x7750200098a0,%r10         ;   {metadata({method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String')}
  0x00007750552248bf:   mov    %r10,0x8(%rsp)
  0x00007750552248c4:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552248cc:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::length@-1 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552248d1:   jmp    0x00007750552247e1
  0x00007750552248d6:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop r8=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552248db:   movabs $0x77502000f0f8,%r10         ;   {metadata({method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x00007750552248e5:   mov    %r10,0x8(%rsp)
  0x00007750552248ea:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552248f2:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1724)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552248f7:   jmp    0x000077505522482a
  0x00007750552248fc:   movabs $0x775055224881,%r10         ;   {internal_word}
  0x0000775055224906:   mov    %r10,0x360(%r15)
  0x000077505522490d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055224912:   nop
  0x0000775055224913:   nop
  0x0000775055224914:   mov    0x3d8(%r15),%rax
  0x000077505522491b:   movq   $0x0,0x3d8(%r15)
  0x0000775055224926:   movq   $0x0,0x3e0(%r15)
  0x0000775055224931:   add    $0x60,%rsp
  0x0000775055224935:   pop    %rbp
  0x0000775055224936:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522493b:   hlt
  0x000077505522493c:   hlt
  0x000077505522493d:   hlt
  0x000077505522493e:   hlt
  0x000077505522493f:   hlt
[Stub Code]
  0x0000775055224940:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055224945:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522494f:   jmp    0x000077505522494f           ;   {runtime_call}
[Exception Handler]
  0x0000775055224954:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055224959:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055224963:   and    $0xfffffffffffffff0,%rsp
  0x0000775055224967:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522496c:   hlt
[Deopt Handler Code]
  0x000077505522496d:   movabs $0x77505522496d,%r10         ;   {section_word}
  0x0000775055224977:   push   %r10
  0x0000775055224979:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522497e:   hlt
  0x000077505522497f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     361   97       3       java.lang.AbstractStringBuilder::getCoder (15 bytes)
 total in heap  [0x0000775055224b90,0x0000775055224ef8] = 872
 relocation     [0x0000775055224cf0,0x0000775055224d20] = 48
 main code      [0x0000775055224d20,0x0000775055224e20] = 256
 stub code      [0x0000775055224e20,0x0000775055224e50] = 48
 metadata       [0x0000775055224e50,0x0000775055224e58] = 8
 scopes data    [0x0000775055224e58,0x0000775055224e80] = 40
 scopes pcs     [0x0000775055224e80,0x0000775055224ef0] = 112
 dependencies   [0x0000775055224ef0,0x0000775055224ef8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200b2d70} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder'
  #           [sp+0x40]  (sp of caller)
  0x0000775055224d20:   mov    0x8(%rsi),%r10d
  0x0000775055224d24:   movabs $0x800000000,%r11
  0x0000775055224d2e:   add    %r11,%r10
  0x0000775055224d31:   cmp    %rax,%r10
  0x0000775055224d34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055224d3a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055224d40:   mov    %eax,-0x14000(%rsp)
  0x0000775055224d47:   push   %rbp
  0x0000775055224d48:   sub    $0x30,%rsp
  0x0000775055224d4c:   movabs $0x77502041e340,%rax         ;   {metadata(method data for {method} {0x00007750200b2d70} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x0000775055224d56:   mov    0xf4(%rax),%edi
  0x0000775055224d5c:   add    $0x2,%edi
  0x0000775055224d5f:   mov    %edi,0xf4(%rax)
  0x0000775055224d65:   and    $0x7fe,%edi
  0x0000775055224d6b:   cmp    $0x0,%edi
  0x0000775055224d6e:   je     0x0000775055224db1           ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::getCoder@0 (line 1673)
  0x0000775055224d74:   movabs $0x77502041e340,%rax         ;   {metadata(method data for {method} {0x00007750200b2d70} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x0000775055224d7e:   incl   0x148(%rax)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::getCoder@3 (line 1673)
  0x0000775055224d84:   movsbl 0x10(%rsi),%eax              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1673)
  0x0000775055224d88:   movabs $0x77502041e340,%rsi         ;   {metadata(method data for {method} {0x00007750200b2d70} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x0000775055224d92:   incl   0x158(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::getCoder@10 (line 1673)
  0x0000775055224d98:   shl    $0x18,%eax
  0x0000775055224d9b:   sar    $0x18,%eax
  0x0000775055224d9e:   add    $0x30,%rsp
  0x0000775055224da2:   pop    %rbp
  0x0000775055224da3:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055224daa:   ja     0x0000775055224dcf
  0x0000775055224db0:   ret
  0x0000775055224db1:   movabs $0x7750200b2d70,%r10         ;   {metadata({method} {0x00007750200b2d70} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x0000775055224dbb:   mov    %r10,0x8(%rsp)
  0x0000775055224dc0:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055224dc8:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.AbstractStringBuilder::getCoder@-1 (line 1673)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055224dcd:   jmp    0x0000775055224d74
  0x0000775055224dcf:   movabs $0x775055224da3,%r10         ;   {internal_word}
  0x0000775055224dd9:   mov    %r10,0x360(%r15)
  0x0000775055224de0:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055224de5:   nop
  0x0000775055224de6:   nop
  0x0000775055224de7:   mov    0x3d8(%r15),%rax
  0x0000775055224dee:   movq   $0x0,0x3d8(%r15)
  0x0000775055224df9:   movq   $0x0,0x3e0(%r15)
  0x0000775055224e04:   add    $0x30,%rsp
  0x0000775055224e08:   pop    %rbp
  0x0000775055224e09:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055224e0e:   hlt
  0x0000775055224e0f:   hlt
  0x0000775055224e10:   hlt
  0x0000775055224e11:   hlt
  0x0000775055224e12:   hlt
  0x0000775055224e13:   hlt
  0x0000775055224e14:   hlt
  0x0000775055224e15:   hlt
  0x0000775055224e16:   hlt
  0x0000775055224e17:   hlt
  0x0000775055224e18:   hlt
  0x0000775055224e19:   hlt
  0x0000775055224e1a:   hlt
  0x0000775055224e1b:   hlt
  0x0000775055224e1c:   hlt
  0x0000775055224e1d:   hlt
  0x0000775055224e1e:   hlt
  0x0000775055224e1f:   hlt
[Exception Handler]
  0x0000775055224e20:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055224e25:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055224e2f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055224e33:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055224e38:   hlt
[Deopt Handler Code]
  0x0000775055224e39:   movabs $0x775055224e39,%r10         ;   {section_word}
  0x0000775055224e43:   push   %r10
  0x0000775055224e45:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055224e4a:   hlt
  0x0000775055224e4b:   hlt
  0x0000775055224e4c:   hlt
  0x0000775055224e4d:   hlt
  0x0000775055224e4e:   hlt
  0x0000775055224e4f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     362   98       3       java.lang.String::getBytes (46 bytes)
 total in heap  [0x0000775055224f10,0x0000775055225590] = 1664
 relocation     [0x0000775055225070,0x00007750552250d8] = 104
 main code      [0x00007750552250e0,0x00007750552253a0] = 704
 stub code      [0x00007750552253a0,0x00007750552253f0] = 80
 metadata       [0x00007750552253f0,0x0000775055225400] = 16
 scopes data    [0x0000775055225400,0x0000775055225488] = 136
 scopes pcs     [0x0000775055225488,0x0000775055225588] = 256
 dependencies   [0x0000775055225588,0x0000775055225590] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502000ed08} 'getBytes' '([BIIBI)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9        = byte
  # parm4:    rdi       = int
  #           [sp+0x60]  (sp of caller)
  0x00007750552250e0:   mov    0x8(%rsi),%r10d
  0x00007750552250e4:   movabs $0x800000000,%r11
  0x00007750552250ee:   add    %r11,%r10
  0x00007750552250f1:   cmp    %rax,%r10
  0x00007750552250f4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552250fa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055225100:   mov    %eax,-0x14000(%rsp)
  0x0000775055225107:   push   %rbp
  0x0000775055225108:   sub    $0x50,%rsp
  0x000077505522510c:   mov    %rdx,%rbx
  0x000077505522510f:   mov    %rcx,%rax
  0x0000775055225112:   movabs $0x77502041e4e0,%rcx         ;   {metadata(method data for {method} {0x000077502000ed08} 'getBytes' '([BIIBI)V' in 'java/lang/String')}
  0x000077505522511c:   mov    0xf4(%rcx),%edx
  0x0000775055225122:   add    $0x2,%edx
  0x0000775055225125:   mov    %edx,0xf4(%rcx)
  0x000077505522512b:   and    $0x7fe,%edx
  0x0000775055225131:   cmp    $0x0,%edx
  0x0000775055225134:   je     0x00007750552252e7           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@0 (line 4478)
  0x000077505522513a:   mov    %rsi,%rcx
  0x000077505522513d:   movabs $0x77502041e4e0,%rdx         ;   {metadata(method data for {method} {0x000077502000ed08} 'getBytes' '([BIIBI)V' in 'java/lang/String')}
  0x0000775055225147:   addq   $0x1,0x138(%rdx)
  0x000077505522514f:   movabs $0x7750202a8de0,%rcx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055225159:   mov    0xf4(%rcx),%edx
  0x000077505522515f:   add    $0x2,%edx
  0x0000775055225162:   mov    %edx,0xf4(%rcx)
  0x0000775055225168:   and    $0x1ffffe,%edx
  0x000077505522516e:   cmp    $0x0,%edx
  0x0000775055225171:   je     0x0000775055225308
  0x0000775055225177:   movabs $0x7750202a8de0,%rcx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055225181:   incl   0x148(%rcx)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4545)
                                                            ; - java.lang.String::getBytes@1 (line 4478)
  0x0000775055225187:   movsbl 0x10(%rsi),%ecx              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4545)
                                                            ; - java.lang.String::getBytes@1 (line 4478)
  0x000077505522518b:   movabs $0x7750202a8de0,%rdx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055225195:   incl   0x158(%rdx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4545)
                                                            ; - java.lang.String::getBytes@1 (line 4478)
  0x000077505522519b:   shl    $0x18,%ecx
  0x000077505522519e:   sar    $0x18,%ecx
  0x00007750552251a1:   cmp    %r9d,%ecx
  0x00007750552251a4:   movabs $0x77502041e4e0,%rcx         ;   {metadata(method data for {method} {0x000077502000ed08} 'getBytes' '([BIIBI)V' in 'java/lang/String')}
  0x00007750552251ae:   movabs $0x170,%rdx
  0x00007750552251b8:   jne    0x00007750552251c8
  0x00007750552251be:   movabs $0x180,%rdx
  0x00007750552251c8:   mov    (%rcx,%rdx,1),%r11
  0x00007750552251cc:   lea    0x1(%r11),%r11
  0x00007750552251d0:   mov    %r11,(%rcx,%rdx,1)
  0x00007750552251d4:   jne    0x00007750552252ab           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@6 (line 4478)
  0x00007750552251da:   mov    0x14(%rsi),%esi
  0x00007750552251dd:   shl    $0x3,%rsi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@10 (line 4479)
  0x00007750552251e1:   movabs $0x77502041e4e0,%rcx         ;   {metadata(method data for {method} {0x000077502000ed08} 'getBytes' '([BIIBI)V' in 'java/lang/String')}
  0x00007750552251eb:   addq   $0x1,0x190(%rcx)
  0x00007750552251f3:   mov    %r9,%rcx
  0x00007750552251f6:   shl    %cl,%eax
  0x00007750552251f8:   mov    %r9,%rcx
  0x00007750552251fb:   shl    %cl,%r8d
  0x00007750552251fe:   mov    %r9,%rcx
  0x0000775055225201:   shl    %cl,%edi
  0x0000775055225203:   mov    %rax,%rdx
  0x0000775055225206:   mov    %rbx,%rcx
  0x0000775055225209:   mov    %rdi,%r9
  0x000077505522520c:   test   %rsi,%rsi
  0x000077505522520f:   je     0x0000775055225329
  0x0000775055225215:   test   %rcx,%rcx
  0x0000775055225218:   je     0x0000775055225329
  0x000077505522521e:   test   %edx,%edx
  0x0000775055225220:   jl     0x0000775055225329
  0x0000775055225226:   test   %r8d,%r8d
  0x0000775055225229:   jl     0x0000775055225329
  0x000077505522522f:   lea    (%rdx,%r9,1),%rdi
  0x0000775055225233:   cmp    0xc(%rsi),%edi
  0x0000775055225236:   ja     0x0000775055225329
  0x000077505522523c:   lea    (%r8,%r9,1),%rdi
  0x0000775055225240:   cmp    0xc(%rcx),%edi
  0x0000775055225243:   ja     0x0000775055225329
  0x0000775055225249:   test   %r9d,%r9d
  0x000077505522524c:   jl     0x0000775055225329
  0x0000775055225252:   movslq %edx,%rdx
  0x0000775055225255:   movslq %r8d,%r8
  0x0000775055225258:   lea    0x10(%rsi,%rdx,1),%rdi
  0x000077505522525d:   lea    0x10(%rcx,%r8,1),%rsi
  0x0000775055225262:   mov    %r9,%rdx
  0x0000775055225265:   test   $0xf,%esp
  0x000077505522526b:   je     0x0000775055225283
  0x0000775055225271:   sub    $0x8,%rsp
  0x0000775055225275:   call   Stub::jbyte_arraycopy        ;   {runtime_call StubRoutines (2)}
  0x000077505522527a:   add    $0x8,%rsp
  0x000077505522527e:   jmp    0x0000775055225288
  0x0000775055225283:   call   Stub::jbyte_arraycopy        ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@27 (line 4479)
                                                            ;   {runtime_call StubRoutines (2)}
  0x0000775055225288:   movabs $0x77502041e4e0,%rsi         ;   {metadata(method data for {method} {0x000077502000ed08} 'getBytes' '([BIIBI)V' in 'java/lang/String')}
  0x0000775055225292:   incl   0x1a0(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@30 (line 4479)
  0x0000775055225298:   add    $0x50,%rsp
  0x000077505522529c:   pop    %rbp
  0x000077505522529d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552252a4:   ja     0x0000775055225339
  0x00007750552252aa:   ret
  0x00007750552252ab:   mov    0x14(%rsi),%esi
  0x00007750552252ae:   shl    $0x3,%rsi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@34 (line 4481)
  0x00007750552252b2:   movabs $0x77502041e4e0,%rdx         ;   {metadata(method data for {method} {0x000077502000ed08} 'getBytes' '([BIIBI)V' in 'java/lang/String')}
  0x00007750552252bc:   addq   $0x1,0x1b8(%rdx)
  0x00007750552252c4:   mov    %rax,%rdx
  0x00007750552252c7:   mov    %rbx,%rcx
  0x00007750552252ca:   mov    %rdi,%r9                     ;*invokestatic inflate {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@42 (line 4481)
  0x00007750552252cd:   xchg   %ax,%ax
  0x00007750552252cf:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic inflate {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@42 (line 4481)
                                                            ;   {static_call}
  0x00007750552252d4:   add    $0x50,%rsp
  0x00007750552252d8:   pop    %rbp
  0x00007750552252d9:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552252e0:   ja     0x000077505522534f
  0x00007750552252e6:   ret
  0x00007750552252e7:   movabs $0x77502000ed08,%r10         ;   {metadata({method} {0x000077502000ed08} 'getBytes' '([BIIBI)V' in 'java/lang/String')}
  0x00007750552252f1:   mov    %r10,0x8(%rsp)
  0x00007750552252f6:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552252fe:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::getBytes@-1 (line 4478)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055225303:   jmp    0x000077505522513a
  0x0000775055225308:   movabs $0x77502000f0f8,%r10         ;   {metadata({method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055225312:   mov    %r10,0x8(%rsp)
  0x0000775055225317:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522531f:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4545)
                                                            ; - java.lang.String::getBytes@1 (line 4478)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055225324:   jmp    0x0000775055225177
  0x0000775055225329:   nopw   0x0(%rax,%rax,1)
  0x000077505522532f:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::getBytes@27 (line 4479)
                                                            ;   {static_call}
  0x0000775055225334:   jmp    0x0000775055225288
  0x0000775055225339:   movabs $0x77505522529d,%r10         ;   {internal_word}
  0x0000775055225343:   mov    %r10,0x360(%r15)
  0x000077505522534a:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522534f:   movabs $0x7750552252d9,%r10         ;   {internal_word}
  0x0000775055225359:   mov    %r10,0x360(%r15)
  0x0000775055225360:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055225365:   nop
  0x0000775055225366:   nop
  0x0000775055225367:   mov    0x3d8(%r15),%rax
  0x000077505522536e:   movq   $0x0,0x3d8(%r15)
  0x0000775055225379:   movq   $0x0,0x3e0(%r15)
  0x0000775055225384:   add    $0x50,%rsp
  0x0000775055225388:   pop    %rbp
  0x0000775055225389:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522538e:   hlt
  0x000077505522538f:   hlt
  0x0000775055225390:   hlt
  0x0000775055225391:   hlt
  0x0000775055225392:   hlt
  0x0000775055225393:   hlt
  0x0000775055225394:   hlt
  0x0000775055225395:   hlt
  0x0000775055225396:   hlt
  0x0000775055225397:   hlt
  0x0000775055225398:   hlt
  0x0000775055225399:   hlt
  0x000077505522539a:   hlt
  0x000077505522539b:   hlt
  0x000077505522539c:   hlt
  0x000077505522539d:   hlt
  0x000077505522539e:   hlt
  0x000077505522539f:   hlt
[Stub Code]
  0x00007750552253a0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x00007750552253a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552253af:   jmp    0x00007750552253af           ;   {runtime_call}
  0x00007750552253b4:   nop
  0x00007750552253b5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552253bf:   jmp    0x00007750552253bf           ;   {runtime_call}
[Exception Handler]
  0x00007750552253c4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007750552253c9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552253d3:   and    $0xfffffffffffffff0,%rsp
  0x00007750552253d7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552253dc:   hlt
[Deopt Handler Code]
  0x00007750552253dd:   movabs $0x7750552253dd,%r10         ;   {section_word}
  0x00007750552253e7:   push   %r10
  0x00007750552253e9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552253ee:   hlt
  0x00007750552253ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     365   99       3       java.lang.StringBuilder::append (8 bytes)
 total in heap  [0x0000775055225610,0x0000775055225998] = 904
 relocation     [0x0000775055225770,0x00007750552257a8] = 56
 main code      [0x00007750552257c0,0x00007750552258c0] = 256
 stub code      [0x00007750552258c0,0x0000775055225900] = 64
 metadata       [0x0000775055225900,0x0000775055225908] = 8
 scopes data    [0x0000775055225908,0x0000775055225930] = 40
 scopes pcs     [0x0000775055225930,0x0000775055225990] = 96
 dependencies   [0x0000775055225990,0x0000775055225998] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x00007750552257c0:   mov    0x8(%rsi),%r10d
  0x00007750552257c4:   movabs $0x800000000,%r11
  0x00007750552257ce:   add    %r11,%r10
  0x00007750552257d1:   cmp    %rax,%r10
  0x00007750552257d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552257da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552257e0:   mov    %eax,-0x14000(%rsp)
  0x00007750552257e7:   push   %rbp
  0x00007750552257e8:   sub    $0x30,%rsp
  0x00007750552257ec:   movabs $0x77502038ff88,%rdi         ;   {metadata(method data for {method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00007750552257f6:   mov    0xf4(%rdi),%ebx
  0x00007750552257fc:   add    $0x2,%ebx
  0x00007750552257ff:   mov    %ebx,0xf4(%rdi)
  0x0000775055225805:   and    $0x7fe,%ebx
  0x000077505522580b:   cmp    $0x0,%ebx
  0x000077505522580e:   je     0x0000775055225854           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@0 (line 179)
  0x0000775055225814:   mov    %rsi,%rdi
  0x0000775055225817:   movabs $0x77502038ff88,%rbx         ;   {metadata(method data for {method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000775055225821:   addq   $0x1,0x138(%rbx)
  0x0000775055225829:   mov    %rsi,%rdi
  0x000077505522582c:   mov    %rdi,%rsi                    ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
  0x000077505522582f:   mov    %rdi,0x20(%rsp)
  0x0000775055225834:   data16 xchg %ax,%ax
  0x0000775055225837:   call   0x000077505c788080           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringBuilder::append@2 (line 179)
                                                            ;   {optimized virtual_call}
  0x000077505522583c:   mov    0x20(%rsp),%rax
  0x0000775055225841:   add    $0x30,%rsp
  0x0000775055225845:   pop    %rbp
  0x0000775055225846:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522584d:   ja     0x0000775055225872
  0x0000775055225853:   ret
  0x0000775055225854:   movabs $0x7750200b5648,%r10         ;   {metadata({method} {0x00007750200b5648} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000077505522585e:   mov    %r10,0x8(%rsp)
  0x0000775055225863:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522586b:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringBuilder::append@-1 (line 179)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055225870:   jmp    0x0000775055225814
  0x0000775055225872:   movabs $0x775055225846,%r10         ;   {internal_word}
  0x000077505522587c:   mov    %r10,0x360(%r15)
  0x0000775055225883:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055225888:   nop
  0x0000775055225889:   nop
  0x000077505522588a:   mov    0x3d8(%r15),%rax
  0x0000775055225891:   movq   $0x0,0x3d8(%r15)
  0x000077505522589c:   movq   $0x0,0x3e0(%r15)
  0x00007750552258a7:   add    $0x30,%rsp
  0x00007750552258ab:   pop    %rbp
  0x00007750552258ac:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552258b1:   hlt
  0x00007750552258b2:   hlt
  0x00007750552258b3:   hlt
  0x00007750552258b4:   hlt
  0x00007750552258b5:   hlt
  0x00007750552258b6:   hlt
  0x00007750552258b7:   hlt
  0x00007750552258b8:   hlt
  0x00007750552258b9:   hlt
  0x00007750552258ba:   hlt
  0x00007750552258bb:   hlt
  0x00007750552258bc:   hlt
  0x00007750552258bd:   hlt
  0x00007750552258be:   hlt
  0x00007750552258bf:   hlt
[Stub Code]
  0x00007750552258c0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x00007750552258c5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00007750552258cf:   jmp    0x00007750552258cf           ;   {runtime_call}
[Exception Handler]
  0x00007750552258d4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007750552258d9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552258e3:   and    $0xfffffffffffffff0,%rsp
  0x00007750552258e7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552258ec:   hlt
[Deopt Handler Code]
  0x00007750552258ed:   movabs $0x7750552258ed,%r10         ;   {section_word}
  0x00007750552258f7:   push   %r10
  0x00007750552258f9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552258fe:   hlt
  0x00007750552258ff:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     366  100       3       java.lang.AbstractStringBuilder::append (45 bytes)
 total in heap  [0x0000775055225a10,0x00007750552261d8] = 1992
 relocation     [0x0000775055225b70,0x0000775055225be8] = 120
 main code      [0x0000775055225c00,0x0000775055225ee0] = 736
 stub code      [0x0000775055225ee0,0x0000775055225f40] = 96
 metadata       [0x0000775055225f40,0x0000775055225f58] = 24
 scopes data    [0x0000775055225f58,0x0000775055226028] = 208
 scopes pcs     [0x0000775055226028,0x00007750552261b8] = 400
 dependencies   [0x00007750552261b8,0x00007750552261c0] = 8
 nul chk table  [0x00007750552261c0,0x00007750552261d8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200b0610} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x80]  (sp of caller)
  0x0000775055225c00:   mov    0x8(%rsi),%r10d
  0x0000775055225c04:   movabs $0x800000000,%r11
  0x0000775055225c0e:   add    %r11,%r10
  0x0000775055225c11:   cmp    %rax,%r10
  0x0000775055225c14:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055225c1a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055225c20:   mov    %eax,-0x14000(%rsp)
  0x0000775055225c27:   push   %rbp
  0x0000775055225c28:   sub    $0x70,%rsp
  0x0000775055225c2c:   mov    %rsi,0x48(%rsp)
  0x0000775055225c31:   movabs $0x775020390100,%rcx         ;   {metadata(method data for {method} {0x00007750200b0610} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000775055225c3b:   mov    0xf4(%rcx),%edi
  0x0000775055225c41:   add    $0x2,%edi
  0x0000775055225c44:   mov    %edi,0xf4(%rcx)
  0x0000775055225c4a:   and    $0x7fe,%edi
  0x0000775055225c50:   cmp    $0x0,%edi
  0x0000775055225c53:   je     0x0000775055225dff           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@0 (line 578)
  0x0000775055225c59:   cmp    $0x0,%rdx
  0x0000775055225c5d:   movabs $0x775020390100,%rcx         ;   {metadata(method data for {method} {0x00007750200b0610} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000775055225c67:   movabs $0x148,%rdi
  0x0000775055225c71:   je     0x0000775055225c81
  0x0000775055225c77:   movabs $0x138,%rdi
  0x0000775055225c81:   mov    (%rcx,%rdi,1),%rbx
  0x0000775055225c85:   lea    0x1(%rbx),%rbx
  0x0000775055225c89:   mov    %rbx,(%rcx,%rdi,1)
  0x0000775055225c8d:   je     0x0000775055225dd1           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@1 (line 578)
  0x0000775055225c93:   cmp    (%rdx),%rax                  ; implicit exception: dispatches to 0x0000775055225e20
                                                            ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
  0x0000775055225c96:   mov    %rdx,%rcx
  0x0000775055225c99:   movabs $0x775020390100,%rdi         ;   {metadata(method data for {method} {0x00007750200b0610} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000775055225ca3:   addq   $0x1,0x190(%rdi)
  0x0000775055225cab:   movabs $0x7750202a8f80,%rcx         ;   {metadata(method data for {method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String')}
  0x0000775055225cb5:   mov    0xf4(%rcx),%edi
  0x0000775055225cbb:   add    $0x2,%edi
  0x0000775055225cbe:   mov    %edi,0xf4(%rcx)
  0x0000775055225cc4:   and    $0x1ffffe,%edi
  0x0000775055225cca:   cmp    $0x0,%edi
  0x0000775055225ccd:   je     0x0000775055225e25
  0x0000775055225cd3:   mov    0x14(%rdx),%ecx
  0x0000775055225cd6:   shl    $0x3,%rcx                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@1 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
  0x0000775055225cda:   mov    0xc(%rcx),%edi               ; implicit exception: dispatches to 0x0000775055225e46
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
  0x0000775055225cdd:   mov    %rdx,%rcx
  0x0000775055225ce0:   movabs $0x7750202a8f80,%rbx         ;   {metadata(method data for {method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String')}
  0x0000775055225cea:   addq   $0x1,0x138(%rbx)
  0x0000775055225cf2:   movabs $0x7750202a8de0,%rcx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055225cfc:   mov    0xf4(%rcx),%ebx
  0x0000775055225d02:   add    $0x2,%ebx
  0x0000775055225d05:   mov    %ebx,0xf4(%rcx)
  0x0000775055225d0b:   and    $0x1ffffe,%ebx
  0x0000775055225d11:   cmp    $0x0,%ebx
  0x0000775055225d14:   je     0x0000775055225e4b
  0x0000775055225d1a:   movabs $0x7750202a8de0,%rcx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055225d24:   incl   0x148(%rcx)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
  0x0000775055225d2a:   movsbl 0x10(%rdx),%ecx              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
  0x0000775055225d2e:   movabs $0x7750202a8de0,%rbx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055225d38:   incl   0x158(%rbx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
  0x0000775055225d3e:   shl    $0x18,%ecx
  0x0000775055225d41:   sar    $0x18,%ecx
  0x0000775055225d44:   sar    %cl,%edi
  0x0000775055225d46:   mov    %rdx,0x50(%rsp)
  0x0000775055225d4b:   mov    0xc(%rsi),%ebx               ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@16 (line 582)
  0x0000775055225d4e:   mov    %rsi,%rax
  0x0000775055225d51:   movabs $0x775020390100,%rcx         ;   {metadata(method data for {method} {0x00007750200b0610} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000775055225d5b:   addq   $0x1,0x1c8(%rcx)
  0x0000775055225d63:   add    %edi,%ebx
  0x0000775055225d65:   mov    %rbx,%rdx
  0x0000775055225d68:   mov    %rsi,%rbx
  0x0000775055225d6b:   mov    %rbx,%rsi                    ;*invokevirtual ensureCapacityInternal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@21 (line 582)
  0x0000775055225d6e:   mov    %edi,0x58(%rsp)
  0x0000775055225d72:   nopl   0x0(%rax,%rax,1)
  0x0000775055225d77:   call   0x000077505c788080           ; ImmutableOopMap {[72]=Oop [80]=Oop }
                                                            ;*invokevirtual ensureCapacityInternal {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@21 (line 582)
                                                            ;   {optimized virtual_call}
  0x0000775055225d7c:   mov    0x48(%rsp),%rsi
  0x0000775055225d81:   mov    0xc(%rsi),%edx               ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@26 (line 583)
  0x0000775055225d84:   mov    %rsi,%rcx
  0x0000775055225d87:   movabs $0x775020390100,%rdi         ;   {metadata(method data for {method} {0x00007750200b0610} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000775055225d91:   addq   $0x1,0x200(%rdi)
  0x0000775055225d99:   mov    0x50(%rsp),%rcx
  0x0000775055225d9e:   mov    %rsi,%rdi
  0x0000775055225da1:   mov    %rdi,%rsi                    ;*invokevirtual putStringAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@30 (line 583)
  0x0000775055225da4:   data16 xchg %ax,%ax
  0x0000775055225da7:   call   0x000077505c788080           ; ImmutableOopMap {[72]=Oop }
                                                            ;*invokevirtual putStringAt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@30 (line 583)
                                                            ;   {optimized virtual_call}
  0x0000775055225dac:   mov    0x48(%rsp),%rsi
  0x0000775055225db1:   mov    0xc(%rsi),%eax               ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@35 (line 584)
  0x0000775055225db4:   add    0x58(%rsp),%eax
  0x0000775055225db8:   mov    %eax,0xc(%rsi)               ;*putfield count {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@40 (line 584)
  0x0000775055225dbb:   mov    %rsi,%rax
  0x0000775055225dbe:   add    $0x70,%rsp
  0x0000775055225dc2:   pop    %rbp
  0x0000775055225dc3:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055225dca:   ja     0x0000775055225e6c
  0x0000775055225dd0:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@44 (line 585)
  0x0000775055225dd1:   mov    %rsi,%rdi
  0x0000775055225dd4:   movabs $0x775020390100,%rbx         ;   {metadata(method data for {method} {0x00007750200b0610} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000775055225dde:   addq   $0x1,0x158(%rbx)
  0x0000775055225de6:   nop
  0x0000775055225de7:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual appendNull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@5 (line 579)
                                                            ;   {optimized virtual_call}
  0x0000775055225dec:   add    $0x70,%rsp
  0x0000775055225df0:   pop    %rbp
  0x0000775055225df1:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055225df8:   ja     0x0000775055225e82
  0x0000775055225dfe:   ret
  0x0000775055225dff:   movabs $0x7750200b0610,%r10         ;   {metadata({method} {0x00007750200b0610} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000775055225e09:   mov    %r10,0x8(%rsp)
  0x0000775055225e0e:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055225e16:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [72]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.AbstractStringBuilder::append@-1 (line 578)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055225e1b:   jmp    0x0000775055225c59
  0x0000775055225e20:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [72]=Oop rdx=Oop }
                                                            ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055225e25:   movabs $0x7750200098a0,%r10         ;   {metadata({method} {0x00007750200098a0} 'length' '()I' in 'java/lang/String')}
  0x0000775055225e2f:   mov    %r10,0x8(%rsp)
  0x0000775055225e34:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055225e3c:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [72]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::length@-1 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055225e41:   jmp    0x0000775055225cd3
  0x0000775055225e46:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [72]=Oop rdx=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::length@4 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055225e4b:   movabs $0x77502000f0f8,%r10         ;   {metadata({method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x0000775055225e55:   mov    %r10,0x8(%rsp)
  0x0000775055225e5a:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055225e62:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [72]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4545)
                                                            ; - java.lang.String::length@6 (line 1481)
                                                            ; - java.lang.AbstractStringBuilder::append@10 (line 581)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055225e67:   jmp    0x0000775055225d1a
  0x0000775055225e6c:   movabs $0x775055225dc3,%r10         ;   {internal_word}
  0x0000775055225e76:   mov    %r10,0x360(%r15)
  0x0000775055225e7d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055225e82:   movabs $0x775055225df1,%r10         ;   {internal_word}
  0x0000775055225e8c:   mov    %r10,0x360(%r15)
  0x0000775055225e93:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055225e98:   nop
  0x0000775055225e99:   nop
  0x0000775055225e9a:   mov    0x3d8(%r15),%rax
  0x0000775055225ea1:   movq   $0x0,0x3d8(%r15)
  0x0000775055225eac:   movq   $0x0,0x3e0(%r15)
  0x0000775055225eb7:   add    $0x70,%rsp
  0x0000775055225ebb:   pop    %rbp
  0x0000775055225ebc:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055225ec1:   hlt
  0x0000775055225ec2:   hlt
  0x0000775055225ec3:   hlt
  0x0000775055225ec4:   hlt
  0x0000775055225ec5:   hlt
  0x0000775055225ec6:   hlt
  0x0000775055225ec7:   hlt
  0x0000775055225ec8:   hlt
  0x0000775055225ec9:   hlt
  0x0000775055225eca:   hlt
  0x0000775055225ecb:   hlt
  0x0000775055225ecc:   hlt
  0x0000775055225ecd:   hlt
  0x0000775055225ece:   hlt
  0x0000775055225ecf:   hlt
  0x0000775055225ed0:   hlt
  0x0000775055225ed1:   hlt
  0x0000775055225ed2:   hlt
  0x0000775055225ed3:   hlt
  0x0000775055225ed4:   hlt
  0x0000775055225ed5:   hlt
  0x0000775055225ed6:   hlt
  0x0000775055225ed7:   hlt
  0x0000775055225ed8:   hlt
  0x0000775055225ed9:   hlt
  0x0000775055225eda:   hlt
  0x0000775055225edb:   hlt
  0x0000775055225edc:   hlt
  0x0000775055225edd:   hlt
  0x0000775055225ede:   hlt
  0x0000775055225edf:   hlt
[Stub Code]
  0x0000775055225ee0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055225ee5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055225eef:   jmp    0x0000775055225eef           ;   {runtime_call}
  0x0000775055225ef4:   nop
  0x0000775055225ef5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055225eff:   jmp    0x0000775055225eff           ;   {runtime_call}
  0x0000775055225f04:   nop
  0x0000775055225f05:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055225f0f:   jmp    0x0000775055225f0f           ;   {runtime_call}
[Exception Handler]
  0x0000775055225f14:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055225f19:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055225f23:   and    $0xfffffffffffffff0,%rsp
  0x0000775055225f27:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055225f2c:   hlt
[Deopt Handler Code]
  0x0000775055225f2d:   movabs $0x775055225f2d,%r10         ;   {section_word}
  0x0000775055225f37:   push   %r10
  0x0000775055225f39:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055225f3e:   hlt
  0x0000775055225f3f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     370  101       3       java.lang.StringLatin1::lastIndexOf (40 bytes)
 total in heap  [0x0000775055226210,0x0000775055226a58] = 2120
 relocation     [0x0000775055226370,0x00007750552263d8] = 104
 main code      [0x00007750552263e0,0x00007750552267a0] = 960
 stub code      [0x00007750552267a0,0x00007750552267d0] = 48
 metadata       [0x00007750552267d0,0x00007750552267e8] = 24
 scopes data    [0x00007750552267e8,0x00007750552268b0] = 200
 scopes pcs     [0x00007750552268b0,0x0000775055226a40] = 400
 dependencies   [0x0000775055226a40,0x0000775055226a48] = 8
 nul chk table  [0x0000775055226a48,0x0000775055226a58] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007750552263e0:   mov    %eax,-0x14000(%rsp)
  0x00007750552263e7:   push   %rbp
  0x00007750552263e8:   sub    $0x40,%rsp
  0x00007750552263ec:   movabs $0x77502041eae8,%rax         ;   {metadata(method data for {method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007750552263f6:   mov    0xf4(%rax),%edi
  0x00007750552263fc:   add    $0x2,%edi
  0x00007750552263ff:   mov    %edi,0xf4(%rax)
  0x0000775055226405:   and    $0x7fe,%edi
  0x000077505522640b:   cmp    $0x0,%edi
  0x000077505522640e:   je     0x0000775055226698           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@0 (line 290)
  0x0000775055226414:   movabs $0x77502041eae8,%rax         ;   {metadata(method data for {method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000077505522641e:   addq   $0x1,0x138(%rax)
  0x0000775055226426:   movabs $0x77502041cd78,%rax         ;   {metadata(method data for {method} {0x0000775020175570} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x0000775055226430:   mov    0xf4(%rax),%edi
  0x0000775055226436:   add    $0x2,%edi
  0x0000775055226439:   mov    %edi,0xf4(%rax)
  0x000077505522643f:   and    $0x1ffffe,%edi
  0x0000775055226445:   cmp    $0x0,%edi
  0x0000775055226448:   je     0x00007750552266b9
  0x000077505522644e:   mov    %rdx,%rax
  0x0000775055226451:   shr    $0x8,%eax
  0x0000775055226454:   cmp    $0x0,%eax
  0x0000775055226457:   movabs $0x77502041cd78,%rax         ;   {metadata(method data for {method} {0x0000775020175570} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x0000775055226461:   movabs $0x138,%rdi
  0x000077505522646b:   jne    0x000077505522647b
  0x0000775055226471:   movabs $0x148,%rdi
  0x000077505522647b:   mov    (%rax,%rdi,1),%rbx
  0x000077505522647f:   lea    0x1(%rbx),%rbx
  0x0000775055226483:   mov    %rbx,(%rax,%rdi,1)
  0x0000775055226487:   jne    0x00007750552264a7           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@4 (line 54)
                                                            ; - java.lang.StringLatin1::lastIndexOf@1 (line 290)
  0x000077505522648d:   movabs $0x77502041cd78,%rax         ;   {metadata(method data for {method} {0x0000775020175570} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x0000775055226497:   incl   0x158(%rax)
  0x000077505522649d:   mov    $0x1,%eax
  0x00007750552264a2:   jmp    0x00007750552264ac           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@8 (line 54)
                                                            ; - java.lang.StringLatin1::lastIndexOf@1 (line 290)
  0x00007750552264a7:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::canEncode@12 (line 54)
                                                            ; - java.lang.StringLatin1::lastIndexOf@1 (line 290)
  0x00007750552264ac:   and    $0x1,%eax
  0x00007750552264af:   cmp    $0x0,%eax
  0x00007750552264b2:   movabs $0x77502041eae8,%rax         ;   {metadata(method data for {method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007750552264bc:   movabs $0x158,%rdi
  0x00007750552264c6:   je     0x00007750552264d6
  0x00007750552264cc:   movabs $0x148,%rdi
  0x00007750552264d6:   mov    (%rax,%rdi,1),%rbx
  0x00007750552264da:   lea    0x1(%rbx),%rbx
  0x00007750552264de:   mov    %rbx,(%rax,%rdi,1)
  0x00007750552264e2:   je     0x0000775055226680           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@4 (line 290)
  0x00007750552264e8:   mov    0xc(%rsi),%eax               ; implicit exception: dispatches to 0x00007750552266da
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@11 (line 293)
  0x00007750552264eb:   dec    %eax
  0x00007750552264ed:   movabs $0x77502041eae8,%rdi         ;   {metadata(method data for {method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007750552264f7:   addq   $0x1,0x168(%rdi)
  0x00007750552264ff:   movabs $0x7750203ffa50,%rdi         ;   {metadata(method data for {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x0000775055226509:   mov    0xf4(%rdi),%ebx
  0x000077505522650f:   add    $0x2,%ebx
  0x0000775055226512:   mov    %ebx,0xf4(%rdi)
  0x0000775055226518:   and    $0x1ffffe,%ebx
  0x000077505522651e:   cmp    $0x0,%ebx
  0x0000775055226521:   je     0x00007750552266df
  0x0000775055226527:   cmp    %eax,%ecx
  0x0000775055226529:   movabs $0x7750203ffa50,%rdi         ;   {metadata(method data for {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x0000775055226533:   movabs $0x138,%rbx
  0x000077505522653d:   jg     0x000077505522654d
  0x0000775055226543:   movabs $0x148,%rbx
  0x000077505522654d:   mov    (%rdi,%rbx,1),%r8
  0x0000775055226551:   lea    0x1(%r8),%r8
  0x0000775055226555:   mov    %r8,(%rdi,%rbx,1)
  0x0000775055226559:   jg     0x0000775055226574           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@2 (line 1649)
                                                            ; - java.lang.StringLatin1::lastIndexOf@14 (line 293)
  0x000077505522655f:   movabs $0x7750203ffa50,%rax         ;   {metadata(method data for {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x0000775055226569:   incl   0x158(%rax)
  0x000077505522656f:   jmp    0x0000775055226614           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@6 (line 1649)
                                                            ; - java.lang.StringLatin1::lastIndexOf@14 (line 293)
  0x0000775055226574:   mov    %rax,%rcx
  0x0000775055226577:   jmp    0x0000775055226614           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@10 (line 1649)
                                                            ; - java.lang.StringLatin1::lastIndexOf@14 (line 293)
  0x000077505522657c:   nopl   0x0(%rax)
  0x0000775055226580:   cmp    0xc(%rsi),%ecx
  0x0000775055226583:   jae    0x0000775055226700
  0x0000775055226589:   movslq %ecx,%rax
  0x000077505522658c:   movsbl 0x10(%rsi,%rax,1),%eax       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@24 (line 295)
  0x0000775055226591:   mov    %rdx,%rdi
  0x0000775055226594:   movsbl %dil,%edi
  0x0000775055226598:   cmp    %edi,%eax
  0x000077505522659a:   movabs $0x77502041eae8,%rax         ;   {metadata(method data for {method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007750552265a4:   movabs $0x1a8,%rdi
  0x00007750552265ae:   je     0x00007750552265be
  0x00007750552265b4:   movabs $0x198,%rdi
  0x00007750552265be:   mov    (%rax,%rdi,1),%rbx
  0x00007750552265c2:   lea    0x1(%rbx),%rbx
  0x00007750552265c6:   mov    %rbx,(%rax,%rdi,1)
  0x00007750552265ca:   je     0x0000775055226652           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@27 (line 295)
  0x00007750552265d0:   dec    %ecx
  0x00007750552265d2:   movabs $0x77502041eae8,%rax         ;   {metadata(method data for {method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007750552265dc:   mov    0xf8(%rax),%edi
  0x00007750552265e2:   add    $0x2,%edi
  0x00007750552265e5:   mov    %edi,0xf8(%rax)
  0x00007750552265eb:   and    $0x3ffe,%edi
  0x00007750552265f1:   cmp    $0x0,%edi
  0x00007750552265f4:   je     0x000077505522670e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@35 (line 294)
  0x00007750552265fa:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::lastIndexOf@35 (line 294)
  0x0000775055226601:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055226604:   movabs $0x77502041eae8,%rax         ;   {metadata(method data for {method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000077505522660e:   incl   0x1b8(%rax)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@35 (line 294)
  0x0000775055226614:   cmp    $0x0,%ecx
  0x0000775055226617:   movabs $0x77502041eae8,%rax         ;   {metadata(method data for {method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x0000775055226621:   movabs $0x178,%rdi
  0x000077505522662b:   jl     0x000077505522663b
  0x0000775055226631:   movabs $0x188,%rdi
  0x000077505522663b:   mov    (%rax,%rdi,1),%rbx
  0x000077505522663f:   lea    0x1(%rbx),%rbx
  0x0000775055226643:   mov    %rbx,(%rax,%rdi,1)
  0x0000775055226647:   jl     0x0000775055226668
  0x000077505522664d:   jmp    0x0000775055226580           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@19 (line 294)
  0x0000775055226652:   mov    %rcx,%rax
  0x0000775055226655:   add    $0x40,%rsp
  0x0000775055226659:   pop    %rbp
  0x000077505522665a:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055226661:   ja     0x000077505522672f
  0x0000775055226667:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@31 (line 296)
  0x0000775055226668:   mov    $0xffffffff,%eax
  0x000077505522666d:   add    $0x40,%rsp
  0x0000775055226671:   pop    %rbp
  0x0000775055226672:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055226679:   ja     0x0000775055226745
  0x000077505522667f:   ret                                 ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@39 (line 299)
  0x0000775055226680:   mov    $0xffffffff,%eax
  0x0000775055226685:   add    $0x40,%rsp
  0x0000775055226689:   pop    %rbp
  0x000077505522668a:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055226691:   ja     0x000077505522675b
  0x0000775055226697:   ret
  0x0000775055226698:   movabs $0x775020176c78,%r10         ;   {metadata({method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007750552266a2:   mov    %r10,0x8(%rsp)
  0x00007750552266a7:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552266af:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::lastIndexOf@-1 (line 290)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552266b4:   jmp    0x0000775055226414
  0x00007750552266b9:   movabs $0x775020175570,%r10         ;   {metadata({method} {0x0000775020175570} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007750552266c3:   mov    %r10,0x8(%rsp)
  0x00007750552266c8:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552266d0:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::canEncode@-1 (line 54)
                                                            ; - java.lang.StringLatin1::lastIndexOf@1 (line 290)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552266d5:   jmp    0x000077505522644e
  0x00007750552266da:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@11 (line 293)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007750552266df:   movabs $0x77502018a548,%r10         ;   {metadata({method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x00007750552266e9:   mov    %r10,0x8(%rsp)
  0x00007750552266ee:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552266f6:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Math::min@-1 (line 1649)
                                                            ; - java.lang.StringLatin1::lastIndexOf@14 (line 293)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552266fb:   jmp    0x0000775055226527
  0x0000775055226700:   mov    %rcx,(%rsp)
  0x0000775055226704:   mov    %rsi,0x8(%rsp)
  0x0000775055226709:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::lastIndexOf@24 (line 295)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505522670e:   movabs $0x775020176c78,%r10         ;   {metadata({method} {0x0000775020176c78} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x0000775055226718:   mov    %r10,0x8(%rsp)
  0x000077505522671d:   movq   $0x23,(%rsp)
  0x0000775055226725:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.StringLatin1::lastIndexOf@35 (line 294)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522672a:   jmp    0x00007750552265fa
  0x000077505522672f:   movabs $0x77505522665a,%r10         ;   {internal_word}
  0x0000775055226739:   mov    %r10,0x360(%r15)
  0x0000775055226740:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055226745:   movabs $0x775055226672,%r10         ;   {internal_word}
  0x000077505522674f:   mov    %r10,0x360(%r15)
  0x0000775055226756:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522675b:   movabs $0x77505522668a,%r10         ;   {internal_word}
  0x0000775055226765:   mov    %r10,0x360(%r15)
  0x000077505522676c:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055226771:   nop
  0x0000775055226772:   nop
  0x0000775055226773:   mov    0x3d8(%r15),%rax
  0x000077505522677a:   movq   $0x0,0x3d8(%r15)
  0x0000775055226785:   movq   $0x0,0x3e0(%r15)
  0x0000775055226790:   add    $0x40,%rsp
  0x0000775055226794:   pop    %rbp
  0x0000775055226795:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522679a:   hlt
  0x000077505522679b:   hlt
  0x000077505522679c:   hlt
  0x000077505522679d:   hlt
  0x000077505522679e:   hlt
  0x000077505522679f:   hlt
[Exception Handler]
  0x00007750552267a0:   call   0x000077505c82b380           ;   {no_reloc}
  0x00007750552267a5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552267af:   and    $0xfffffffffffffff0,%rsp
  0x00007750552267b3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552267b8:   hlt
[Deopt Handler Code]
  0x00007750552267b9:   movabs $0x7750552267b9,%r10         ;   {section_word}
  0x00007750552267c3:   push   %r10
  0x00007750552267c5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552267ca:   hlt
  0x00007750552267cb:   hlt
  0x00007750552267cc:   hlt
  0x00007750552267cd:   hlt
  0x00007750552267ce:   hlt
  0x00007750552267cf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     373  102       1       java.util.zip.Inflater$InflaterZStreamRef::address (5 bytes)
 total in heap  [0x000077505ccd0e90,0x000077505ccd1150] = 704
 relocation     [0x000077505ccd0ff0,0x000077505ccd1018] = 40
 main code      [0x000077505ccd1020,0x000077505ccd10c0] = 160
 stub code      [0x000077505ccd10c0,0x000077505ccd10f0] = 48
 metadata       [0x000077505ccd10f0,0x000077505ccd10f8] = 8
 scopes data    [0x000077505ccd10f8,0x000077505ccd1108] = 16
 scopes pcs     [0x000077505ccd1108,0x000077505ccd1148] = 64
 dependencies   [0x000077505ccd1148,0x000077505ccd1150] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750203d1c30} 'address' '()J' in 'java/util/zip/Inflater$InflaterZStreamRef'
  #           [sp+0x40]  (sp of caller)
  0x000077505ccd1020:   mov    0x8(%rsi),%r10d
  0x000077505ccd1024:   movabs $0x800000000,%r11
  0x000077505ccd102e:   add    %r11,%r10
  0x000077505ccd1031:   cmp    %rax,%r10
  0x000077505ccd1034:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd103a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505ccd1040:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd1047:   push   %rbp
  0x000077505ccd1048:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.Inflater$InflaterZStreamRef::address@0 (line 754)
  0x000077505ccd104c:   mov    0x10(%rsi),%rax              ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.zip.Inflater$InflaterZStreamRef::address@1 (line 754)
  0x000077505ccd1050:   add    $0x30,%rsp
  0x000077505ccd1054:   pop    %rbp
  0x000077505ccd1055:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd105c:   ja     0x000077505ccd1063
  0x000077505ccd1062:   ret
  0x000077505ccd1063:   movabs $0x77505ccd1055,%r10         ;   {internal_word}
  0x000077505ccd106d:   mov    %r10,0x360(%r15)
  0x000077505ccd1074:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd1079:   nop
  0x000077505ccd107a:   nop
  0x000077505ccd107b:   mov    0x3d8(%r15),%rax
  0x000077505ccd1082:   movq   $0x0,0x3d8(%r15)
  0x000077505ccd108d:   movq   $0x0,0x3e0(%r15)
  0x000077505ccd1098:   add    $0x30,%rsp
  0x000077505ccd109c:   pop    %rbp
  0x000077505ccd109d:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505ccd10a2:   hlt
  0x000077505ccd10a3:   hlt
  0x000077505ccd10a4:   hlt
  0x000077505ccd10a5:   hlt
  0x000077505ccd10a6:   hlt
  0x000077505ccd10a7:   hlt
  0x000077505ccd10a8:   hlt
  0x000077505ccd10a9:   hlt
  0x000077505ccd10aa:   hlt
  0x000077505ccd10ab:   hlt
  0x000077505ccd10ac:   hlt
  0x000077505ccd10ad:   hlt
  0x000077505ccd10ae:   hlt
  0x000077505ccd10af:   hlt
  0x000077505ccd10b0:   hlt
  0x000077505ccd10b1:   hlt
  0x000077505ccd10b2:   hlt
  0x000077505ccd10b3:   hlt
  0x000077505ccd10b4:   hlt
  0x000077505ccd10b5:   hlt
  0x000077505ccd10b6:   hlt
  0x000077505ccd10b7:   hlt
  0x000077505ccd10b8:   hlt
  0x000077505ccd10b9:   hlt
  0x000077505ccd10ba:   hlt
  0x000077505ccd10bb:   hlt
  0x000077505ccd10bc:   hlt
  0x000077505ccd10bd:   hlt
  0x000077505ccd10be:   hlt
  0x000077505ccd10bf:   hlt
[Exception Handler]
  0x000077505ccd10c0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505ccd10c5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505ccd10cf:   and    $0xfffffffffffffff0,%rsp
  0x000077505ccd10d3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505ccd10d8:   hlt
[Deopt Handler Code]
  0x000077505ccd10d9:   movabs $0x77505ccd10d9,%r10         ;   {section_word}
  0x000077505ccd10e3:   push   %r10
  0x000077505ccd10e5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd10ea:   hlt
  0x000077505ccd10eb:   hlt
  0x000077505ccd10ec:   hlt
  0x000077505ccd10ed:   hlt
  0x000077505ccd10ee:   hlt
  0x000077505ccd10ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     374  103       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)
 total in heap  [0x0000775055226a90,0x0000775055226e10] = 896
 relocation     [0x0000775055226bf0,0x0000775055226c20] = 48
 main code      [0x0000775055226c20,0x0000775055226d20] = 256
 stub code      [0x0000775055226d20,0x0000775055226d50] = 48
 metadata       [0x0000775055226d50,0x0000775055226d58] = 8
 scopes data    [0x0000775055226d58,0x0000775055226d88] = 48
 scopes pcs     [0x0000775055226d88,0x0000775055226df8] = 112
 dependencies   [0x0000775055226df8,0x0000775055226e00] = 8
 nul chk table  [0x0000775055226e00,0x0000775055226e10] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750201d3dc0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000775055226c20:   mov    0x8(%rsi),%r10d
  0x0000775055226c24:   movabs $0x800000000,%r11
  0x0000775055226c2e:   add    %r11,%r10
  0x0000775055226c31:   cmp    %rax,%r10
  0x0000775055226c34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055226c3a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055226c40:   mov    %eax,-0x14000(%rsp)
  0x0000775055226c47:   push   %rbp
  0x0000775055226c48:   sub    $0x30,%rsp
  0x0000775055226c4c:   movabs $0x77502041f140,%rax         ;   {metadata(method data for {method} {0x00007750201d3dc0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x0000775055226c56:   mov    0xf4(%rax),%edi
  0x0000775055226c5c:   add    $0x2,%edi
  0x0000775055226c5f:   mov    %edi,0xf4(%rax)
  0x0000775055226c65:   and    $0x7fe,%edi
  0x0000775055226c6b:   cmp    $0x0,%edi
  0x0000775055226c6e:   je     0x0000775055226cab           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::getProperties@0 (line 73)
  0x0000775055226c74:   and    $0xffff,%edx
  0x0000775055226c7a:   mov    $0x100,%eax
  0x0000775055226c7f:   movabs $0x62ac0f2e0,%rsi            ;   {oop([I{0x000000062ac0f2e0})}
  0x0000775055226c89:   cmp    %edx,%eax
  0x0000775055226c8b:   jbe    0x0000775055226cc9
  0x0000775055226c91:   movslq %edx,%rdx
  0x0000775055226c94:   mov    0x10(%rsi,%rdx,4),%eax       ; implicit exception: dispatches to 0x0000775055226cd7
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
  0x0000775055226c98:   add    $0x30,%rsp
  0x0000775055226c9c:   pop    %rbp
  0x0000775055226c9d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055226ca4:   ja     0x0000775055226cdc
  0x0000775055226caa:   ret
  0x0000775055226cab:   movabs $0x7750201d3dc0,%r10         ;   {metadata({method} {0x00007750201d3dc0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x0000775055226cb5:   mov    %r10,0x8(%rsp)
  0x0000775055226cba:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055226cc2:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 73)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055226cc7:   jmp    0x0000775055226c74
  0x0000775055226cc9:   mov    %rdx,(%rsp)
  0x0000775055226ccd:   mov    %rsi,0x8(%rsp)
  0x0000775055226cd2:   call   0x000077505c828ca0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000775055226cd7:   call   0x000077505c8295a0           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055226cdc:   movabs $0x775055226c9d,%r10         ;   {internal_word}
  0x0000775055226ce6:   mov    %r10,0x360(%r15)
  0x0000775055226ced:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055226cf2:   nop
  0x0000775055226cf3:   nop
  0x0000775055226cf4:   mov    0x3d8(%r15),%rax
  0x0000775055226cfb:   movq   $0x0,0x3d8(%r15)
  0x0000775055226d06:   movq   $0x0,0x3e0(%r15)
  0x0000775055226d11:   add    $0x30,%rsp
  0x0000775055226d15:   pop    %rbp
  0x0000775055226d16:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055226d1b:   hlt
  0x0000775055226d1c:   hlt
  0x0000775055226d1d:   hlt
  0x0000775055226d1e:   hlt
  0x0000775055226d1f:   hlt
[Exception Handler]
  0x0000775055226d20:   call   0x000077505c82b380           ;   {no_reloc}
  0x0000775055226d25:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055226d2f:   and    $0xfffffffffffffff0,%rsp
  0x0000775055226d33:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055226d38:   hlt
[Deopt Handler Code]
  0x0000775055226d39:   movabs $0x775055226d39,%r10         ;   {section_word}
  0x0000775055226d43:   push   %r10
  0x0000775055226d45:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055226d4a:   hlt
  0x0000775055226d4b:   hlt
  0x0000775055226d4c:   hlt
  0x0000775055226d4d:   hlt
  0x0000775055226d4e:   hlt
  0x0000775055226d4f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     376  104       3       java.lang.StringLatin1::newString (24 bytes)
 total in heap  [0x0000775055226e90,0x0000775055227500] = 1648
 relocation     [0x0000775055226ff0,0x0000775055227050] = 96
 main code      [0x0000775055227060,0x0000775055227340] = 736
 stub code      [0x0000775055227340,0x0000775055227380] = 64
 metadata       [0x0000775055227380,0x0000775055227398] = 24
 scopes data    [0x0000775055227398,0x0000775055227418] = 128
 scopes pcs     [0x0000775055227418,0x00007750552274f8] = 224
 dependencies   [0x00007750552274f8,0x0000775055227500] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007750201786f0} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x80]  (sp of caller)
  0x0000775055227060:   mov    %eax,-0x14000(%rsp)
  0x0000775055227067:   push   %rbp
  0x0000775055227068:   sub    $0x70,%rsp
  0x000077505522706c:   mov    %rsi,%rbx
  0x000077505522706f:   mov    %rdx,%r8
  0x0000775055227072:   mov    %rcx,%r9
  0x0000775055227075:   movabs $0x775020390b18,%rax         ;   {metadata(method data for {method} {0x00007750201786f0} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x000077505522707f:   mov    0xf4(%rax),%edx
  0x0000775055227085:   add    $0x2,%edx
  0x0000775055227088:   mov    %edx,0xf4(%rax)
  0x000077505522708e:   and    $0x7fe,%edx
  0x0000775055227094:   cmp    $0x0,%edx
  0x0000775055227097:   je     0x0000775055227236           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::newString@0 (line 766)
  0x000077505522709d:   cmp    $0x0,%r9d
  0x00007750552270a1:   movabs $0x775020390b18,%rax         ;   {metadata(method data for {method} {0x00007750201786f0} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007750552270ab:   movabs $0x138,%rdx
  0x00007750552270b5:   jne    0x00007750552270c5
  0x00007750552270bb:   movabs $0x148,%rdx
  0x00007750552270c5:   mov    (%rax,%rdx,1),%rsi
  0x00007750552270c9:   lea    0x1(%rsi),%rsi
  0x00007750552270cd:   mov    %rsi,(%rax,%rdx,1)
  0x00007750552270d1:   jne    0x00007750552270f4           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::newString@1 (line 766)
  0x00007750552270d7:   movabs $0x62ac0e758,%rax            ;   {oop(""{0x000000062ac0e758})}
  0x00007750552270e1:   add    $0x70,%rsp
  0x00007750552270e5:   pop    %rbp
  0x00007750552270e6:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552270ed:   ja     0x0000775055227257
  0x00007750552270f3:   ret                                 ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::newString@6 (line 767)
  0x00007750552270f4:   movabs $0x800041bc8,%rdx            ;   {metadata('java/lang/String')}
  0x00007750552270fe:   mov    0x108(%r15),%rax
  0x0000775055227105:   lea    0x18(%rax),%rdi
  0x0000775055227109:   cmp    0x118(%r15),%rdi
  0x0000775055227110:   ja     0x000077505522726d
  0x0000775055227116:   mov    %rdi,0x108(%r15)
  0x000077505522711d:   movq   $0x1,(%rax)
  0x0000775055227124:   mov    %rdx,%rcx
  0x0000775055227127:   movabs $0x800000000,%r10
  0x0000775055227131:   sub    %r10,%rcx
  0x0000775055227134:   mov    %ecx,0x8(%rax)
  0x0000775055227137:   xor    %rcx,%rcx
  0x000077505522713a:   mov    %ecx,0xc(%rax)
  0x000077505522713d:   xor    %rcx,%rcx
  0x0000775055227140:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::newString@7 (line 769)
  0x0000775055227144:   movabs $0x775020390b18,%rsi         ;   {metadata(method data for {method} {0x00007750201786f0} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x000077505522714e:   addq   $0x1,0x158(%rsi)
  0x0000775055227156:   mov    %r8,%rcx
  0x0000775055227159:   add    %r9d,%ecx
  0x000077505522715c:   mov    %rbx,%rsi
  0x000077505522715f:   mov    %r8,%rdx                     ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::newString@16 (line 769)
  0x0000775055227162:   mov    %rax,0x58(%rsp)
  0x0000775055227167:   call   0x000077505c788680           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::newString@16 (line 769)
                                                            ;   {static_call}
  0x000077505522716c:   mov    0x58(%rsp),%rsi
  0x0000775055227171:   movabs $0x775020390b18,%rdi         ;   {metadata(method data for {method} {0x00007750201786f0} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x000077505522717b:   addq   $0x1,0x168(%rdi)
  0x0000775055227183:   movabs $0x77502041d850,%rsi         ;   {metadata(method data for {method} {0x000077502000f048} '<init>' '([BB)V' in 'java/lang/String')}
  0x000077505522718d:   mov    0xf4(%rsi),%edi
  0x0000775055227193:   add    $0x2,%edi
  0x0000775055227196:   mov    %edi,0xf4(%rsi)
  0x000077505522719c:   and    $0x1ffffe,%edi
  0x00007750552271a2:   cmp    $0x0,%edi
  0x00007750552271a5:   je     0x000077505522727a
  0x00007750552271ab:   mov    0x58(%rsp),%rsi
  0x00007750552271b0:   movabs $0x77502041d850,%rdi         ;   {metadata(method data for {method} {0x000077502000f048} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007750552271ba:   addq   $0x1,0x138(%rdi)
  0x00007750552271c2:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552271cc:   mov    0xf4(%rsi),%edi
  0x00007750552271d2:   add    $0x2,%edi
  0x00007750552271d5:   mov    %edi,0xf4(%rsi)
  0x00007750552271db:   and    $0x1ffffe,%edi
  0x00007750552271e1:   cmp    $0x0,%edi
  0x00007750552271e4:   je     0x000077505522729b
  0x00007750552271ea:   movsbl 0x38(%r15),%esi
  0x00007750552271ef:   cmp    $0x0,%esi
  0x00007750552271f2:   mov    0x58(%rsp),%rsi
  0x00007750552271f7:   jne    0x00007750552272bc
  0x00007750552271fd:   mov    %rax,%r10
  0x0000775055227200:   shr    $0x3,%r10
  0x0000775055227204:   mov    %r10d,0x14(%rsi)
  0x0000775055227208:   mov    %rsi,%rdi
  0x000077505522720b:   xor    %rax,%rdi
  0x000077505522720e:   shr    $0x16,%rdi
  0x0000775055227212:   cmp    $0x0,%rdi
  0x0000775055227216:   jne    0x00007750552272db           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::<init>@6 (line 4540)
                                                            ; - java.lang.StringLatin1::newString@20 (line 769)
  0x000077505522721c:   movb   $0x0,0x10(%rsi)              ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::<init>@11 (line 4541)
                                                            ; - java.lang.StringLatin1::newString@20 (line 769)
  0x0000775055227220:   mov    %rsi,%rax
  0x0000775055227223:   add    $0x70,%rsp
  0x0000775055227227:   pop    %rbp
  0x0000775055227228:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522722f:   ja     0x00007750552272f3
  0x0000775055227235:   ret
  0x0000775055227236:   movabs $0x7750201786f0,%r10         ;   {metadata({method} {0x00007750201786f0} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x0000775055227240:   mov    %r10,0x8(%rsp)
  0x0000775055227245:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522724d:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.StringLatin1::newString@-1 (line 766)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055227252:   jmp    0x000077505522709d
  0x0000775055227257:   movabs $0x7750552270e6,%r10         ;   {internal_word}
  0x0000775055227261:   mov    %r10,0x360(%r15)
  0x0000775055227268:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522726d:   mov    %rdx,%rdx
  0x0000775055227270:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.StringLatin1::newString@7 (line 769)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055227275:   jmp    0x0000775055227144
  0x000077505522727a:   movabs $0x77502000f048,%r10         ;   {metadata({method} {0x000077502000f048} '<init>' '([BB)V' in 'java/lang/String')}
  0x0000775055227284:   mov    %r10,0x8(%rsp)
  0x0000775055227289:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055227291:   call   0x000077505c82e680           ; ImmutableOopMap {[88]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::<init>@-1 (line 4539)
                                                            ; - java.lang.StringLatin1::newString@20 (line 769)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055227296:   jmp    0x00007750552271ab
  0x000077505522729b:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552272a5:   mov    %r10,0x8(%rsp)
  0x00007750552272aa:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552272b2:   call   0x000077505c82e680           ; ImmutableOopMap {[88]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - java.lang.String::<init>@1 (line 4539)
                                                            ; - java.lang.StringLatin1::newString@20 (line 769)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552272b7:   jmp    0x00007750552271ea
  0x00007750552272bc:   mov    0x14(%rsi),%edi
  0x00007750552272bf:   shl    $0x3,%rdi
  0x00007750552272c3:   cmp    $0x0,%rdi
  0x00007750552272c7:   je     0x00007750552271fd
  0x00007750552272cd:   mov    %rdi,(%rsp)
  0x00007750552272d1:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552272d6:   jmp    0x00007750552271fd
  0x00007750552272db:   cmp    $0x0,%rax
  0x00007750552272df:   je     0x000077505522721c
  0x00007750552272e5:   mov    %rsi,(%rsp)
  0x00007750552272e9:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x00007750552272ee:   jmp    0x000077505522721c
  0x00007750552272f3:   movabs $0x775055227228,%r10         ;   {internal_word}
  0x00007750552272fd:   mov    %r10,0x360(%r15)
  0x0000775055227304:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055227309:   nop
  0x000077505522730a:   nop
  0x000077505522730b:   mov    0x3d8(%r15),%rax
  0x0000775055227312:   movq   $0x0,0x3d8(%r15)
  0x000077505522731d:   movq   $0x0,0x3e0(%r15)
  0x0000775055227328:   add    $0x70,%rsp
  0x000077505522732c:   pop    %rbp
  0x000077505522732d:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055227332:   hlt
  0x0000775055227333:   hlt
  0x0000775055227334:   hlt
  0x0000775055227335:   hlt
  0x0000775055227336:   hlt
  0x0000775055227337:   hlt
  0x0000775055227338:   hlt
  0x0000775055227339:   hlt
  0x000077505522733a:   hlt
  0x000077505522733b:   hlt
  0x000077505522733c:   hlt
  0x000077505522733d:   hlt
  0x000077505522733e:   hlt
  0x000077505522733f:   hlt
[Stub Code]
  0x0000775055227340:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055227345:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522734f:   jmp    0x000077505522734f           ;   {runtime_call}
[Exception Handler]
  0x0000775055227354:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055227359:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055227363:   and    $0xfffffffffffffff0,%rsp
  0x0000775055227367:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522736c:   hlt
[Deopt Handler Code]
  0x000077505522736d:   movabs $0x77505522736d,%r10         ;   {section_word}
  0x0000775055227377:   push   %r10
  0x0000775055227379:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522737e:   hlt
  0x000077505522737f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     380  105       3       kotlin.random.XorWowRandom::nextInt (80 bytes)
 total in heap  [0x0000775055227510,0x0000775055227968] = 1112
 relocation     [0x0000775055227670,0x00007750552276a0] = 48
 main code      [0x00007750552276a0,0x00007750552277c0] = 288
 stub code      [0x00007750552277c0,0x00007750552277f0] = 48
 oops           [0x00007750552277f0,0x00007750552277f8] = 8
 metadata       [0x00007750552277f8,0x0000775055227800] = 8
 scopes data    [0x0000775055227800,0x0000775055227860] = 96
 scopes pcs     [0x0000775055227860,0x0000775055227960] = 256
 dependencies   [0x0000775055227960,0x0000775055227968] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020503458} 'nextInt' '()I' in 'kotlin/random/XorWowRandom'
  #           [sp+0x40]  (sp of caller)
  0x00007750552276a0:   mov    0x8(%rsi),%r10d
  0x00007750552276a4:   movabs $0x800000000,%r11
  0x00007750552276ae:   add    %r11,%r10
  0x00007750552276b1:   cmp    %rax,%r10
  0x00007750552276b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552276ba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552276c0:   mov    %eax,-0x14000(%rsp)
  0x00007750552276c7:   push   %rbp
  0x00007750552276c8:   sub    $0x30,%rsp
  0x00007750552276cc:   movabs $0x77502050fe60,%rax         ;   {metadata(method data for {method} {0x0000775020503458} 'nextInt' '()I' in 'kotlin/random/XorWowRandom')}
  0x00007750552276d6:   mov    0xf4(%rax),%edi
  0x00007750552276dc:   add    $0x2,%edi
  0x00007750552276df:   mov    %edi,0xf4(%rax)
  0x00007750552276e5:   and    $0x7fe,%edi
  0x00007750552276eb:   cmp    $0x0,%edi
  0x00007750552276ee:   je     0x0000775055227750           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@0 (line 40)
  0x00007750552276f4:   mov    0xc(%rsi),%eax               ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
  0x00007750552276f7:   mov    0x10(%rsi),%edi              ;*getfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@13 (line 42)
  0x00007750552276fa:   mov    %edi,0xc(%rsi)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
  0x00007750552276fd:   mov    0x14(%rsi),%edi              ;*getfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@21 (line 43)
  0x0000775055227700:   mov    %edi,0x10(%rsi)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
  0x0000775055227703:   mov    0x18(%rsi),%edi              ;*getfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@29 (line 44)
  0x0000775055227706:   mov    %edi,0x14(%rsi)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
  0x0000775055227709:   mov    0x1c(%rsi),%edi              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
  0x000077505522770c:   mov    %edi,0x18(%rsi)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
  0x000077505522770f:   mov    %rax,%rbx
  0x0000775055227712:   shr    $0x2,%ebx
  0x0000775055227715:   xor    %rax,%rbx
  0x0000775055227718:   mov    %rbx,%rax
  0x000077505522771b:   shl    %eax
  0x000077505522771d:   xor    %rbx,%rax
  0x0000775055227720:   xor    %rdi,%rax
  0x0000775055227723:   shl    $0x4,%edi
  0x0000775055227726:   xor    %rdi,%rax
  0x0000775055227729:   mov    %eax,0x1c(%rsi)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
  0x000077505522772c:   mov    0x20(%rsi),%edi              ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
  0x000077505522772f:   add    $0x587c5,%edi
  0x0000775055227735:   mov    %edi,0x20(%rsi)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
  0x0000775055227738:   add    %eax,%edi
  0x000077505522773a:   mov    %rdi,%rax
  0x000077505522773d:   add    $0x30,%rsp
  0x0000775055227741:   pop    %rbp
  0x0000775055227742:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055227749:   ja     0x000077505522776e
  0x000077505522774f:   ret
  0x0000775055227750:   movabs $0x775020503458,%r10         ;   {metadata({method} {0x0000775020503458} 'nextInt' '()I' in 'kotlin/random/XorWowRandom')}
  0x000077505522775a:   mov    %r10,0x8(%rsp)
  0x000077505522775f:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055227767:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.random.XorWowRandom::nextInt@-1 (line 40)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522776c:   jmp    0x00007750552276f4
  0x000077505522776e:   movabs $0x775055227742,%r10         ;   {internal_word}
  0x0000775055227778:   mov    %r10,0x360(%r15)
  0x000077505522777f:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055227784:   nop
  0x0000775055227785:   nop
  0x0000775055227786:   mov    0x3d8(%r15),%rax
  0x000077505522778d:   movq   $0x0,0x3d8(%r15)
  0x0000775055227798:   movq   $0x0,0x3e0(%r15)
  0x00007750552277a3:   add    $0x30,%rsp
  0x00007750552277a7:   pop    %rbp
  0x00007750552277a8:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552277ad:   hlt
  0x00007750552277ae:   hlt
  0x00007750552277af:   hlt
  0x00007750552277b0:   hlt
  0x00007750552277b1:   hlt
  0x00007750552277b2:   hlt
  0x00007750552277b3:   hlt
  0x00007750552277b4:   hlt
  0x00007750552277b5:   hlt
  0x00007750552277b6:   hlt
  0x00007750552277b7:   hlt
  0x00007750552277b8:   hlt
  0x00007750552277b9:   hlt
  0x00007750552277ba:   hlt
  0x00007750552277bb:   hlt
  0x00007750552277bc:   hlt
  0x00007750552277bd:   hlt
  0x00007750552277be:   hlt
  0x00007750552277bf:   hlt
[Exception Handler]
  0x00007750552277c0:   call   0x000077505c82b380           ;   {no_reloc}
  0x00007750552277c5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x00007750552277cf:   and    $0xfffffffffffffff0,%rsp
  0x00007750552277d3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x00007750552277d8:   hlt
[Deopt Handler Code]
  0x00007750552277d9:   movabs $0x7750552277d9,%r10         ;   {section_word}
  0x00007750552277e3:   push   %r10
  0x00007750552277e5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x00007750552277ea:   hlt
  0x00007750552277eb:   hlt
  0x00007750552277ec:   hlt
  0x00007750552277ed:   hlt
  0x00007750552277ee:   hlt
  0x00007750552277ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     382  106       4       kotlin.random.XorWowRandom::nextInt (80 bytes)
 total in heap  [0x000077505ccd1190,0x000077505ccd1530] = 928
 relocation     [0x000077505ccd12f0,0x000077505ccd1300] = 16
 main code      [0x000077505ccd1300,0x000077505ccd13c0] = 192
 stub code      [0x000077505ccd13c0,0x000077505ccd13d8] = 24
 oops           [0x000077505ccd13d8,0x000077505ccd13e0] = 8
 metadata       [0x000077505ccd13e0,0x000077505ccd13e8] = 8
 scopes data    [0x000077505ccd13e8,0x000077505ccd1438] = 80
 scopes pcs     [0x000077505ccd1438,0x000077505ccd1528] = 240
 dependencies   [0x000077505ccd1528,0x000077505ccd1530] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020503458} 'nextInt' '()I' in 'kotlin/random/XorWowRandom'
  #           [sp+0x20]  (sp of caller)
  0x000077505ccd1300:   mov    0x8(%rsi),%r10d
  0x000077505ccd1304:   movabs $0x800000000,%r11
  0x000077505ccd130e:   add    %r11,%r10
  0x000077505ccd1311:   cmp    %r10,%rax
  0x000077505ccd1314:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd131a:   xchg   %ax,%ax
  0x000077505ccd131c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd1320:   sub    $0x18,%rsp
  0x000077505ccd1327:   mov    %rbp,0x10(%rsp)              ;*synchronization entry
                                                            ; - kotlin.random.XorWowRandom::nextInt@-1 (line 40)
  0x000077505ccd132c:   mov    0x10(%rsi),%r11d
  0x000077505ccd1330:   mov    0x14(%rsi),%r10d
  0x000077505ccd1334:   mov    %r10d,0x10(%rsi)             ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
  0x000077505ccd1338:   mov    0x18(%rsi),%r8d
  0x000077505ccd133c:   mov    %r8d,0x14(%rsi)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
  0x000077505ccd1340:   mov    0x1c(%rsi),%r10d             ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
  0x000077505ccd1344:   mov    %r10d,0x18(%rsi)             ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
  0x000077505ccd1348:   mov    0xc(%rsi),%r9d               ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
  0x000077505ccd134c:   mov    %r11d,0xc(%rsi)              ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
  0x000077505ccd1350:   mov    0x20(%rsi),%r11d             ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
  0x000077505ccd1354:   mov    %r10d,%ecx
  0x000077505ccd1357:   shl    $0x4,%ecx
  0x000077505ccd135a:   mov    %r11d,%ebx
  0x000077505ccd135d:   add    $0x587c5,%ebx
  0x000077505ccd1363:   mov    %ebx,0x20(%rsi)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
  0x000077505ccd1366:   mov    %r9d,%ebx
  0x000077505ccd1369:   shr    $0x2,%ebx
  0x000077505ccd136c:   xor    %r9d,%ebx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
  0x000077505ccd136f:   mov    %ebx,%eax
  0x000077505ccd1371:   shl    %eax
  0x000077505ccd1373:   xor    %ebx,%eax
  0x000077505ccd1375:   xor    %r10d,%eax
  0x000077505ccd1378:   xor    %ecx,%eax                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
  0x000077505ccd137a:   mov    %eax,0x1c(%rsi)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
  0x000077505ccd137d:   add    %r11d,%eax
  0x000077505ccd1380:   add    $0x587c5,%eax                ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@78 (line 50)
  0x000077505ccd1386:   add    $0x10,%rsp
  0x000077505ccd138a:   pop    %rbp
  0x000077505ccd138b:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd1392:   ja     0x000077505ccd1399
  0x000077505ccd1398:   ret
  0x000077505ccd1399:   movabs $0x77505ccd138b,%r10         ;   {internal_word}
  0x000077505ccd13a3:   mov    %r10,0x360(%r15)
  0x000077505ccd13aa:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd13af:   hlt
  0x000077505ccd13b0:   hlt
  0x000077505ccd13b1:   hlt
  0x000077505ccd13b2:   hlt
  0x000077505ccd13b3:   hlt
  0x000077505ccd13b4:   hlt
  0x000077505ccd13b5:   hlt
  0x000077505ccd13b6:   hlt
  0x000077505ccd13b7:   hlt
  0x000077505ccd13b8:   hlt
  0x000077505ccd13b9:   hlt
  0x000077505ccd13ba:   hlt
  0x000077505ccd13bb:   hlt
  0x000077505ccd13bc:   hlt
  0x000077505ccd13bd:   hlt
  0x000077505ccd13be:   hlt
  0x000077505ccd13bf:   hlt
[Exception Handler]
  0x000077505ccd13c0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd13c5:   call   0x000077505ccd13ca
  0x000077505ccd13ca:   subq   $0x5,(%rsp)
  0x000077505ccd13cf:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd13d4:   hlt
  0x000077505ccd13d5:   hlt
  0x000077505ccd13d6:   hlt
  0x000077505ccd13d7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     384  107       3       kotlin.random.XorWowRandom::<init> (131 bytes)
 total in heap  [0x0000775055227990,0x00007750552283a0] = 2576
 relocation     [0x0000775055227af0,0x0000775055227b70] = 128
 main code      [0x0000775055227b80,0x0000775055227fc0] = 1088
 stub code      [0x0000775055227fc0,0x0000775055228010] = 80
 oops           [0x0000775055228010,0x0000775055228020] = 16
 metadata       [0x0000775055228020,0x0000775055228040] = 32
 scopes data    [0x0000775055228040,0x00007750552281a8] = 360
 scopes pcs     [0x00007750552281a8,0x0000775055228398] = 496
 dependencies   [0x0000775055228398,0x00007750552283a0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom'
  # this:     rsi:rsi   = 'kotlin/random/XorWowRandom'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9        = int
  # parm4:    rdi       = int
  # parm5:    [sp+0x70]   = int  (sp of caller)
  0x0000775055227b80:   mov    0x8(%rsi),%r10d
  0x0000775055227b84:   movabs $0x800000000,%r11
  0x0000775055227b8e:   add    %r11,%r10
  0x0000775055227b91:   cmp    %rax,%r10
  0x0000775055227b94:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x0000775055227b9a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055227ba0:   mov    %eax,-0x14000(%rsp)
  0x0000775055227ba7:   push   %rbp
  0x0000775055227ba8:   sub    $0x60,%rsp
  0x0000775055227bac:   mov    %rsi,0x40(%rsp)
  0x0000775055227bb1:   movabs $0x775020512230,%rbx         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227bbb:   mov    0xf4(%rbx),%eax
  0x0000775055227bc1:   add    $0x2,%eax
  0x0000775055227bc4:   mov    %eax,0xf4(%rbx)
  0x0000775055227bca:   and    $0x7fe,%eax
  0x0000775055227bd0:   cmp    $0x0,%eax
  0x0000775055227bd3:   je     0x0000775055227eae           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@0 (line 25)
  0x0000775055227bd9:   mov    0x70(%rsp),%ebx
  0x0000775055227bdd:   mov    %rsi,%rax
  0x0000775055227be0:   movabs $0x775020512230,%r11         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227bea:   addq   $0x1,0x138(%r11)
  0x0000775055227bf2:   movabs $0x775020512508,%rax         ;   {metadata(method data for {method} {0x00007750205040e8} '<init>' '()V' in 'kotlin/random/Random')}
  0x0000775055227bfc:   mov    0xf4(%rax),%r11d
  0x0000775055227c03:   add    $0x2,%r11d
  0x0000775055227c07:   mov    %r11d,0xf4(%rax)
  0x0000775055227c0e:   and    $0x1ffffe,%r11d
  0x0000775055227c15:   cmp    $0x0,%r11d
  0x0000775055227c19:   je     0x0000775055227ecf
  0x0000775055227c1f:   mov    %rsi,%rax
  0x0000775055227c22:   movabs $0x775020512508,%r11         ;   {metadata(method data for {method} {0x00007750205040e8} '<init>' '()V' in 'kotlin/random/Random')}
  0x0000775055227c2c:   addq   $0x1,0x138(%r11)
  0x0000775055227c34:   movabs $0x77502024ca78,%rax         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055227c3e:   mov    0xf4(%rax),%r11d
  0x0000775055227c45:   add    $0x2,%r11d
  0x0000775055227c49:   mov    %r11d,0xf4(%rax)
  0x0000775055227c50:   and    $0x1ffffe,%r11d
  0x0000775055227c57:   cmp    $0x0,%r11d
  0x0000775055227c5b:   je     0x0000775055227ef0
  0x0000775055227c61:   mov    %edx,0xc(%rsi)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@6 (line 19)
  0x0000775055227c64:   mov    %ecx,0x10(%rsi)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@11 (line 20)
  0x0000775055227c67:   mov    %r8d,0x14(%rsi)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 21)
  0x0000775055227c6b:   mov    %r9d,0x18(%rsi)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@22 (line 22)
  0x0000775055227c6f:   mov    %edi,0x1c(%rsi)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@28 (line 23)
  0x0000775055227c72:   mov    %ebx,0x20(%rsi)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@34 (line 24)
  0x0000775055227c75:   or     %rcx,%rdx
  0x0000775055227c78:   or     %r8,%rdx
  0x0000775055227c7b:   or     %r9,%rdx
  0x0000775055227c7e:   or     %rdi,%rdx
  0x0000775055227c81:   cmp    $0x0,%edx
  0x0000775055227c84:   movabs $0x775020512230,%rdi         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227c8e:   movabs $0x148,%rbx
  0x0000775055227c98:   je     0x0000775055227ca8
  0x0000775055227c9e:   movabs $0x158,%rbx
  0x0000775055227ca8:   mov    (%rdi,%rbx,1),%rax
  0x0000775055227cac:   lea    0x1(%rax),%rax
  0x0000775055227cb0:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055227cb4:   je     0x0000775055227cd4           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@62 (line 31)
  0x0000775055227cba:   movabs $0x775020512230,%rdi         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227cc4:   incl   0x168(%rdi)
  0x0000775055227cca:   mov    $0x1,%edi
  0x0000775055227ccf:   jmp    0x0000775055227cd9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@66 (line 31)
  0x0000775055227cd4:   mov    $0x0,%edi                    ;*istore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@70 (line 31)
  0x0000775055227cd9:   cmp    $0x0,%edi
  0x0000775055227cdc:   movabs $0x775020512230,%rdi         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227ce6:   movabs $0x190,%rbx
  0x0000775055227cf0:   je     0x0000775055227d00
  0x0000775055227cf6:   movabs $0x180,%rbx
  0x0000775055227d00:   mov    (%rdi,%rbx,1),%rax
  0x0000775055227d04:   lea    0x1(%rax),%rax
  0x0000775055227d08:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055227d0c:   je     0x0000775055227ddd           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@74 (line 31)
  0x0000775055227d12:   mov    $0x0,%edi
  0x0000775055227d17:   jmp    0x0000775055227d91           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@104 (line 34)
  0x0000775055227d1c:   nopl   0x0(%rax)
  0x0000775055227d20:   mov    %edi,0x38(%rsp)
  0x0000775055227d24:   mov    %rsi,%rbx
  0x0000775055227d27:   movabs $0x775020512230,%rax         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227d31:   addq   $0x1,0x208(%rax)
  0x0000775055227d39:   mov    %rsi,%rbx
  0x0000775055227d3c:   mov    %rbx,%rsi                    ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x0000775055227d3f:   call   0x000077505c788080           ; ImmutableOopMap {[64]=Oop }
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ;   {optimized virtual_call}
  0x0000775055227d44:   mov    0x38(%rsp),%edi
  0x0000775055227d48:   inc    %edi
  0x0000775055227d4a:   movabs $0x775020512230,%rdx         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227d54:   mov    0xf8(%rdx),%esi
  0x0000775055227d5a:   add    $0x2,%esi
  0x0000775055227d5d:   mov    %esi,0xf8(%rdx)
  0x0000775055227d63:   and    $0x3ffe,%esi
  0x0000775055227d69:   cmp    $0x0,%esi
  0x0000775055227d6c:   je     0x0000775055227f11           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
  0x0000775055227d72:   mov    0x350(%r15),%r10             ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.XorWowRandom::<init>@126 (line 34)
  0x0000775055227d79:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055227d7c:   movabs $0x775020512230,%rdx         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227d86:   incl   0x240(%rdx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
  0x0000775055227d8c:   mov    0x40(%rsp),%rsi
  0x0000775055227d91:   cmp    $0x40,%edi
  0x0000775055227d94:   movabs $0x775020512230,%rbx         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227d9e:   movabs $0x1f8,%rax
  0x0000775055227da8:   jl     0x0000775055227db8
  0x0000775055227dae:   movabs $0x1e8,%rax
  0x0000775055227db8:   mov    (%rbx,%rax,1),%rdx
  0x0000775055227dbc:   lea    0x1(%rdx),%rdx
  0x0000775055227dc0:   mov    %rdx,(%rbx,%rax,1)
  0x0000775055227dc4:   jl     0x0000775055227d20           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@108 (line 34)
  0x0000775055227dca:   add    $0x60,%rsp
  0x0000775055227dce:   pop    %rbp
  0x0000775055227dcf:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055227dd6:   ja     0x0000775055227f32
  0x0000775055227ddc:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@130 (line 18)
  0x0000775055227ddd:   data16 xchg %ax,%ax
  0x0000775055227de0:   jmp    0x0000775055227f57           ;   {no_reloc}
  0x0000775055227de5:   add    %al,(%rax)
  0x0000775055227de7:   add    %al,(%rax)
  0x0000775055227de9:   add    %cl,-0x75(%rcx)
  0x0000775055227dec:   xchg   %ecx,(%rax)
  0x0000775055227dee:   add    %eax,(%rax)
  0x0000775055227df0:   add    %cl,-0x73(%rax)
  0x0000775055227df3:   js     0x0000775055227e1d
  0x0000775055227df5:   cmp    0x118(%r15),%rdi
  0x0000775055227dfc:   ja     0x0000775055227f61
  0x0000775055227e02:   mov    %rdi,0x108(%r15)
  0x0000775055227e09:   movq   $0x1,(%rax)
  0x0000775055227e10:   mov    %rdx,%rcx
  0x0000775055227e13:   movabs $0x800000000,%r10
  0x0000775055227e1d:   sub    %r10,%rcx
  0x0000775055227e20:   mov    %ecx,0x8(%rax)
  0x0000775055227e23:   xor    %rcx,%rcx
  0x0000775055227e26:   mov    %ecx,0xc(%rax)
  0x0000775055227e29:   xor    %rcx,%rcx
  0x0000775055227e2c:   mov    %rcx,0x10(%rax)
  0x0000775055227e30:   mov    %rcx,0x18(%rax)
  0x0000775055227e34:   mov    %rcx,0x20(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@84 (line 31)
  0x0000775055227e38:   movabs $0x62ae7ebd0,%rdx            ;   {oop("Initial state must have at least one non-zero element."{0x000000062ae7ebd0})}
  0x0000775055227e42:   mov    %rdx,%rsi
  0x0000775055227e45:   movabs $0x775020512230,%rdi         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227e4f:   addq   $0x1,0x1a0(%rdi)
  0x0000775055227e57:   movabs $0x7750204204f0,%rsi         ;   {metadata(method data for {method} {0x000077502000dcb8} 'toString' '()Ljava/lang/String;' in 'java/lang/String')}
  0x0000775055227e61:   mov    0xf4(%rsi),%edi
  0x0000775055227e67:   add    $0x2,%edi
  0x0000775055227e6a:   mov    %edi,0xf4(%rsi)
  0x0000775055227e70:   and    $0x1ffffe,%edi
  0x0000775055227e76:   cmp    $0x0,%edi
  0x0000775055227e79:   je     0x0000775055227f6e
  0x0000775055227e7f:   mov    %rax,%rsi
  0x0000775055227e82:   movabs $0x775020512230,%rdi         ;   {metadata(method data for {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227e8c:   addq   $0x1,0x1d8(%rdi)
  0x0000775055227e94:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@93 (line 31)
  0x0000775055227e97:   mov    %rax,0x48(%rsp)
  0x0000775055227e9c:   data16 xchg %ax,%ax
  0x0000775055227e9f:   call   0x000077505c788080           ; ImmutableOopMap {[72]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@93 (line 31)
                                                            ;   {optimized virtual_call}
  0x0000775055227ea4:   mov    0x48(%rsp),%rax
  0x0000775055227ea9:   jmp    0x0000775055227fae
  0x0000775055227eae:   movabs $0x775020503258,%r10         ;   {metadata({method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227eb8:   mov    %r10,0x8(%rsp)
  0x0000775055227ebd:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055227ec5:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.random.XorWowRandom::<init>@-1 (line 25)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055227eca:   jmp    0x0000775055227bd9
  0x0000775055227ecf:   movabs $0x7750205040e8,%r10         ;   {metadata({method} {0x00007750205040e8} '<init>' '()V' in 'kotlin/random/Random')}
  0x0000775055227ed9:   mov    %r10,0x8(%rsp)
  0x0000775055227ede:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055227ee6:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.random.Random::<init>@-1 (line 19)
                                                            ; - kotlin.random.XorWowRandom::<init>@1 (line 25)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055227eeb:   jmp    0x0000775055227c1f
  0x0000775055227ef0:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055227efa:   mov    %r10,0x8(%rsp)
  0x0000775055227eff:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055227f07:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [64]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - kotlin.random.Random::<init>@1 (line 19)
                                                            ; - kotlin.random.XorWowRandom::<init>@1 (line 25)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055227f0c:   jmp    0x0000775055227c61
  0x0000775055227f11:   movabs $0x775020503258,%r10         ;   {metadata({method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055227f1b:   mov    %r10,0x8(%rsp)
  0x0000775055227f20:   movq   $0x7e,(%rsp)
  0x0000775055227f28:   call   0x000077505c82e680           ; ImmutableOopMap {[64]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.XorWowRandom::<init>@126 (line 34)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055227f2d:   jmp    0x0000775055227d72
  0x0000775055227f32:   movabs $0x775055227dcf,%r10         ;   {internal_word}
  0x0000775055227f3c:   mov    %r10,0x360(%r15)
  0x0000775055227f43:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055227f48:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x0000775055227f52:   mov    $0xa050f00,%eax
  0x0000775055227f57:   call   0x000077505c82d600           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.XorWowRandom::<init>@84 (line 31)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x0000775055227f5c:   jmp    0x0000775055227de0
  0x0000775055227f61:   mov    %rdx,%rdx
  0x0000775055227f64:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@84 (line 31)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055227f69:   jmp    0x0000775055227e38
  0x0000775055227f6e:   movabs $0x77502000dcb8,%r10         ;   {metadata({method} {0x000077502000dcb8} 'toString' '()Ljava/lang/String;' in 'java/lang/String')}
  0x0000775055227f78:   mov    %r10,0x8(%rsp)
  0x0000775055227f7d:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055227f85:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::toString@-1 (line 4055)
                                                            ; - kotlin.random.XorWowRandom::<init>@90 (line 31)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055227f8a:   jmp    0x0000775055227e7f
  0x0000775055227f8f:   nop
  0x0000775055227f90:   nop
  0x0000775055227f91:   mov    0x3d8(%r15),%rax
  0x0000775055227f98:   movq   $0x0,0x3d8(%r15)
  0x0000775055227fa3:   movq   $0x0,0x3e0(%r15)
  0x0000775055227fae:   add    $0x60,%rsp
  0x0000775055227fb2:   pop    %rbp
  0x0000775055227fb3:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055227fb8:   hlt
  0x0000775055227fb9:   hlt
  0x0000775055227fba:   hlt
  0x0000775055227fbb:   hlt
  0x0000775055227fbc:   hlt
  0x0000775055227fbd:   hlt
  0x0000775055227fbe:   hlt
  0x0000775055227fbf:   hlt
[Stub Code]
  0x0000775055227fc0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055227fc5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055227fcf:   jmp    0x0000775055227fcf           ;   {runtime_call}
  0x0000775055227fd4:   nop
  0x0000775055227fd5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055227fdf:   jmp    0x0000775055227fdf           ;   {runtime_call}
[Exception Handler]
  0x0000775055227fe4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055227fe9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055227ff3:   and    $0xfffffffffffffff0,%rsp
  0x0000775055227ff7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055227ffc:   hlt
[Deopt Handler Code]
  0x0000775055227ffd:   movabs $0x775055227ffd,%r10         ;   {section_word}
  0x0000775055228007:   push   %r10
  0x0000775055228009:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522800e:   hlt
  0x000077505522800f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     388  108       3       kotlin.jvm.internal.Intrinsics::checkNotNullParameter (9 bytes)
 total in heap  [0x0000775055228410,0x0000775055228e18] = 2568
 relocation     [0x0000775055228570,0x0000775055228608] = 152
 main code      [0x0000775055228620,0x0000775055228ac0] = 1184
 stub code      [0x0000775055228ac0,0x0000775055228b30] = 112
 oops           [0x0000775055228b30,0x0000775055228b40] = 16
 metadata       [0x0000775055228b40,0x0000775055228b60] = 32
 scopes data    [0x0000775055228b60,0x0000775055228c38] = 216
 scopes pcs     [0x0000775055228c38,0x0000775055228df8] = 448
 dependencies   [0x0000775055228df8,0x0000775055228e00] = 8
 nul chk table  [0x0000775055228e00,0x0000775055228e18] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x80]  (sp of caller)
  0x0000775055228620:   mov    %eax,-0x14000(%rsp)
  0x0000775055228627:   push   %rbp
  0x0000775055228628:   sub    $0x70,%rsp
  0x000077505522862c:   mov    %rdx,%rbx
  0x000077505522862f:   movabs $0x775020512670,%rdx         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055228639:   mov    0xf4(%rdx),%edi
  0x000077505522863f:   add    $0x2,%edi
  0x0000775055228642:   mov    %edi,0xf4(%rdx)
  0x0000775055228648:   and    $0x7fe,%edi
  0x000077505522864e:   cmp    $0x0,%edi
  0x0000775055228651:   je     0x00007750552289ab           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@0 (line 130)
  0x0000775055228657:   cmp    $0x0,%rsi
  0x000077505522865b:   movabs $0x775020512670,%rdx         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055228665:   movabs $0x138,%rsi
  0x000077505522866f:   jne    0x000077505522867f
  0x0000775055228675:   movabs $0x148,%rsi
  0x000077505522867f:   mov    (%rdx,%rsi,1),%rdi
  0x0000775055228683:   lea    0x1(%rdi),%rdi
  0x0000775055228687:   mov    %rdi,(%rdx,%rsi,1)
  0x000077505522868b:   jne    0x0000775055228881           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
  0x0000775055228691:   movabs $0x775020512670,%rdx         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522869b:   addq   $0x1,0x158(%rdx)
  0x00007750552286a3:   movabs $0x775020512820,%rdx         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x00007750552286ad:   mov    0xf4(%rdx),%esi
  0x00007750552286b3:   add    $0x2,%esi
  0x00007750552286b6:   mov    %esi,0xf4(%rdx)
  0x00007750552286bc:   and    $0x1ffffe,%esi
  0x00007750552286c2:   cmp    $0x0,%esi
  0x00007750552286c5:   je     0x00007750552289cc
  0x00007750552286cb:   nopl   0x0(%rax,%rax,1)
  0x00007750552286d0:   jmp    0x00007750552289fc           ;   {no_reloc}
  0x00007750552286d5:   add    %al,(%rax)
  0x00007750552286d7:   add    %al,(%rax)
  0x00007750552286d9:   add    %cl,-0x75(%rcx)
  0x00007750552286dc:   xchg   %ecx,(%rax)
  0x00007750552286de:   add    %eax,(%rax)
  0x00007750552286e0:   add    %cl,-0x73(%rax)
  0x00007750552286e3:   js     0x0000775055228715
  0x00007750552286e5:   cmp    0x118(%r15),%rdi
  0x00007750552286ec:   ja     0x0000775055228a06
  0x00007750552286f2:   mov    %rdi,0x108(%r15)
  0x00007750552286f9:   movq   $0x1,(%rax)
  0x0000775055228700:   mov    %rdx,%rcx
  0x0000775055228703:   movabs $0x800000000,%r10
  0x000077505522870d:   sub    %r10,%rcx
  0x0000775055228710:   mov    %ecx,0x8(%rax)
  0x0000775055228713:   xor    %rcx,%rcx
  0x0000775055228716:   mov    %ecx,0xc(%rax)
  0x0000775055228719:   xor    %rcx,%rcx
  0x000077505522871c:   mov    %rcx,0x10(%rax)
  0x0000775055228720:   mov    %rcx,0x18(%rax)
  0x0000775055228724:   mov    %rcx,0x20(%rax)
  0x0000775055228728:   mov    %rcx,0x28(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@0 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x000077505522872c:   movabs $0x775020512820,%rsi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055228736:   addq   $0x1,0x138(%rsi)
  0x000077505522873e:   mov    %rbx,%rsi                    ;*invokestatic createParameterIsNullExceptionMessage {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@5 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x0000775055228741:   mov    %rax,0x58(%rsp)
  0x0000775055228746:   nop
  0x0000775055228747:   call   0x000077505c788680           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokestatic createParameterIsNullExceptionMessage {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@5 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {static_call}
  0x000077505522874c:   mov    0x58(%rsp),%rdx
  0x0000775055228751:   movabs $0x775020512820,%rsi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522875b:   addq   $0x1,0x148(%rsi)
  0x0000775055228763:   mov    %rax,%rdx
  0x0000775055228766:   mov    0x58(%rsp),%rsi              ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@8 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x000077505522876b:   nopl   0x0(%rax)
  0x000077505522876f:   call   0x000077505c788080           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@8 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {optimized virtual_call}
  0x0000775055228774:   movabs $0x775020512820,%rsi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522877e:   addq   $0x1,0x158(%rsi)
  0x0000775055228786:   movabs $0x775020512f50,%rsi         ;   {metadata(method data for {method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055228790:   mov    0xf4(%rsi),%edi
  0x0000775055228796:   add    $0x2,%edi
  0x0000775055228799:   mov    %edi,0xf4(%rsi)
  0x000077505522879f:   and    $0x1ffffe,%edi
  0x00007750552287a5:   cmp    $0x0,%edi
  0x00007750552287a8:   je     0x0000775055228a13
  0x00007750552287ae:   movabs $0x62ae75aa0,%rsi            ;   {oop(a 'java/lang/Class'{0x000000062ae75aa0} = 'kotlin/jvm/internal/Intrinsics')}
  0x00007750552287b8:   mov    %rsi,%rdi
  0x00007750552287bb:   movabs $0x775020512f50,%rbx         ;   {metadata(method data for {method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x00007750552287c5:   addq   $0x1,0x138(%rbx)
  0x00007750552287cd:   movabs $0x775020420928,%rdi         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x00007750552287d7:   mov    0xf4(%rdi),%ebx
  0x00007750552287dd:   add    $0x2,%ebx
  0x00007750552287e0:   mov    %ebx,0xf4(%rdi)
  0x00007750552287e6:   and    $0x1ffffe,%ebx
  0x00007750552287ec:   cmp    $0x0,%ebx
  0x00007750552287ef:   je     0x0000775055228a34
  0x00007750552287f5:   mov    0x2c(%rsi),%esi              ; implicit exception: dispatches to 0x0000775055228a55
  0x00007750552287f8:   shl    $0x3,%rsi                    ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@1 (line 862)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x00007750552287fc:   cmp    $0x0,%rsi
  0x0000775055228800:   movabs $0x775020420928,%rdi         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000077505522880a:   movabs $0x138,%rbx
  0x0000775055228814:   je     0x0000775055228824
  0x000077505522881a:   movabs $0x148,%rbx
  0x0000775055228824:   mov    (%rdi,%rbx,1),%rax
  0x0000775055228828:   lea    0x1(%rax),%rax
  0x000077505522882c:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055228830:   je     0x000077505522884e           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@6 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x0000775055228836:   movabs $0x775020420928,%rdi         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x0000775055228840:   incl   0x158(%rdi)
  0x0000775055228846:   mov    %rsi,%rdi
  0x0000775055228849:   jmp    0x0000775055228877           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@10 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x000077505522884e:   movabs $0x62ae75aa0,%rsi            ;   {oop(a 'java/lang/Class'{0x000000062ae75aa0} = 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055228858:   mov    %rsi,%rdi
  0x000077505522885b:   movabs $0x775020420928,%rbx         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x0000775055228865:   addq   $0x1,0x170(%rbx)
  0x000077505522886d:   xchg   %ax,%ax
  0x000077505522886f:   call   0x000077505c788080           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokevirtual initClassName {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@14 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {optimized virtual_call}
  0x0000775055228874:   mov    %rax,%rdi                    ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@17 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x0000775055228877:   mov    0x58(%rsp),%rax
  0x000077505522887c:   jmp    0x0000775055228894           ;*invokestatic sanitizeStackTrace {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@6 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x0000775055228881:   add    $0x70,%rsp
  0x0000775055228885:   pop    %rbp
  0x0000775055228886:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522888d:   ja     0x0000775055228a5a
  0x0000775055228893:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@8 (line 133)
  0x0000775055228894:   movabs $0x775020512f50,%rsi         ;   {metadata(method data for {method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522889e:   addq   $0x1,0x170(%rsi)
  0x00007750552288a6:   mov    %rax,%rsi
  0x00007750552288a9:   mov    %rdi,%rdx                    ;*invokestatic sanitizeStackTrace {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@6 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x00007750552288ac:   data16 xchg %ax,%ax
  0x00007750552288af:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic sanitizeStackTrace {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@6 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {static_call}
  0x00007750552288b4:   cmp    $0x0,%rax
  0x00007750552288b8:   jne    0x00007750552288d0
  0x00007750552288ba:   movabs $0x775020512820,%rdi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x00007750552288c4:   orb    $0x1,0x161(%rdi)
  0x00007750552288cb:   jmp    0x00007750552289a3
  0x00007750552288d0:   movabs $0x8000594a8,%rbx            ;   {metadata('java/lang/NullPointerException')}
  0x00007750552288da:   mov    0x8(%rax),%edi
  0x00007750552288dd:   movabs $0x800000000,%r10
  0x00007750552288e7:   add    %r10,%rdi
  0x00007750552288ea:   cmp    0x50(%rdi),%rbx
  0x00007750552288ee:   jne    0x0000775055228987
  0x00007750552288f4:   movabs $0x775020512820,%rdi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x00007750552288fe:   mov    0x8(%rax),%ebx
  0x0000775055228901:   movabs $0x800000000,%r10
  0x000077505522890b:   add    %r10,%rbx
  0x000077505522890e:   cmp    0x178(%rdi),%rbx
  0x0000775055228915:   jne    0x0000775055228924
  0x0000775055228917:   addq   $0x1,0x180(%rdi)
  0x000077505522891f:   jmp    0x00007750552289a3
  0x0000775055228924:   cmp    0x188(%rdi),%rbx
  0x000077505522892b:   jne    0x000077505522893a
  0x000077505522892d:   addq   $0x1,0x190(%rdi)
  0x0000775055228935:   jmp    0x00007750552289a3
  0x000077505522893a:   cmpq   $0x0,0x178(%rdi)
  0x0000775055228945:   jne    0x000077505522895e
  0x0000775055228947:   mov    %rbx,0x178(%rdi)
  0x000077505522894e:   movq   $0x1,0x180(%rdi)
  0x0000775055228959:   jmp    0x00007750552289a3
  0x000077505522895e:   cmpq   $0x0,0x188(%rdi)
  0x0000775055228969:   jne    0x0000775055228982
  0x000077505522896b:   mov    %rbx,0x188(%rdi)
  0x0000775055228972:   movq   $0x1,0x190(%rdi)
  0x000077505522897d:   jmp    0x00007750552289a3
  0x0000775055228982:   jmp    0x00007750552289a3
  0x0000775055228987:   movabs $0x775020512820,%rdi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055228991:   subq   $0x1,0x168(%rdi)
  0x0000775055228999:   jmp    0x0000775055228a70
  0x000077505522899e:   jmp    0x00007750552289a3           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@14 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
  0x00007750552289a3:   cmp    (%rax),%rax                  ; implicit exception: dispatches to 0x0000775055228a79
  0x00007750552289a6:   jmp    0x0000775055228a9d
  0x00007750552289ab:   movabs $0x77502050df90,%r10         ;   {metadata({method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x00007750552289b5:   mov    %r10,0x8(%rsp)
  0x00007750552289ba:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552289c2:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@-1 (line 130)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552289c7:   jmp    0x0000775055228657
  0x00007750552289cc:   movabs $0x77502050e100,%r10         ;   {metadata({method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x00007750552289d6:   mov    %r10,0x8(%rsp)
  0x00007750552289db:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552289e3:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@-1 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552289e8:   jmp    0x00007750552286cb
  0x00007750552289ed:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x00007750552289f7:   mov    $0xa050f00,%eax
  0x00007750552289fc:   call   0x000077505c82d600           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@0 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x0000775055228a01:   jmp    0x00007750552286d0
  0x0000775055228a06:   mov    %rdx,%rdx
  0x0000775055228a09:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@0 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055228a0e:   jmp    0x000077505522872c
  0x0000775055228a13:   movabs $0x77502050f0e0,%r10         ;   {metadata({method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055228a1d:   mov    %r10,0x8(%rsp)
  0x0000775055228a22:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055228a2a:   call   0x000077505c82e680           ; ImmutableOopMap {[88]=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@-1 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055228a2f:   jmp    0x00007750552287ae
  0x0000775055228a34:   movabs $0x775020016bd8,%r10         ;   {metadata({method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x0000775055228a3e:   mov    %r10,0x8(%rsp)
  0x0000775055228a43:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055228a4b:   call   0x000077505c82e680           ; ImmutableOopMap {[88]=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Class::getName@-1 (line 862)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055228a50:   jmp    0x00007750552287f5
  0x0000775055228a55:   call   0x000077505c8295a0           ; ImmutableOopMap {[88]=Oop }
                                                            ;*getfield name {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.Class::getName@1 (line 862)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055228a5a:   movabs $0x775055228886,%r10         ;   {internal_word}
  0x0000775055228a64:   mov    %r10,0x360(%r15)
  0x0000775055228a6b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055228a70:   mov    %rax,(%rsp)
  0x0000775055228a74:   call   0x000077505c82b9a0           ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@14 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000775055228a79:   call   0x000077505c8295a0           ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@17 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055228a7e:   nop
  0x0000775055228a7f:   nop
  0x0000775055228a80:   mov    0x3d8(%r15),%rax
  0x0000775055228a87:   movq   $0x0,0x3d8(%r15)
  0x0000775055228a92:   movq   $0x0,0x3e0(%r15)
  0x0000775055228a9d:   add    $0x70,%rsp
  0x0000775055228aa1:   pop    %rbp
  0x0000775055228aa2:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055228aa7:   hlt
  0x0000775055228aa8:   hlt
  0x0000775055228aa9:   hlt
  0x0000775055228aaa:   hlt
  0x0000775055228aab:   hlt
  0x0000775055228aac:   hlt
  0x0000775055228aad:   hlt
  0x0000775055228aae:   hlt
  0x0000775055228aaf:   hlt
  0x0000775055228ab0:   hlt
  0x0000775055228ab1:   hlt
  0x0000775055228ab2:   hlt
  0x0000775055228ab3:   hlt
  0x0000775055228ab4:   hlt
  0x0000775055228ab5:   hlt
  0x0000775055228ab6:   hlt
  0x0000775055228ab7:   hlt
  0x0000775055228ab8:   hlt
  0x0000775055228ab9:   hlt
  0x0000775055228aba:   hlt
  0x0000775055228abb:   hlt
  0x0000775055228abc:   hlt
  0x0000775055228abd:   hlt
  0x0000775055228abe:   hlt
  0x0000775055228abf:   hlt
[Stub Code]
  0x0000775055228ac0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055228ac5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055228acf:   jmp    0x0000775055228acf           ;   {runtime_call}
  0x0000775055228ad4:   nop
  0x0000775055228ad5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055228adf:   jmp    0x0000775055228adf           ;   {runtime_call}
  0x0000775055228ae4:   nop
  0x0000775055228ae5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055228aef:   jmp    0x0000775055228aef           ;   {runtime_call}
  0x0000775055228af4:   nop
  0x0000775055228af5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055228aff:   jmp    0x0000775055228aff           ;   {runtime_call}
[Exception Handler]
  0x0000775055228b04:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055228b09:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055228b13:   and    $0xfffffffffffffff0,%rsp
  0x0000775055228b17:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055228b1c:   hlt
[Deopt Handler Code]
  0x0000775055228b1d:   movabs $0x775055228b1d,%r10         ;   {section_word}
  0x0000775055228b27:   push   %r10
  0x0000775055228b29:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x0000775055228b2e:   hlt
  0x0000775055228b2f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     392  109       3       de.maschmi.blog.Adapter::<init> (13 bytes)
 total in heap  [0x0000775055228e90,0x0000775055229318] = 1160
 relocation     [0x0000775055228ff0,0x0000775055229038] = 72
 main code      [0x0000775055229040,0x0000775055229200] = 448
 stub code      [0x0000775055229200,0x0000775055229240] = 64
 oops           [0x0000775055229240,0x0000775055229248] = 8
 metadata       [0x0000775055229248,0x0000775055229258] = 16
 scopes data    [0x0000775055229258,0x0000775055229290] = 56
 scopes pcs     [0x0000775055229290,0x0000775055229310] = 128
 dependencies   [0x0000775055229310,0x0000775055229318] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter'
  #           [sp+0x40]  (sp of caller)
  0x0000775055229040:   mov    0x8(%rsi),%r10d
  0x0000775055229044:   movabs $0x800000000,%r11
  0x000077505522904e:   add    %r11,%r10
  0x0000775055229051:   cmp    %rax,%r10
  0x0000775055229054:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522905a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055229060:   mov    %eax,-0x14000(%rsp)
  0x0000775055229067:   push   %rbp
  0x0000775055229068:   sub    $0x30,%rsp
  0x000077505522906c:   movabs $0x775020513410,%rdi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x0000775055229076:   mov    0xf4(%rdi),%ebx
  0x000077505522907c:   add    $0x2,%ebx
  0x000077505522907f:   mov    %ebx,0xf4(%rdi)
  0x0000775055229085:   and    $0x7fe,%ebx
  0x000077505522908b:   cmp    $0x0,%ebx
  0x000077505522908e:   je     0x0000775055229139           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@0 (line 5)
  0x0000775055229094:   mov    %rsi,%rdi
  0x0000775055229097:   movabs $0x775020513410,%rbx         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x00007750552290a1:   addq   $0x1,0x138(%rbx)
  0x00007750552290a9:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552290b3:   mov    0xf4(%rdi),%ebx
  0x00007750552290b9:   add    $0x2,%ebx
  0x00007750552290bc:   mov    %ebx,0xf4(%rdi)
  0x00007750552290c2:   and    $0x1ffffe,%ebx
  0x00007750552290c8:   cmp    $0x0,%ebx
  0x00007750552290cb:   je     0x000077505522915a
  0x00007750552290d1:   movabs $0x775020513410,%rdi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x00007750552290db:   addq   $0x1,0x148(%rdi)
  0x00007750552290e3:   mov    %rsi,0x20(%rsp)
  0x00007750552290e8:   mov    $0x1,%esi                    ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x00007750552290ed:   xchg   %ax,%ax
  0x00007750552290ef:   call   0x000077505c788680           ; ImmutableOopMap {[32]=Oop }
                                                            ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ;   {static_call}
  0x00007750552290f4:   movsbl 0x38(%r15),%esi
  0x00007750552290f9:   cmp    $0x0,%esi
  0x00007750552290fc:   mov    0x20(%rsp),%rsi
  0x0000775055229101:   jne    0x000077505522917b
  0x0000775055229107:   mov    %rax,%r10
  0x000077505522910a:   shr    $0x3,%r10
  0x000077505522910e:   mov    %r10d,0xc(%rsi)
  0x0000775055229112:   mov    %rsi,%rdi
  0x0000775055229115:   xor    %rax,%rdi
  0x0000775055229118:   shr    $0x16,%rdi
  0x000077505522911c:   cmp    $0x0,%rdi
  0x0000775055229120:   jne    0x000077505522919a           ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
  0x0000775055229126:   add    $0x30,%rsp
  0x000077505522912a:   pop    %rbp
  0x000077505522912b:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055229132:   ja     0x00007750552291ae
  0x0000775055229138:   ret
  0x0000775055229139:   movabs $0x7750205014c0,%r10         ;   {metadata({method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x0000775055229143:   mov    %r10,0x8(%rsp)
  0x0000775055229148:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055229150:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Adapter::<init>@-1 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055229155:   jmp    0x0000775055229094
  0x000077505522915a:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055229164:   mov    %r10,0x8(%rsp)
  0x0000775055229169:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055229171:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.Adapter::<init>@1 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055229176:   jmp    0x00007750552290d1
  0x000077505522917b:   mov    0xc(%rsi),%edi
  0x000077505522917e:   shl    $0x3,%rdi
  0x0000775055229182:   cmp    $0x0,%rdi
  0x0000775055229186:   je     0x0000775055229107
  0x000077505522918c:   mov    %rdi,(%rsp)
  0x0000775055229190:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055229195:   jmp    0x0000775055229107
  0x000077505522919a:   cmp    $0x0,%rax
  0x000077505522919e:   je     0x0000775055229126
  0x00007750552291a0:   mov    %rsi,(%rsp)
  0x00007750552291a4:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x00007750552291a9:   jmp    0x0000775055229126
  0x00007750552291ae:   movabs $0x77505522912b,%r10         ;   {internal_word}
  0x00007750552291b8:   mov    %r10,0x360(%r15)
  0x00007750552291bf:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552291c4:   nop
  0x00007750552291c5:   nop
  0x00007750552291c6:   mov    0x3d8(%r15),%rax
  0x00007750552291cd:   movq   $0x0,0x3d8(%r15)
  0x00007750552291d8:   movq   $0x0,0x3e0(%r15)
  0x00007750552291e3:   add    $0x30,%rsp
  0x00007750552291e7:   pop    %rbp
  0x00007750552291e8:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007750552291ed:   hlt
  0x00007750552291ee:   hlt
  0x00007750552291ef:   hlt
  0x00007750552291f0:   hlt
  0x00007750552291f1:   hlt
  0x00007750552291f2:   hlt
  0x00007750552291f3:   hlt
  0x00007750552291f4:   hlt
  0x00007750552291f5:   hlt
  0x00007750552291f6:   hlt
  0x00007750552291f7:   hlt
  0x00007750552291f8:   hlt
  0x00007750552291f9:   hlt
  0x00007750552291fa:   hlt
  0x00007750552291fb:   hlt
  0x00007750552291fc:   hlt
  0x00007750552291fd:   hlt
  0x00007750552291fe:   hlt
  0x00007750552291ff:   hlt
[Stub Code]
  0x0000775055229200:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055229205:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522920f:   jmp    0x000077505522920f           ;   {runtime_call}
[Exception Handler]
  0x0000775055229214:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055229219:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055229223:   and    $0xfffffffffffffff0,%rsp
  0x0000775055229227:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522922c:   hlt
[Deopt Handler Code]
  0x000077505522922d:   movabs $0x77505522922d,%r10         ;   {section_word}
  0x0000775055229237:   push   %r10
  0x0000775055229239:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522923e:   hlt
  0x000077505522923f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     394  110       3       kotlin.random.XorWowRandom::<init> (20 bytes)
 total in heap  [0x0000775055229390,0x0000775055229740] = 944
 relocation     [0x00007750552294f0,0x0000775055229528] = 56
 main code      [0x0000775055229540,0x0000775055229660] = 288
 stub code      [0x0000775055229660,0x00007750552296a0] = 64
 oops           [0x00007750552296a0,0x00007750552296a8] = 8
 metadata       [0x00007750552296a8,0x00007750552296b0] = 8
 scopes data    [0x00007750552296b0,0x00007750552296d8] = 40
 scopes pcs     [0x00007750552296d8,0x0000775055229738] = 96
 dependencies   [0x0000775055229738,0x0000775055229740] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020503348} '<init>' '(II)V' in 'kotlin/random/XorWowRandom'
  # this:     rsi:rsi   = 'kotlin/random/XorWowRandom'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x70]  (sp of caller)
  0x0000775055229540:   mov    0x8(%rsi),%r10d
  0x0000775055229544:   movabs $0x800000000,%r11
  0x000077505522954e:   add    %r11,%r10
  0x0000775055229551:   cmp    %rax,%r10
  0x0000775055229554:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522955a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000775055229560:   mov    %eax,-0x14000(%rsp)
  0x0000775055229567:   push   %rbp
  0x0000775055229568:   sub    $0x60,%rsp
  0x000077505522956c:   movabs $0x775020513768,%r8          ;   {metadata(method data for {method} {0x0000775020503348} '<init>' '(II)V' in 'kotlin/random/XorWowRandom')}
  0x0000775055229576:   mov    0xf4(%r8),%r9d
  0x000077505522957d:   add    $0x2,%r9d
  0x0000775055229581:   mov    %r9d,0xf4(%r8)
  0x0000775055229588:   and    $0x7fe,%r9d
  0x000077505522958f:   cmp    $0x0,%r9d
  0x0000775055229593:   je     0x00007750552295ef           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@0 (line 28)
  0x0000775055229599:   mov    %rsi,%r8
  0x000077505522959c:   movabs $0x775020513768,%r9          ;   {metadata(method data for {method} {0x0000775020503348} '<init>' '(II)V' in 'kotlin/random/XorWowRandom')}
  0x00007750552295a6:   addq   $0x1,0x138(%r9)
  0x00007750552295ae:   mov    %rdx,%rdi
  0x00007750552295b1:   xor    $0xffffffff,%edi
  0x00007750552295b4:   mov    %rdx,%r8
  0x00007750552295b7:   shl    $0xa,%r8d
  0x00007750552295bb:   mov    %rcx,%r9
  0x00007750552295be:   shr    $0x4,%r9d
  0x00007750552295c2:   mov    %r8,%rbx
  0x00007750552295c5:   xor    %r9,%rbx
  0x00007750552295c8:   mov    $0x0,%r8d
  0x00007750552295ce:   mov    $0x0,%r9d
  0x00007750552295d4:   mov    %ebx,(%rsp)                  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
  0x00007750552295d7:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ;   {optimized virtual_call}
  0x00007750552295dc:   add    $0x60,%rsp
  0x00007750552295e0:   pop    %rbp
  0x00007750552295e1:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x00007750552295e8:   ja     0x000077505522960d
  0x00007750552295ee:   ret
  0x00007750552295ef:   movabs $0x775020503348,%r10         ;   {metadata({method} {0x0000775020503348} '<init>' '(II)V' in 'kotlin/random/XorWowRandom')}
  0x00007750552295f9:   mov    %r10,0x8(%rsp)
  0x00007750552295fe:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055229606:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.random.XorWowRandom::<init>@-1 (line 28)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522960b:   jmp    0x0000775055229599
  0x000077505522960d:   movabs $0x7750552295e1,%r10         ;   {internal_word}
  0x0000775055229617:   mov    %r10,0x360(%r15)
  0x000077505522961e:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055229623:   nop
  0x0000775055229624:   nop
  0x0000775055229625:   mov    0x3d8(%r15),%rax
  0x000077505522962c:   movq   $0x0,0x3d8(%r15)
  0x0000775055229637:   movq   $0x0,0x3e0(%r15)
  0x0000775055229642:   add    $0x60,%rsp
  0x0000775055229646:   pop    %rbp
  0x0000775055229647:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522964c:   hlt
  0x000077505522964d:   hlt
  0x000077505522964e:   hlt
  0x000077505522964f:   hlt
  0x0000775055229650:   hlt
  0x0000775055229651:   hlt
  0x0000775055229652:   hlt
  0x0000775055229653:   hlt
  0x0000775055229654:   hlt
  0x0000775055229655:   hlt
  0x0000775055229656:   hlt
  0x0000775055229657:   hlt
  0x0000775055229658:   hlt
  0x0000775055229659:   hlt
  0x000077505522965a:   hlt
  0x000077505522965b:   hlt
  0x000077505522965c:   hlt
  0x000077505522965d:   hlt
  0x000077505522965e:   hlt
  0x000077505522965f:   hlt
[Stub Code]
  0x0000775055229660:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055229665:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522966f:   jmp    0x000077505522966f           ;   {runtime_call}
[Exception Handler]
  0x0000775055229674:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055229679:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055229683:   and    $0xfffffffffffffff0,%rsp
  0x0000775055229687:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522968c:   hlt
[Deopt Handler Code]
  0x000077505522968d:   movabs $0x77505522968d,%r10         ;   {section_word}
  0x0000775055229697:   push   %r10
  0x0000775055229699:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522969e:   hlt
  0x000077505522969f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     396  111       3       de.maschmi.blog.GuardInlined::<init> (16 bytes)
 total in heap  [0x0000775055229790,0x000077505522a370] = 3040
 relocation     [0x00007750552298f0,0x00007750552299a0] = 176
 main code      [0x00007750552299a0,0x0000775055229fa0] = 1536
 stub code      [0x0000775055229fa0,0x000077505522a010] = 112
 oops           [0x000077505522a010,0x000077505522a028] = 24
 metadata       [0x000077505522a028,0x000077505522a058] = 48
 scopes data    [0x000077505522a058,0x000077505522a170] = 280
 scopes pcs     [0x000077505522a170,0x000077505522a350] = 480
 dependencies   [0x000077505522a350,0x000077505522a358] = 8
 nul chk table  [0x000077505522a358,0x000077505522a370] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined'
  # this:     rsi:rsi   = 'de/maschmi/blog/GuardInlined'
  # parm0:    rdx:rdx   = 'de/maschmi/blog/Adapter'
  #           [sp+0xa0]  (sp of caller)
  0x00007750552299a0:   mov    0x8(%rsi),%r10d
  0x00007750552299a4:   movabs $0x800000000,%r11
  0x00007750552299ae:   add    %r11,%r10
  0x00007750552299b1:   cmp    %rax,%r10
  0x00007750552299b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x00007750552299ba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00007750552299c0:   mov    %eax,-0x14000(%rsp)
  0x00007750552299c7:   push   %rbp
  0x00007750552299c8:   sub    $0x90,%rsp
  0x00007750552299cf:   mov    %rsi,0x78(%rsp)
  0x00007750552299d4:   mov    %rdx,0x80(%rsp)
  0x00007750552299dc:   movabs $0x7750205138e0,%rdi         ;   {metadata(method data for {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x00007750552299e6:   mov    0xf4(%rdi),%eax
  0x00007750552299ec:   add    $0x2,%eax
  0x00007750552299ef:   mov    %eax,0xf4(%rdi)
  0x00007750552299f5:   and    $0x7fe,%eax
  0x00007750552299fb:   cmp    $0x0,%eax
  0x00007750552299fe:   je     0x0000775055229e18           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::<init>@0
  0x0000775055229a04:   movabs $0x7750205138e0,%rdi         ;   {metadata(method data for {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x0000775055229a0e:   addq   $0x1,0x138(%rdi)
  0x0000775055229a16:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229a20:   mov    0xf4(%rdi),%eax
  0x0000775055229a26:   add    $0x2,%eax
  0x0000775055229a29:   mov    %eax,0xf4(%rdi)
  0x0000775055229a2f:   and    $0x1ffffe,%eax
  0x0000775055229a35:   cmp    $0x0,%eax
  0x0000775055229a38:   je     0x0000775055229e39
  0x0000775055229a3e:   cmp    $0x0,%rdx
  0x0000775055229a42:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229a4c:   movabs $0x138,%rax
  0x0000775055229a56:   jne    0x0000775055229a66
  0x0000775055229a5c:   movabs $0x148,%rax
  0x0000775055229a66:   mov    (%rdi,%rax,1),%rcx
  0x0000775055229a6a:   lea    0x1(%rcx),%rcx
  0x0000775055229a6e:   mov    %rcx,(%rdi,%rax,1)
  0x0000775055229a72:   jne    0x0000775055229c71           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229a78:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229a82:   addq   $0x1,0x158(%rdi)
  0x0000775055229a8a:   movabs $0x775020512820,%rdi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229a94:   mov    0xf4(%rdi),%eax
  0x0000775055229a9a:   add    $0x2,%eax
  0x0000775055229a9d:   mov    %eax,0xf4(%rdi)
  0x0000775055229aa3:   and    $0x1ffffe,%eax
  0x0000775055229aa9:   cmp    $0x0,%eax
  0x0000775055229aac:   je     0x0000775055229e5a
  0x0000775055229ab2:   nopw   0x0(%rax,%rax,1)
  0x0000775055229ab8:   jmp    0x0000775055229e8a           ;   {no_reloc}
  0x0000775055229abd:   add    %al,(%rax)
  0x0000775055229abf:   add    %al,(%rax)
  0x0000775055229ac1:   add    %cl,-0x75(%rcx)
  0x0000775055229ac4:   xchg   %ecx,(%rax)
  0x0000775055229ac6:   add    %eax,(%rax)
  0x0000775055229ac8:   add    %cl,-0x73(%rax)
  0x0000775055229acb:   js     0x0000775055229afd
  0x0000775055229acd:   cmp    0x118(%r15),%rdi
  0x0000775055229ad4:   ja     0x0000775055229e94
  0x0000775055229ada:   mov    %rdi,0x108(%r15)
  0x0000775055229ae1:   movq   $0x1,(%rax)
  0x0000775055229ae8:   mov    %rdx,%rcx
  0x0000775055229aeb:   movabs $0x800000000,%r10
  0x0000775055229af5:   sub    %r10,%rcx
  0x0000775055229af8:   mov    %ecx,0x8(%rax)
  0x0000775055229afb:   xor    %rcx,%rcx
  0x0000775055229afe:   mov    %ecx,0xc(%rax)
  0x0000775055229b01:   xor    %rcx,%rcx
  0x0000775055229b04:   mov    %rcx,0x10(%rax)
  0x0000775055229b08:   mov    %rcx,0x18(%rax)
  0x0000775055229b0c:   mov    %rcx,0x20(%rax)
  0x0000775055229b10:   mov    %rcx,0x28(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@0 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229b14:   movabs $0x775020512820,%rsi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229b1e:   addq   $0x1,0x138(%rsi)
  0x0000775055229b26:   movabs $0x62ae6db68,%rsi            ;   {oop("adapter"{0x000000062ae6db68})}
  0x0000775055229b30:   mov    %rax,0x70(%rsp)
  0x0000775055229b35:   xchg   %ax,%ax
  0x0000775055229b37:   call   0x000077505c788680           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*invokestatic createParameterIsNullExceptionMessage {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@5 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {static_call}
  0x0000775055229b3c:   mov    0x70(%rsp),%rdx
  0x0000775055229b41:   movabs $0x775020512820,%rsi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229b4b:   addq   $0x1,0x148(%rsi)
  0x0000775055229b53:   mov    %rax,%rdx
  0x0000775055229b56:   mov    0x70(%rsp),%rsi              ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@8 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229b5b:   nopl   0x0(%rax)
  0x0000775055229b5f:   call   0x000077505c788080           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@8 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {optimized virtual_call}
  0x0000775055229b64:   movabs $0x775020512820,%rsi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229b6e:   addq   $0x1,0x158(%rsi)
  0x0000775055229b76:   movabs $0x775020512f50,%rsi         ;   {metadata(method data for {method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229b80:   mov    0xf4(%rsi),%edi
  0x0000775055229b86:   add    $0x2,%edi
  0x0000775055229b89:   mov    %edi,0xf4(%rsi)
  0x0000775055229b8f:   and    $0x1ffffe,%edi
  0x0000775055229b95:   cmp    $0x0,%edi
  0x0000775055229b98:   je     0x0000775055229ea1
  0x0000775055229b9e:   movabs $0x62ae75aa0,%rsi            ;   {oop(a 'java/lang/Class'{0x000000062ae75aa0} = 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229ba8:   mov    %rsi,%rdi
  0x0000775055229bab:   movabs $0x775020512f50,%rbx         ;   {metadata(method data for {method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229bb5:   addq   $0x1,0x138(%rbx)
  0x0000775055229bbd:   movabs $0x775020420928,%rdi         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x0000775055229bc7:   mov    0xf4(%rdi),%ebx
  0x0000775055229bcd:   add    $0x2,%ebx
  0x0000775055229bd0:   mov    %ebx,0xf4(%rdi)
  0x0000775055229bd6:   and    $0x1ffffe,%ebx
  0x0000775055229bdc:   cmp    $0x0,%ebx
  0x0000775055229bdf:   je     0x0000775055229ec2
  0x0000775055229be5:   mov    0x2c(%rsi),%esi              ; implicit exception: dispatches to 0x0000775055229ee3
  0x0000775055229be8:   shl    $0x3,%rsi                    ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@1 (line 862)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229bec:   cmp    $0x0,%rsi
  0x0000775055229bf0:   movabs $0x775020420928,%rdi         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x0000775055229bfa:   movabs $0x138,%rbx
  0x0000775055229c04:   je     0x0000775055229c14
  0x0000775055229c0a:   movabs $0x148,%rbx
  0x0000775055229c14:   mov    (%rdi,%rbx,1),%rax
  0x0000775055229c18:   lea    0x1(%rax),%rax
  0x0000775055229c1c:   mov    %rax,(%rdi,%rbx,1)
  0x0000775055229c20:   je     0x0000775055229c3e           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@6 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229c26:   movabs $0x775020420928,%rdi         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x0000775055229c30:   incl   0x158(%rdi)
  0x0000775055229c36:   mov    %rsi,%rdi
  0x0000775055229c39:   jmp    0x0000775055229c67           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@10 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229c3e:   movabs $0x62ae75aa0,%rsi            ;   {oop(a 'java/lang/Class'{0x000000062ae75aa0} = 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229c48:   mov    %rsi,%rdi
  0x0000775055229c4b:   movabs $0x775020420928,%rbx         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x0000775055229c55:   addq   $0x1,0x170(%rbx)
  0x0000775055229c5d:   xchg   %ax,%ax
  0x0000775055229c5f:   call   0x000077505c788080           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*invokevirtual initClassName {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@14 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {optimized virtual_call}
  0x0000775055229c64:   mov    %rax,%rdi                    ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@17 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229c67:   mov    0x70(%rsp),%rax
  0x0000775055229c6c:   jmp    0x0000775055229cf1           ;*invokestatic sanitizeStackTrace {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@6 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229c71:   mov    %rsi,%rdi
  0x0000775055229c74:   movabs $0x7750205138e0,%rbx         ;   {metadata(method data for {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x0000775055229c7e:   addq   $0x1,0x148(%rbx)
  0x0000775055229c86:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055229c90:   mov    0xf4(%rdi),%ebx
  0x0000775055229c96:   add    $0x2,%ebx
  0x0000775055229c99:   mov    %ebx,0xf4(%rdi)
  0x0000775055229c9f:   and    $0x1ffffe,%ebx
  0x0000775055229ca5:   cmp    $0x0,%ebx
  0x0000775055229ca8:   je     0x0000775055229ee8
  0x0000775055229cae:   movsbl 0x38(%r15),%edi
  0x0000775055229cb3:   cmp    $0x0,%edi
  0x0000775055229cb6:   jne    0x0000775055229f09
  0x0000775055229cbc:   mov    %rdx,%r10
  0x0000775055229cbf:   shr    $0x3,%r10
  0x0000775055229cc3:   mov    %r10d,0xc(%rsi)
  0x0000775055229cc7:   mov    %rsi,%rdi
  0x0000775055229cca:   xor    %rdx,%rdi
  0x0000775055229ccd:   shr    $0x16,%rdi
  0x0000775055229cd1:   cmp    $0x0,%rdi
  0x0000775055229cd5:   jne    0x0000775055229f28           ;*putfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::<init>@12 (line 14)
  0x0000775055229cdb:   add    $0x90,%rsp
  0x0000775055229ce2:   pop    %rbp
  0x0000775055229ce3:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055229cea:   ja     0x0000775055229f40
  0x0000775055229cf0:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::<init>@15 (line 14)
  0x0000775055229cf1:   movabs $0x775020512f50,%rbx         ;   {metadata(method data for {method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229cfb:   addq   $0x1,0x170(%rbx)
  0x0000775055229d03:   mov    %rax,%rsi
  0x0000775055229d06:   mov    %rdi,%rdx                    ;*invokestatic sanitizeStackTrace {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@6 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229d09:   nopw   0x0(%rax,%rax,1)
  0x0000775055229d0f:   call   0x000077505c788680           ; ImmutableOopMap {[128]=Oop [120]=Oop }
                                                            ;*invokestatic sanitizeStackTrace {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@6 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {static_call}
  0x0000775055229d14:   mov    0x80(%rsp),%rdx
  0x0000775055229d1c:   mov    0x78(%rsp),%rsi
  0x0000775055229d21:   cmp    $0x0,%rax
  0x0000775055229d25:   jne    0x0000775055229d3d
  0x0000775055229d27:   movabs $0x775020512820,%rbx         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229d31:   orb    $0x1,0x161(%rbx)
  0x0000775055229d38:   jmp    0x0000775055229e10
  0x0000775055229d3d:   movabs $0x8000594a8,%rcx            ;   {metadata('java/lang/NullPointerException')}
  0x0000775055229d47:   mov    0x8(%rax),%ebx
  0x0000775055229d4a:   movabs $0x800000000,%r10
  0x0000775055229d54:   add    %r10,%rbx
  0x0000775055229d57:   cmp    0x50(%rbx),%rcx
  0x0000775055229d5b:   jne    0x0000775055229df4
  0x0000775055229d61:   movabs $0x775020512820,%rbx         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229d6b:   mov    0x8(%rax),%ecx
  0x0000775055229d6e:   movabs $0x800000000,%r10
  0x0000775055229d78:   add    %r10,%rcx
  0x0000775055229d7b:   cmp    0x178(%rbx),%rcx
  0x0000775055229d82:   jne    0x0000775055229d91
  0x0000775055229d84:   addq   $0x1,0x180(%rbx)
  0x0000775055229d8c:   jmp    0x0000775055229e10
  0x0000775055229d91:   cmp    0x188(%rbx),%rcx
  0x0000775055229d98:   jne    0x0000775055229da7
  0x0000775055229d9a:   addq   $0x1,0x190(%rbx)
  0x0000775055229da2:   jmp    0x0000775055229e10
  0x0000775055229da7:   cmpq   $0x0,0x178(%rbx)
  0x0000775055229db2:   jne    0x0000775055229dcb
  0x0000775055229db4:   mov    %rcx,0x178(%rbx)
  0x0000775055229dbb:   movq   $0x1,0x180(%rbx)
  0x0000775055229dc6:   jmp    0x0000775055229e10
  0x0000775055229dcb:   cmpq   $0x0,0x188(%rbx)
  0x0000775055229dd6:   jne    0x0000775055229def
  0x0000775055229dd8:   mov    %rcx,0x188(%rbx)
  0x0000775055229ddf:   movq   $0x1,0x190(%rbx)
  0x0000775055229dea:   jmp    0x0000775055229e10
  0x0000775055229def:   jmp    0x0000775055229e10
  0x0000775055229df4:   movabs $0x775020512820,%rbx         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229dfe:   subq   $0x1,0x168(%rbx)
  0x0000775055229e06:   jmp    0x0000775055229f56
  0x0000775055229e0b:   jmp    0x0000775055229e10           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@14 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
  0x0000775055229e10:   cmp    (%rax),%rax                  ; implicit exception: dispatches to 0x0000775055229f5f
  0x0000775055229e13:   jmp    0x0000775055229f83
  0x0000775055229e18:   movabs $0x775020500b50,%r10         ;   {metadata({method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x0000775055229e22:   mov    %r10,0x8(%rsp)
  0x0000775055229e27:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055229e2f:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [120]=Oop rdx=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.GuardInlined::<init>@-1
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055229e34:   jmp    0x0000775055229a04
  0x0000775055229e39:   movabs $0x77502050df90,%r10         ;   {metadata({method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229e43:   mov    %r10,0x8(%rsp)
  0x0000775055229e48:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055229e50:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [120]=Oop rdx=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@-1 (line 130)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055229e55:   jmp    0x0000775055229a3e
  0x0000775055229e5a:   movabs $0x77502050e100,%r10         ;   {metadata({method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229e64:   mov    %r10,0x8(%rsp)
  0x0000775055229e69:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055229e71:   call   0x000077505c82e680           ; ImmutableOopMap {[128]=Oop [120]=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@-1 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055229e76:   jmp    0x0000775055229ab2
  0x0000775055229e7b:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x0000775055229e85:   mov    $0xa050f00,%eax
  0x0000775055229e8a:   call   0x000077505c82d600           ; ImmutableOopMap {[120]=Oop [128]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@0 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x0000775055229e8f:   jmp    0x0000775055229ab8
  0x0000775055229e94:   mov    %rdx,%rdx
  0x0000775055229e97:   call   0x000077505c829e80           ; ImmutableOopMap {[128]=Oop [120]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@0 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055229e9c:   jmp    0x0000775055229b14
  0x0000775055229ea1:   movabs $0x77502050f0e0,%r10         ;   {metadata({method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055229eab:   mov    %r10,0x8(%rsp)
  0x0000775055229eb0:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055229eb8:   call   0x000077505c82e680           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@-1 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055229ebd:   jmp    0x0000775055229b9e
  0x0000775055229ec2:   movabs $0x775020016bd8,%r10         ;   {metadata({method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x0000775055229ecc:   mov    %r10,0x8(%rsp)
  0x0000775055229ed1:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055229ed9:   call   0x000077505c82e680           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Class::getName@-1 (line 862)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055229ede:   jmp    0x0000775055229be5
  0x0000775055229ee3:   call   0x000077505c8295a0           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*getfield name {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.Class::getName@1 (line 862)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055229ee8:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055229ef2:   mov    %r10,0x8(%rsp)
  0x0000775055229ef7:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055229eff:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop [128]=Oop rsi=Oop [120]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@7 (line 14)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055229f04:   jmp    0x0000775055229cae
  0x0000775055229f09:   mov    0xc(%rsi),%edi
  0x0000775055229f0c:   shl    $0x3,%rdi
  0x0000775055229f10:   cmp    $0x0,%rdi
  0x0000775055229f14:   je     0x0000775055229cbc
  0x0000775055229f1a:   mov    %rdi,(%rsp)
  0x0000775055229f1e:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055229f23:   jmp    0x0000775055229cbc
  0x0000775055229f28:   cmp    $0x0,%rdx
  0x0000775055229f2c:   je     0x0000775055229cdb
  0x0000775055229f32:   mov    %rsi,(%rsp)
  0x0000775055229f36:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055229f3b:   jmp    0x0000775055229cdb
  0x0000775055229f40:   movabs $0x775055229ce3,%r10         ;   {internal_word}
  0x0000775055229f4a:   mov    %r10,0x360(%r15)
  0x0000775055229f51:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x0000775055229f56:   mov    %rax,(%rsp)
  0x0000775055229f5a:   call   0x000077505c82b9a0           ; ImmutableOopMap {rsi=Oop [120]=Oop rdx=Oop [128]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@14 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000775055229f5f:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [120]=Oop rdx=Oop [128]=Oop rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@17 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000775055229f64:   nop
  0x0000775055229f65:   nop
  0x0000775055229f66:   mov    0x3d8(%r15),%rax
  0x0000775055229f6d:   movq   $0x0,0x3d8(%r15)
  0x0000775055229f78:   movq   $0x0,0x3e0(%r15)
  0x0000775055229f83:   add    $0x90,%rsp
  0x0000775055229f8a:   pop    %rbp
  0x0000775055229f8b:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055229f90:   hlt
  0x0000775055229f91:   hlt
  0x0000775055229f92:   hlt
  0x0000775055229f93:   hlt
  0x0000775055229f94:   hlt
  0x0000775055229f95:   hlt
  0x0000775055229f96:   hlt
  0x0000775055229f97:   hlt
  0x0000775055229f98:   hlt
  0x0000775055229f99:   hlt
  0x0000775055229f9a:   hlt
  0x0000775055229f9b:   hlt
  0x0000775055229f9c:   hlt
  0x0000775055229f9d:   hlt
  0x0000775055229f9e:   hlt
  0x0000775055229f9f:   hlt
[Stub Code]
  0x0000775055229fa0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055229fa5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055229faf:   jmp    0x0000775055229faf           ;   {runtime_call}
  0x0000775055229fb4:   nop
  0x0000775055229fb5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055229fbf:   jmp    0x0000775055229fbf           ;   {runtime_call}
  0x0000775055229fc4:   nop
  0x0000775055229fc5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055229fcf:   jmp    0x0000775055229fcf           ;   {runtime_call}
  0x0000775055229fd4:   nop
  0x0000775055229fd5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x0000775055229fdf:   jmp    0x0000775055229fdf           ;   {runtime_call}
[Exception Handler]
  0x0000775055229fe4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055229fe9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055229ff3:   and    $0xfffffffffffffff0,%rsp
  0x0000775055229ff7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x0000775055229ffc:   hlt
[Deopt Handler Code]
  0x0000775055229ffd:   movabs $0x775055229ffd,%r10         ;   {section_word}
  0x000077505522a007:   push   %r10
  0x000077505522a009:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522a00e:   hlt
  0x000077505522a00f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     401  112   !   3       de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48 (49 bytes)
 total in heap  [0x000077505522a390,0x000077505522af20] = 2960
 relocation     [0x000077505522a4f0,0x000077505522a590] = 160
 main code      [0x000077505522a5a0,0x000077505522ab00] = 1376
 stub code      [0x000077505522ab00,0x000077505522ab60] = 96
 oops           [0x000077505522ab60,0x000077505522ab78] = 24
 metadata       [0x000077505522ab78,0x000077505522ab98] = 32
 scopes data    [0x000077505522ab98,0x000077505522ac88] = 240
 scopes pcs     [0x000077505522ac88,0x000077505522ae58] = 464
 dependencies   [0x000077505522ae58,0x000077505522ae60] = 8
 handler table  [0x000077505522ae60,0x000077505522af08] = 168
 nul chk table  [0x000077505522af08,0x000077505522af20] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined'
  #           [sp+0x70]  (sp of caller)
  0x000077505522a5a0:   mov    0x8(%rsi),%r10d
  0x000077505522a5a4:   movabs $0x800000000,%r11
  0x000077505522a5ae:   add    %r11,%r10
  0x000077505522a5b1:   cmp    %rax,%r10
  0x000077505522a5b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522a5ba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505522a5c0:   mov    %eax,-0x14000(%rsp)
  0x000077505522a5c7:   push   %rbp
  0x000077505522a5c8:   sub    $0x60,%rsp
  0x000077505522a5cc:   movabs $0x775020513a80,%rdi         ;   {metadata(method data for {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522a5d6:   mov    0xf4(%rdi),%ebx
  0x000077505522a5dc:   add    $0x2,%ebx
  0x000077505522a5df:   mov    %ebx,0xf4(%rdi)
  0x000077505522a5e5:   and    $0x7fe,%ebx
  0x000077505522a5eb:   cmp    $0x0,%ebx
  0x000077505522a5ee:   je     0x000077505522a9cf           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@0 (line 17)
  0x000077505522a5f4:   mov    0xc(%rsi),%esi
  0x000077505522a5f7:   shl    $0x3,%rsi                    ;*getfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@8 (line 18)
  0x000077505522a5fb:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x000077505522a9f0
                                                            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505522a5fe:   mov    %rsi,%rdi
  0x000077505522a601:   movabs $0x775020513a80,%rbx         ;   {metadata(method data for {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522a60b:   addq   $0x1,0x138(%rbx)
  0x000077505522a613:   movabs $0x775020513cb0,%rdi         ;   {metadata(method data for {method} {0x0000775020501588} 'methodToBeGuarded' '(Ljava/lang/String;)Ljava/lang/String;' in 'de/maschmi/blog/Adapter')}
  0x000077505522a61d:   mov    0xf4(%rdi),%ebx
  0x000077505522a623:   add    $0x2,%ebx
  0x000077505522a626:   mov    %ebx,0xf4(%rdi)
  0x000077505522a62c:   and    $0x1ffffe,%ebx
  0x000077505522a632:   cmp    $0x0,%ebx
  0x000077505522a635:   je     0x000077505522a9f5
  0x000077505522a63b:   movabs $0x775020513cb0,%rdi         ;   {metadata(method data for {method} {0x0000775020501588} 'methodToBeGuarded' '(Ljava/lang/String;)Ljava/lang/String;' in 'de/maschmi/blog/Adapter')}
  0x000077505522a645:   addq   $0x1,0x138(%rdi)
  0x000077505522a64d:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522a657:   mov    0xf4(%rdi),%ebx
  0x000077505522a65d:   add    $0x2,%ebx
  0x000077505522a660:   mov    %ebx,0xf4(%rdi)
  0x000077505522a666:   and    $0x1ffffe,%ebx
  0x000077505522a66c:   cmp    $0x0,%ebx
  0x000077505522a66f:   je     0x000077505522aa16
  0x000077505522a675:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522a67f:   incl   0x138(%rdi)                  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@3
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505522a685:   mov    0xc(%rsi),%esi
  0x000077505522a688:   shl    $0x3,%rsi                    ;*getfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@7 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505522a68c:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x000077505522aa37
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505522a68f:   mov    %rsi,%rdi
  0x000077505522a692:   movabs $0x775020513cb0,%rbx         ;   {metadata(method data for {method} {0x0000775020501588} 'methodToBeGuarded' '(Ljava/lang/String;)Ljava/lang/String;' in 'de/maschmi/blog/Adapter')}
  0x000077505522a69c:   mov    0x8(%rdi),%edi
  0x000077505522a69f:   movabs $0x800000000,%r10
  0x000077505522a6a9:   add    %r10,%rdi
  0x000077505522a6ac:   cmp    0x158(%rbx),%rdi
  0x000077505522a6b3:   jne    0x000077505522a6c2
  0x000077505522a6b5:   addq   $0x1,0x160(%rbx)
  0x000077505522a6bd:   jmp    0x000077505522a728
  0x000077505522a6c2:   cmp    0x168(%rbx),%rdi
  0x000077505522a6c9:   jne    0x000077505522a6d8
  0x000077505522a6cb:   addq   $0x1,0x170(%rbx)
  0x000077505522a6d3:   jmp    0x000077505522a728
  0x000077505522a6d8:   cmpq   $0x0,0x158(%rbx)
  0x000077505522a6e3:   jne    0x000077505522a6fc
  0x000077505522a6e5:   mov    %rdi,0x158(%rbx)
  0x000077505522a6ec:   movq   $0x1,0x160(%rbx)
  0x000077505522a6f7:   jmp    0x000077505522a728
  0x000077505522a6fc:   cmpq   $0x0,0x168(%rbx)
  0x000077505522a707:   jne    0x000077505522a720
  0x000077505522a709:   mov    %rdi,0x168(%rbx)
  0x000077505522a710:   movq   $0x1,0x170(%rbx)
  0x000077505522a71b:   jmp    0x000077505522a728
  0x000077505522a720:   addq   $0x1,0x148(%rbx)
  0x000077505522a728:   nopl   0x0(%rax,%rax,1)
  0x000077505522a72d:   movabs $0xffffffffffffffff,%rax
  0x000077505522a737:   call   0x000077505c788380           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {virtual_call}
  0x000077505522a73c:   cmp    $0x0,%eax
  0x000077505522a73f:   movabs $0x775020513cb0,%rdx         ;   {metadata(method data for {method} {0x0000775020501588} 'methodToBeGuarded' '(Ljava/lang/String;)Ljava/lang/String;' in 'de/maschmi/blog/Adapter')}
  0x000077505522a749:   movabs $0x190,%rsi
  0x000077505522a753:   jne    0x000077505522a763
  0x000077505522a759:   movabs $0x180,%rsi
  0x000077505522a763:   mov    (%rdx,%rsi,1),%rdi
  0x000077505522a767:   lea    0x1(%rdi),%rdi
  0x000077505522a76b:   mov    %rdi,(%rdx,%rsi,1)
  0x000077505522a76f:   jne    0x000077505522a7ce           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@13 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505522a775:   movabs $0x775020513a80,%rdx         ;   {metadata(method data for {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522a77f:   addq   $0x1,0x170(%rdx)
  0x000077505522a787:   movabs $0x775020513ea8,%rdx         ;   {metadata(method data for {method} {0x0000775020511630} 'constructor-impl' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'kotlin/Result')}
  0x000077505522a791:   mov    0xf4(%rdx),%esi
  0x000077505522a797:   add    $0x2,%esi
  0x000077505522a79a:   mov    %esi,0xf4(%rdx)
  0x000077505522a7a0:   and    $0x1ffffe,%esi
  0x000077505522a7a6:   cmp    $0x0,%esi
  0x000077505522a7a9:   je     0x000077505522aa3c
  0x000077505522a7af:   movabs $0x775020513a80,%rdx         ;   {metadata(method data for {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522a7b9:   incl   0x180(%rdx)
  0x000077505522a7bf:   movabs $0x62ae78df0,%rsi            ;   {oop("FunctionOne"{0x000000062ae78df0})}
  0x000077505522a7c9:   jmp    0x000077505522a9b9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@27 (line 41)
  0x000077505522a7ce:   xchg   %ax,%ax
  0x000077505522a7d0:   jmp    0x000077505522aa6c           ;   {no_reloc}
  0x000077505522a7d5:   add    %al,(%rax)
  0x000077505522a7d7:   add    %al,(%rax)
  0x000077505522a7d9:   add    %cl,-0x75(%rcx)
  0x000077505522a7dc:   xchg   %ecx,(%rax)
  0x000077505522a7de:   add    %eax,(%rax)
  0x000077505522a7e0:   add    %cl,-0x73(%rax)
  0x000077505522a7e3:   js     0x000077505522a80d
  0x000077505522a7e5:   cmp    0x118(%r15),%rdi
  0x000077505522a7ec:   ja     0x000077505522aa76
  0x000077505522a7f2:   mov    %rdi,0x108(%r15)
  0x000077505522a7f9:   movq   $0x1,(%rax)
  0x000077505522a800:   mov    %rdx,%rcx
  0x000077505522a803:   movabs $0x800000000,%r10
  0x000077505522a80d:   sub    %r10,%rcx
  0x000077505522a810:   mov    %ecx,0x8(%rax)
  0x000077505522a813:   xor    %rcx,%rcx
  0x000077505522a816:   mov    %ecx,0xc(%rax)
  0x000077505522a819:   xor    %rcx,%rcx
  0x000077505522a81c:   mov    %rcx,0x10(%rax)
  0x000077505522a820:   mov    %rcx,0x18(%rax)
  0x000077505522a824:   mov    %rcx,0x20(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@16 (line 11)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505522a828:   mov    %rax,%rdx
  0x000077505522a82b:   movabs $0x775020513cb0,%rsi         ;   {metadata(method data for {method} {0x0000775020501588} 'methodToBeGuarded' '(Ljava/lang/String;)Ljava/lang/String;' in 'de/maschmi/blog/Adapter')}
  0x000077505522a835:   addq   $0x1,0x1a0(%rsi)
  0x000077505522a83d:   movabs $0x62acf6018,%rdx            ;   {oop("Error"{0x000000062acf6018})}
  0x000077505522a847:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@22 (line 11)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505522a84a:   mov    %rax,0x48(%rsp)
  0x000077505522a84f:   call   0x000077505c788080           ; ImmutableOopMap {[72]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@22 (line 11)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {optimized virtual_call}
  0x000077505522a854:   mov    0x48(%rsp),%rax              ; ImmutableOopMap {rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.Adapter::methodToBeGuarded@25 (line 11)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505522a859:   movabs $0x77505522a859,%rdx         ;   {section_word}
  0x000077505522a863:   call   0x000077505c82ad80           ;   {runtime_call handle_exception_nofpu Runtime1 stub}
  0x000077505522a868:   nop                                 ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@25 (line 11)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505522a869:   mov    0x3d8(%r15),%rax
  0x000077505522a870:   xor    %r10,%r10
  0x000077505522a873:   mov    %r10,0x3d8(%r15)
  0x000077505522a87a:   xor    %r10,%r10
  0x000077505522a87d:   mov    %r10,0x3e0(%r15)
  0x000077505522a884:   cmp    $0x0,%rax
  0x000077505522a888:   jne    0x000077505522a8a0
  0x000077505522a88a:   movabs $0x775020513a80,%rbx         ;   {metadata(method data for {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522a894:   orb    $0x1,0x191(%rbx)
  0x000077505522a89b:   jmp    0x000077505522a973
  0x000077505522a8a0:   movabs $0x800043268,%rsi            ;   {metadata('java/lang/Throwable')}
  0x000077505522a8aa:   mov    0x8(%rax),%ebx
  0x000077505522a8ad:   movabs $0x800000000,%r10
  0x000077505522a8b7:   add    %r10,%rbx
  0x000077505522a8ba:   cmp    0x38(%rbx),%rsi
  0x000077505522a8be:   jne    0x000077505522a957
  0x000077505522a8c4:   movabs $0x775020513a80,%rbx         ;   {metadata(method data for {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522a8ce:   mov    0x8(%rax),%esi
  0x000077505522a8d1:   movabs $0x800000000,%r10
  0x000077505522a8db:   add    %r10,%rsi
  0x000077505522a8de:   cmp    0x1a8(%rbx),%rsi
  0x000077505522a8e5:   jne    0x000077505522a8f4
  0x000077505522a8e7:   addq   $0x1,0x1b0(%rbx)
  0x000077505522a8ef:   jmp    0x000077505522a973
  0x000077505522a8f4:   cmp    0x1b8(%rbx),%rsi
  0x000077505522a8fb:   jne    0x000077505522a90a
  0x000077505522a8fd:   addq   $0x1,0x1c0(%rbx)
  0x000077505522a905:   jmp    0x000077505522a973
  0x000077505522a90a:   cmpq   $0x0,0x1a8(%rbx)
  0x000077505522a915:   jne    0x000077505522a92e
  0x000077505522a917:   mov    %rsi,0x1a8(%rbx)
  0x000077505522a91e:   movq   $0x1,0x1b0(%rbx)
  0x000077505522a929:   jmp    0x000077505522a973
  0x000077505522a92e:   cmpq   $0x0,0x1b8(%rbx)
  0x000077505522a939:   jne    0x000077505522a952
  0x000077505522a93b:   mov    %rsi,0x1b8(%rbx)
  0x000077505522a942:   movq   $0x1,0x1c0(%rbx)
  0x000077505522a94d:   jmp    0x000077505522a973
  0x000077505522a952:   jmp    0x000077505522a973
  0x000077505522a957:   movabs $0x775020513a80,%rbx         ;   {metadata(method data for {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522a961:   subq   $0x1,0x198(%rbx)
  0x000077505522a969:   jmp    0x000077505522aa83
  0x000077505522a96e:   jmp    0x000077505522a973
  0x000077505522a973:   mov    %rax,%rsi                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@38 (line 43)
  0x000077505522a976:   nop
  0x000077505522a977:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic createFailure {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@41 (line 43)
                                                            ;   {static_call}
  0x000077505522a97c:   movabs $0x775020513a80,%rsi         ;   {metadata(method data for {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522a986:   addq   $0x1,0x1e0(%rsi)
  0x000077505522a98e:   movabs $0x775020513ea8,%rsi         ;   {metadata(method data for {method} {0x0000775020511630} 'constructor-impl' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'kotlin/Result')}
  0x000077505522a998:   mov    0xf4(%rsi),%edi
  0x000077505522a99e:   add    $0x2,%edi
  0x000077505522a9a1:   mov    %edi,0xf4(%rsi)
  0x000077505522a9a7:   and    $0x1ffffe,%edi
  0x000077505522a9ad:   cmp    $0x0,%edi
  0x000077505522a9b0:   je     0x000077505522aa8c
  0x000077505522a9b6:   mov    %rax,%rsi                    ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@48 (line 17)
  0x000077505522a9b9:   mov    %rsi,%rax
  0x000077505522a9bc:   add    $0x60,%rsp
  0x000077505522a9c0:   pop    %rbp
  0x000077505522a9c1:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522a9c8:   ja     0x000077505522aaad
  0x000077505522a9ce:   ret
  0x000077505522a9cf:   movabs $0x775020500c78,%r10         ;   {metadata({method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522a9d9:   mov    %r10,0x8(%rsp)
  0x000077505522a9de:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522a9e6:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@-1 (line 17)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522a9eb:   jmp    0x000077505522a5f4
  0x000077505522a9f0:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522a9f5:   movabs $0x775020501588,%r10         ;   {metadata({method} {0x0000775020501588} 'methodToBeGuarded' '(Ljava/lang/String;)Ljava/lang/String;' in 'de/maschmi/blog/Adapter')}
  0x000077505522a9ff:   mov    %r10,0x8(%rsp)
  0x000077505522aa04:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522aa0c:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@-1
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522aa11:   jmp    0x000077505522a63b
  0x000077505522aa16:   movabs $0x77502050df90,%r10         ;   {metadata({method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522aa20:   mov    %r10,0x8(%rsp)
  0x000077505522aa25:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522aa2d:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@-1 (line 130)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@3
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522aa32:   jmp    0x000077505522a675
  0x000077505522aa37:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522aa3c:   movabs $0x775020511630,%r10         ;   {metadata({method} {0x0000775020511630} 'constructor-impl' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'kotlin/Result')}
  0x000077505522aa46:   mov    %r10,0x8(%rsp)
  0x000077505522aa4b:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522aa53:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - kotlin.Result::constructor-impl@-1
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@24 (line 41)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522aa58:   jmp    0x000077505522a7af
  0x000077505522aa5d:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505522aa67:   mov    $0xa050f00,%eax
  0x000077505522aa6c:   call   0x000077505c82d600           ; ImmutableOopMap {}
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.Adapter::methodToBeGuarded@16 (line 11)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505522aa71:   jmp    0x000077505522a7d0
  0x000077505522aa76:   mov    %rdx,%rdx
  0x000077505522aa79:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@16 (line 11)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505522aa7e:   jmp    0x000077505522a828
  0x000077505522aa83:   mov    %rax,(%rsp)
  0x000077505522aa87:   call   0x000077505c82b9a0           ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@38 (line 43)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000077505522aa8c:   movabs $0x775020511630,%r10         ;   {metadata({method} {0x0000775020511630} 'constructor-impl' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'kotlin/Result')}
  0x000077505522aa96:   mov    %r10,0x8(%rsp)
  0x000077505522aa9b:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522aaa3:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.Result::constructor-impl@-1
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@44 (line 43)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522aaa8:   jmp    0x000077505522a9b6
  0x000077505522aaad:   movabs $0x77505522a9c1,%r10         ;   {internal_word}
  0x000077505522aab7:   mov    %r10,0x360(%r15)
  0x000077505522aabe:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522aac3:   nop
  0x000077505522aac4:   nop
  0x000077505522aac5:   mov    0x3d8(%r15),%rax
  0x000077505522aacc:   movq   $0x0,0x3d8(%r15)
  0x000077505522aad7:   movq   $0x0,0x3e0(%r15)
  0x000077505522aae2:   add    $0x60,%rsp
  0x000077505522aae6:   pop    %rbp
  0x000077505522aae7:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522aaec:   hlt
  0x000077505522aaed:   hlt
  0x000077505522aaee:   hlt
  0x000077505522aaef:   hlt
  0x000077505522aaf0:   hlt
  0x000077505522aaf1:   hlt
  0x000077505522aaf2:   hlt
  0x000077505522aaf3:   hlt
  0x000077505522aaf4:   hlt
  0x000077505522aaf5:   hlt
  0x000077505522aaf6:   hlt
  0x000077505522aaf7:   hlt
  0x000077505522aaf8:   hlt
  0x000077505522aaf9:   hlt
  0x000077505522aafa:   hlt
  0x000077505522aafb:   hlt
  0x000077505522aafc:   hlt
  0x000077505522aafd:   hlt
  0x000077505522aafe:   hlt
  0x000077505522aaff:   hlt
[Stub Code]
  0x000077505522ab00:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522ab05:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522ab0f:   jmp    0x000077505522ab0f           ;   {runtime_call}
  0x000077505522ab14:   nop
  0x000077505522ab15:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522ab1f:   jmp    0x000077505522ab1f           ;   {runtime_call}
  0x000077505522ab24:   nop
  0x000077505522ab25:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522ab2f:   jmp    0x000077505522ab2f           ;   {runtime_call}
[Exception Handler]
  0x000077505522ab34:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522ab39:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522ab43:   and    $0xfffffffffffffff0,%rsp
  0x000077505522ab47:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522ab4c:   hlt
[Deopt Handler Code]
  0x000077505522ab4d:   movabs $0x77505522ab4d,%r10         ;   {section_word}
  0x000077505522ab57:   push   %r10
  0x000077505522ab59:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522ab5e:   hlt
  0x000077505522ab5f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     406  113       3       kotlin.random.Random::nextBoolean (14 bytes)
 total in heap  [0x000077505522af90,0x000077505522b440] = 1200
 relocation     [0x000077505522b0f0,0x000077505522b130] = 64
 main code      [0x000077505522b140,0x000077505522b320] = 480
 stub code      [0x000077505522b320,0x000077505522b360] = 64
 oops           [0x000077505522b360,0x000077505522b368] = 8
 metadata       [0x000077505522b368,0x000077505522b370] = 8
 scopes data    [0x000077505522b370,0x000077505522b3a8] = 56
 scopes pcs     [0x000077505522b3a8,0x000077505522b438] = 144
 dependencies   [0x000077505522b438,0x000077505522b440] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750205048b0} 'nextBoolean' '()Z' in 'kotlin/random/Random'
  #           [sp+0x40]  (sp of caller)
  0x000077505522b140:   mov    0x8(%rsi),%r10d
  0x000077505522b144:   movabs $0x800000000,%r11
  0x000077505522b14e:   add    %r11,%r10
  0x000077505522b151:   cmp    %rax,%r10
  0x000077505522b154:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522b15a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505522b160:   mov    %eax,-0x14000(%rsp)
  0x000077505522b167:   push   %rbp
  0x000077505522b168:   sub    $0x30,%rsp
  0x000077505522b16c:   movabs $0x775020514000,%rdx         ;   {metadata(method data for {method} {0x00007750205048b0} 'nextBoolean' '()Z' in 'kotlin/random/Random')}
  0x000077505522b176:   mov    0xf4(%rdx),%edi
  0x000077505522b17c:   add    $0x2,%edi
  0x000077505522b17f:   mov    %edi,0xf4(%rdx)
  0x000077505522b185:   and    $0x7fe,%edi
  0x000077505522b18b:   cmp    $0x0,%edi
  0x000077505522b18e:   je     0x000077505522b2b2           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@0 (line 163)
  0x000077505522b194:   mov    %rsi,%rdx
  0x000077505522b197:   movabs $0x775020514000,%rdi         ;   {metadata(method data for {method} {0x00007750205048b0} 'nextBoolean' '()Z' in 'kotlin/random/Random')}
  0x000077505522b1a1:   mov    0x8(%rdx),%edx
  0x000077505522b1a4:   movabs $0x800000000,%r10
  0x000077505522b1ae:   add    %r10,%rdx
  0x000077505522b1b1:   cmp    0x148(%rdi),%rdx
  0x000077505522b1b8:   jne    0x000077505522b1c7
  0x000077505522b1ba:   addq   $0x1,0x150(%rdi)
  0x000077505522b1c2:   jmp    0x000077505522b22d
  0x000077505522b1c7:   cmp    0x158(%rdi),%rdx
  0x000077505522b1ce:   jne    0x000077505522b1dd
  0x000077505522b1d0:   addq   $0x1,0x160(%rdi)
  0x000077505522b1d8:   jmp    0x000077505522b22d
  0x000077505522b1dd:   cmpq   $0x0,0x148(%rdi)
  0x000077505522b1e8:   jne    0x000077505522b201
  0x000077505522b1ea:   mov    %rdx,0x148(%rdi)
  0x000077505522b1f1:   movq   $0x1,0x150(%rdi)
  0x000077505522b1fc:   jmp    0x000077505522b22d
  0x000077505522b201:   cmpq   $0x0,0x158(%rdi)
  0x000077505522b20c:   jne    0x000077505522b225
  0x000077505522b20e:   mov    %rdx,0x158(%rdi)
  0x000077505522b215:   movq   $0x1,0x160(%rdi)
  0x000077505522b220:   jmp    0x000077505522b22d
  0x000077505522b225:   addq   $0x1,0x138(%rdi)
  0x000077505522b22d:   mov    $0x1,%edx                    ;*invokevirtual nextBits {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505522b232:   data16 xchg %ax,%ax
  0x000077505522b235:   movabs $0xffffffffffffffff,%rax
  0x000077505522b23f:   call   0x000077505c788380           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextBits {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ;   {virtual_call}
  0x000077505522b244:   cmp    $0x0,%eax
  0x000077505522b247:   movabs $0x775020514000,%rax         ;   {metadata(method data for {method} {0x00007750205048b0} 'nextBoolean' '()Z' in 'kotlin/random/Random')}
  0x000077505522b251:   movabs $0x170,%rsi
  0x000077505522b25b:   je     0x000077505522b26b
  0x000077505522b261:   movabs $0x180,%rsi
  0x000077505522b26b:   mov    (%rax,%rsi,1),%rdi
  0x000077505522b26f:   lea    0x1(%rdi),%rdi
  0x000077505522b273:   mov    %rdi,(%rax,%rsi,1)
  0x000077505522b277:   je     0x000077505522b297           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@5 (line 163)
  0x000077505522b27d:   movabs $0x775020514000,%rax         ;   {metadata(method data for {method} {0x00007750205048b0} 'nextBoolean' '()Z' in 'kotlin/random/Random')}
  0x000077505522b287:   incl   0x190(%rax)
  0x000077505522b28d:   mov    $0x1,%eax
  0x000077505522b292:   jmp    0x000077505522b29c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@9 (line 163)
  0x000077505522b297:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@13 (line 163)
  0x000077505522b29c:   and    $0x1,%eax
  0x000077505522b29f:   add    $0x30,%rsp
  0x000077505522b2a3:   pop    %rbp
  0x000077505522b2a4:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522b2ab:   ja     0x000077505522b2d3
  0x000077505522b2b1:   ret
  0x000077505522b2b2:   movabs $0x7750205048b0,%r10         ;   {metadata({method} {0x00007750205048b0} 'nextBoolean' '()Z' in 'kotlin/random/Random')}
  0x000077505522b2bc:   mov    %r10,0x8(%rsp)
  0x000077505522b2c1:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522b2c9:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.random.Random::nextBoolean@-1 (line 163)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522b2ce:   jmp    0x000077505522b194
  0x000077505522b2d3:   movabs $0x77505522b2a4,%r10         ;   {internal_word}
  0x000077505522b2dd:   mov    %r10,0x360(%r15)
  0x000077505522b2e4:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522b2e9:   nop
  0x000077505522b2ea:   nop
  0x000077505522b2eb:   mov    0x3d8(%r15),%rax
  0x000077505522b2f2:   movq   $0x0,0x3d8(%r15)
  0x000077505522b2fd:   movq   $0x0,0x3e0(%r15)
  0x000077505522b308:   add    $0x30,%rsp
  0x000077505522b30c:   pop    %rbp
  0x000077505522b30d:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522b312:   hlt
  0x000077505522b313:   hlt
  0x000077505522b314:   hlt
  0x000077505522b315:   hlt
  0x000077505522b316:   hlt
  0x000077505522b317:   hlt
  0x000077505522b318:   hlt
  0x000077505522b319:   hlt
  0x000077505522b31a:   hlt
  0x000077505522b31b:   hlt
  0x000077505522b31c:   hlt
  0x000077505522b31d:   hlt
  0x000077505522b31e:   hlt
  0x000077505522b31f:   hlt
[Stub Code]
  0x000077505522b320:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522b325:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522b32f:   jmp    0x000077505522b32f           ;   {runtime_call}
[Exception Handler]
  0x000077505522b334:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522b339:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522b343:   and    $0xfffffffffffffff0,%rsp
  0x000077505522b347:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522b34c:   hlt
[Deopt Handler Code]
  0x000077505522b34d:   movabs $0x77505522b34d,%r10         ;   {section_word}
  0x000077505522b357:   push   %r10
  0x000077505522b359:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522b35e:   hlt
  0x000077505522b35f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     407  114       3       kotlin.random.XorWowRandom::nextBits (9 bytes)
 total in heap  [0x000077505522b490,0x000077505522b898] = 1032
 relocation     [0x000077505522b5f0,0x000077505522b630] = 64
 main code      [0x000077505522b640,0x000077505522b7a0] = 352
 stub code      [0x000077505522b7a0,0x000077505522b7e0] = 64
 oops           [0x000077505522b7e0,0x000077505522b7e8] = 8
 metadata       [0x000077505522b7e8,0x000077505522b7f8] = 16
 scopes data    [0x000077505522b7f8,0x000077505522b830] = 56
 scopes pcs     [0x000077505522b830,0x000077505522b890] = 96
 dependencies   [0x000077505522b890,0x000077505522b898] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020503508} 'nextBits' '(I)I' in 'kotlin/random/XorWowRandom'
  # this:     rsi:rsi   = 'kotlin/random/XorWowRandom'
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x000077505522b640:   mov    0x8(%rsi),%r10d
  0x000077505522b644:   movabs $0x800000000,%r11
  0x000077505522b64e:   add    %r11,%r10
  0x000077505522b651:   cmp    %rax,%r10
  0x000077505522b654:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522b65a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505522b660:   mov    %eax,-0x14000(%rsp)
  0x000077505522b667:   push   %rbp
  0x000077505522b668:   sub    $0x50,%rsp
  0x000077505522b66c:   movabs $0x7750205141e8,%rdi         ;   {metadata(method data for {method} {0x0000775020503508} 'nextBits' '(I)I' in 'kotlin/random/XorWowRandom')}
  0x000077505522b676:   mov    0xf4(%rdi),%ebx
  0x000077505522b67c:   add    $0x2,%ebx
  0x000077505522b67f:   mov    %ebx,0xf4(%rdi)
  0x000077505522b685:   and    $0x7fe,%ebx
  0x000077505522b68b:   cmp    $0x0,%ebx
  0x000077505522b68e:   je     0x000077505522b71b           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextBits@0 (line 54)
  0x000077505522b694:   mov    %edx,0x38(%rsp)
  0x000077505522b698:   mov    %rsi,%rdi
  0x000077505522b69b:   movabs $0x7750205141e8,%rbx         ;   {metadata(method data for {method} {0x0000775020503508} 'nextBits' '(I)I' in 'kotlin/random/XorWowRandom')}
  0x000077505522b6a5:   addq   $0x1,0x138(%rbx)
  0x000077505522b6ad:   xchg   %ax,%ax
  0x000077505522b6af:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ;   {optimized virtual_call}
  0x000077505522b6b4:   movabs $0x7750205141e8,%rcx         ;   {metadata(method data for {method} {0x0000775020503508} 'nextBits' '(I)I' in 'kotlin/random/XorWowRandom')}
  0x000077505522b6be:   addq   $0x1,0x170(%rcx)
  0x000077505522b6c6:   movabs $0x7750205143b0,%rcx         ;   {metadata(method data for {method} {0x00007750205023a8} 'takeUpperBits' '(II)I' in 'kotlin/random/RandomKt')}
  0x000077505522b6d0:   mov    0xf4(%rcx),%esi
  0x000077505522b6d6:   add    $0x2,%esi
  0x000077505522b6d9:   mov    %esi,0xf4(%rcx)
  0x000077505522b6df:   and    $0x1ffffe,%esi
  0x000077505522b6e5:   cmp    $0x0,%esi
  0x000077505522b6e8:   je     0x000077505522b73c
  0x000077505522b6ee:   mov    $0x20,%ecx
  0x000077505522b6f3:   sub    0x38(%rsp),%ecx
  0x000077505522b6f7:   shr    %cl,%eax
  0x000077505522b6f9:   mov    0x38(%rsp),%edx
  0x000077505522b6fd:   neg    %edx
  0x000077505522b6ff:   mov    %rdx,%rsi
  0x000077505522b702:   sar    $0x1f,%esi
  0x000077505522b705:   and    %rsi,%rax
  0x000077505522b708:   add    $0x50,%rsp
  0x000077505522b70c:   pop    %rbp
  0x000077505522b70d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522b714:   ja     0x000077505522b75a
  0x000077505522b71a:   ret
  0x000077505522b71b:   movabs $0x775020503508,%r10         ;   {metadata({method} {0x0000775020503508} 'nextBits' '(I)I' in 'kotlin/random/XorWowRandom')}
  0x000077505522b725:   mov    %r10,0x8(%rsp)
  0x000077505522b72a:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522b732:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.random.XorWowRandom::nextBits@-1 (line 54)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522b737:   jmp    0x000077505522b694
  0x000077505522b73c:   movabs $0x7750205023a8,%r10         ;   {metadata({method} {0x00007750205023a8} 'takeUpperBits' '(II)I' in 'kotlin/random/RandomKt')}
  0x000077505522b746:   mov    %r10,0x8(%rsp)
  0x000077505522b74b:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522b753:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - kotlin.random.RandomKt::takeUpperBits@-1 (line 376)
                                                            ; - kotlin.random.XorWowRandom::nextBits@5 (line 54)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522b758:   jmp    0x000077505522b6ee
  0x000077505522b75a:   movabs $0x77505522b70d,%r10         ;   {internal_word}
  0x000077505522b764:   mov    %r10,0x360(%r15)
  0x000077505522b76b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522b770:   nop
  0x000077505522b771:   nop
  0x000077505522b772:   mov    0x3d8(%r15),%rax
  0x000077505522b779:   movq   $0x0,0x3d8(%r15)
  0x000077505522b784:   movq   $0x0,0x3e0(%r15)
  0x000077505522b78f:   add    $0x50,%rsp
  0x000077505522b793:   pop    %rbp
  0x000077505522b794:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522b799:   hlt
  0x000077505522b79a:   hlt
  0x000077505522b79b:   hlt
  0x000077505522b79c:   hlt
  0x000077505522b79d:   hlt
  0x000077505522b79e:   hlt
  0x000077505522b79f:   hlt
[Stub Code]
  0x000077505522b7a0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522b7a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522b7af:   jmp    0x000077505522b7af           ;   {runtime_call}
[Exception Handler]
  0x000077505522b7b4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522b7b9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522b7c3:   and    $0xfffffffffffffff0,%rsp
  0x000077505522b7c7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522b7cc:   hlt
[Deopt Handler Code]
  0x000077505522b7cd:   movabs $0x77505522b7cd,%r10         ;   {section_word}
  0x000077505522b7d7:   push   %r10
  0x000077505522b7d9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522b7de:   hlt
  0x000077505522b7df:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     409  115       3       kotlin.random.RandomKt::Random (16 bytes)
 total in heap  [0x000077505522b910,0x000077505522bcf8] = 1000
 relocation     [0x000077505522ba70,0x000077505522bab0] = 64
 main code      [0x000077505522bac0,0x000077505522bc00] = 320
 stub code      [0x000077505522bc00,0x000077505522bc40] = 64
 oops           [0x000077505522bc40,0x000077505522bc48] = 8
 metadata       [0x000077505522bc48,0x000077505522bc50] = 8
 scopes data    [0x000077505522bc50,0x000077505522bc80] = 48
 scopes pcs     [0x000077505522bc80,0x000077505522bcf0] = 112
 dependencies   [0x000077505522bcf0,0x000077505522bcf8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020501f38} 'Random' '(I)Lkotlin/random/Random;' in 'kotlin/random/RandomKt'
  # parm0:    rsi       = int
  #           [sp+0x50]  (sp of caller)
  0x000077505522bac0:   mov    %eax,-0x14000(%rsp)
  0x000077505522bac7:   push   %rbp
  0x000077505522bac8:   sub    $0x40,%rsp
  0x000077505522bacc:   mov    %rsi,%rbx
  0x000077505522bacf:   movabs $0x7750205135a8,%rdx         ;   {metadata(method data for {method} {0x0000775020501f38} 'Random' '(I)Lkotlin/random/Random;' in 'kotlin/random/RandomKt')}
  0x000077505522bad9:   mov    0xf4(%rdx),%esi
  0x000077505522badf:   add    $0x2,%esi
  0x000077505522bae2:   mov    %esi,0xf4(%rdx)
  0x000077505522bae8:   and    $0x7fe,%esi
  0x000077505522baee:   cmp    $0x0,%esi
  0x000077505522baf1:   je     0x000077505522bb94
  0x000077505522baf7:   movabs $0x800001280,%rdx            ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505522bb01:   mov    0x108(%r15),%rax
  0x000077505522bb08:   lea    0x28(%rax),%rdi
  0x000077505522bb0c:   cmp    0x118(%r15),%rdi
  0x000077505522bb13:   ja     0x000077505522bbb5
  0x000077505522bb19:   mov    %rdi,0x108(%r15)
  0x000077505522bb20:   movq   $0x1,(%rax)
  0x000077505522bb27:   mov    %rdx,%rcx
  0x000077505522bb2a:   movabs $0x800000000,%r10
  0x000077505522bb34:   sub    %r10,%rcx
  0x000077505522bb37:   mov    %ecx,0x8(%rax)
  0x000077505522bb3a:   xor    %rcx,%rcx
  0x000077505522bb3d:   mov    %ecx,0xc(%rax)
  0x000077505522bb40:   xor    %rcx,%rcx
  0x000077505522bb43:   mov    %rcx,0x10(%rax)
  0x000077505522bb47:   mov    %rcx,0x18(%rax)
  0x000077505522bb4b:   mov    %rcx,0x20(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
  0x000077505522bb4f:   mov    %rax,%rdx
  0x000077505522bb52:   movabs $0x7750205135a8,%rcx         ;   {metadata(method data for {method} {0x0000775020501f38} 'Random' '(I)Lkotlin/random/Random;' in 'kotlin/random/RandomKt')}
  0x000077505522bb5c:   addq   $0x1,0x138(%rcx)
  0x000077505522bb64:   mov    %rbx,%rcx
  0x000077505522bb67:   sar    $0x1f,%ecx
  0x000077505522bb6a:   mov    %rbx,%rdx
  0x000077505522bb6d:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505522bb70:   mov    %rax,0x30(%rsp)
  0x000077505522bb75:   xchg   %ax,%ax
  0x000077505522bb77:   call   0x000077505c788080           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ;   {optimized virtual_call}
  0x000077505522bb7c:   mov    0x30(%rsp),%rax
  0x000077505522bb81:   add    $0x40,%rsp
  0x000077505522bb85:   pop    %rbp
  0x000077505522bb86:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522bb8d:   ja     0x000077505522bbbf
  0x000077505522bb93:   ret
  0x000077505522bb94:   movabs $0x775020501f38,%r10         ;   {metadata({method} {0x0000775020501f38} 'Random' '(I)Lkotlin/random/Random;' in 'kotlin/random/RandomKt')}
  0x000077505522bb9e:   mov    %r10,0x8(%rsp)
  0x000077505522bba3:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522bbab:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - kotlin.random.RandomKt::Random@-1 (line 318)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522bbb0:   jmp    0x000077505522baf7
  0x000077505522bbb5:   mov    %rdx,%rdx
  0x000077505522bbb8:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505522bbbd:   jmp    0x000077505522bb4f
  0x000077505522bbbf:   movabs $0x77505522bb86,%r10         ;   {internal_word}
  0x000077505522bbc9:   mov    %r10,0x360(%r15)
  0x000077505522bbd0:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522bbd5:   nop
  0x000077505522bbd6:   nop
  0x000077505522bbd7:   mov    0x3d8(%r15),%rax
  0x000077505522bbde:   movq   $0x0,0x3d8(%r15)
  0x000077505522bbe9:   movq   $0x0,0x3e0(%r15)
  0x000077505522bbf4:   add    $0x40,%rsp
  0x000077505522bbf8:   pop    %rbp
  0x000077505522bbf9:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522bbfe:   hlt
  0x000077505522bbff:   hlt
[Stub Code]
  0x000077505522bc00:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522bc05:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522bc0f:   jmp    0x000077505522bc0f           ;   {runtime_call}
[Exception Handler]
  0x000077505522bc14:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522bc19:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522bc23:   and    $0xfffffffffffffff0,%rsp
  0x000077505522bc27:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522bc2c:   hlt
[Deopt Handler Code]
  0x000077505522bc2d:   movabs $0x77505522bc2d,%r10         ;   {section_word}
  0x000077505522bc37:   push   %r10
  0x000077505522bc39:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522bc3e:   hlt
  0x000077505522bc3f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     414  116 %     4       kotlin.random.XorWowRandom::<init> @ 104 (131 bytes)
 total in heap  [0x000077505ccd1590,0x000077505ccd21b8] = 3112
 relocation     [0x000077505ccd16f0,0x000077505ccd1710] = 32
 main code      [0x000077505ccd1720,0x000077505ccd1ae0] = 960
 stub code      [0x000077505ccd1ae0,0x000077505ccd1af8] = 24
 oops           [0x000077505ccd1af8,0x000077505ccd1b00] = 8
 metadata       [0x000077505ccd1b00,0x000077505ccd1b18] = 24
 scopes data    [0x000077505ccd1b18,0x000077505ccd1bf0] = 216
 scopes pcs     [0x000077505ccd1bf0,0x000077505ccd21a0] = 1456
 dependencies   [0x000077505ccd21a0,0x000077505ccd21a8] = 8
 nul chk table  [0x000077505ccd21a8,0x000077505ccd21b8] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom'
  0x000077505ccd1720:   call   0x0000775073e5ef40           ;   {runtime_call}
  0x000077505ccd1725:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x000077505ccd1730:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd1737:   push   %rbp
  0x000077505ccd1738:   sub    $0x20,%rsp
  0x000077505ccd173c:   mov    0x50(%rsi),%rbx
  0x000077505ccd1740:   mov    0x18(%rsi),%r13d
  0x000077505ccd1744:   mov    0x10(%rsi),%ebp
  0x000077505ccd1747:   mov    %rsi,%rdi
  0x000077505ccd174a:   movabs $0x775073f23700,%r10
  0x000077505ccd1754:   call   *%r10
  0x000077505ccd1757:   mov    0x8(%rbx),%r11d              ; implicit exception: dispatches to 0x000077505ccd1aa1
  0x000077505ccd175b:   cmp    $0x1280,%r11d                ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd1762:   jne    0x000077505ccd1a7c
  0x000077505ccd1768:   cmp    %r13d,%ebp
  0x000077505ccd176b:   jge    0x000077505ccd1a69           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@104 (line 34)
  0x000077505ccd1771:   mov    0x10(%rbx),%r11d             ;*getfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@13 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1775:   mov    0x20(%rbx),%r9d              ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1779:   mov    0xc(%rbx),%edx               ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd177c:   mov    %r11d,0xc(%rbx)              ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1780:   mov    0x14(%rbx),%r8d              ;*getfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@21 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1784:   mov    %r8d,0x10(%rbx)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1788:   mov    0x18(%rbx),%edi              ;*getfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@29 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd178b:   mov    %edi,0x14(%rbx)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd178e:   mov    0x1c(%rbx),%ecx              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1791:   mov    %ecx,0x18(%rbx)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1794:   mov    %ebp,%esi
  0x000077505ccd1796:   inc    %esi
  0x000077505ccd1798:   mov    %ecx,%r10d
  0x000077505ccd179b:   shl    $0x4,%r10d
  0x000077505ccd179f:   mov    %edx,%r14d
  0x000077505ccd17a2:   shr    $0x2,%r14d
  0x000077505ccd17a6:   xor    %edx,%r14d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd17a9:   mov    %r9d,%eax
  0x000077505ccd17ac:   add    $0x587c5,%eax
  0x000077505ccd17b2:   mov    %eax,0x20(%rbx)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd17b5:   mov    %r14d,%edx
  0x000077505ccd17b8:   shl    %edx
  0x000077505ccd17ba:   xor    %r14d,%edx
  0x000077505ccd17bd:   xor    %ecx,%edx
  0x000077505ccd17bf:   xor    %r10d,%edx                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd17c2:   mov    %edx,0x1c(%rbx)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd17c5:   imul   $0x587c5,%ebp,%r10d
  0x000077505ccd17cc:   sub    %r10d,%r9d
  0x000077505ccd17cf:   vmovd  %r13d,%xmm2                  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@104 (line 34)
  0x000077505ccd17d4:   mov    %r9d,%r14d
  0x000077505ccd17d7:   add    %r10d,%r14d
  0x000077505ccd17da:   mov    %edx,%r10d
  0x000077505ccd17dd:   shl    $0x4,%r10d
  0x000077505ccd17e1:   vmovd  %r14d,%xmm0
  0x000077505ccd17e6:   add    $0xb0f8a,%r14d               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@69 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd17ed:   mov    %r11d,%eax
  0x000077505ccd17f0:   shr    $0x2,%eax
  0x000077505ccd17f3:   xor    %r11d,%eax                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd17f6:   mov    %eax,%r13d
  0x000077505ccd17f9:   shl    %r13d
  0x000077505ccd17fc:   xor    %eax,%r13d
  0x000077505ccd17ff:   xor    %edx,%r13d
  0x000077505ccd1802:   xor    %r10d,%r13d                  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1805:   mov    %ebp,%eax
  0x000077505ccd1807:   inc    %eax                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
  0x000077505ccd1809:   cmp    %esi,%eax
  0x000077505ccd180b:   jge    0x000077505ccd1841           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@108 (line 34)
  0x000077505ccd180d:   mov    %r14d,0x20(%rbx)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1811:   mov    %r13d,0x1c(%rbx)             ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1815:   mov    %r8d,0xc(%rbx)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1819:   mov    %edi,0x10(%rbx)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd181c:   mov    %ecx,0x14(%rbx)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd181f:   mov    %edx,0x18(%rbx)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1822:   imul   $0x587c5,%ebp,%r10d
  0x000077505ccd1829:   add    $0x587c5,%r10d               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
  0x000077505ccd1830:   mov    %r8d,%r11d
  0x000077505ccd1833:   mov    %edi,%r8d
  0x000077505ccd1836:   mov    %ecx,%edi
  0x000077505ccd1838:   mov    %edx,%ecx
  0x000077505ccd183a:   mov    %r13d,%edx
  0x000077505ccd183d:   mov    %eax,%ebp
  0x000077505ccd183f:   jmp    0x000077505ccd17d4
  0x000077505ccd1841:   vmovd  %xmm2,%r11d
  0x000077505ccd1846:   add    $0xfffffffd,%r11d
  0x000077505ccd184a:   mov    $0x80000000,%esi
  0x000077505ccd184f:   vmovd  %xmm2,%r10d
  0x000077505ccd1854:   cmp    %r11d,%r10d
  0x000077505ccd1857:   cmovl  %esi,%r11d
  0x000077505ccd185b:   cmp    %r11d,%eax
  0x000077505ccd185e:   jge    0x000077505ccd1a90
  0x000077505ccd1864:   mov    %r14d,0x20(%rbx)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1868:   mov    %r8d,0xc(%rbx)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd186c:   mov    %edi,0x10(%rbx)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd186f:   mov    %r13d,0x1c(%rbx)             ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1873:   mov    %edx,0x18(%rbx)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1876:   mov    %ecx,0x14(%rbx)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1879:   imul   $0x587c5,%eax,%ebp
  0x000077505ccd187f:   vmovd  %xmm0,%r9d
  0x000077505ccd1884:   sub    %ebp,%r9d                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
  0x000077505ccd1887:   vmovd  %r10d,%xmm1
  0x000077505ccd188c:   vmovd  %r9d,%xmm0
  0x000077505ccd1891:   jmp    0x000077505ccd19af
  0x000077505ccd1896:   data16 nopw 0x0(%rax,%rax,1)
  0x000077505ccd18a0:   mov    %r14d,0x20(%rbx)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18a4:   mov    %esi,0x1c(%rbx)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18a7:   mov    %r9d,0x18(%rbx)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18ab:   mov    %ecx,0x14(%rbx)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18ae:   mov    %r11d,0x10(%rbx)             ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18b2:   mov    %r13d,0xc(%rbx)              ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18b6:   mov    %r13d,%r8d
  0x000077505ccd18b9:   mov    %r11d,%edi
  0x000077505ccd18bc:   mov    %r9d,%edx
  0x000077505ccd18bf:   mov    %esi,%r13d                   ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@104 (line 34)
  0x000077505ccd18c2:   mov    %edx,0xc(%rbx)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18c5:   mov    %r13d,0x10(%rbx)             ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18c9:   vmovd  %xmm0,%r9d
  0x000077505ccd18ce:   add    %ebp,%r9d                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@69 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18d1:   mov    %r8d,%ebp
  0x000077505ccd18d4:   shr    $0x2,%ebp
  0x000077505ccd18d7:   xor    %r8d,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18da:   mov    %r9d,%r14d
  0x000077505ccd18dd:   add    $0x212e9e,%r14d              ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@69 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18e4:   mov    %ebp,%r11d
  0x000077505ccd18e7:   shl    %r11d
  0x000077505ccd18ea:   xor    %ebp,%r11d
  0x000077505ccd18ed:   xor    %r13d,%r11d
  0x000077505ccd18f0:   add    $0x1ba6d9,%r9d
  0x000077505ccd18f7:   mov    %r9d,0x20(%rbx)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd18fb:   mov    %ecx,%r8d
  0x000077505ccd18fe:   shr    $0x2,%r8d
  0x000077505ccd1902:   xor    %ecx,%r8d                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1905:   mov    %r13d,%r9d
  0x000077505ccd1908:   shl    $0x4,%r9d
  0x000077505ccd190c:   xor    %r9d,%r11d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd190f:   mov    %r11d,0x14(%rbx)             ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1913:   mov    %r8d,%r9d
  0x000077505ccd1916:   shl    %r9d
  0x000077505ccd1919:   xor    %r8d,%r9d
  0x000077505ccd191c:   mov    %r11d,%r8d
  0x000077505ccd191f:   shl    $0x4,%r8d
  0x000077505ccd1923:   mov    %edx,%ecx
  0x000077505ccd1925:   shr    $0x2,%ecx
  0x000077505ccd1928:   xor    %edx,%ecx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd192a:   imul   $0x587c5,%eax,%ebp
  0x000077505ccd1930:   mov    %ecx,%esi
  0x000077505ccd1932:   shl    %esi
  0x000077505ccd1934:   xor    %ecx,%esi
  0x000077505ccd1936:   add    $0x161f14,%ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
  0x000077505ccd193c:   mov    %edi,%edx
  0x000077505ccd193e:   shr    $0x2,%edx
  0x000077505ccd1941:   xor    %edi,%edx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1943:   mov    %edx,%ecx
  0x000077505ccd1945:   shl    %ecx
  0x000077505ccd1947:   xor    %edx,%ecx
  0x000077505ccd1949:   xor    %r11d,%ecx
  0x000077505ccd194c:   xor    %r8d,%ecx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd194f:   mov    %ecx,0x18(%rbx)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1952:   xor    %ecx,%r9d
  0x000077505ccd1955:   mov    %ecx,%edi
  0x000077505ccd1957:   shl    $0x4,%edi
  0x000077505ccd195a:   xor    %edi,%r9d                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd195d:   mov    %r9d,0x1c(%rbx)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1961:   xor    %r9d,%esi
  0x000077505ccd1964:   mov    %r9d,%r8d
  0x000077505ccd1967:   shl    $0x4,%r8d
  0x000077505ccd196b:   xor    %r8d,%esi                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd196e:   add    $0x4,%eax                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
  0x000077505ccd1971:   cmp    %r10d,%eax
  0x000077505ccd1974:   jl     0x000077505ccd18a0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
  0x000077505ccd197a:   mov    0x350(%r15),%r10             ; ImmutableOopMap {rbx=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.XorWowRandom::<init>@126 (line 34)
  0x000077505ccd1981:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
                                                            ;   {poll}
  0x000077505ccd1984:   cmp    (%rsp),%eax
  0x000077505ccd1987:   jge    0x000077505ccd19dc
  0x000077505ccd1989:   mov    %r14d,0x20(%rbx)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd198d:   mov    %esi,0x1c(%rbx)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1990:   mov    %r9d,0x18(%rbx)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1994:   mov    %ecx,0x14(%rbx)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1997:   mov    %r11d,0x10(%rbx)             ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd199b:   mov    %r13d,0xc(%rbx)              ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd199f:   mov    %r13d,%r8d
  0x000077505ccd19a2:   mov    %r11d,%edi
  0x000077505ccd19a5:   mov    %r9d,%edx
  0x000077505ccd19a8:   mov    %esi,%r13d
  0x000077505ccd19ab:   mov    (%rsp),%r11d                 ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@104 (line 34)
  0x000077505ccd19af:   mov    %r11d,(%rsp)
  0x000077505ccd19b3:   mov    %r11d,%r10d
  0x000077505ccd19b6:   sub    %eax,%r10d
  0x000077505ccd19b9:   xor    %r9d,%r9d
  0x000077505ccd19bc:   cmp    %eax,%r11d
  0x000077505ccd19bf:   cmovl  %r9d,%r10d
  0x000077505ccd19c3:   cmp    $0xfa0,%r10d
  0x000077505ccd19ca:   mov    $0xfa0,%r9d
  0x000077505ccd19d0:   cmova  %r9d,%r10d
  0x000077505ccd19d4:   add    %eax,%r10d
  0x000077505ccd19d7:   jmp    0x000077505ccd18c2
  0x000077505ccd19dc:   vmovd  %xmm1,%r10d
  0x000077505ccd19e1:   cmp    %r10d,%eax
  0x000077505ccd19e4:   jge    0x000077505ccd1a69
  0x000077505ccd19ea:   mov    %r13d,0xc(%rbx)              ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd19ee:   mov    %r14d,0x20(%rbx)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd19f2:   mov    %r11d,0x10(%rbx)             ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd19f6:   mov    %esi,0x1c(%rbx)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd19f9:   mov    %r9d,0x18(%rbx)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd19fd:   mov    %ecx,0x14(%rbx)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1a00:   mov    %eax,%ebp
  0x000077505ccd1a02:   xchg   %ax,%ax                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@104 (line 34)
  0x000077505ccd1a04:   mov    %ebp,%r8d
  0x000077505ccd1a07:   inc    %r8d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
  0x000077505ccd1a0a:   cmp    %r10d,%r8d
  0x000077505ccd1a0d:   jge    0x000077505ccd1a69           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@108 (line 34)
  0x000077505ccd1a0f:   mov    %r11d,0xc(%rbx)              ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1a13:   mov    %ecx,0x10(%rbx)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1a16:   mov    %r9d,0x14(%rbx)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1a1a:   mov    %esi,0x18(%rbx)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1a1d:   mov    %r13d,%edx
  0x000077505ccd1a20:   shr    $0x2,%edx
  0x000077505ccd1a23:   xor    %r13d,%edx                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1a26:   imul   $0x587c5,%eax,%edi
  0x000077505ccd1a2c:   mov    %r14d,%r13d
  0x000077505ccd1a2f:   sub    %edi,%r13d
  0x000077505ccd1a32:   mov    %edx,%edi
  0x000077505ccd1a34:   shl    %edi
  0x000077505ccd1a36:   xor    %edx,%edi
  0x000077505ccd1a38:   xor    %esi,%edi
  0x000077505ccd1a3a:   imul   $0x587c5,%ebp,%ebp
  0x000077505ccd1a40:   add    %r13d,%ebp
  0x000077505ccd1a43:   mov    %esi,%edx
  0x000077505ccd1a45:   shl    $0x4,%edx
  0x000077505ccd1a48:   xor    %edx,%edi                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1a4a:   mov    %edi,0x1c(%rbx)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1a4d:   add    $0x587c5,%ebp
  0x000077505ccd1a53:   mov    %ebp,0x20(%rbx)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd1a56:   mov    %r11d,%r13d
  0x000077505ccd1a59:   mov    %ecx,%r11d
  0x000077505ccd1a5c:   mov    %r9d,%ecx
  0x000077505ccd1a5f:   mov    %esi,%r9d
  0x000077505ccd1a62:   mov    %edi,%esi
  0x000077505ccd1a64:   mov    %r8d,%ebp
  0x000077505ccd1a67:   jmp    0x000077505ccd1a04
  0x000077505ccd1a69:   add    $0x20,%rsp
  0x000077505ccd1a6d:   pop    %rbp
  0x000077505ccd1a6e:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd1a75:   ja     0x000077505ccd1ab0
  0x000077505ccd1a7b:   ret
  0x000077505ccd1a7c:   mov    $0xffffff8d,%esi
  0x000077505ccd1a81:   mov    %rbx,(%rsp)
  0x000077505ccd1a85:   mov    %r13d,0x8(%rsp)
  0x000077505ccd1a8a:   nop
  0x000077505ccd1a8b:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@104 (line 34)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd1a90:   mov    %r13d,%esi
  0x000077505ccd1a93:   mov    %edx,%r9d
  0x000077505ccd1a96:   mov    %edi,%r11d
  0x000077505ccd1a99:   mov    %r8d,%r13d
  0x000077505ccd1a9c:   jmp    0x000077505ccd19e1
  0x000077505ccd1aa1:   mov    $0xffffffbe,%esi
  0x000077505ccd1aa6:   mov    %r13d,(%rsp)
  0x000077505ccd1aaa:   nop
  0x000077505ccd1aab:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@104 (line 34)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd1ab0:   movabs $0x77505ccd1a6e,%r10         ;   {internal_word}
  0x000077505ccd1aba:   mov    %r10,0x360(%r15)
  0x000077505ccd1ac1:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd1ac6:   hlt
  0x000077505ccd1ac7:   hlt
  0x000077505ccd1ac8:   hlt
  0x000077505ccd1ac9:   hlt
  0x000077505ccd1aca:   hlt
  0x000077505ccd1acb:   hlt
  0x000077505ccd1acc:   hlt
  0x000077505ccd1acd:   hlt
  0x000077505ccd1ace:   hlt
  0x000077505ccd1acf:   hlt
  0x000077505ccd1ad0:   hlt
  0x000077505ccd1ad1:   hlt
  0x000077505ccd1ad2:   hlt
  0x000077505ccd1ad3:   hlt
  0x000077505ccd1ad4:   hlt
  0x000077505ccd1ad5:   hlt
  0x000077505ccd1ad6:   hlt
  0x000077505ccd1ad7:   hlt
  0x000077505ccd1ad8:   hlt
  0x000077505ccd1ad9:   hlt
  0x000077505ccd1ada:   hlt
  0x000077505ccd1adb:   hlt
  0x000077505ccd1adc:   hlt
  0x000077505ccd1add:   hlt
  0x000077505ccd1ade:   hlt
  0x000077505ccd1adf:   hlt
[Exception Handler]
  0x000077505ccd1ae0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd1ae5:   call   0x000077505ccd1aea
  0x000077505ccd1aea:   subq   $0x5,(%rsp)
  0x000077505ccd1aef:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd1af4:   hlt
  0x000077505ccd1af5:   hlt
  0x000077505ccd1af6:   hlt
  0x000077505ccd1af7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     425  117       4       kotlin.random.XorWowRandom::<init> (131 bytes)
 total in heap  [0x000077505ccd2210,0x000077505ccd28c8] = 1720
 relocation     [0x000077505ccd2370,0x000077505ccd2388] = 24
 main code      [0x000077505ccd23a0,0x000077505ccd2580] = 480
 stub code      [0x000077505ccd2580,0x000077505ccd2598] = 24
 oops           [0x000077505ccd2598,0x000077505ccd25a0] = 8
 metadata       [0x000077505ccd25a0,0x000077505ccd25b0] = 16
 scopes data    [0x000077505ccd25b0,0x000077505ccd2650] = 160
 scopes pcs     [0x000077505ccd2650,0x000077505ccd28c0] = 624
 dependencies   [0x000077505ccd28c0,0x000077505ccd28c8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020503258} '<init>' '(IIIIII)V' in 'kotlin/random/XorWowRandom'
  # this:     rsi:rsi   = 'kotlin/random/XorWowRandom'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9        = int
  # parm4:    rdi       = int
  # parm5:    [sp+0x30]   = int  (sp of caller)
  0x000077505ccd23a0:   mov    0x8(%rsi),%r10d
  0x000077505ccd23a4:   movabs $0x800000000,%r11
  0x000077505ccd23ae:   add    %r11,%r10
  0x000077505ccd23b1:   cmp    %r10,%rax
  0x000077505ccd23b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd23ba:   xchg   %ax,%ax
  0x000077505ccd23bc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd23c0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd23c7:   push   %rbp
  0x000077505ccd23c8:   sub    $0x20,%rsp                   ;*synchronization entry
                                                            ; - kotlin.random.XorWowRandom::<init>@-1 (line 25)
  0x000077505ccd23cc:   mov    %rsi,%r11
  0x000077505ccd23cf:   mov    0x30(%rsp),%ebx
  0x000077505ccd23d3:   mov    %ebx,0x20(%rsi)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@34 (line 24)
  0x000077505ccd23d6:   mov    %edx,0xc(%rsi)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@6 (line 19)
  0x000077505ccd23d9:   mov    %ecx,0x10(%rsi)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@11 (line 20)
  0x000077505ccd23dc:   mov    %r8d,0x14(%rsi)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 21)
  0x000077505ccd23e0:   mov    %r9d,0x18(%rsi)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@22 (line 22)
  0x000077505ccd23e4:   mov    %edi,0x1c(%rsi)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@28 (line 23)
  0x000077505ccd23e7:   mov    %edx,%ebp
  0x000077505ccd23e9:   or     %ecx,%ebp
  0x000077505ccd23eb:   or     %r8d,%ebp
  0x000077505ccd23ee:   or     %r9d,%ebp
  0x000077505ccd23f1:   or     %edi,%ebp                    ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@61 (line 31)
  0x000077505ccd23f3:   test   %ebp,%ebp
  0x000077505ccd23f5:   je     0x000077505ccd2553           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@62 (line 31)
  0x000077505ccd23fb:   mov    %edi,%esi
  0x000077505ccd23fd:   shl    $0x4,%esi
  0x000077505ccd2400:   mov    %edx,%r10d
  0x000077505ccd2403:   shr    $0x2,%r10d
  0x000077505ccd2407:   xor    %edx,%r10d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd240a:   mov    %r10d,%eax
  0x000077505ccd240d:   shl    %eax
  0x000077505ccd240f:   xor    %r10d,%eax
  0x000077505ccd2412:   xor    %edi,%eax
  0x000077505ccd2414:   xor    %eax,%esi                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd2416:   mov    $0x1,%r10d
  0x000077505ccd241c:   jmp    0x000077505ccd242d
  0x000077505ccd241e:   xchg   %ax,%ax
  0x000077505ccd2420:   mov    %esi,%ecx
  0x000077505ccd2422:   mov    %ebp,%r9d
  0x000077505ccd2425:   mov    %eax,%r8d
  0x000077505ccd2428:   mov    %edx,%esi
  0x000077505ccd242a:   mov    %r13d,%r10d                  ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd242d:   mov    %edi,%r13d
  0x000077505ccd2430:   shr    $0x2,%r13d
  0x000077505ccd2434:   xor    %edi,%r13d
  0x000077505ccd2437:   mov    %esi,%eax
  0x000077505ccd2439:   shl    $0x4,%eax
  0x000077505ccd243c:   mov    %r13d,%edx
  0x000077505ccd243f:   shl    %edx
  0x000077505ccd2441:   xor    %r13d,%edx
  0x000077505ccd2444:   mov    %ecx,%ebp
  0x000077505ccd2446:   shr    $0x2,%ebp
  0x000077505ccd2449:   xor    %ecx,%ebp
  0x000077505ccd244b:   mov    %r8d,%ecx
  0x000077505ccd244e:   shr    $0x2,%ecx
  0x000077505ccd2451:   xor    %r8d,%ecx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd2454:   mov    %ebp,%edi
  0x000077505ccd2456:   shl    %edi
  0x000077505ccd2458:   xor    %ebp,%edi
  0x000077505ccd245a:   xor    %esi,%edi
  0x000077505ccd245c:   xor    %edi,%eax
  0x000077505ccd245e:   mov    %ecx,%r8d
  0x000077505ccd2461:   shl    %r8d
  0x000077505ccd2464:   xor    %ecx,%r8d
  0x000077505ccd2467:   xor    %eax,%r8d
  0x000077505ccd246a:   mov    %eax,%ebp
  0x000077505ccd246c:   shl    $0x4,%ebp
  0x000077505ccd246f:   xor    %r8d,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd2472:   mov    %r9d,%r8d
  0x000077505ccd2475:   shr    $0x2,%r8d
  0x000077505ccd2479:   xor    %r9d,%r8d                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd247c:   mov    %ebp,%edi
  0x000077505ccd247e:   shl    $0x4,%edi
  0x000077505ccd2481:   mov    %r8d,%ecx
  0x000077505ccd2484:   shl    %ecx
  0x000077505ccd2486:   xor    %r8d,%ecx
  0x000077505ccd2489:   xor    %ebp,%ecx
  0x000077505ccd248b:   xor    %ecx,%edi
  0x000077505ccd248d:   xor    %edi,%edx
  0x000077505ccd248f:   mov    %edi,%r9d
  0x000077505ccd2492:   shl    $0x4,%r9d
  0x000077505ccd2496:   xor    %r9d,%edx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd2499:   mov    %r10d,%r13d
  0x000077505ccd249c:   add    $0x4,%r13d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
  0x000077505ccd24a0:   cmp    $0x3d,%r13d
  0x000077505ccd24a4:   jl     0x000077505ccd2420           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@108 (line 34)
  0x000077505ccd24aa:   cmp    $0x40,%r13d
  0x000077505ccd24ae:   jge    0x000077505ccd2528
  0x000077505ccd24b0:   add    $0x4,%r10d                   ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd24b4:   mov    %edx,%r9d
  0x000077505ccd24b7:   shl    $0x4,%r9d
  0x000077505ccd24bb:   mov    %esi,%r8d
  0x000077505ccd24be:   shr    $0x2,%r8d
  0x000077505ccd24c2:   xor    %esi,%r8d                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd24c5:   mov    %r8d,%ecx
  0x000077505ccd24c8:   shl    %ecx
  0x000077505ccd24ca:   xor    %r8d,%ecx
  0x000077505ccd24cd:   xor    %edx,%ecx
  0x000077505ccd24cf:   xor    %ecx,%r9d                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd24d2:   mov    %r10d,%ecx
  0x000077505ccd24d5:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
  0x000077505ccd24d7:   cmp    $0x40,%ecx
  0x000077505ccd24da:   jge    0x000077505ccd24ec           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@108 (line 34)
  0x000077505ccd24dc:   mov    %eax,%esi
  0x000077505ccd24de:   mov    %ebp,%eax
  0x000077505ccd24e0:   mov    %edi,%ebp
  0x000077505ccd24e2:   mov    %edx,%edi
  0x000077505ccd24e4:   mov    %r9d,%edx
  0x000077505ccd24e7:   mov    %ecx,%r10d
  0x000077505ccd24ea:   jmp    0x000077505ccd24b4
  0x000077505ccd24ec:   mov    %eax,0xc(%r11)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd24f0:   mov    %r9d,0x1c(%r11)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd24f4:   mov    %edx,0x18(%r11)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd24f8:   mov    %edi,0x14(%r11)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd24fc:   mov    %ebp,0x10(%r11)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd2500:   imul   $0x587c5,%r10d,%r10d
  0x000077505ccd2507:   add    %ebx,%r10d
  0x000077505ccd250a:   add    $0x587c5,%r10d
  0x000077505ccd2511:   mov    %r10d,0x20(%r11)             ;*synchronization entry
                                                            ; - kotlin.random.XorWowRandom::<init>@-1 (line 25)
  0x000077505ccd2515:   add    $0x20,%rsp
  0x000077505ccd2519:   pop    %rbp
  0x000077505ccd251a:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd2521:   ja     0x000077505ccd2564
  0x000077505ccd2527:   ret
  0x000077505ccd2528:   mov    %esi,0xc(%r11)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd252c:   mov    %edx,0x1c(%r11)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd2530:   mov    %edi,0x18(%r11)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd2534:   mov    %ebp,0x14(%r11)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd2538:   mov    %eax,0x10(%r11)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd253c:   imul   $0x587c5,%r10d,%r10d
  0x000077505ccd2543:   add    %ebx,%r10d
  0x000077505ccd2546:   add    $0x161f14,%r10d
  0x000077505ccd254d:   mov    %r10d,0x20(%r11)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
  0x000077505ccd2551:   jmp    0x000077505ccd2515           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@62 (line 31)
  0x000077505ccd2553:   mov    $0xffffff45,%esi
  0x000077505ccd2558:   mov    %r11,(%rsp)
  0x000077505ccd255c:   data16 xchg %ax,%ax
  0x000077505ccd255f:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.XorWowRandom::<init>@62 (line 31)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd2564:   movabs $0x77505ccd251a,%r10         ;   {internal_word}
  0x000077505ccd256e:   mov    %r10,0x360(%r15)
  0x000077505ccd2575:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd257a:   hlt
  0x000077505ccd257b:   hlt
  0x000077505ccd257c:   hlt
  0x000077505ccd257d:   hlt
  0x000077505ccd257e:   hlt
  0x000077505ccd257f:   hlt
[Exception Handler]
  0x000077505ccd2580:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd2585:   call   0x000077505ccd258a
  0x000077505ccd258a:   subq   $0x5,(%rsp)
  0x000077505ccd258f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd2594:   hlt
  0x000077505ccd2595:   hlt
  0x000077505ccd2596:   hlt
  0x000077505ccd2597:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     432  118       4       kotlin.random.RandomKt::Random (16 bytes)
 total in heap  [0x000077505ccd2910,0x000077505ccd30b0] = 1952
 relocation     [0x000077505ccd2a70,0x000077505ccd2a90] = 32
 main code      [0x000077505ccd2aa0,0x000077505ccd2ce0] = 576
 stub code      [0x000077505ccd2ce0,0x000077505ccd2cf8] = 24
 oops           [0x000077505ccd2cf8,0x000077505ccd2d00] = 8
 metadata       [0x000077505ccd2d00,0x000077505ccd2d28] = 40
 scopes data    [0x000077505ccd2d28,0x000077505ccd2e00] = 216
 scopes pcs     [0x000077505ccd2e00,0x000077505ccd3090] = 656
 dependencies   [0x000077505ccd3090,0x000077505ccd3098] = 8
 handler table  [0x000077505ccd3098,0x000077505ccd30b0] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020501f38} 'Random' '(I)Lkotlin/random/Random;' in 'kotlin/random/RandomKt'
  # parm0:    rsi       = int
  #           [sp+0x30]  (sp of caller)
  0x000077505ccd2aa0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd2aa7:   push   %rbp
  0x000077505ccd2aa8:   sub    $0x20,%rsp                   ;*synchronization entry
                                                            ; - kotlin.random.RandomKt::Random@-1 (line 318)
  0x000077505ccd2aac:   mov    %esi,%ebp
  0x000077505ccd2aae:   mov    0x108(%r15),%rax
  0x000077505ccd2ab5:   mov    %rax,%r10
  0x000077505ccd2ab8:   add    $0x28,%r10
  0x000077505ccd2abc:   cmp    0x118(%r15),%r10
  0x000077505ccd2ac3:   jae    0x000077505ccd2c96
  0x000077505ccd2ac9:   mov    %r10,0x108(%r15)
  0x000077505ccd2ad0:   prefetchnta 0x100(%r10)
  0x000077505ccd2ad8:   movq   $0x1,(%rax)
  0x000077505ccd2adf:   movl   $0x1280,0x8(%rax)            ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd2ae6:   mov    %r12d,0x14(%rax)
  0x000077505ccd2aea:   mov    %r12d,0x18(%rax)
  0x000077505ccd2aee:   mov    %r12d,0x24(%rax)             ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
  0x000077505ccd2af2:   mov    %ebp,%r8d
  0x000077505ccd2af5:   mov    %r8d,0xc(%rax)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@6 (line 19)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2af9:   mov    %r8d,%ecx
  0x000077505ccd2afc:   not    %ecx                         ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@7 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2afe:   mov    %r8d,%r9d
  0x000077505ccd2b01:   shl    $0xa,%r9d
  0x000077505ccd2b05:   mov    %r8d,%edi
  0x000077505ccd2b08:   sar    $0x1f,%edi                   ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@8 (line 318)
  0x000077505ccd2b0b:   mov    %edi,0x10(%rax)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@11 (line 20)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2b0e:   mov    %ecx,0x1c(%rax)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@28 (line 23)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2b11:   or     %edi,%ebp
  0x000077505ccd2b13:   or     %ecx,%ebp                    ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@61 (line 31)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2b15:   mov    %edi,%r10d
  0x000077505ccd2b18:   shr    $0x4,%r10d
  0x000077505ccd2b1c:   xor    %r10d,%r9d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@15 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2b1f:   mov    %r9d,0x20(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
  0x000077505ccd2b23:   test   %ebp,%ebp
  0x000077505ccd2b25:   je     0x000077505ccd2cad           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@62 (line 31)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2b2b:   mov    %r8d,%r10d
  0x000077505ccd2b2e:   shr    $0x2,%r10d
  0x000077505ccd2b32:   xor    %r8d,%r10d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2b35:   mov    %ecx,%edx
  0x000077505ccd2b37:   shl    $0x4,%edx
  0x000077505ccd2b3a:   mov    %r10d,%r11d
  0x000077505ccd2b3d:   shl    %r11d
  0x000077505ccd2b40:   xor    %r10d,%r11d
  0x000077505ccd2b43:   xor    %r8d,%r11d
  0x000077505ccd2b46:   xor    %r11d,%edx
  0x000077505ccd2b49:   not    %edx                         ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2b4b:   xor    %r11d,%r11d
  0x000077505ccd2b4e:   mov    $0x1,%ebp
  0x000077505ccd2b53:   xor    %r10d,%r10d
  0x000077505ccd2b56:   xor    %ebx,%ebx
  0x000077505ccd2b58:   xor    %r8d,%r8d
  0x000077505ccd2b5b:   jmp    0x000077505ccd2b75
  0x000077505ccd2b5d:   data16 xchg %ax,%ax
  0x000077505ccd2b60:   mov    %ebx,%r8d
  0x000077505ccd2b63:   shr    $0x2,%r8d
  0x000077505ccd2b67:   mov    %r11d,%r10d
  0x000077505ccd2b6a:   shr    $0x2,%r10d                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@8 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2b6e:   mov    %edx,%edi
  0x000077505ccd2b70:   mov    %esi,%edx
  0x000077505ccd2b72:   mov    %r14d,%ebp                   ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2b75:   xor    %r8d,%ebx
  0x000077505ccd2b78:   xor    %r10d,%r11d
  0x000077505ccd2b7b:   mov    %ebx,%r8d
  0x000077505ccd2b7e:   shl    %r8d
  0x000077505ccd2b81:   xor    %ebx,%r8d
  0x000077505ccd2b84:   mov    %r11d,%r14d
  0x000077505ccd2b87:   shl    %r14d
  0x000077505ccd2b8a:   xor    %r11d,%r14d
  0x000077505ccd2b8d:   mov    %edi,%r10d
  0x000077505ccd2b90:   shr    $0x2,%r10d
  0x000077505ccd2b94:   xor    %edi,%r10d
  0x000077505ccd2b97:   mov    %ecx,%r11d
  0x000077505ccd2b9a:   shr    $0x2,%r11d
  0x000077505ccd2b9e:   xor    %ecx,%r11d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2ba1:   mov    %r10d,%ebx
  0x000077505ccd2ba4:   shl    %ebx
  0x000077505ccd2ba6:   xor    %r10d,%ebx
  0x000077505ccd2ba9:   xor    %edx,%ebx
  0x000077505ccd2bab:   mov    %r11d,%esi
  0x000077505ccd2bae:   shl    %esi
  0x000077505ccd2bb0:   xor    %r11d,%esi
  0x000077505ccd2bb3:   mov    %edx,%r11d
  0x000077505ccd2bb6:   shl    $0x4,%r11d
  0x000077505ccd2bba:   xor    %ebx,%r11d
  0x000077505ccd2bbd:   xor    %r11d,%r14d
  0x000077505ccd2bc0:   mov    %r11d,%ebx
  0x000077505ccd2bc3:   shl    $0x4,%ebx
  0x000077505ccd2bc6:   xor    %r14d,%ebx
  0x000077505ccd2bc9:   xor    %ebx,%r8d
  0x000077505ccd2bcc:   mov    %ebx,%ecx
  0x000077505ccd2bce:   shl    $0x4,%ecx
  0x000077505ccd2bd1:   xor    %r8d,%ecx
  0x000077505ccd2bd4:   xor    %ecx,%esi
  0x000077505ccd2bd6:   mov    %ecx,%r10d
  0x000077505ccd2bd9:   shl    $0x4,%r10d
  0x000077505ccd2bdd:   xor    %r10d,%esi                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2be0:   mov    %ebp,%r14d
  0x000077505ccd2be3:   add    $0x4,%r14d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2be7:   cmp    $0x3d,%r14d
  0x000077505ccd2beb:   jl     0x000077505ccd2b60           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@108 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2bf1:   cmp    $0x40,%r14d
  0x000077505ccd2bf5:   jge    0x000077505ccd2c6f
  0x000077505ccd2bf7:   add    $0x4,%ebp                    ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2bfa:   mov    %esi,%r10d
  0x000077505ccd2bfd:   shl    $0x4,%r10d
  0x000077505ccd2c01:   mov    %edx,%r8d
  0x000077505ccd2c04:   shr    $0x2,%r8d
  0x000077505ccd2c08:   xor    %edx,%r8d                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c0b:   mov    %r8d,%edx
  0x000077505ccd2c0e:   shl    %edx
  0x000077505ccd2c10:   xor    %r8d,%edx
  0x000077505ccd2c13:   xor    %esi,%edx
  0x000077505ccd2c15:   xor    %edx,%r10d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c18:   mov    %ebp,%r8d
  0x000077505ccd2c1b:   inc    %r8d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c1e:   cmp    $0x40,%r8d
  0x000077505ccd2c22:   jge    0x000077505ccd2c36           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@108 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c24:   mov    %r11d,%edx
  0x000077505ccd2c27:   mov    %ebx,%r11d
  0x000077505ccd2c2a:   mov    %ecx,%ebx
  0x000077505ccd2c2c:   mov    %esi,%ecx
  0x000077505ccd2c2e:   mov    %r10d,%esi
  0x000077505ccd2c31:   mov    %r8d,%ebp
  0x000077505ccd2c34:   jmp    0x000077505ccd2bfa
  0x000077505ccd2c36:   mov    %ecx,0x14(%rax)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c39:   mov    %r11d,0xc(%rax)              ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c3d:   mov    %esi,0x18(%rax)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c40:   mov    %ebx,0x10(%rax)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c43:   mov    %r10d,0x1c(%rax)             ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c47:   imul   $0x587c5,%ebp,%r11d
  0x000077505ccd2c4e:   add    %r9d,%r11d
  0x000077505ccd2c51:   add    $0x587c5,%r11d
  0x000077505ccd2c58:   mov    %r11d,0x20(%rax)             ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
  0x000077505ccd2c5c:   add    $0x20,%rsp
  0x000077505ccd2c60:   pop    %rbp
  0x000077505ccd2c61:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd2c68:   ja     0x000077505ccd2cc9
  0x000077505ccd2c6e:   ret
  0x000077505ccd2c6f:   mov    %ecx,0x18(%rax)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c72:   mov    %ebx,0x14(%rax)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c75:   mov    %esi,0x1c(%rax)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c78:   mov    %r11d,0x10(%rax)             ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c7c:   mov    %edx,0xc(%rax)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c7f:   imul   $0x587c5,%ebp,%r11d
  0x000077505ccd2c86:   add    %r9d,%r11d
  0x000077505ccd2c89:   add    $0x161f14,%r11d
  0x000077505ccd2c90:   mov    %r11d,0x20(%rax)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2c94:   jmp    0x000077505ccd2c5c
  0x000077505ccd2c96:   movabs $0x800001280,%rsi            ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd2ca0:   data16 xchg %ax,%ax
  0x000077505ccd2ca3:   call   0x000077505c832900           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
                                                            ;   {runtime_call _new_instance_Java}
  0x000077505ccd2ca8:   jmp    0x000077505ccd2af2           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@62 (line 31)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
  0x000077505ccd2cad:   mov    $0xffffff45,%esi
  0x000077505ccd2cb2:   mov    %rax,0x8(%rsp)
  0x000077505ccd2cb7:   call   0x000077505c78d600           ; ImmutableOopMap {[8]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.XorWowRandom::<init>@62 (line 31)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd2cbc:   mov    %rax,%rsi
  0x000077505ccd2cbf:   add    $0x20,%rsp
  0x000077505ccd2cc3:   pop    %rbp
  0x000077505ccd2cc4:   jmp    0x000077505c834a00           ;   {runtime_call _rethrow_Java}
  0x000077505ccd2cc9:   movabs $0x77505ccd2c61,%r10         ;   {internal_word}
  0x000077505ccd2cd3:   mov    %r10,0x360(%r15)
  0x000077505ccd2cda:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd2cdf:   hlt
[Exception Handler]
  0x000077505ccd2ce0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd2ce5:   call   0x000077505ccd2cea
  0x000077505ccd2cea:   subq   $0x5,(%rsp)
  0x000077505ccd2cef:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd2cf4:   hlt
  0x000077505ccd2cf5:   hlt
  0x000077505ccd2cf6:   hlt
  0x000077505ccd2cf7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     441  119       4       de.maschmi.blog.Adapter::<init> (13 bytes)
 total in heap  [0x000077505ccd3110,0x000077505ccd3a48] = 2360
 relocation     [0x000077505ccd3270,0x000077505ccd3290] = 32
 main code      [0x000077505ccd32a0,0x000077505ccd35c0] = 800
 stub code      [0x000077505ccd35c0,0x000077505ccd35d8] = 24
 oops           [0x000077505ccd35d8,0x000077505ccd35e0] = 8
 metadata       [0x000077505ccd35e0,0x000077505ccd3610] = 48
 scopes data    [0x000077505ccd3610,0x000077505ccd36b8] = 168
 scopes pcs     [0x000077505ccd36b8,0x000077505ccd3a28] = 880
 dependencies   [0x000077505ccd3a28,0x000077505ccd3a30] = 8
 handler table  [0x000077505ccd3a30,0x000077505ccd3a48] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter'
  #           [sp+0x30]  (sp of caller)
  0x000077505ccd32a0:   mov    0x8(%rsi),%r10d
  0x000077505ccd32a4:   movabs $0x800000000,%r11
  0x000077505ccd32ae:   add    %r11,%r10
  0x000077505ccd32b1:   cmp    %r10,%rax
  0x000077505ccd32b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd32ba:   xchg   %ax,%ax
  0x000077505ccd32bc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd32c0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd32c7:   push   %rbp
  0x000077505ccd32c8:   sub    $0x20,%rsp                   ;*synchronization entry
                                                            ; - de.maschmi.blog.Adapter::<init>@-1 (line 5)
  0x000077505ccd32cc:   mov    %rsi,(%rsp)
  0x000077505ccd32d0:   mov    0x108(%r15),%rbx
  0x000077505ccd32d7:   mov    %rbx,%r10
  0x000077505ccd32da:   add    $0x28,%r10
  0x000077505ccd32de:   cmp    0x118(%r15),%r10
  0x000077505ccd32e5:   jae    0x000077505ccd354e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd32eb:   mov    %r10,0x108(%r15)
  0x000077505ccd32f2:   prefetchnta 0x100(%r10)
  0x000077505ccd32fa:   movq   $0x1,(%rbx)
  0x000077505ccd3301:   movl   $0x1280,0x8(%rbx)            ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd3308:   mov    %r12,0x10(%rbx)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd330c:   movl   $0x1,0xc(%rbx)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@6 (line 19)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3313:   mov    $0xc0000001,%r10d
  0x000077505ccd3319:   movabs $0xfffffffe00000000,%r11
  0x000077505ccd3323:   mov    %r11,0x18(%rbx)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@28 (line 23)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3327:   movq   $0x400,0x20(%rbx)            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd332f:   mov    $0x1,%ebp
  0x000077505ccd3334:   xor    %r8d,%r8d
  0x000077505ccd3337:   mov    $0x2,%ecx
  0x000077505ccd333c:   xor    $0x1f,%ecx                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd333f:   mov    %ecx,%r9d
  0x000077505ccd3342:   shl    $0x4,%r9d                    ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@54 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3346:   mov    $0x80000002,%edx
  0x000077505ccd334b:   xor    %edi,%edi
  0x000077505ccd334d:   xor    %r11d,%r11d
  0x000077505ccd3350:   xor    %eax,%eax
  0x000077505ccd3352:   jmp    0x000077505ccd339d
  0x000077505ccd3354:   nopw   0x0(%rax,%rax,1)
  0x000077505ccd335a:   nopw   0x0(%rax,%rax,1)
  0x000077505ccd3360:   xor    %ecx,%edx
  0x000077505ccd3362:   mov    %edi,%r13d
  0x000077505ccd3365:   shr    $0x2,%r13d
  0x000077505ccd3369:   xor    %edi,%r13d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd336c:   mov    %edx,%ebp
  0x000077505ccd336e:   shl    %ebp
  0x000077505ccd3370:   xor    %edx,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@49 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3372:   mov    %r13d,%edx
  0x000077505ccd3375:   shl    %edx                         ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@48 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3377:   mov    %r8d,%eax
  0x000077505ccd337a:   shr    $0x2,%eax                    ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@8 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd337d:   mov    %r14d,%r11d
  0x000077505ccd3380:   shr    $0x2,%r11d
  0x000077505ccd3384:   xor    %r14d,%r11d                  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3387:   mov    %r11d,%edi
  0x000077505ccd338a:   shl    %edi
  0x000077505ccd338c:   xor    %r11d,%edi                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@49 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd338f:   mov    %r8d,%r11d
  0x000077505ccd3392:   mov    %r10d,%ecx
  0x000077505ccd3395:   mov    %r13d,%r10d
  0x000077505ccd3398:   mov    %ebp,%r8d
  0x000077505ccd339b:   mov    %esi,%ebp                    ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@54 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd339d:   xor    %edx,%r10d
  0x000077505ccd33a0:   xor    %ecx,%r8d
  0x000077505ccd33a3:   xor    %eax,%r11d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd33a6:   xor    %r9d,%r8d
  0x000077505ccd33a9:   mov    %r11d,%r9d
  0x000077505ccd33ac:   shl    %r9d
  0x000077505ccd33af:   xor    %r11d,%r9d
  0x000077505ccd33b2:   xor    %r8d,%r9d
  0x000077505ccd33b5:   mov    %r8d,%r14d
  0x000077505ccd33b8:   shl    $0x4,%r14d
  0x000077505ccd33bc:   xor    %r9d,%r14d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd33bf:   xor    %r14d,%edi
  0x000077505ccd33c2:   mov    %ecx,%edx
  0x000077505ccd33c4:   shr    $0x2,%edx                    ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@8 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd33c7:   mov    %r14d,%r11d
  0x000077505ccd33ca:   shl    $0x4,%r11d
  0x000077505ccd33ce:   xor    %r11d,%edi
  0x000077505ccd33d1:   xor    %edi,%r10d
  0x000077505ccd33d4:   mov    %edi,%r11d
  0x000077505ccd33d7:   shl    $0x4,%r11d
  0x000077505ccd33db:   xor    %r11d,%r10d                  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd33de:   mov    %r10d,%r9d
  0x000077505ccd33e1:   shl    $0x4,%r9d                    ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@54 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd33e5:   mov    %ebp,%esi
  0x000077505ccd33e7:   add    $0x4,%esi                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd33ea:   cmp    $0x3d,%esi
  0x000077505ccd33ed:   jl     0x000077505ccd3360           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@108 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd33f3:   cmp    $0x40,%esi
  0x000077505ccd33f6:   jge    0x000077505ccd34af
  0x000077505ccd33fc:   add    $0x4,%ebp                    ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@54 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd33ff:   xor    %ecx,%edx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3401:   mov    %edx,%r11d
  0x000077505ccd3404:   shl    %r11d
  0x000077505ccd3407:   xor    %edx,%r11d
  0x000077505ccd340a:   xor    %r10d,%r11d
  0x000077505ccd340d:   xor    %r9d,%r11d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3410:   mov    %ebp,%eax
  0x000077505ccd3412:   inc    %eax                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@123 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3414:   cmp    $0x40,%eax
  0x000077505ccd3417:   jge    0x000077505ccd3439           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@108 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3419:   mov    %r11d,%r9d
  0x000077505ccd341c:   shl    $0x4,%r9d                    ;*ishl {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@54 (line 47)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3420:   mov    %r8d,%edx
  0x000077505ccd3423:   shr    $0x2,%edx                    ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@8 (line 41)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3426:   mov    %r8d,%ecx
  0x000077505ccd3429:   mov    %r14d,%r8d
  0x000077505ccd342c:   mov    %edi,%r14d
  0x000077505ccd342f:   mov    %r10d,%edi
  0x000077505ccd3432:   mov    %r11d,%r10d
  0x000077505ccd3435:   mov    %eax,%ebp
  0x000077505ccd3437:   jmp    0x000077505ccd33ff
  0x000077505ccd3439:   mov    %r10d,0x18(%rbx)             ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd343d:   mov    %r11d,0x1c(%rbx)             ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3441:   mov    %edi,0x14(%rbx)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3444:   mov    %r14d,0x10(%rbx)             ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3448:   mov    %r8d,0xc(%rbx)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd344c:   imul   $0x587c5,%ebp,%r10d
  0x000077505ccd3453:   add    $0x58bc5,%r10d
  0x000077505ccd345a:   mov    %r10d,0x20(%rbx)             ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd345e:   cmpb   $0x0,0x38(%r15)
  0x000077505ccd3463:   jne    0x000077505ccd34d5
  0x000077505ccd3465:   mov    (%rsp),%rbp
  0x000077505ccd3469:   mov    %rbp,%r10
  0x000077505ccd346c:   mov    %rbx,%r11
  0x000077505ccd346f:   shr    $0x3,%r11
  0x000077505ccd3473:   mov    %r11d,0xc(%rbp)
  0x000077505ccd3477:   mov    %rbx,%r11
  0x000077505ccd347a:   xor    %r10,%r11
  0x000077505ccd347d:   shr    $0x16,%r11
  0x000077505ccd3481:   test   %r11,%r11
  0x000077505ccd3484:   je     0x000077505ccd349c
  0x000077505ccd3486:   shr    $0x9,%r10
  0x000077505ccd348a:   movabs $0x7750511a4000,%rdi
  0x000077505ccd3494:   add    %r10,%rdi
  0x000077505ccd3497:   cmpb   $0x4,(%rdi)
  0x000077505ccd349a:   jne    0x000077505ccd3508           ;*synchronization entry
                                                            ; - de.maschmi.blog.Adapter::<init>@-1 (line 5)
  0x000077505ccd349c:   add    $0x20,%rsp
  0x000077505ccd34a0:   pop    %rbp
  0x000077505ccd34a1:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd34a8:   ja     0x000077505ccd358e
  0x000077505ccd34ae:   ret
  0x000077505ccd34af:   mov    %r10d,0x1c(%rbx)             ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd34b3:   mov    %r8d,0x10(%rbx)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd34b7:   mov    %ecx,0xc(%rbx)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd34ba:   mov    %edi,0x18(%rbx)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd34bd:   mov    %r14d,0x14(%rbx)             ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd34c1:   imul   $0x587c5,%ebp,%r11d
  0x000077505ccd34c8:   add    $0x162314,%r11d
  0x000077505ccd34cf:   mov    %r11d,0x20(%rbx)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::<init>@119 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd34d3:   jmp    0x000077505ccd345e
  0x000077505ccd34d5:   mov    (%rsp),%rbp
  0x000077505ccd34d9:   mov    0xc(%rbp),%r11d
  0x000077505ccd34dd:   test   %r11d,%r11d
  0x000077505ccd34e0:   je     0x000077505ccd3469
  0x000077505ccd34e2:   mov    0x20(%r15),%r10
  0x000077505ccd34e6:   mov    %r11,%rdi
  0x000077505ccd34e9:   shl    $0x3,%rdi
  0x000077505ccd34ed:   test   %r10,%r10
  0x000077505ccd34f0:   je     0x000077505ccd356c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd34f2:   mov    0x30(%r15),%r11
  0x000077505ccd34f6:   mov    %rdi,-0x8(%r11,%r10,1)       ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
  0x000077505ccd34fb:   add    $0xfffffffffffffff8,%r10
  0x000077505ccd34ff:   mov    %r10,0x20(%r15)
  0x000077505ccd3503:   jmp    0x000077505ccd3469
  0x000077505ccd3508:   mov    0x40(%r15),%r10
  0x000077505ccd350c:   mov    0x50(%r15),%r11
  0x000077505ccd3510:   lock addl $0x0,-0x40(%rsp)
  0x000077505ccd3516:   cmpb   $0x0,(%rdi)
  0x000077505ccd3519:   je     0x000077505ccd349c
  0x000077505ccd351f:   mov    %r12b,(%rdi)
  0x000077505ccd3522:   test   %r10,%r10
  0x000077505ccd3525:   jne    0x000077505ccd353c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3527:   mov    %r15,%rsi
  0x000077505ccd352a:   movabs $0x7750738f1760,%r10
  0x000077505ccd3534:   call   *%r10
  0x000077505ccd3537:   jmp    0x000077505ccd349c
  0x000077505ccd353c:   mov    %rdi,-0x8(%r11,%r10,1)       ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
  0x000077505ccd3541:   add    $0xfffffffffffffff8,%r10     ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3545:   mov    %r10,0x40(%r15)              ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
  0x000077505ccd3549:   jmp    0x000077505ccd349c
  0x000077505ccd354e:   movabs $0x800001280,%rsi            ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd3558:   mov    (%rsp),%rbp
  0x000077505ccd355c:   data16 xchg %ax,%ax
  0x000077505ccd355f:   call   0x000077505c832900           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ;   {runtime_call _new_instance_Java}
  0x000077505ccd3564:   mov    %rax,%rbx
  0x000077505ccd3567:   jmp    0x000077505ccd330c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::<init>@126 (line 34)
                                                            ; - kotlin.random.XorWowRandom::<init>@16 (line 28)
                                                            ; - kotlin.random.RandomKt::Random@9 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd356c:   mov    %r15,%rsi
  0x000077505ccd356f:   movabs $0x7750738f1730,%r10
  0x000077505ccd3579:   call   *%r10                        ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
  0x000077505ccd357c:   jmp    0x000077505ccd3469           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::Random@0 (line 318)
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
  0x000077505ccd3581:   mov    %rax,%rsi
  0x000077505ccd3584:   add    $0x20,%rsp
  0x000077505ccd3588:   pop    %rbp
  0x000077505ccd3589:   jmp    0x000077505c834a00           ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
                                                            ;   {runtime_call _rethrow_Java}
  0x000077505ccd358e:   movabs $0x77505ccd34a1,%r10         ;   {internal_word}
  0x000077505ccd3598:   mov    %r10,0x360(%r15)
  0x000077505ccd359f:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd35a4:   hlt
  0x000077505ccd35a5:   hlt
  0x000077505ccd35a6:   hlt
  0x000077505ccd35a7:   hlt
  0x000077505ccd35a8:   hlt
  0x000077505ccd35a9:   hlt
  0x000077505ccd35aa:   hlt
  0x000077505ccd35ab:   hlt
  0x000077505ccd35ac:   hlt
  0x000077505ccd35ad:   hlt
  0x000077505ccd35ae:   hlt
  0x000077505ccd35af:   hlt
  0x000077505ccd35b0:   hlt
  0x000077505ccd35b1:   hlt
  0x000077505ccd35b2:   hlt
  0x000077505ccd35b3:   hlt
  0x000077505ccd35b4:   hlt
  0x000077505ccd35b5:   hlt
  0x000077505ccd35b6:   hlt
  0x000077505ccd35b7:   hlt
  0x000077505ccd35b8:   hlt
  0x000077505ccd35b9:   hlt
  0x000077505ccd35ba:   hlt
  0x000077505ccd35bb:   hlt
  0x000077505ccd35bc:   hlt
  0x000077505ccd35bd:   hlt
  0x000077505ccd35be:   hlt
  0x000077505ccd35bf:   hlt
[Exception Handler]
  0x000077505ccd35c0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd35c5:   call   0x000077505ccd35ca
  0x000077505ccd35ca:   subq   $0x5,(%rsp)
  0x000077505ccd35cf:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd35d4:   hlt
  0x000077505ccd35d5:   hlt
  0x000077505ccd35d6:   hlt
  0x000077505ccd35d7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     451  120       4       de.maschmi.blog.GuardInlined::<init> (16 bytes)
 total in heap  [0x000077505ccd3a90,0x000077505ccd3e18] = 904
 relocation     [0x000077505ccd3bf0,0x000077505ccd3c08] = 24
 main code      [0x000077505ccd3c20,0x000077505ccd3d60] = 320
 stub code      [0x000077505ccd3d60,0x000077505ccd3d78] = 24
 oops           [0x000077505ccd3d78,0x000077505ccd3d88] = 16
 metadata       [0x000077505ccd3d88,0x000077505ccd3d98] = 16
 scopes data    [0x000077505ccd3d98,0x000077505ccd3dc0] = 40
 scopes pcs     [0x000077505ccd3dc0,0x000077505ccd3e10] = 80
 dependencies   [0x000077505ccd3e10,0x000077505ccd3e18] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined'
  # this:     rsi:rsi   = 'de/maschmi/blog/GuardInlined'
  # parm0:    rdx:rdx   = 'de/maschmi/blog/Adapter'
  #           [sp+0x30]  (sp of caller)
  0x000077505ccd3c20:   mov    0x8(%rsi),%r10d
  0x000077505ccd3c24:   movabs $0x800000000,%r11
  0x000077505ccd3c2e:   add    %r11,%r10
  0x000077505ccd3c31:   cmp    %r10,%rax
  0x000077505ccd3c34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd3c3a:   xchg   %ax,%ax
  0x000077505ccd3c3c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd3c40:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd3c47:   push   %rbp
  0x000077505ccd3c48:   sub    $0x20,%rsp
  0x000077505ccd3c4c:   mov    %rsi,%r10
  0x000077505ccd3c4f:   mov    %rdx,%rbx
  0x000077505ccd3c52:   test   %rdx,%rdx
  0x000077505ccd3c55:   je     0x000077505ccd3d2e
  0x000077505ccd3c5b:   cmpb   $0x0,0x38(%r15)
  0x000077505ccd3c60:   jne    0x000077505ccd3cab
  0x000077505ccd3c62:   mov    %rsi,%rbp
  0x000077505ccd3c65:   mov    %rbp,%r10
  0x000077505ccd3c68:   mov    %rbx,%r8
  0x000077505ccd3c6b:   shr    $0x3,%r8
  0x000077505ccd3c6f:   mov    %r8d,0xc(%rbp)
  0x000077505ccd3c73:   mov    %rbx,%r11
  0x000077505ccd3c76:   xor    %r10,%r11
  0x000077505ccd3c79:   shr    $0x16,%r11
  0x000077505ccd3c7d:   test   %r11,%r11
  0x000077505ccd3c80:   je     0x000077505ccd3c98
  0x000077505ccd3c82:   shr    $0x9,%r10
  0x000077505ccd3c86:   movabs $0x7750511a4000,%rdi
  0x000077505ccd3c90:   add    %r10,%rdi
  0x000077505ccd3c93:   cmpb   $0x4,(%rdi)
  0x000077505ccd3c96:   jne    0x000077505ccd3cda           ;*synchronization entry
                                                            ; - de.maschmi.blog.GuardInlined::<init>@-1
  0x000077505ccd3c98:   add    $0x20,%rsp
  0x000077505ccd3c9c:   pop    %rbp
  0x000077505ccd3c9d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd3ca4:   ja     0x000077505ccd3d40
  0x000077505ccd3caa:   ret
  0x000077505ccd3cab:   mov    %rsi,%rbp
  0x000077505ccd3cae:   mov    0xc(%rsi),%r10d
  0x000077505ccd3cb2:   test   %r10d,%r10d
  0x000077505ccd3cb5:   je     0x000077505ccd3c65
  0x000077505ccd3cb7:   mov    0x20(%r15),%r11
  0x000077505ccd3cbb:   mov    %r10,%rdi
  0x000077505ccd3cbe:   shl    $0x3,%rdi
  0x000077505ccd3cc2:   test   %r11,%r11
  0x000077505ccd3cc5:   je     0x000077505ccd3d19
  0x000077505ccd3cc7:   mov    0x30(%r15),%r10
  0x000077505ccd3ccb:   mov    %rdi,-0x8(%r10,%r11,1)
  0x000077505ccd3cd0:   add    $0xfffffffffffffff8,%r11
  0x000077505ccd3cd4:   mov    %r11,0x20(%r15)
  0x000077505ccd3cd8:   jmp    0x000077505ccd3c65
  0x000077505ccd3cda:   mov    0x40(%r15),%r10
  0x000077505ccd3cde:   mov    0x50(%r15),%r11
  0x000077505ccd3ce2:   lock addl $0x0,-0x40(%rsp)
  0x000077505ccd3ce8:   cmpb   $0x0,(%rdi)
  0x000077505ccd3ceb:   je     0x000077505ccd3c98
  0x000077505ccd3ced:   mov    %r12b,(%rdi)
  0x000077505ccd3cf0:   test   %r10,%r10
  0x000077505ccd3cf3:   jne    0x000077505ccd3d07
  0x000077505ccd3cf5:   mov    %r15,%rsi
  0x000077505ccd3cf8:   movabs $0x7750738f1760,%r10
  0x000077505ccd3d02:   call   *%r10
  0x000077505ccd3d05:   jmp    0x000077505ccd3c98
  0x000077505ccd3d07:   mov    %rdi,-0x8(%r11,%r10,1)
  0x000077505ccd3d0c:   add    $0xfffffffffffffff8,%r10
  0x000077505ccd3d10:   mov    %r10,0x40(%r15)
  0x000077505ccd3d14:   jmp    0x000077505ccd3c98
  0x000077505ccd3d19:   mov    %r15,%rsi
  0x000077505ccd3d1c:   movabs $0x7750738f1730,%r10
  0x000077505ccd3d26:   call   *%r10                        ;*putfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::<init>@12 (line 14)
  0x000077505ccd3d29:   jmp    0x000077505ccd3c65
  0x000077505ccd3d2e:   mov    $0xffffff45,%esi
  0x000077505ccd3d33:   mov    %r10,%rbp
  0x000077505ccd3d36:   mov    %rdx,0x8(%rsp)
  0x000077505ccd3d3b:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd3d40:   movabs $0x77505ccd3c9d,%r10         ;   {internal_word}
  0x000077505ccd3d4a:   mov    %r10,0x360(%r15)
  0x000077505ccd3d51:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd3d56:   hlt
  0x000077505ccd3d57:   hlt
  0x000077505ccd3d58:   hlt
  0x000077505ccd3d59:   hlt
  0x000077505ccd3d5a:   hlt
  0x000077505ccd3d5b:   hlt
  0x000077505ccd3d5c:   hlt
  0x000077505ccd3d5d:   hlt
  0x000077505ccd3d5e:   hlt
  0x000077505ccd3d5f:   hlt
[Exception Handler]
  0x000077505ccd3d60:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd3d65:   call   0x000077505ccd3d6a
  0x000077505ccd3d6a:   subq   $0x5,(%rsp)
  0x000077505ccd3d6f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd3d74:   hlt
  0x000077505ccd3d75:   hlt
  0x000077505ccd3d76:   hlt
  0x000077505ccd3d77:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     454  121   !   4       de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48 (49 bytes)
 total in heap  [0x000077505ccd3e90,0x000077505ccd43f8] = 1384
 relocation     [0x000077505ccd3ff0,0x000077505ccd4010] = 32
 main code      [0x000077505ccd4020,0x000077505ccd4140] = 288
 stub code      [0x000077505ccd4140,0x000077505ccd4158] = 24
 oops           [0x000077505ccd4158,0x000077505ccd4168] = 16
 metadata       [0x000077505ccd4168,0x000077505ccd41a0] = 56
 scopes data    [0x000077505ccd41a0,0x000077505ccd4268] = 200
 scopes pcs     [0x000077505ccd4268,0x000077505ccd43d8] = 368
 dependencies   [0x000077505ccd43d8,0x000077505ccd43e0] = 8
 nul chk table  [0x000077505ccd43e0,0x000077505ccd43f8] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020500c78} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/GuardInlined'
  #           [sp+0x20]  (sp of caller)
  0x000077505ccd4020:   mov    0x8(%rsi),%r10d
  0x000077505ccd4024:   movabs $0x800000000,%r11
  0x000077505ccd402e:   add    %r11,%r10
  0x000077505ccd4031:   cmp    %r10,%rax
  0x000077505ccd4034:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd403a:   xchg   %ax,%ax
  0x000077505ccd403c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd4040:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd4047:   push   %rbp
  0x000077505ccd4048:   sub    $0x10,%rsp                   ;*synchronization entry
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@-1 (line 17)
  0x000077505ccd404c:   mov    0xc(%rsi),%r10d              ;*getfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@8 (line 18)
  0x000077505ccd4050:   mov    0xc(%r12,%r10,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd4104
                                                            ;*getfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@7 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd4055:   mov    0x8(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x000077505ccd4110
  0x000077505ccd405a:   cmp    $0x1280,%r8d                 ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd4061:   jne    0x000077505ccd40ea
  0x000077505ccd4067:   shl    $0x3,%r10                    ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd406b:   mov    0xc(%r10),%r11d              ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd406f:   mov    0x18(%r10),%r9d
  0x000077505ccd4073:   mov    0x1c(%r10),%ecx              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd4077:   mov    %ecx,0x18(%r10)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd407b:   mov    0x14(%r10),%r8d
  0x000077505ccd407f:   mov    %r9d,0x14(%r10)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd4083:   mov    0x20(%r10),%ebx              ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd4087:   mov    0x10(%r10),%r9d
  0x000077505ccd408b:   mov    %r9d,0xc(%r10)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd408f:   mov    %r8d,0x10(%r10)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd4093:   mov    %r11d,%r9d
  0x000077505ccd4096:   shr    $0x2,%r9d
  0x000077505ccd409a:   xor    %r11d,%r9d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd409d:   mov    %ebx,%r11d
  0x000077505ccd40a0:   add    $0x587c5,%r11d
  0x000077505ccd40a7:   mov    %r11d,0x20(%r10)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd40ab:   mov    %r9d,%ebp
  0x000077505ccd40ae:   shl    %ebp
  0x000077505ccd40b0:   xor    %r9d,%ebp
  0x000077505ccd40b3:   xor    %ecx,%ebp
  0x000077505ccd40b5:   shl    $0x4,%ecx
  0x000077505ccd40b8:   xor    %ecx,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd40ba:   mov    %ebp,0x1c(%r10)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd40be:   add    %ebx,%ebp
  0x000077505ccd40c0:   add    $0x587c5,%ebp
  0x000077505ccd40c6:   shr    $0x1f,%ebp                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::takeUpperBits@5 (line 376)
                                                            ; - kotlin.random.XorWowRandom::nextBits@5 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
  0x000077505ccd40c9:   test   %ebp,%ebp
  0x000077505ccd40cb:   jne    0x000077505ccd40f8           ;*synchronization entry
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@-1 (line 17)
  0x000077505ccd40cd:   movabs $0x62ae78df0,%rax            ;   {oop("FunctionOne"{0x000000062ae78df0})}
  0x000077505ccd40d7:   add    $0x10,%rsp
  0x000077505ccd40db:   pop    %rbp
  0x000077505ccd40dc:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd40e3:   ja     0x000077505ccd411c
  0x000077505ccd40e9:   ret
  0x000077505ccd40ea:   mov    $0xffffffde,%esi
  0x000077505ccd40ef:   mov    %r10d,%ebp
  0x000077505ccd40f2:   nop
  0x000077505ccd40f3:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd40f8:   mov    $0xffffff45,%esi
  0x000077505ccd40fd:   xchg   %ax,%ax
  0x000077505ccd40ff:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.Random::nextBoolean@5 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd4104:   mov    $0xfffffff6,%esi
  0x000077505ccd4109:   xchg   %ax,%ax
  0x000077505ccd410b:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd4110:   mov    $0xfffffff6,%esi
  0x000077505ccd4115:   xchg   %ax,%ax
  0x000077505ccd4117:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.GuardInlined::functionOneUsingAdapter-d1pmJ48@13 (line 18)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd411c:   movabs $0x77505ccd40dc,%r10         ;   {internal_word}
  0x000077505ccd4126:   mov    %r10,0x360(%r15)
  0x000077505ccd412d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd4132:   hlt
  0x000077505ccd4133:   hlt
  0x000077505ccd4134:   hlt
  0x000077505ccd4135:   hlt
  0x000077505ccd4136:   hlt
  0x000077505ccd4137:   hlt
  0x000077505ccd4138:   hlt
  0x000077505ccd4139:   hlt
  0x000077505ccd413a:   hlt
  0x000077505ccd413b:   hlt
  0x000077505ccd413c:   hlt
  0x000077505ccd413d:   hlt
  0x000077505ccd413e:   hlt
  0x000077505ccd413f:   hlt
[Exception Handler]
  0x000077505ccd4140:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd4145:   call   0x000077505ccd414a
  0x000077505ccd414a:   subq   $0x5,(%rsp)
  0x000077505ccd414f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd4154:   hlt
  0x000077505ccd4155:   hlt
  0x000077505ccd4156:   hlt
  0x000077505ccd4157:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     458  122       4       kotlin.random.Random::nextBoolean (14 bytes)
 total in heap  [0x000077505ccd4410,0x000077505ccd48a0] = 1168
 relocation     [0x000077505ccd4570,0x000077505ccd4588] = 24
 main code      [0x000077505ccd45a0,0x000077505ccd46a0] = 256
 stub code      [0x000077505ccd46a0,0x000077505ccd46b8] = 24
 oops           [0x000077505ccd46b8,0x000077505ccd46c0] = 8
 metadata       [0x000077505ccd46c0,0x000077505ccd46e8] = 40
 scopes data    [0x000077505ccd46e8,0x000077505ccd4768] = 128
 scopes pcs     [0x000077505ccd4768,0x000077505ccd4898] = 304
 dependencies   [0x000077505ccd4898,0x000077505ccd48a0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750205048b0} 'nextBoolean' '()Z' in 'kotlin/random/Random'
  #           [sp+0x20]  (sp of caller)
  0x000077505ccd45a0:   mov    0x8(%rsi),%r10d
  0x000077505ccd45a4:   movabs $0x800000000,%r11
  0x000077505ccd45ae:   add    %r11,%r10
  0x000077505ccd45b1:   cmp    %r10,%rax
  0x000077505ccd45b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd45ba:   xchg   %ax,%ax
  0x000077505ccd45bc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd45c0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd45c7:   push   %rbp
  0x000077505ccd45c8:   sub    $0x10,%rsp                   ;*synchronization entry
                                                            ; - kotlin.random.Random::nextBoolean@-1 (line 163)
  0x000077505ccd45cc:   mov    0x8(%rsi),%r10d
  0x000077505ccd45d0:   cmp    $0x1280,%r10d                ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd45d7:   jne    0x000077505ccd4651           ;*invokevirtual nextBits {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd45d9:   mov    0xc(%rsi),%r10d              ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd45dd:   mov    0x18(%rsi),%r8d
  0x000077505ccd45e1:   mov    0x1c(%rsi),%r9d              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd45e5:   mov    %r9d,0x18(%rsi)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd45e9:   mov    0x14(%rsi),%r11d
  0x000077505ccd45ed:   mov    %r8d,0x14(%rsi)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd45f1:   mov    0x20(%rsi),%ecx              ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd45f4:   mov    0x10(%rsi),%r8d
  0x000077505ccd45f8:   mov    %r8d,0xc(%rsi)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd45fc:   mov    %r11d,0x10(%rsi)             ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd4600:   mov    %r10d,%r8d
  0x000077505ccd4603:   shr    $0x2,%r8d
  0x000077505ccd4607:   xor    %r10d,%r8d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd460a:   mov    %ecx,%r10d
  0x000077505ccd460d:   add    $0x587c5,%r10d
  0x000077505ccd4614:   mov    %r10d,0x20(%rsi)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd4618:   mov    %r8d,%ebp
  0x000077505ccd461b:   shl    %ebp
  0x000077505ccd461d:   xor    %r8d,%ebp
  0x000077505ccd4620:   xor    %r9d,%ebp
  0x000077505ccd4623:   shl    $0x4,%r9d
  0x000077505ccd4627:   xor    %r9d,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd462a:   mov    %ebp,0x1c(%rsi)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd462d:   add    %ecx,%ebp
  0x000077505ccd462f:   add    $0x587c5,%ebp
  0x000077505ccd4635:   shr    $0x1f,%ebp                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::takeUpperBits@5 (line 376)
                                                            ; - kotlin.random.XorWowRandom::nextBits@5 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
  0x000077505ccd4638:   test   %ebp,%ebp
  0x000077505ccd463a:   jne    0x000077505ccd4660           ;*synchronization entry
                                                            ; - kotlin.random.Random::nextBoolean@-1 (line 163)
  0x000077505ccd463c:   xor    %eax,%eax
  0x000077505ccd463e:   add    $0x10,%rsp
  0x000077505ccd4642:   pop    %rbp
  0x000077505ccd4643:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd464a:   ja     0x000077505ccd466c
  0x000077505ccd4650:   ret
  0x000077505ccd4651:   mov    %rsi,%rbp
  0x000077505ccd4654:   mov    $0xffffffde,%esi
  0x000077505ccd4659:   xchg   %ax,%ax
  0x000077505ccd465b:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual nextBits {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd4660:   mov    $0xffffff45,%esi
  0x000077505ccd4665:   xchg   %ax,%ax
  0x000077505ccd4667:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.Random::nextBoolean@5 (line 163)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd466c:   movabs $0x77505ccd4643,%r10         ;   {internal_word}
  0x000077505ccd4676:   mov    %r10,0x360(%r15)
  0x000077505ccd467d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd4682:   hlt
  0x000077505ccd4683:   hlt
  0x000077505ccd4684:   hlt
  0x000077505ccd4685:   hlt
  0x000077505ccd4686:   hlt
  0x000077505ccd4687:   hlt
  0x000077505ccd4688:   hlt
  0x000077505ccd4689:   hlt
  0x000077505ccd468a:   hlt
  0x000077505ccd468b:   hlt
  0x000077505ccd468c:   hlt
  0x000077505ccd468d:   hlt
  0x000077505ccd468e:   hlt
  0x000077505ccd468f:   hlt
  0x000077505ccd4690:   hlt
  0x000077505ccd4691:   hlt
  0x000077505ccd4692:   hlt
  0x000077505ccd4693:   hlt
  0x000077505ccd4694:   hlt
  0x000077505ccd4695:   hlt
  0x000077505ccd4696:   hlt
  0x000077505ccd4697:   hlt
  0x000077505ccd4698:   hlt
  0x000077505ccd4699:   hlt
  0x000077505ccd469a:   hlt
  0x000077505ccd469b:   hlt
  0x000077505ccd469c:   hlt
  0x000077505ccd469d:   hlt
  0x000077505ccd469e:   hlt
  0x000077505ccd469f:   hlt
[Exception Handler]
  0x000077505ccd46a0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd46a5:   call   0x000077505ccd46aa
  0x000077505ccd46aa:   subq   $0x5,(%rsp)
  0x000077505ccd46af:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd46b4:   hlt
  0x000077505ccd46b5:   hlt
  0x000077505ccd46b6:   hlt
  0x000077505ccd46b7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     461  123       4       kotlin.random.XorWowRandom::nextBits (9 bytes)
 total in heap  [0x000077505ccd4910,0x000077505ccd4cf0] = 992
 relocation     [0x000077505ccd4a70,0x000077505ccd4a80] = 16
 main code      [0x000077505ccd4a80,0x000077505ccd4b60] = 224
 stub code      [0x000077505ccd4b60,0x000077505ccd4b78] = 24
 oops           [0x000077505ccd4b78,0x000077505ccd4b80] = 8
 metadata       [0x000077505ccd4b80,0x000077505ccd4b98] = 24
 scopes data    [0x000077505ccd4b98,0x000077505ccd4bf8] = 96
 scopes pcs     [0x000077505ccd4bf8,0x000077505ccd4ce8] = 240
 dependencies   [0x000077505ccd4ce8,0x000077505ccd4cf0] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020503508} 'nextBits' '(I)I' in 'kotlin/random/XorWowRandom'
  # this:     rsi:rsi   = 'kotlin/random/XorWowRandom'
  # parm0:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x000077505ccd4a80:   mov    0x8(%rsi),%r10d
  0x000077505ccd4a84:   movabs $0x800000000,%r11
  0x000077505ccd4a8e:   add    %r11,%r10
  0x000077505ccd4a91:   cmp    %r10,%rax
  0x000077505ccd4a94:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd4a9a:   xchg   %ax,%ax
  0x000077505ccd4a9c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd4aa0:   sub    $0x18,%rsp
  0x000077505ccd4aa7:   mov    %rbp,0x10(%rsp)              ;*synchronization entry
                                                            ; - kotlin.random.XorWowRandom::nextBits@-1 (line 54)
  0x000077505ccd4aac:   mov    0x10(%rsi),%r10d
  0x000077505ccd4ab0:   mov    0x14(%rsi),%r8d
  0x000077505ccd4ab4:   mov    %r8d,0x10(%rsi)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4ab8:   mov    0x18(%rsi),%r11d
  0x000077505ccd4abc:   mov    %r11d,0x14(%rsi)             ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4ac0:   mov    0x1c(%rsi),%r8d              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4ac4:   mov    %r8d,0x18(%rsi)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4ac8:   mov    0xc(%rsi),%r11d              ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4acc:   mov    %r10d,0xc(%rsi)              ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4ad0:   mov    0x20(%rsi),%r9d              ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4ad4:   mov    %r8d,%r10d
  0x000077505ccd4ad7:   shl    $0x4,%r10d
  0x000077505ccd4adb:   mov    %r9d,%ecx
  0x000077505ccd4ade:   add    $0x587c5,%ecx
  0x000077505ccd4ae4:   mov    %ecx,0x20(%rsi)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4ae7:   mov    %r11d,%ecx
  0x000077505ccd4aea:   shr    $0x2,%ecx
  0x000077505ccd4aed:   xor    %r11d,%ecx                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4af0:   mov    %edx,%ebx
  0x000077505ccd4af2:   neg    %ebx
  0x000077505ccd4af4:   mov    %ecx,%eax
  0x000077505ccd4af6:   shl    %eax
  0x000077505ccd4af8:   xor    %ecx,%eax
  0x000077505ccd4afa:   xor    %r8d,%eax
  0x000077505ccd4afd:   xor    %r10d,%eax                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4b00:   mov    %eax,0x1c(%rsi)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
  0x000077505ccd4b03:   add    %r9d,%eax
  0x000077505ccd4b06:   sar    $0x1f,%ebx
  0x000077505ccd4b09:   add    $0x587c5,%eax
  0x000077505ccd4b0f:   mov    $0x20,%ecx
  0x000077505ccd4b14:   sub    %edx,%ecx
  0x000077505ccd4b16:   shr    %cl,%eax
  0x000077505ccd4b18:   and    %ebx,%eax                    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::takeUpperBits@11 (line 376)
                                                            ; - kotlin.random.XorWowRandom::nextBits@5 (line 54)
  0x000077505ccd4b1a:   add    $0x10,%rsp
  0x000077505ccd4b1e:   pop    %rbp
  0x000077505ccd4b1f:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd4b26:   ja     0x000077505ccd4b2d
  0x000077505ccd4b2c:   ret
  0x000077505ccd4b2d:   movabs $0x77505ccd4b1f,%r10         ;   {internal_word}
  0x000077505ccd4b37:   mov    %r10,0x360(%r15)
  0x000077505ccd4b3e:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd4b43:   hlt
  0x000077505ccd4b44:   hlt
  0x000077505ccd4b45:   hlt
  0x000077505ccd4b46:   hlt
  0x000077505ccd4b47:   hlt
  0x000077505ccd4b48:   hlt
  0x000077505ccd4b49:   hlt
  0x000077505ccd4b4a:   hlt
  0x000077505ccd4b4b:   hlt
  0x000077505ccd4b4c:   hlt
  0x000077505ccd4b4d:   hlt
  0x000077505ccd4b4e:   hlt
  0x000077505ccd4b4f:   hlt
  0x000077505ccd4b50:   hlt
  0x000077505ccd4b51:   hlt
  0x000077505ccd4b52:   hlt
  0x000077505ccd4b53:   hlt
  0x000077505ccd4b54:   hlt
  0x000077505ccd4b55:   hlt
  0x000077505ccd4b56:   hlt
  0x000077505ccd4b57:   hlt
  0x000077505ccd4b58:   hlt
  0x000077505ccd4b59:   hlt
  0x000077505ccd4b5a:   hlt
  0x000077505ccd4b5b:   hlt
  0x000077505ccd4b5c:   hlt
  0x000077505ccd4b5d:   hlt
  0x000077505ccd4b5e:   hlt
  0x000077505ccd4b5f:   hlt
[Exception Handler]
  0x000077505ccd4b60:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd4b65:   call   0x000077505ccd4b6a
  0x000077505ccd4b6a:   subq   $0x5,(%rsp)
  0x000077505ccd4b6f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd4b74:   hlt
  0x000077505ccd4b75:   hlt
  0x000077505ccd4b76:   hlt
  0x000077505ccd4b77:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     468  124       3       java.lang.String::indexOf (29 bytes)
 total in heap  [0x000077505522bd10,0x000077505522c300] = 1520
 relocation     [0x000077505522be70,0x000077505522bed0] = 96
 main code      [0x000077505522bee0,0x000077505522c120] = 576
 stub code      [0x000077505522c120,0x000077505522c170] = 80
 metadata       [0x000077505522c170,0x000077505522c180] = 16
 scopes data    [0x000077505522c180,0x000077505522c1f8] = 120
 scopes pcs     [0x000077505522c1f8,0x000077505522c2f8] = 256
 dependencies   [0x000077505522c2f8,0x000077505522c300] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000077502000b248} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000077505522bee0:   mov    0x8(%rsi),%r10d
  0x000077505522bee4:   movabs $0x800000000,%r11
  0x000077505522beee:   add    %r11,%r10
  0x000077505522bef1:   cmp    %rax,%r10
  0x000077505522bef4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522befa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505522bf00:   mov    %eax,-0x14000(%rsp)
  0x000077505522bf07:   push   %rbp
  0x000077505522bf08:   sub    $0x40,%rsp
  0x000077505522bf0c:   movabs $0x775020420c80,%rdi         ;   {metadata(method data for {method} {0x000077502000b248} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000077505522bf16:   mov    0xf4(%rdi),%ebx
  0x000077505522bf1c:   add    $0x2,%ebx
  0x000077505522bf1f:   mov    %ebx,0xf4(%rdi)
  0x000077505522bf25:   and    $0x7fe,%ebx
  0x000077505522bf2b:   cmp    $0x0,%ebx
  0x000077505522bf2e:   je     0x000077505522c07f           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::indexOf@0 (line 2423)
  0x000077505522bf34:   mov    %rsi,%rdi
  0x000077505522bf37:   movabs $0x775020420c80,%rbx         ;   {metadata(method data for {method} {0x000077502000b248} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000077505522bf41:   addq   $0x1,0x138(%rbx)
  0x000077505522bf49:   movabs $0x775020293aa8,%rdi         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000077505522bf53:   mov    0xf4(%rdi),%ebx
  0x000077505522bf59:   add    $0x2,%ebx
  0x000077505522bf5c:   mov    %ebx,0xf4(%rdi)
  0x000077505522bf62:   and    $0x1ffffe,%ebx
  0x000077505522bf68:   cmp    $0x0,%ebx
  0x000077505522bf6b:   je     0x000077505522c0a0
  0x000077505522bf71:   movabs $0x775020293aa8,%rdi         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000077505522bf7b:   incl   0x148(%rdi)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@3 (line 4553)
                                                            ; - java.lang.String::indexOf@1 (line 2423)
  0x000077505522bf81:   movsbl 0x10(%rsi),%edi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@7 (line 4553)
                                                            ; - java.lang.String::indexOf@1 (line 2423)
  0x000077505522bf85:   cmp    $0x0,%edi
  0x000077505522bf88:   movabs $0x775020293aa8,%rdi         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000077505522bf92:   movabs $0x158,%rbx
  0x000077505522bf9c:   jne    0x000077505522bfac
  0x000077505522bfa2:   movabs $0x168,%rbx
  0x000077505522bfac:   mov    (%rdi,%rbx,1),%rax
  0x000077505522bfb0:   lea    0x1(%rax),%rax
  0x000077505522bfb4:   mov    %rax,(%rdi,%rbx,1)
  0x000077505522bfb8:   jne    0x000077505522bfd8           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@10 (line 4553)
                                                            ; - java.lang.String::indexOf@1 (line 2423)
  0x000077505522bfbe:   movabs $0x775020293aa8,%rdi         ;   {metadata(method data for {method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000077505522bfc8:   incl   0x178(%rdi)
  0x000077505522bfce:   mov    $0x1,%edi
  0x000077505522bfd3:   jmp    0x000077505522bfdd           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@14 (line 4553)
                                                            ; - java.lang.String::indexOf@1 (line 2423)
  0x000077505522bfd8:   mov    $0x0,%edi                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::isLatin1@18 (line 4553)
                                                            ; - java.lang.String::indexOf@1 (line 2423)
  0x000077505522bfdd:   and    $0x1,%edi
  0x000077505522bfe0:   cmp    $0x0,%edi
  0x000077505522bfe3:   movabs $0x775020420c80,%rdi         ;   {metadata(method data for {method} {0x000077502000b248} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000077505522bfed:   movabs $0x170,%rbx
  0x000077505522bff7:   je     0x000077505522c007
  0x000077505522bffd:   movabs $0x180,%rbx
  0x000077505522c007:   mov    (%rdi,%rbx,1),%rax
  0x000077505522c00b:   lea    0x1(%rax),%rax
  0x000077505522c00f:   mov    %rax,(%rdi,%rbx,1)
  0x000077505522c013:   je     0x000077505522c05f           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::indexOf@4 (line 2423)
  0x000077505522c019:   mov    0x14(%rsi),%esi
  0x000077505522c01c:   shl    $0x3,%rsi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::indexOf@8 (line 2423)
  0x000077505522c020:   movabs $0x775020420c80,%rdi         ;   {metadata(method data for {method} {0x000077502000b248} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000077505522c02a:   addq   $0x1,0x190(%rdi)
  0x000077505522c032:   nopl   0x0(%rax,%rax,1)
  0x000077505522c037:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::indexOf@13 (line 2423)
                                                            ;   {static_call}
  0x000077505522c03c:   movabs $0x775020420c80,%rsi         ;   {metadata(method data for {method} {0x000077502000b248} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000077505522c046:   incl   0x1a0(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::indexOf@16 (line 2423)
  0x000077505522c04c:   add    $0x40,%rsp
  0x000077505522c050:   pop    %rbp
  0x000077505522c051:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522c058:   ja     0x000077505522c0c1
  0x000077505522c05e:   ret
  0x000077505522c05f:   mov    0x14(%rsi),%esi
  0x000077505522c062:   shl    $0x3,%rsi                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::indexOf@20 (line 2424)
  0x000077505522c066:   nop
  0x000077505522c067:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::indexOf@25 (line 2424)
                                                            ;   {static_call}
  0x000077505522c06c:   add    $0x40,%rsp
  0x000077505522c070:   pop    %rbp
  0x000077505522c071:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522c078:   ja     0x000077505522c0d7
  0x000077505522c07e:   ret
  0x000077505522c07f:   movabs $0x77502000b248,%r10         ;   {metadata({method} {0x000077502000b248} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000077505522c089:   mov    %r10,0x8(%rsp)
  0x000077505522c08e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522c096:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::indexOf@-1 (line 2423)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522c09b:   jmp    0x000077505522bf34
  0x000077505522c0a0:   movabs $0x77502000f248,%r10         ;   {metadata({method} {0x000077502000f248} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000077505522c0aa:   mov    %r10,0x8(%rsp)
  0x000077505522c0af:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522c0b7:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::isLatin1@-1 (line 4553)
                                                            ; - java.lang.String::indexOf@1 (line 2423)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522c0bc:   jmp    0x000077505522bf71
  0x000077505522c0c1:   movabs $0x77505522c051,%r10         ;   {internal_word}
  0x000077505522c0cb:   mov    %r10,0x360(%r15)
  0x000077505522c0d2:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522c0d7:   movabs $0x77505522c071,%r10         ;   {internal_word}
  0x000077505522c0e1:   mov    %r10,0x360(%r15)
  0x000077505522c0e8:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522c0ed:   nop
  0x000077505522c0ee:   nop
  0x000077505522c0ef:   mov    0x3d8(%r15),%rax
  0x000077505522c0f6:   movq   $0x0,0x3d8(%r15)
  0x000077505522c101:   movq   $0x0,0x3e0(%r15)
  0x000077505522c10c:   add    $0x40,%rsp
  0x000077505522c110:   pop    %rbp
  0x000077505522c111:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522c116:   hlt
  0x000077505522c117:   hlt
  0x000077505522c118:   hlt
  0x000077505522c119:   hlt
  0x000077505522c11a:   hlt
  0x000077505522c11b:   hlt
  0x000077505522c11c:   hlt
  0x000077505522c11d:   hlt
  0x000077505522c11e:   hlt
  0x000077505522c11f:   hlt
[Stub Code]
  0x000077505522c120:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522c125:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522c12f:   jmp    0x000077505522c12f           ;   {runtime_call}
  0x000077505522c134:   nop
  0x000077505522c135:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522c13f:   jmp    0x000077505522c13f           ;   {runtime_call}
[Exception Handler]
  0x000077505522c144:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522c149:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522c153:   and    $0xfffffffffffffff0,%rsp
  0x000077505522c157:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522c15c:   hlt
[Deopt Handler Code]
  0x000077505522c15d:   movabs $0x77505522c15d,%r10         ;   {section_word}
  0x000077505522c167:   push   %r10
  0x000077505522c169:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522c16e:   hlt
  0x000077505522c16f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     471  125       3       java.lang.AbstractStringBuilder::putStringAt (34 bytes)
 total in heap  [0x000077505522c310,0x000077505522ca40] = 1840
 relocation     [0x000077505522c470,0x000077505522c4d8] = 104
 main code      [0x000077505522c4e0,0x000077505522c7a0] = 704
 stub code      [0x000077505522c7a0,0x000077505522c7f0] = 80
 metadata       [0x000077505522c7f0,0x000077505522c808] = 24
 scopes data    [0x000077505522c808,0x000077505522c8c8] = 192
 scopes pcs     [0x000077505522c8c8,0x000077505522ca28] = 352
 dependencies   [0x000077505522ca28,0x000077505522ca30] = 8
 nul chk table  [0x000077505522ca30,0x000077505522ca40] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750200b31f0} 'putStringAt' '(ILjava/lang/String;II)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/String'
  # parm2:    r8        = int
  # parm3:    r9        = int
  #           [sp+0x90]  (sp of caller)
  0x000077505522c4e0:   mov    0x8(%rsi),%r10d
  0x000077505522c4e4:   movabs $0x800000000,%r11
  0x000077505522c4ee:   add    %r11,%r10
  0x000077505522c4f1:   cmp    %rax,%r10
  0x000077505522c4f4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522c4fa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505522c500:   mov    %eax,-0x14000(%rsp)
  0x000077505522c507:   push   %rbp
  0x000077505522c508:   sub    $0x80,%rsp
  0x000077505522c50f:   movabs $0x77502041e0a8,%rdi         ;   {metadata(method data for {method} {0x00007750200b31f0} 'putStringAt' '(ILjava/lang/String;II)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c519:   mov    0xf4(%rdi),%ebx
  0x000077505522c51f:   add    $0x2,%ebx
  0x000077505522c522:   mov    %ebx,0xf4(%rdi)
  0x000077505522c528:   and    $0x7fe,%ebx
  0x000077505522c52e:   cmp    $0x0,%ebx
  0x000077505522c531:   je     0x000077505522c6f2           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@0 (line 1717)
  0x000077505522c537:   mov    %rsi,%rdi
  0x000077505522c53a:   movabs $0x77502041e0a8,%rbx         ;   {metadata(method data for {method} {0x00007750200b31f0} 'putStringAt' '(ILjava/lang/String;II)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c544:   addq   $0x1,0x138(%rbx)
  0x000077505522c54c:   movabs $0x77502041e340,%rdi         ;   {metadata(method data for {method} {0x00007750200b2d70} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c556:   mov    0xf4(%rdi),%ebx
  0x000077505522c55c:   add    $0x2,%ebx
  0x000077505522c55f:   mov    %ebx,0xf4(%rdi)
  0x000077505522c565:   and    $0x1ffffe,%ebx
  0x000077505522c56b:   cmp    $0x0,%ebx
  0x000077505522c56e:   je     0x000077505522c713
  0x000077505522c574:   movabs $0x77502041e340,%rdi         ;   {metadata(method data for {method} {0x00007750200b2d70} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c57e:   incl   0x148(%rdi)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::getCoder@3 (line 1673)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1717)
  0x000077505522c584:   movsbl 0x10(%rsi),%edi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1673)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1717)
  0x000077505522c588:   movabs $0x77502041e340,%rbx         ;   {metadata(method data for {method} {0x00007750200b2d70} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c592:   incl   0x158(%rbx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::getCoder@10 (line 1673)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1717)
  0x000077505522c598:   shl    $0x18,%edi
  0x000077505522c59b:   sar    $0x18,%edi
  0x000077505522c59e:   cmp    (%rcx),%rax                  ; implicit exception: dispatches to 0x000077505522c734
                                                            ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1717)
  0x000077505522c5a1:   mov    %rcx,%rbx
  0x000077505522c5a4:   movabs $0x77502041e0a8,%rax         ;   {metadata(method data for {method} {0x00007750200b31f0} 'putStringAt' '(ILjava/lang/String;II)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c5ae:   addq   $0x1,0x170(%rax)
  0x000077505522c5b6:   movabs $0x7750202a8de0,%rbx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x000077505522c5c0:   mov    0xf4(%rbx),%eax
  0x000077505522c5c6:   add    $0x2,%eax
  0x000077505522c5c9:   mov    %eax,0xf4(%rbx)
  0x000077505522c5cf:   and    $0x1ffffe,%eax
  0x000077505522c5d5:   cmp    $0x0,%eax
  0x000077505522c5d8:   je     0x000077505522c739
  0x000077505522c5de:   movabs $0x7750202a8de0,%rbx         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x000077505522c5e8:   incl   0x148(%rbx)                  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@3 (line 4545)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1717)
  0x000077505522c5ee:   movsbl 0x10(%rcx),%ebx              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@7 (line 4545)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1717)
  0x000077505522c5f2:   movabs $0x7750202a8de0,%rax         ;   {metadata(method data for {method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x000077505522c5fc:   incl   0x158(%rax)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.String::coder@10 (line 4545)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1717)
  0x000077505522c602:   shl    $0x18,%ebx
  0x000077505522c605:   sar    $0x18,%ebx
  0x000077505522c608:   cmp    %ebx,%edi
  0x000077505522c60a:   movabs $0x77502041e0a8,%rdi         ;   {metadata(method data for {method} {0x00007750200b31f0} 'putStringAt' '(ILjava/lang/String;II)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c614:   movabs $0x1b8,%rbx
  0x000077505522c61e:   jne    0x000077505522c62e
  0x000077505522c624:   movabs $0x1a8,%rbx
  0x000077505522c62e:   mov    (%rdi,%rbx,1),%rax
  0x000077505522c632:   lea    0x1(%rax),%rax
  0x000077505522c636:   mov    %rax,(%rdi,%rbx,1)
  0x000077505522c63a:   jne    0x000077505522c64b           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1717)
  0x000077505522c640:   mov    %rcx,%rbx
  0x000077505522c643:   mov    %rdx,%rdi
  0x000077505522c646:   jmp    0x000077505522c69c           ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@15 (line 1720)
  0x000077505522c64b:   mov    %r9d,0x60(%rsp)
  0x000077505522c650:   mov    %r8d,0x64(%rsp)
  0x000077505522c655:   mov    %rcx,0x58(%rsp)
  0x000077505522c65a:   mov    %edx,0x68(%rsp)
  0x000077505522c65e:   mov    %rsi,%rdi
  0x000077505522c661:   movabs $0x77502041e0a8,%rbx         ;   {metadata(method data for {method} {0x00007750200b31f0} 'putStringAt' '(ILjava/lang/String;II)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c66b:   addq   $0x1,0x1c8(%rbx)
  0x000077505522c673:   mov    %rsi,%rdi
  0x000077505522c676:   mov    %rdi,%rsi                    ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@12 (line 1718)
  0x000077505522c679:   mov    %rdi,0x50(%rsp)
  0x000077505522c67e:   nop
  0x000077505522c67f:   call   0x000077505c788080           ; ImmutableOopMap {[80]=Oop [88]=Oop }
                                                            ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@12 (line 1718)
                                                            ;   {optimized virtual_call}
  0x000077505522c684:   mov    0x60(%rsp),%r9d
  0x000077505522c689:   mov    0x64(%rsp),%r8d
  0x000077505522c68e:   mov    0x58(%rsp),%rbx
  0x000077505522c693:   mov    0x68(%rsp),%edi
  0x000077505522c697:   mov    0x50(%rsp),%rsi
  0x000077505522c69c:   mov    0x14(%rsi),%edx
  0x000077505522c69f:   shl    $0x3,%rdx                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1720)
  0x000077505522c6a3:   movsbl 0x10(%rsi),%esi              ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@23 (line 1720)
  0x000077505522c6a7:   mov    %rbx,%rcx
  0x000077505522c6aa:   movabs $0x77502041e0a8,%rax         ;   {metadata(method data for {method} {0x00007750200b31f0} 'putStringAt' '(ILjava/lang/String;II)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c6b4:   addq   $0x1,0x200(%rax)
  0x000077505522c6bc:   mov    %r9,%rax
  0x000077505522c6bf:   sub    %r8d,%eax
  0x000077505522c6c2:   mov    %r8,%rcx
  0x000077505522c6c5:   mov    %rdi,%r8
  0x000077505522c6c8:   mov    %rsi,%r9
  0x000077505522c6cb:   mov    %rax,%rdi
  0x000077505522c6ce:   mov    %rbx,%rsi                    ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@30 (line 1720)
  0x000077505522c6d1:   nopw   0x0(%rax,%rax,1)
  0x000077505522c6d7:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@30 (line 1720)
                                                            ;   {optimized virtual_call}
  0x000077505522c6dc:   add    $0x80,%rsp
  0x000077505522c6e3:   pop    %rbp
  0x000077505522c6e4:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522c6eb:   ja     0x000077505522c75a
  0x000077505522c6f1:   ret
  0x000077505522c6f2:   movabs $0x7750200b31f0,%r10         ;   {metadata({method} {0x00007750200b31f0} 'putStringAt' '(ILjava/lang/String;II)V' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c6fc:   mov    %r10,0x8(%rsp)
  0x000077505522c701:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522c709:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@-1 (line 1717)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522c70e:   jmp    0x000077505522c537
  0x000077505522c713:   movabs $0x7750200b2d70,%r10         ;   {metadata({method} {0x00007750200b2d70} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x000077505522c71d:   mov    %r10,0x8(%rsp)
  0x000077505522c722:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522c72a:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.AbstractStringBuilder::getCoder@-1 (line 1673)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1717)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522c72f:   jmp    0x000077505522c574
  0x000077505522c734:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop rcx=Oop }
                                                            ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1717)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522c739:   movabs $0x77502000f0f8,%r10         ;   {metadata({method} {0x000077502000f0f8} 'coder' '()B' in 'java/lang/String')}
  0x000077505522c743:   mov    %r10,0x8(%rsp)
  0x000077505522c748:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522c750:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rcx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.String::coder@-1 (line 4545)
                                                            ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1717)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522c755:   jmp    0x000077505522c5de
  0x000077505522c75a:   movabs $0x77505522c6e4,%r10         ;   {internal_word}
  0x000077505522c764:   mov    %r10,0x360(%r15)
  0x000077505522c76b:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522c770:   nop
  0x000077505522c771:   nop
  0x000077505522c772:   mov    0x3d8(%r15),%rax
  0x000077505522c779:   movq   $0x0,0x3d8(%r15)
  0x000077505522c784:   movq   $0x0,0x3e0(%r15)
  0x000077505522c78f:   add    $0x80,%rsp
  0x000077505522c796:   pop    %rbp
  0x000077505522c797:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522c79c:   hlt
  0x000077505522c79d:   hlt
  0x000077505522c79e:   hlt
  0x000077505522c79f:   hlt
[Stub Code]
  0x000077505522c7a0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522c7a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522c7af:   jmp    0x000077505522c7af           ;   {runtime_call}
  0x000077505522c7b4:   nop
  0x000077505522c7b5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522c7bf:   jmp    0x000077505522c7bf           ;   {runtime_call}
[Exception Handler]
  0x000077505522c7c4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522c7c9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522c7d3:   and    $0xfffffffffffffff0,%rsp
  0x000077505522c7d7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522c7dc:   hlt
[Deopt Handler Code]
  0x000077505522c7dd:   movabs $0x77505522c7dd,%r10         ;   {section_word}
  0x000077505522c7e7:   push   %r10
  0x000077505522c7e9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522c7ee:   hlt
  0x000077505522c7ef:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     474  126       3       java.util.Arrays::copyOf (19 bytes)
 total in heap  [0x000077505522ca90,0x000077505522d098] = 1544
 relocation     [0x000077505522cbf0,0x000077505522cc40] = 80
 main code      [0x000077505522cc40,0x000077505522cee0] = 672
 stub code      [0x000077505522cee0,0x000077505522cf20] = 64
 metadata       [0x000077505522cf20,0x000077505522cf30] = 16
 scopes data    [0x000077505522cf30,0x000077505522cfb0] = 128
 scopes pcs     [0x000077505522cfb0,0x000077505522d080] = 208
 dependencies   [0x000077505522d080,0x000077505522d088] = 8
 nul chk table  [0x000077505522d088,0x000077505522d098] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00007750201c7f68} 'copyOf' '([BI)[B' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000077505522cc40:   mov    %eax,-0x14000(%rsp)
  0x000077505522cc47:   push   %rbp
  0x000077505522cc48:   sub    $0x60,%rsp
  0x000077505522cc4c:   mov    %rsi,%r8
  0x000077505522cc4f:   mov    %rdx,%r9
  0x000077505522cc52:   movabs $0x77502041cbd8,%rbx         ;   {metadata(method data for {method} {0x00007750201c7f68} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000077505522cc5c:   mov    0xf4(%rbx),%edx
  0x000077505522cc62:   add    $0x2,%edx
  0x000077505522cc65:   mov    %edx,0xf4(%rbx)
  0x000077505522cc6b:   and    $0x7fe,%edx
  0x000077505522cc71:   cmp    $0x0,%edx
  0x000077505522cc74:   je     0x000077505522ce32           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOf@0 (line 3537)
  0x000077505522cc7a:   mov    %r9,%rbx
  0x000077505522cc7d:   movabs $0x8000407e0,%rdx            ;   {metadata({type array byte})}
  0x000077505522cc87:   movslq %ebx,%rbx
  0x000077505522cc8a:   mov    %rbx,%rdi
  0x000077505522cc8d:   cmp    $0xffffff,%rbx
  0x000077505522cc94:   ja     0x000077505522ce53
  0x000077505522cc9a:   movabs $0x17,%rsi
  0x000077505522cca4:   lea    (%rsi,%rbx,1),%rsi
  0x000077505522cca8:   and    $0xfffffffffffffff8,%rsi
  0x000077505522ccac:   mov    0x108(%r15),%rax
  0x000077505522ccb3:   lea    (%rax,%rsi,1),%rsi
  0x000077505522ccb7:   cmp    0x118(%r15),%rsi
  0x000077505522ccbe:   ja     0x000077505522ce53
  0x000077505522ccc4:   mov    %rsi,0x108(%r15)
  0x000077505522cccb:   sub    %rax,%rsi
  0x000077505522ccce:   movq   $0x1,(%rax)
  0x000077505522ccd5:   mov    %rdx,%rcx
  0x000077505522ccd8:   movabs $0x800000000,%r10
  0x000077505522cce2:   sub    %r10,%rcx
  0x000077505522cce5:   mov    %ecx,0x8(%rax)
  0x000077505522cce8:   mov    %ebx,0xc(%rax)
  0x000077505522cceb:   sub    $0x10,%rsi
  0x000077505522ccef:   je     0x000077505522cd0f
  0x000077505522ccf5:   test   %rsi,%rsi
  0x000077505522ccf8:   je     0x000077505522cd0f
  0x000077505522ccfe:   xor    %rbx,%rbx
  0x000077505522cd01:   shr    $0x3,%rsi
  0x000077505522cd05:   mov    %rbx,0x8(%rax,%rsi,8)
  0x000077505522cd0a:   dec    %rsi
  0x000077505522cd0d:   jne    0x000077505522cd05           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOf@1 (line 3537)
  0x000077505522cd0f:   mov    0xc(%r8),%esi                ; implicit exception: dispatches to 0x000077505522ce5d
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOf@9 (line 3538)
  0x000077505522cd13:   movabs $0x77502041cbd8,%rdx         ;   {metadata(method data for {method} {0x00007750201c7f68} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000077505522cd1d:   addq   $0x1,0x138(%rdx)
  0x000077505522cd25:   movabs $0x7750203ffa50,%rdx         ;   {metadata(method data for {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x000077505522cd2f:   mov    0xf4(%rdx),%ecx
  0x000077505522cd35:   add    $0x2,%ecx
  0x000077505522cd38:   mov    %ecx,0xf4(%rdx)
  0x000077505522cd3e:   and    $0x1ffffe,%ecx
  0x000077505522cd44:   cmp    $0x0,%ecx
  0x000077505522cd47:   je     0x000077505522ce62
  0x000077505522cd4d:   cmp    %r9d,%esi
  0x000077505522cd50:   movabs $0x7750203ffa50,%rdx         ;   {metadata(method data for {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x000077505522cd5a:   movabs $0x138,%rcx
  0x000077505522cd64:   jg     0x000077505522cd74
  0x000077505522cd6a:   movabs $0x148,%rcx
  0x000077505522cd74:   mov    (%rdx,%rcx,1),%rdi
  0x000077505522cd78:   lea    0x1(%rdi),%rdi
  0x000077505522cd7c:   mov    %rdi,(%rdx,%rcx,1)
  0x000077505522cd80:   jg     0x000077505522cd99           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@2 (line 1649)
                                                            ; - java.util.Arrays::copyOf@11 (line 3539)
  0x000077505522cd86:   movabs $0x7750203ffa50,%rdx         ;   {metadata(method data for {method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x000077505522cd90:   incl   0x158(%rdx)
  0x000077505522cd96:   mov    %rsi,%r9                     ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Math::min@6 (line 1649)
                                                            ; - java.util.Arrays::copyOf@11 (line 3539)
  0x000077505522cd99:   movabs $0x77502041cbd8,%rsi         ;   {metadata(method data for {method} {0x00007750201c7f68} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000077505522cda3:   addq   $0x1,0x148(%rsi)
  0x000077505522cdab:   mov    %r8,%rsi
  0x000077505522cdae:   mov    $0x0,%edx
  0x000077505522cdb3:   mov    %rax,%rcx
  0x000077505522cdb6:   mov    $0x0,%r8d
  0x000077505522cdbc:   mov    %rax,0x50(%rsp)
  0x000077505522cdc1:   lea    (%rdx,%r9,1),%rdi
  0x000077505522cdc5:   cmp    0xc(%rsi),%edi
  0x000077505522cdc8:   ja     0x000077505522ce83
  0x000077505522cdce:   lea    (%r8,%r9,1),%rdi
  0x000077505522cdd2:   cmp    0xc(%rcx),%edi
  0x000077505522cdd5:   ja     0x000077505522ce83
  0x000077505522cddb:   test   %r9d,%r9d
  0x000077505522cdde:   jl     0x000077505522ce83
  0x000077505522cde4:   movslq %edx,%rdx
  0x000077505522cde7:   movslq %r8d,%r8
  0x000077505522cdea:   lea    0x10(%rsi,%rdx,1),%rdi
  0x000077505522cdef:   lea    0x10(%rcx,%r8,1),%rsi
  0x000077505522cdf4:   mov    %r9,%rdx
  0x000077505522cdf7:   test   $0xf,%esp
  0x000077505522cdfd:   je     0x000077505522ce15
  0x000077505522ce03:   sub    $0x8,%rsp
  0x000077505522ce07:   call   Stub::jbyte_disjoint_arraycopy;   {runtime_call StubRoutines (2)}
  0x000077505522ce0c:   add    $0x8,%rsp
  0x000077505522ce10:   jmp    0x000077505522ce1a
  0x000077505522ce15:   call   Stub::jbyte_disjoint_arraycopy;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOf@14 (line 3538)
                                                            ;   {runtime_call StubRoutines (2)}
  0x000077505522ce1a:   mov    0x50(%rsp),%rax
  0x000077505522ce1f:   add    $0x60,%rsp
  0x000077505522ce23:   pop    %rbp
  0x000077505522ce24:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522ce2b:   ja     0x000077505522ce8e
  0x000077505522ce31:   ret
  0x000077505522ce32:   movabs $0x7750201c7f68,%r10         ;   {metadata({method} {0x00007750201c7f68} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000077505522ce3c:   mov    %r10,0x8(%rsp)
  0x000077505522ce41:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522ce49:   call   0x000077505c82e680           ; ImmutableOopMap {r8=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Arrays::copyOf@-1 (line 3537)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522ce4e:   jmp    0x000077505522cc7a
  0x000077505522ce53:   call   0x000077505c82a480           ; ImmutableOopMap {r8=Oop }
                                                            ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOf@1 (line 3537)
                                                            ;   {runtime_call new_type_array Runtime1 stub}
  0x000077505522ce58:   jmp    0x000077505522cd0f
  0x000077505522ce5d:   call   0x000077505c8295a0           ; ImmutableOopMap {r8=Oop rax=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOf@9 (line 3538)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522ce62:   movabs $0x77502018a548,%r10         ;   {metadata({method} {0x000077502018a548} 'min' '(II)I' in 'java/lang/Math')}
  0x000077505522ce6c:   mov    %r10,0x8(%rsp)
  0x000077505522ce71:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522ce79:   call   0x000077505c82e680           ; ImmutableOopMap {r8=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Math::min@-1 (line 1649)
                                                            ; - java.util.Arrays::copyOf@11 (line 3539)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522ce7e:   jmp    0x000077505522cd4d
  0x000077505522ce83:   nopl   0x0(%rax)
  0x000077505522ce87:   call   0x000077505c788680           ; ImmutableOopMap {[80]=Oop }
                                                            ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Arrays::copyOf@14 (line 3538)
                                                            ;   {static_call}
  0x000077505522ce8c:   jmp    0x000077505522ce1a
  0x000077505522ce8e:   movabs $0x77505522ce24,%r10         ;   {internal_word}
  0x000077505522ce98:   mov    %r10,0x360(%r15)
  0x000077505522ce9f:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522cea4:   nop
  0x000077505522cea5:   nop
  0x000077505522cea6:   mov    0x3d8(%r15),%rax
  0x000077505522cead:   movq   $0x0,0x3d8(%r15)
  0x000077505522ceb8:   movq   $0x0,0x3e0(%r15)
  0x000077505522cec3:   add    $0x60,%rsp
  0x000077505522cec7:   pop    %rbp
  0x000077505522cec8:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522cecd:   hlt
  0x000077505522cece:   hlt
  0x000077505522cecf:   hlt
  0x000077505522ced0:   hlt
  0x000077505522ced1:   hlt
  0x000077505522ced2:   hlt
  0x000077505522ced3:   hlt
  0x000077505522ced4:   hlt
  0x000077505522ced5:   hlt
  0x000077505522ced6:   hlt
  0x000077505522ced7:   hlt
  0x000077505522ced8:   hlt
  0x000077505522ced9:   hlt
  0x000077505522ceda:   hlt
  0x000077505522cedb:   hlt
  0x000077505522cedc:   hlt
  0x000077505522cedd:   hlt
  0x000077505522cede:   hlt
  0x000077505522cedf:   hlt
[Stub Code]
  0x000077505522cee0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522cee5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522ceef:   jmp    0x000077505522ceef           ;   {runtime_call}
[Exception Handler]
  0x000077505522cef4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522cef9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522cf03:   and    $0xfffffffffffffff0,%rsp
  0x000077505522cf07:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522cf0c:   hlt
[Deopt Handler Code]
  0x000077505522cf0d:   movabs $0x77505522cf0d,%r10         ;   {section_word}
  0x000077505522cf17:   push   %r10
  0x000077505522cf19:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522cf1e:   hlt
  0x000077505522cf1f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     478  127       3       java.lang.CharacterDataLatin1::toLowerCase (39 bytes)
 total in heap  [0x000077505522d110,0x000077505522d658] = 1352
 relocation     [0x000077505522d270,0x000077505522d2b0] = 64
 main code      [0x000077505522d2c0,0x000077505522d4e0] = 544
 stub code      [0x000077505522d4e0,0x000077505522d510] = 48
 metadata       [0x000077505522d510,0x000077505522d528] = 24
 scopes data    [0x000077505522d528,0x000077505522d590] = 104
 scopes pcs     [0x000077505522d590,0x000077505522d640] = 176
 dependencies   [0x000077505522d640,0x000077505522d648] = 8
 nul chk table  [0x000077505522d648,0x000077505522d658] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750201d4830} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000077505522d2c0:   mov    0x8(%rsi),%r10d
  0x000077505522d2c4:   movabs $0x800000000,%r11
  0x000077505522d2ce:   add    %r11,%r10
  0x000077505522d2d1:   cmp    %rax,%r10
  0x000077505522d2d4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522d2da:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505522d2e0:   mov    %eax,-0x14000(%rsp)
  0x000077505522d2e7:   push   %rbp
  0x000077505522d2e8:   sub    $0x40,%rsp
  0x000077505522d2ec:   movabs $0x7750204212a8,%rax         ;   {metadata(method data for {method} {0x00007750201d4830} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000077505522d2f6:   mov    0xf4(%rax),%edi
  0x000077505522d2fc:   add    $0x2,%edi
  0x000077505522d2ff:   mov    %edi,0xf4(%rax)
  0x000077505522d305:   and    $0x7fe,%edi
  0x000077505522d30b:   cmp    $0x0,%edi
  0x000077505522d30e:   je     0x000077505522d42e           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 139)
  0x000077505522d314:   movabs $0x7750204212a8,%rax         ;   {metadata(method data for {method} {0x00007750201d4830} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000077505522d31e:   movabs $0x800066570,%r10            ;   {metadata('java/lang/CharacterDataLatin1')}
  0x000077505522d328:   mov    %r10,0x148(%rax)
  0x000077505522d32f:   addq   $0x1,0x150(%rax)
  0x000077505522d337:   movabs $0x77502041f140,%rax         ;   {metadata(method data for {method} {0x00007750201d3dc0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000077505522d341:   mov    0xf4(%rax),%esi
  0x000077505522d347:   add    $0x2,%esi
  0x000077505522d34a:   mov    %esi,0xf4(%rax)
  0x000077505522d350:   and    $0x1ffffe,%esi
  0x000077505522d356:   cmp    $0x0,%esi
  0x000077505522d359:   je     0x000077505522d44f
  0x000077505522d35f:   mov    %rdx,%rax
  0x000077505522d362:   and    $0xffff,%eax
  0x000077505522d368:   mov    $0x100,%esi
  0x000077505522d36d:   movabs $0x62ac0f2e0,%rdi            ;   {oop([I{0x000000062ac0f2e0})}
  0x000077505522d377:   cmp    %eax,%esi
  0x000077505522d379:   jbe    0x000077505522d470
  0x000077505522d37f:   movslq %eax,%rax
  0x000077505522d382:   mov    0x10(%rdi,%rax,4),%eax       ; implicit exception: dispatches to 0x000077505522d47e
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                            ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 140)
  0x000077505522d386:   mov    %rax,%rsi
  0x000077505522d389:   and    $0x20000,%esi
  0x000077505522d38f:   cmp    $0x0,%esi
  0x000077505522d392:   movabs $0x7750204212a8,%rsi         ;   {metadata(method data for {method} {0x00007750201d4830} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000077505522d39c:   movabs $0x170,%rdi
  0x000077505522d3a6:   je     0x000077505522d3b6
  0x000077505522d3ac:   movabs $0x180,%rdi
  0x000077505522d3b6:   mov    (%rsi,%rdi,1),%rbx
  0x000077505522d3ba:   lea    0x1(%rbx),%rbx
  0x000077505522d3be:   mov    %rbx,(%rsi,%rdi,1)
  0x000077505522d3c2:   je     0x000077505522d418           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 142)
  0x000077505522d3c8:   mov    %rax,%rsi
  0x000077505522d3cb:   and    $0x7fc0000,%esi
  0x000077505522d3d1:   cmp    $0x7fc0000,%esi
  0x000077505522d3d7:   movabs $0x7750204212a8,%rsi         ;   {metadata(method data for {method} {0x00007750201d4830} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000077505522d3e1:   movabs $0x190,%rdi
  0x000077505522d3eb:   je     0x000077505522d3fb
  0x000077505522d3f1:   movabs $0x1a0,%rdi
  0x000077505522d3fb:   mov    (%rsi,%rdi,1),%rbx
  0x000077505522d3ff:   lea    0x1(%rbx),%rbx
  0x000077505522d403:   mov    %rbx,(%rsi,%rdi,1)
  0x000077505522d407:   je     0x000077505522d418           ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 142)
  0x000077505522d40d:   shl    $0x5,%eax
  0x000077505522d410:   sar    $0x17,%eax
  0x000077505522d413:   add    %edx,%eax
  0x000077505522d415:   mov    %rax,%rdx                    ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 147)
  0x000077505522d418:   mov    %rdx,%rax
  0x000077505522d41b:   add    $0x40,%rsp
  0x000077505522d41f:   pop    %rbp
  0x000077505522d420:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522d427:   ja     0x000077505522d483
  0x000077505522d42d:   ret
  0x000077505522d42e:   movabs $0x7750201d4830,%r10         ;   {metadata({method} {0x00007750201d4830} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000077505522d438:   mov    %r10,0x8(%rsp)
  0x000077505522d43d:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522d445:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 139)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522d44a:   jmp    0x000077505522d314
  0x000077505522d44f:   movabs $0x7750201d3dc0,%r10         ;   {metadata({method} {0x00007750201d3dc0} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000077505522d459:   mov    %r10,0x8(%rsp)
  0x000077505522d45e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522d466:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 73)
                                                            ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 140)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522d46b:   jmp    0x000077505522d35f
  0x000077505522d470:   mov    %rax,(%rsp)
  0x000077505522d474:   mov    %rdi,0x8(%rsp)
  0x000077505522d479:   call   0x000077505c828ca0           ; ImmutableOopMap {rdi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                            ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 140)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000077505522d47e:   call   0x000077505c8295a0           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                            ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 140)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522d483:   movabs $0x77505522d420,%r10         ;   {internal_word}
  0x000077505522d48d:   mov    %r10,0x360(%r15)
  0x000077505522d494:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522d499:   nop
  0x000077505522d49a:   nop
  0x000077505522d49b:   mov    0x3d8(%r15),%rax
  0x000077505522d4a2:   movq   $0x0,0x3d8(%r15)
  0x000077505522d4ad:   movq   $0x0,0x3e0(%r15)
  0x000077505522d4b8:   add    $0x40,%rsp
  0x000077505522d4bc:   pop    %rbp
  0x000077505522d4bd:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522d4c2:   hlt
  0x000077505522d4c3:   hlt
  0x000077505522d4c4:   hlt
  0x000077505522d4c5:   hlt
  0x000077505522d4c6:   hlt
  0x000077505522d4c7:   hlt
  0x000077505522d4c8:   hlt
  0x000077505522d4c9:   hlt
  0x000077505522d4ca:   hlt
  0x000077505522d4cb:   hlt
  0x000077505522d4cc:   hlt
  0x000077505522d4cd:   hlt
  0x000077505522d4ce:   hlt
  0x000077505522d4cf:   hlt
  0x000077505522d4d0:   hlt
  0x000077505522d4d1:   hlt
  0x000077505522d4d2:   hlt
  0x000077505522d4d3:   hlt
  0x000077505522d4d4:   hlt
  0x000077505522d4d5:   hlt
  0x000077505522d4d6:   hlt
  0x000077505522d4d7:   hlt
  0x000077505522d4d8:   hlt
  0x000077505522d4d9:   hlt
  0x000077505522d4da:   hlt
  0x000077505522d4db:   hlt
  0x000077505522d4dc:   hlt
  0x000077505522d4dd:   hlt
  0x000077505522d4de:   hlt
  0x000077505522d4df:   hlt
[Exception Handler]
  0x000077505522d4e0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505522d4e5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522d4ef:   and    $0xfffffffffffffff0,%rsp
  0x000077505522d4f3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522d4f8:   hlt
[Deopt Handler Code]
  0x000077505522d4f9:   movabs $0x77505522d4f9,%r10         ;   {section_word}
  0x000077505522d503:   push   %r10
  0x000077505522d505:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522d50a:   hlt
  0x000077505522d50b:   hlt
  0x000077505522d50c:   hlt
  0x000077505522d50d:   hlt
  0x000077505522d50e:   hlt
  0x000077505522d50f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     481  128       4       de.maschmi.blog.Adapter::methodToBeGuarded (28 bytes)
 total in heap  [0x000077505ccd4d10,0x000077505ccd5278] = 1384
 relocation     [0x000077505ccd4e70,0x000077505ccd4e90] = 32
 main code      [0x000077505ccd4ea0,0x000077505ccd4fc0] = 288
 stub code      [0x000077505ccd4fc0,0x000077505ccd4fd8] = 24
 oops           [0x000077505ccd4fd8,0x000077505ccd4fe8] = 16
 metadata       [0x000077505ccd4fe8,0x000077505ccd5020] = 56
 scopes data    [0x000077505ccd5020,0x000077505ccd50f0] = 208
 scopes pcs     [0x000077505ccd50f0,0x000077505ccd5260] = 368
 dependencies   [0x000077505ccd5260,0x000077505ccd5268] = 8
 nul chk table  [0x000077505ccd5268,0x000077505ccd5278] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020501588} 'methodToBeGuarded' '(Ljava/lang/String;)Ljava/lang/String;' in 'de/maschmi/blog/Adapter'
  # this:     rsi:rsi   = 'de/maschmi/blog/Adapter'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x000077505ccd4ea0:   mov    0x8(%rsi),%r10d
  0x000077505ccd4ea4:   movabs $0x800000000,%r11
  0x000077505ccd4eae:   add    %r11,%r10
  0x000077505ccd4eb1:   cmp    %r10,%rax
  0x000077505ccd4eb4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd4eba:   xchg   %ax,%ax
  0x000077505ccd4ebc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd4ec0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd4ec7:   push   %rbp
  0x000077505ccd4ec8:   sub    $0x20,%rsp                   ;*synchronization entry
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@-1
  0x000077505ccd4ecc:   test   %rdx,%rdx
  0x000077505ccd4ecf:   je     0x000077505ccd4f74           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@3
  0x000077505ccd4ed5:   mov    0xc(%rsi),%ebp               ;*getfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@7 (line 10)
  0x000077505ccd4ed8:   mov    0x8(%r12,%rbp,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd4f98
  0x000077505ccd4edd:   cmp    $0x1280,%r10d                ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd4ee4:   jne    0x000077505ccd4f63
  0x000077505ccd4ee6:   lea    (%r12,%rbp,8),%r10           ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4eea:   mov    0xc(%r10),%r8d               ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4eee:   mov    0x18(%r10),%r11d
  0x000077505ccd4ef2:   mov    0x1c(%r10),%esi              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4ef6:   mov    %esi,0x18(%r10)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4efa:   mov    0x14(%r10),%ecx
  0x000077505ccd4efe:   mov    %r11d,0x14(%r10)             ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f02:   mov    0x20(%r10),%r11d             ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f06:   mov    0x10(%r10),%ebx
  0x000077505ccd4f0a:   mov    %ebx,0xc(%r10)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f0e:   mov    %ecx,0x10(%r10)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f12:   mov    %r8d,%r9d
  0x000077505ccd4f15:   shr    $0x2,%r9d
  0x000077505ccd4f19:   xor    %r8d,%r9d                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f1c:   mov    %r11d,%r8d
  0x000077505ccd4f1f:   add    $0x587c5,%r8d
  0x000077505ccd4f26:   mov    %r8d,0x20(%r10)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f2a:   mov    %r9d,%ebp
  0x000077505ccd4f2d:   shl    %ebp
  0x000077505ccd4f2f:   xor    %r9d,%ebp
  0x000077505ccd4f32:   xor    %esi,%ebp
  0x000077505ccd4f34:   shl    $0x4,%esi
  0x000077505ccd4f37:   xor    %esi,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f39:   mov    %ebp,0x1c(%r10)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f3d:   add    %r11d,%ebp
  0x000077505ccd4f40:   add    $0x587c5,%ebp
  0x000077505ccd4f46:   shr    $0x1f,%ebp                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::takeUpperBits@5 (line 376)
                                                            ; - kotlin.random.XorWowRandom::nextBits@5 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f49:   test   %ebp,%ebp
  0x000077505ccd4f4b:   jne    0x000077505ccd4f88           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@5 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
  0x000077505ccd4f4d:   mov    %rdx,%rax
  0x000077505ccd4f50:   add    $0x20,%rsp
  0x000077505ccd4f54:   pop    %rbp
  0x000077505ccd4f55:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd4f5c:   ja     0x000077505ccd4fa4
  0x000077505ccd4f62:   ret
  0x000077505ccd4f63:   mov    $0xffffffde,%esi
  0x000077505ccd4f68:   mov    %rdx,(%rsp)
  0x000077505ccd4f6c:   data16 xchg %ax,%ax
  0x000077505ccd4f6f:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=NarrowOop [0]=Oop }
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd4f74:   mov    %rsi,%rbp
  0x000077505ccd4f77:   mov    %rdx,0x8(%rsp)
  0x000077505ccd4f7c:   mov    $0xffffff45,%esi
  0x000077505ccd4f81:   xchg   %ax,%ax
  0x000077505ccd4f83:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@3
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd4f88:   mov    $0xffffff45,%esi
  0x000077505ccd4f8d:   mov    %rdx,(%rsp)
  0x000077505ccd4f91:   xchg   %ax,%ax
  0x000077505ccd4f93:   call   0x000077505c78d600           ; ImmutableOopMap {[0]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.Random::nextBoolean@5 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd4f98:   mov    $0xfffffff6,%esi
  0x000077505ccd4f9d:   xchg   %ax,%ax
  0x000077505ccd4f9f:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd4fa4:   movabs $0x77505ccd4f55,%r10         ;   {internal_word}
  0x000077505ccd4fae:   mov    %r10,0x360(%r15)
  0x000077505ccd4fb5:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd4fba:   hlt
  0x000077505ccd4fbb:   hlt
  0x000077505ccd4fbc:   hlt
  0x000077505ccd4fbd:   hlt
  0x000077505ccd4fbe:   hlt
  0x000077505ccd4fbf:   hlt
[Exception Handler]
  0x000077505ccd4fc0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd4fc5:   call   0x000077505ccd4fca
  0x000077505ccd4fca:   subq   $0x5,(%rsp)
  0x000077505ccd4fcf:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd4fd4:   hlt
  0x000077505ccd4fd5:   hlt
  0x000077505ccd4fd6:   hlt
  0x000077505ccd4fd7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     485  129       4       kotlin.Result::constructor-impl (2 bytes)
 total in heap  [0x000077505ccd5290,0x000077505ccd54a8] = 536
 relocation     [0x000077505ccd53f0,0x000077505ccd5400] = 16
 main code      [0x000077505ccd5400,0x000077505ccd5440] = 64
 stub code      [0x000077505ccd5440,0x000077505ccd5458] = 24
 oops           [0x000077505ccd5458,0x000077505ccd5460] = 8
 metadata       [0x000077505ccd5460,0x000077505ccd5468] = 8
 scopes data    [0x000077505ccd5468,0x000077505ccd5470] = 8
 scopes pcs     [0x000077505ccd5470,0x000077505ccd54a0] = 48
 dependencies   [0x000077505ccd54a0,0x000077505ccd54a8] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020511630} 'constructor-impl' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'kotlin/Result'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x000077505ccd5400:   sub    $0x18,%rsp
  0x000077505ccd5407:   mov    %rbp,0x10(%rsp)              ;*synchronization entry
                                                            ; - kotlin.Result::constructor-impl@-1
  0x000077505ccd540c:   mov    %rsi,%rax
  0x000077505ccd540f:   add    $0x10,%rsp
  0x000077505ccd5413:   pop    %rbp
  0x000077505ccd5414:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd541b:   ja     0x000077505ccd5422
  0x000077505ccd5421:   ret
  0x000077505ccd5422:   movabs $0x77505ccd5414,%r10         ;   {internal_word}
  0x000077505ccd542c:   mov    %r10,0x360(%r15)
  0x000077505ccd5433:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd5438:   hlt
  0x000077505ccd5439:   hlt
  0x000077505ccd543a:   hlt
  0x000077505ccd543b:   hlt
  0x000077505ccd543c:   hlt
  0x000077505ccd543d:   hlt
  0x000077505ccd543e:   hlt
  0x000077505ccd543f:   hlt
[Exception Handler]
  0x000077505ccd5440:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd5445:   call   0x000077505ccd544a
  0x000077505ccd544a:   subq   $0x5,(%rsp)
  0x000077505ccd544f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd5454:   hlt
  0x000077505ccd5455:   hlt
  0x000077505ccd5456:   hlt
  0x000077505ccd5457:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     486  130       1       de.maschmi.blog.Guard::access$getAdapter$p (5 bytes)
 total in heap  [0x000077505ccd5590,0x000077505ccd5860] = 720
 relocation     [0x000077505ccd56f0,0x000077505ccd5718] = 40
 main code      [0x000077505ccd5720,0x000077505ccd57a0] = 128
 stub code      [0x000077505ccd57a0,0x000077505ccd57d0] = 48
 oops           [0x000077505ccd57d0,0x000077505ccd57d8] = 8
 metadata       [0x000077505ccd57d8,0x000077505ccd57e0] = 8
 scopes data    [0x000077505ccd57e0,0x000077505ccd57f8] = 24
 scopes pcs     [0x000077505ccd57f8,0x000077505ccd5848] = 80
 dependencies   [0x000077505ccd5848,0x000077505ccd5850] = 8
 nul chk table  [0x000077505ccd5850,0x000077505ccd5860] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020514d00} 'access$getAdapter$p' '(Lde/maschmi/blog/Guard;)Lde/maschmi/blog/Adapter;' in 'de/maschmi/blog/Guard'
  # parm0:    rsi:rsi   = 'de/maschmi/blog/Guard'
  #           [sp+0x40]  (sp of caller)
  0x000077505ccd5720:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd5727:   push   %rbp
  0x000077505ccd5728:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::access$getAdapter$p@0 (line 6)
  0x000077505ccd572c:   mov    0xc(%rsi),%eax               ; implicit exception: dispatches to 0x000077505ccd5746
  0x000077505ccd572f:   shl    $0x3,%rax                    ;*getfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
  0x000077505ccd5733:   add    $0x30,%rsp
  0x000077505ccd5737:   pop    %rbp
  0x000077505ccd5738:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd573f:   ja     0x000077505ccd574b
  0x000077505ccd5745:   ret
  0x000077505ccd5746:   call   0x000077505c8295a0           ; ImmutableOopMap {}
                                                            ;*getfield adapter {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505ccd574b:   movabs $0x77505ccd5738,%r10         ;   {internal_word}
  0x000077505ccd5755:   mov    %r10,0x360(%r15)
  0x000077505ccd575c:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd5761:   nop
  0x000077505ccd5762:   nop
  0x000077505ccd5763:   mov    0x3d8(%r15),%rax
  0x000077505ccd576a:   movq   $0x0,0x3d8(%r15)
  0x000077505ccd5775:   movq   $0x0,0x3e0(%r15)
  0x000077505ccd5780:   add    $0x30,%rsp
  0x000077505ccd5784:   pop    %rbp
  0x000077505ccd5785:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505ccd578a:   hlt
  0x000077505ccd578b:   hlt
  0x000077505ccd578c:   hlt
  0x000077505ccd578d:   hlt
  0x000077505ccd578e:   hlt
  0x000077505ccd578f:   hlt
  0x000077505ccd5790:   hlt
  0x000077505ccd5791:   hlt
  0x000077505ccd5792:   hlt
  0x000077505ccd5793:   hlt
  0x000077505ccd5794:   hlt
  0x000077505ccd5795:   hlt
  0x000077505ccd5796:   hlt
  0x000077505ccd5797:   hlt
  0x000077505ccd5798:   hlt
  0x000077505ccd5799:   hlt
  0x000077505ccd579a:   hlt
  0x000077505ccd579b:   hlt
  0x000077505ccd579c:   hlt
  0x000077505ccd579d:   hlt
  0x000077505ccd579e:   hlt
  0x000077505ccd579f:   hlt
[Exception Handler]
  0x000077505ccd57a0:   call   0x000077505c82b380           ;   {no_reloc}
  0x000077505ccd57a5:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505ccd57af:   and    $0xfffffffffffffff0,%rsp
  0x000077505ccd57b3:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505ccd57b8:   hlt
[Deopt Handler Code]
  0x000077505ccd57b9:   movabs $0x77505ccd57b9,%r10         ;   {section_word}
  0x000077505ccd57c3:   push   %r10
  0x000077505ccd57c5:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd57ca:   hlt
  0x000077505ccd57cb:   hlt
  0x000077505ccd57cc:   hlt
  0x000077505ccd57cd:   hlt
  0x000077505ccd57ce:   hlt
  0x000077505ccd57cf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     487  131       3       de.maschmi.blog.Guard::<init> (16 bytes)
 total in heap  [0x000077505522d690,0x000077505522e270] = 3040
 relocation     [0x000077505522d7f0,0x000077505522d8a0] = 176
 main code      [0x000077505522d8a0,0x000077505522dea0] = 1536
 stub code      [0x000077505522dea0,0x000077505522df10] = 112
 oops           [0x000077505522df10,0x000077505522df28] = 24
 metadata       [0x000077505522df28,0x000077505522df58] = 48
 scopes data    [0x000077505522df58,0x000077505522e070] = 280
 scopes pcs     [0x000077505522e070,0x000077505522e250] = 480
 dependencies   [0x000077505522e250,0x000077505522e258] = 8
 nul chk table  [0x000077505522e258,0x000077505522e270] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard'
  # this:     rsi:rsi   = 'de/maschmi/blog/Guard'
  # parm0:    rdx:rdx   = 'de/maschmi/blog/Adapter'
  #           [sp+0xa0]  (sp of caller)
  0x000077505522d8a0:   mov    0x8(%rsi),%r10d
  0x000077505522d8a4:   movabs $0x800000000,%r11
  0x000077505522d8ae:   add    %r11,%r10
  0x000077505522d8b1:   cmp    %rax,%r10
  0x000077505522d8b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522d8ba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505522d8c0:   mov    %eax,-0x14000(%rsp)
  0x000077505522d8c7:   push   %rbp
  0x000077505522d8c8:   sub    $0x90,%rsp
  0x000077505522d8cf:   mov    %rsi,0x78(%rsp)
  0x000077505522d8d4:   mov    %rdx,0x80(%rsp)
  0x000077505522d8dc:   movabs $0x7750205165b8,%rdi         ;   {metadata(method data for {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x000077505522d8e6:   mov    0xf4(%rdi),%eax
  0x000077505522d8ec:   add    $0x2,%eax
  0x000077505522d8ef:   mov    %eax,0xf4(%rdi)
  0x000077505522d8f5:   and    $0x7fe,%eax
  0x000077505522d8fb:   cmp    $0x0,%eax
  0x000077505522d8fe:   je     0x000077505522dd18           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::<init>@0
  0x000077505522d904:   movabs $0x7750205165b8,%rdi         ;   {metadata(method data for {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x000077505522d90e:   addq   $0x1,0x138(%rdi)
  0x000077505522d916:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522d920:   mov    0xf4(%rdi),%eax
  0x000077505522d926:   add    $0x2,%eax
  0x000077505522d929:   mov    %eax,0xf4(%rdi)
  0x000077505522d92f:   and    $0x1ffffe,%eax
  0x000077505522d935:   cmp    $0x0,%eax
  0x000077505522d938:   je     0x000077505522dd39
  0x000077505522d93e:   cmp    $0x0,%rdx
  0x000077505522d942:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522d94c:   movabs $0x138,%rax
  0x000077505522d956:   jne    0x000077505522d966
  0x000077505522d95c:   movabs $0x148,%rax
  0x000077505522d966:   mov    (%rdi,%rax,1),%rcx
  0x000077505522d96a:   lea    0x1(%rcx),%rcx
  0x000077505522d96e:   mov    %rcx,(%rdi,%rax,1)
  0x000077505522d972:   jne    0x000077505522db71           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522d978:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522d982:   addq   $0x1,0x158(%rdi)
  0x000077505522d98a:   movabs $0x775020512820,%rdi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522d994:   mov    0xf4(%rdi),%eax
  0x000077505522d99a:   add    $0x2,%eax
  0x000077505522d99d:   mov    %eax,0xf4(%rdi)
  0x000077505522d9a3:   and    $0x1ffffe,%eax
  0x000077505522d9a9:   cmp    $0x0,%eax
  0x000077505522d9ac:   je     0x000077505522dd5a
  0x000077505522d9b2:   nopw   0x0(%rax,%rax,1)
  0x000077505522d9b8:   jmp    0x000077505522dd8a           ;   {no_reloc}
  0x000077505522d9bd:   add    %al,(%rax)
  0x000077505522d9bf:   add    %al,(%rax)
  0x000077505522d9c1:   add    %cl,-0x75(%rcx)
  0x000077505522d9c4:   xchg   %ecx,(%rax)
  0x000077505522d9c6:   add    %eax,(%rax)
  0x000077505522d9c8:   add    %cl,-0x73(%rax)
  0x000077505522d9cb:   js     0x000077505522d9fd
  0x000077505522d9cd:   cmp    0x118(%r15),%rdi
  0x000077505522d9d4:   ja     0x000077505522dd94
  0x000077505522d9da:   mov    %rdi,0x108(%r15)
  0x000077505522d9e1:   movq   $0x1,(%rax)
  0x000077505522d9e8:   mov    %rdx,%rcx
  0x000077505522d9eb:   movabs $0x800000000,%r10
  0x000077505522d9f5:   sub    %r10,%rcx
  0x000077505522d9f8:   mov    %ecx,0x8(%rax)
  0x000077505522d9fb:   xor    %rcx,%rcx
  0x000077505522d9fe:   mov    %ecx,0xc(%rax)
  0x000077505522da01:   xor    %rcx,%rcx
  0x000077505522da04:   mov    %rcx,0x10(%rax)
  0x000077505522da08:   mov    %rcx,0x18(%rax)
  0x000077505522da0c:   mov    %rcx,0x20(%rax)
  0x000077505522da10:   mov    %rcx,0x28(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@0 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522da14:   movabs $0x775020512820,%rsi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522da1e:   addq   $0x1,0x138(%rsi)
  0x000077505522da26:   movabs $0x62ae6db68,%rsi            ;   {oop("adapter"{0x000000062ae6db68})}
  0x000077505522da30:   mov    %rax,0x70(%rsp)
  0x000077505522da35:   xchg   %ax,%ax
  0x000077505522da37:   call   0x000077505c788680           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*invokestatic createParameterIsNullExceptionMessage {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@5 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {static_call}
  0x000077505522da3c:   mov    0x70(%rsp),%rdx
  0x000077505522da41:   movabs $0x775020512820,%rsi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522da4b:   addq   $0x1,0x148(%rsi)
  0x000077505522da53:   mov    %rax,%rdx
  0x000077505522da56:   mov    0x70(%rsp),%rsi              ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@8 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522da5b:   nopl   0x0(%rax)
  0x000077505522da5f:   call   0x000077505c788080           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@8 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {optimized virtual_call}
  0x000077505522da64:   movabs $0x775020512820,%rsi         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522da6e:   addq   $0x1,0x158(%rsi)
  0x000077505522da76:   movabs $0x775020512f50,%rsi         ;   {metadata(method data for {method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522da80:   mov    0xf4(%rsi),%edi
  0x000077505522da86:   add    $0x2,%edi
  0x000077505522da89:   mov    %edi,0xf4(%rsi)
  0x000077505522da8f:   and    $0x1ffffe,%edi
  0x000077505522da95:   cmp    $0x0,%edi
  0x000077505522da98:   je     0x000077505522dda1
  0x000077505522da9e:   movabs $0x62ae75aa0,%rsi            ;   {oop(a 'java/lang/Class'{0x000000062ae75aa0} = 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522daa8:   mov    %rsi,%rdi
  0x000077505522daab:   movabs $0x775020512f50,%rbx         ;   {metadata(method data for {method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522dab5:   addq   $0x1,0x138(%rbx)
  0x000077505522dabd:   movabs $0x775020420928,%rdi         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000077505522dac7:   mov    0xf4(%rdi),%ebx
  0x000077505522dacd:   add    $0x2,%ebx
  0x000077505522dad0:   mov    %ebx,0xf4(%rdi)
  0x000077505522dad6:   and    $0x1ffffe,%ebx
  0x000077505522dadc:   cmp    $0x0,%ebx
  0x000077505522dadf:   je     0x000077505522ddc2
  0x000077505522dae5:   mov    0x2c(%rsi),%esi              ; implicit exception: dispatches to 0x000077505522dde3
  0x000077505522dae8:   shl    $0x3,%rsi                    ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@1 (line 862)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522daec:   cmp    $0x0,%rsi
  0x000077505522daf0:   movabs $0x775020420928,%rdi         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000077505522dafa:   movabs $0x138,%rbx
  0x000077505522db04:   je     0x000077505522db14
  0x000077505522db0a:   movabs $0x148,%rbx
  0x000077505522db14:   mov    (%rdi,%rbx,1),%rax
  0x000077505522db18:   lea    0x1(%rax),%rax
  0x000077505522db1c:   mov    %rax,(%rdi,%rbx,1)
  0x000077505522db20:   je     0x000077505522db3e           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@6 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522db26:   movabs $0x775020420928,%rdi         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000077505522db30:   incl   0x158(%rdi)
  0x000077505522db36:   mov    %rsi,%rdi
  0x000077505522db39:   jmp    0x000077505522db67           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@10 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522db3e:   movabs $0x62ae75aa0,%rsi            ;   {oop(a 'java/lang/Class'{0x000000062ae75aa0} = 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522db48:   mov    %rsi,%rdi
  0x000077505522db4b:   movabs $0x775020420928,%rbx         ;   {metadata(method data for {method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000077505522db55:   addq   $0x1,0x170(%rbx)
  0x000077505522db5d:   xchg   %ax,%ax
  0x000077505522db5f:   call   0x000077505c788080           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*invokevirtual initClassName {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@14 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {optimized virtual_call}
  0x000077505522db64:   mov    %rax,%rdi                    ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Class::getName@17 (line 863)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522db67:   mov    0x70(%rsp),%rax
  0x000077505522db6c:   jmp    0x000077505522dbf1           ;*invokestatic sanitizeStackTrace {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@6 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522db71:   mov    %rsi,%rdi
  0x000077505522db74:   movabs $0x7750205165b8,%rbx         ;   {metadata(method data for {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x000077505522db7e:   addq   $0x1,0x148(%rbx)
  0x000077505522db86:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522db90:   mov    0xf4(%rdi),%ebx
  0x000077505522db96:   add    $0x2,%ebx
  0x000077505522db99:   mov    %ebx,0xf4(%rdi)
  0x000077505522db9f:   and    $0x1ffffe,%ebx
  0x000077505522dba5:   cmp    $0x0,%ebx
  0x000077505522dba8:   je     0x000077505522dde8
  0x000077505522dbae:   movsbl 0x38(%r15),%edi
  0x000077505522dbb3:   cmp    $0x0,%edi
  0x000077505522dbb6:   jne    0x000077505522de09
  0x000077505522dbbc:   mov    %rdx,%r10
  0x000077505522dbbf:   shr    $0x3,%r10
  0x000077505522dbc3:   mov    %r10d,0xc(%rsi)
  0x000077505522dbc7:   mov    %rsi,%rdi
  0x000077505522dbca:   xor    %rdx,%rdi
  0x000077505522dbcd:   shr    $0x16,%rdi
  0x000077505522dbd1:   cmp    $0x0,%rdi
  0x000077505522dbd5:   jne    0x000077505522de28           ;*putfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::<init>@12 (line 6)
  0x000077505522dbdb:   add    $0x90,%rsp
  0x000077505522dbe2:   pop    %rbp
  0x000077505522dbe3:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522dbea:   ja     0x000077505522de40
  0x000077505522dbf0:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::<init>@15 (line 6)
  0x000077505522dbf1:   movabs $0x775020512f50,%rbx         ;   {metadata(method data for {method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522dbfb:   addq   $0x1,0x170(%rbx)
  0x000077505522dc03:   mov    %rax,%rsi
  0x000077505522dc06:   mov    %rdi,%rdx                    ;*invokestatic sanitizeStackTrace {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@6 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522dc09:   nopw   0x0(%rax,%rax,1)
  0x000077505522dc0f:   call   0x000077505c788680           ; ImmutableOopMap {[128]=Oop [120]=Oop }
                                                            ;*invokestatic sanitizeStackTrace {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@6 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {static_call}
  0x000077505522dc14:   mov    0x80(%rsp),%rdx
  0x000077505522dc1c:   mov    0x78(%rsp),%rsi
  0x000077505522dc21:   cmp    $0x0,%rax
  0x000077505522dc25:   jne    0x000077505522dc3d
  0x000077505522dc27:   movabs $0x775020512820,%rbx         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522dc31:   orb    $0x1,0x161(%rbx)
  0x000077505522dc38:   jmp    0x000077505522dd10
  0x000077505522dc3d:   movabs $0x8000594a8,%rcx            ;   {metadata('java/lang/NullPointerException')}
  0x000077505522dc47:   mov    0x8(%rax),%ebx
  0x000077505522dc4a:   movabs $0x800000000,%r10
  0x000077505522dc54:   add    %r10,%rbx
  0x000077505522dc57:   cmp    0x50(%rbx),%rcx
  0x000077505522dc5b:   jne    0x000077505522dcf4
  0x000077505522dc61:   movabs $0x775020512820,%rbx         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522dc6b:   mov    0x8(%rax),%ecx
  0x000077505522dc6e:   movabs $0x800000000,%r10
  0x000077505522dc78:   add    %r10,%rcx
  0x000077505522dc7b:   cmp    0x178(%rbx),%rcx
  0x000077505522dc82:   jne    0x000077505522dc91
  0x000077505522dc84:   addq   $0x1,0x180(%rbx)
  0x000077505522dc8c:   jmp    0x000077505522dd10
  0x000077505522dc91:   cmp    0x188(%rbx),%rcx
  0x000077505522dc98:   jne    0x000077505522dca7
  0x000077505522dc9a:   addq   $0x1,0x190(%rbx)
  0x000077505522dca2:   jmp    0x000077505522dd10
  0x000077505522dca7:   cmpq   $0x0,0x178(%rbx)
  0x000077505522dcb2:   jne    0x000077505522dccb
  0x000077505522dcb4:   mov    %rcx,0x178(%rbx)
  0x000077505522dcbb:   movq   $0x1,0x180(%rbx)
  0x000077505522dcc6:   jmp    0x000077505522dd10
  0x000077505522dccb:   cmpq   $0x0,0x188(%rbx)
  0x000077505522dcd6:   jne    0x000077505522dcef
  0x000077505522dcd8:   mov    %rcx,0x188(%rbx)
  0x000077505522dcdf:   movq   $0x1,0x190(%rbx)
  0x000077505522dcea:   jmp    0x000077505522dd10
  0x000077505522dcef:   jmp    0x000077505522dd10
  0x000077505522dcf4:   movabs $0x775020512820,%rbx         ;   {metadata(method data for {method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522dcfe:   subq   $0x1,0x168(%rbx)
  0x000077505522dd06:   jmp    0x000077505522de56
  0x000077505522dd0b:   jmp    0x000077505522dd10           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@14 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
  0x000077505522dd10:   cmp    (%rax),%rax                  ; implicit exception: dispatches to 0x000077505522de5f
  0x000077505522dd13:   jmp    0x000077505522de83
  0x000077505522dd18:   movabs $0x7750205149f8,%r10         ;   {metadata({method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x000077505522dd22:   mov    %r10,0x8(%rsp)
  0x000077505522dd27:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522dd2f:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [120]=Oop rdx=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::<init>@-1
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522dd34:   jmp    0x000077505522d904
  0x000077505522dd39:   movabs $0x77502050df90,%r10         ;   {metadata({method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522dd43:   mov    %r10,0x8(%rsp)
  0x000077505522dd48:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522dd50:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop [120]=Oop rdx=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@-1 (line 130)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522dd55:   jmp    0x000077505522d93e
  0x000077505522dd5a:   movabs $0x77502050e100,%r10         ;   {metadata({method} {0x000077502050e100} 'throwParameterIsNullNPE' '(Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522dd64:   mov    %r10,0x8(%rsp)
  0x000077505522dd69:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522dd71:   call   0x000077505c82e680           ; ImmutableOopMap {[128]=Oop [120]=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@-1 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522dd76:   jmp    0x000077505522d9b2
  0x000077505522dd7b:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000077505522dd85:   mov    $0xa050f00,%eax
  0x000077505522dd8a:   call   0x000077505c82d600           ; ImmutableOopMap {[120]=Oop [128]=Oop }
                                                            ;*new {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@0 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000077505522dd8f:   jmp    0x000077505522d9b8
  0x000077505522dd94:   mov    %rdx,%rdx
  0x000077505522dd97:   call   0x000077505c829e80           ; ImmutableOopMap {[128]=Oop [120]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@0 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505522dd9c:   jmp    0x000077505522da14
  0x000077505522dda1:   movabs $0x77502050f0e0,%r10         ;   {metadata({method} {0x000077502050f0e0} 'sanitizeStackTrace' '(Ljava/lang/Throwable;)Ljava/lang/Throwable;' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522ddab:   mov    %r10,0x8(%rsp)
  0x000077505522ddb0:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522ddb8:   call   0x000077505c82e680           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@-1 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522ddbd:   jmp    0x000077505522da9e
  0x000077505522ddc2:   movabs $0x775020016bd8,%r10         ;   {metadata({method} {0x0000775020016bd8} 'getName' '()Ljava/lang/String;' in 'java/lang/Class')}
  0x000077505522ddcc:   mov    %r10,0x8(%rsp)
  0x000077505522ddd1:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522ddd9:   call   0x000077505c82e680           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Class::getName@-1 (line 862)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522ddde:   jmp    0x000077505522dae5
  0x000077505522dde3:   call   0x000077505c8295a0           ; ImmutableOopMap {[112]=Oop [120]=Oop [128]=Oop }
                                                            ;*getfield name {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.Class::getName@1 (line 862)
                                                            ; - kotlin.jvm.internal.Intrinsics::sanitizeStackTrace@3 (line 253)
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@11 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522dde8:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522ddf2:   mov    %r10,0x8(%rsp)
  0x000077505522ddf7:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522ddff:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop [128]=Oop rsi=Oop [120]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.Guard::<init>@7 (line 6)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522de04:   jmp    0x000077505522dbae
  0x000077505522de09:   mov    0xc(%rsi),%edi
  0x000077505522de0c:   shl    $0x3,%rdi
  0x000077505522de10:   cmp    $0x0,%rdi
  0x000077505522de14:   je     0x000077505522dbbc
  0x000077505522de1a:   mov    %rdi,(%rsp)
  0x000077505522de1e:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522de23:   jmp    0x000077505522dbbc
  0x000077505522de28:   cmp    $0x0,%rdx
  0x000077505522de2c:   je     0x000077505522dbdb
  0x000077505522de32:   mov    %rsi,(%rsp)
  0x000077505522de36:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505522de3b:   jmp    0x000077505522dbdb
  0x000077505522de40:   movabs $0x77505522dbe3,%r10         ;   {internal_word}
  0x000077505522de4a:   mov    %r10,0x360(%r15)
  0x000077505522de51:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522de56:   mov    %rax,(%rsp)
  0x000077505522de5a:   call   0x000077505c82b9a0           ; ImmutableOopMap {rsi=Oop [120]=Oop rdx=Oop [128]=Oop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@14 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000077505522de5f:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop [120]=Oop rdx=Oop [128]=Oop rax=Oop }
                                                            ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.jvm.internal.Intrinsics::throwParameterIsNullNPE@17 (line 140)
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@5 (line 131)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522de64:   nop
  0x000077505522de65:   nop
  0x000077505522de66:   mov    0x3d8(%r15),%rax
  0x000077505522de6d:   movq   $0x0,0x3d8(%r15)
  0x000077505522de78:   movq   $0x0,0x3e0(%r15)
  0x000077505522de83:   add    $0x90,%rsp
  0x000077505522de8a:   pop    %rbp
  0x000077505522de8b:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522de90:   hlt
  0x000077505522de91:   hlt
  0x000077505522de92:   hlt
  0x000077505522de93:   hlt
  0x000077505522de94:   hlt
  0x000077505522de95:   hlt
  0x000077505522de96:   hlt
  0x000077505522de97:   hlt
  0x000077505522de98:   hlt
  0x000077505522de99:   hlt
  0x000077505522de9a:   hlt
  0x000077505522de9b:   hlt
  0x000077505522de9c:   hlt
  0x000077505522de9d:   hlt
  0x000077505522de9e:   hlt
  0x000077505522de9f:   hlt
[Stub Code]
  0x000077505522dea0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522dea5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522deaf:   jmp    0x000077505522deaf           ;   {runtime_call}
  0x000077505522deb4:   nop
  0x000077505522deb5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522debf:   jmp    0x000077505522debf           ;   {runtime_call}
  0x000077505522dec4:   nop
  0x000077505522dec5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522decf:   jmp    0x000077505522decf           ;   {runtime_call}
  0x000077505522ded4:   nop
  0x000077505522ded5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522dedf:   jmp    0x000077505522dedf           ;   {runtime_call}
[Exception Handler]
  0x000077505522dee4:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522dee9:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522def3:   and    $0xfffffffffffffff0,%rsp
  0x000077505522def7:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522defc:   hlt
[Deopt Handler Code]
  0x000077505522defd:   movabs $0x77505522defd,%r10         ;   {section_word}
  0x000077505522df07:   push   %r10
  0x000077505522df09:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522df0e:   hlt
  0x000077505522df0f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     493  132       3       de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48 (16 bytes)
 total in heap  [0x000077505522e290,0x000077505522ee20] = 2960
 relocation     [0x000077505522e3f0,0x000077505522e498] = 168
 main code      [0x000077505522e4a0,0x000077505522eae0] = 1600
 stub code      [0x000077505522eae0,0x000077505522eb30] = 80
 oops           [0x000077505522eb30,0x000077505522eb38] = 8
 metadata       [0x000077505522eb38,0x000077505522eb80] = 72
 scopes data    [0x000077505522eb80,0x000077505522ec78] = 248
 scopes pcs     [0x000077505522ec78,0x000077505522edd8] = 352
 dependencies   [0x000077505522edd8,0x000077505522ede0] = 8
 handler table  [0x000077505522ede0,0x000077505522ee10] = 48
 nul chk table  [0x000077505522ee10,0x000077505522ee20] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard'
  #           [sp+0x90]  (sp of caller)
  0x000077505522e4a0:   mov    0x8(%rsi),%r10d
  0x000077505522e4a4:   movabs $0x800000000,%r11
  0x000077505522e4ae:   add    %r11,%r10
  0x000077505522e4b1:   cmp    %rax,%r10
  0x000077505522e4b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505522e4ba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000077505522e4c0:   mov    %eax,-0x14000(%rsp)
  0x000077505522e4c7:   push   %rbp
  0x000077505522e4c8:   sub    $0x80,%rsp
  0x000077505522e4cf:   mov    %rsi,%rbx
  0x000077505522e4d2:   movabs $0x775020516758,%rdx         ;   {metadata(method data for {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e4dc:   mov    0xf4(%rdx),%esi
  0x000077505522e4e2:   add    $0x2,%esi
  0x000077505522e4e5:   mov    %esi,0xf4(%rdx)
  0x000077505522e4eb:   and    $0x7fe,%esi
  0x000077505522e4f1:   cmp    $0x0,%esi
  0x000077505522e4f4:   je     0x000077505522e8f4           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@0 (line 9)
  0x000077505522e4fa:   movabs $0x800004000,%rdx            ;   {metadata('de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e504:   mov    0x108(%r15),%rax
  0x000077505522e50b:   lea    0x18(%rax),%rdi
  0x000077505522e50f:   cmp    0x118(%r15),%rdi
  0x000077505522e516:   ja     0x000077505522e915
  0x000077505522e51c:   mov    %rdi,0x108(%r15)
  0x000077505522e523:   movq   $0x1,(%rax)
  0x000077505522e52a:   mov    %rdx,%rcx
  0x000077505522e52d:   movabs $0x800000000,%r10
  0x000077505522e537:   sub    %r10,%rcx
  0x000077505522e53a:   mov    %ecx,0x8(%rax)
  0x000077505522e53d:   xor    %rcx,%rcx
  0x000077505522e540:   mov    %ecx,0xc(%rax)
  0x000077505522e543:   xor    %rcx,%rcx
  0x000077505522e546:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@1 (line 9)
  0x000077505522e54a:   mov    %rax,%rdx
  0x000077505522e54d:   movabs $0x775020516758,%rsi         ;   {metadata(method data for {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e557:   addq   $0x1,0x138(%rsi)
  0x000077505522e55f:   movabs $0x775020516928,%rdx         ;   {metadata(method data for {method} {0x00007750205157c8} '<init>' '(Lde/maschmi/blog/Guard;)V' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e569:   mov    0xf4(%rdx),%esi
  0x000077505522e56f:   add    $0x2,%esi
  0x000077505522e572:   mov    %esi,0xf4(%rdx)
  0x000077505522e578:   and    $0x1ffffe,%esi
  0x000077505522e57e:   cmp    $0x0,%esi
  0x000077505522e581:   je     0x000077505522e922
  0x000077505522e587:   movsbl 0x38(%r15),%edx
  0x000077505522e58c:   cmp    $0x0,%edx
  0x000077505522e58f:   jne    0x000077505522e943
  0x000077505522e595:   mov    %rbx,%r10
  0x000077505522e598:   shr    $0x3,%r10
  0x000077505522e59c:   mov    %r10d,0x10(%rax)
  0x000077505522e5a0:   mov    %rax,%rdx
  0x000077505522e5a3:   xor    %rbx,%rdx
  0x000077505522e5a6:   shr    $0x16,%rdx
  0x000077505522e5aa:   cmp    $0x0,%rdx
  0x000077505522e5ae:   jne    0x000077505522e962           ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@2
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
  0x000077505522e5b4:   mov    %rax,%rdx
  0x000077505522e5b7:   movabs $0x775020516928,%rsi         ;   {metadata(method data for {method} {0x00007750205157c8} '<init>' '(Lde/maschmi/blog/Guard;)V' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e5c1:   addq   $0x1,0x138(%rsi)
  0x000077505522e5c9:   movabs $0x775020516aa8,%rdx         ;   {metadata(method data for {method} {0x0000775020516000} '<init>' '(I)V' in 'kotlin/jvm/internal/Lambda')}
  0x000077505522e5d3:   mov    0xf4(%rdx),%esi
  0x000077505522e5d9:   add    $0x2,%esi
  0x000077505522e5dc:   mov    %esi,0xf4(%rdx)
  0x000077505522e5e2:   and    $0x1ffffe,%esi
  0x000077505522e5e8:   cmp    $0x0,%esi
  0x000077505522e5eb:   je     0x000077505522e97a
  0x000077505522e5f1:   mov    %rax,%rdx
  0x000077505522e5f4:   movabs $0x775020516aa8,%rsi         ;   {metadata(method data for {method} {0x0000775020516000} '<init>' '(I)V' in 'kotlin/jvm/internal/Lambda')}
  0x000077505522e5fe:   addq   $0x1,0x138(%rsi)
  0x000077505522e606:   movabs $0x77502024ca78,%rdx         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522e610:   mov    0xf4(%rdx),%esi
  0x000077505522e616:   add    $0x2,%esi
  0x000077505522e619:   mov    %esi,0xf4(%rdx)
  0x000077505522e61f:   and    $0x1ffffe,%esi
  0x000077505522e625:   cmp    $0x0,%esi
  0x000077505522e628:   je     0x000077505522e99b
  0x000077505522e62e:   mov    %rbx,%rdx
  0x000077505522e631:   movabs $0x775020516758,%rsi         ;   {metadata(method data for {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e63b:   addq   $0x1,0x180(%rsi)
  0x000077505522e643:   movabs $0x775020516c28,%rdx         ;   {metadata(method data for {method} {0x0000775020514c50} 'guard-IoAF18A' '(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e64d:   mov    0xf4(%rdx),%esi
  0x000077505522e653:   add    $0x2,%esi
  0x000077505522e656:   mov    %esi,0xf4(%rdx)
  0x000077505522e65c:   and    $0x1ffffe,%esi
  0x000077505522e662:   cmp    $0x0,%esi
  0x000077505522e665:   je     0x000077505522e9bc
  0x000077505522e66b:   mov    %rax,%rdx
  0x000077505522e66e:   movabs $0x775020516c28,%rsi         ;   {metadata(method data for {method} {0x0000775020514c50} 'guard-IoAF18A' '(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e678:   movabs $0x800004000,%r10            ;   {metadata('de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e682:   mov    %r10,0x148(%rsi)
  0x000077505522e689:   addq   $0x1,0x150(%rsi)
  0x000077505522e691:   movabs $0x775020516e48,%rdx         ;   {metadata(method data for {method} {0x0000775020515910} 'invoke' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e69b:   mov    0xf4(%rdx),%esi
  0x000077505522e6a1:   add    $0x2,%esi
  0x000077505522e6a4:   mov    %esi,0xf4(%rdx)
  0x000077505522e6aa:   and    $0x1ffffe,%esi
  0x000077505522e6b0:   cmp    $0x0,%esi
  0x000077505522e6b3:   je     0x000077505522e9dd
  0x000077505522e6b9:   mov    %rax,%rdx
  0x000077505522e6bc:   movabs $0x775020516e48,%rsi         ;   {metadata(method data for {method} {0x0000775020515910} 'invoke' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e6c6:   addq   $0x1,0x138(%rsi)
  0x000077505522e6ce:   movabs $0x775020516ff8,%rdx         ;   {metadata(method data for {method} {0x0000775020515870} 'invoke' '()Ljava/lang/String;' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e6d8:   mov    0xf4(%rdx),%esi
  0x000077505522e6de:   add    $0x2,%esi
  0x000077505522e6e1:   mov    %esi,0xf4(%rdx)
  0x000077505522e6e7:   and    $0x1ffffe,%esi
  0x000077505522e6ed:   cmp    $0x0,%esi
  0x000077505522e6f0:   je     0x000077505522e9fe
  0x000077505522e6f6:   movabs $0x775020516ff8,%rdx         ;   {metadata(method data for {method} {0x0000775020515870} 'invoke' '()Ljava/lang/String;' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e700:   addq   $0x1,0x138(%rdx)
  0x000077505522e708:   mov    0xc(%rbx),%esi
  0x000077505522e70b:   shl    $0x3,%rsi                    ;*getfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@4 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505522e70f:   cmp    (%rsi),%rax                  ; implicit exception: dispatches to 0x000077505522ea1f
  0x000077505522e712:   mov    %rsi,%rdx
  0x000077505522e715:   movabs $0x775020516ff8,%rdi         ;   {metadata(method data for {method} {0x0000775020515870} 'invoke' '()Ljava/lang/String;' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e71f:   addq   $0x1,0x148(%rdi)
  0x000077505522e727:   movabs $0x62ae78df0,%rdx            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {oop("FunctionOne"{0x000000062ae78df0})}
  0x000077505522e731:   nopw   0x0(%rax,%rax,1)
  0x000077505522e737:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {optimized virtual_call}
  0x000077505522e73c:   movabs $0x775020516c28,%rsi         ;   {metadata(method data for {method} {0x0000775020514c50} 'guard-IoAF18A' '(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e746:   addq   $0x1,0x170(%rsi)
  0x000077505522e74e:   movabs $0x775020513ea8,%rsi         ;   {metadata(method data for {method} {0x0000775020511630} 'constructor-impl' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'kotlin/Result')}
  0x000077505522e758:   mov    0xf4(%rsi),%edi
  0x000077505522e75e:   add    $0x2,%edi
  0x000077505522e761:   mov    %edi,0xf4(%rsi)
  0x000077505522e767:   and    $0x1ffffe,%edi
  0x000077505522e76d:   cmp    $0x0,%edi
  0x000077505522e770:   je     0x000077505522ea24
  0x000077505522e776:   add    $0x80,%rsp
  0x000077505522e77d:   pop    %rbp
  0x000077505522e77e:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522e785:   ja     0x000077505522ea45
  0x000077505522e78b:   ret
  0x000077505522e78c:   mov    0x3d8(%r15),%rax
  0x000077505522e793:   xor    %r10,%r10
  0x000077505522e796:   mov    %r10,0x3d8(%r15)
  0x000077505522e79d:   xor    %r10,%r10
  0x000077505522e7a0:   mov    %r10,0x3e0(%r15)
  0x000077505522e7a7:   cmp    $0x0,%rax
  0x000077505522e7ab:   jne    0x000077505522e7c3
  0x000077505522e7ad:   movabs $0x775020516c28,%rbx         ;   {metadata(method data for {method} {0x0000775020514c50} 'guard-IoAF18A' '(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e7b7:   orb    $0x1,0x179(%rbx)
  0x000077505522e7be:   jmp    0x000077505522e896
  0x000077505522e7c3:   movabs $0x800043268,%rsi            ;   {metadata('java/lang/Throwable')}
  0x000077505522e7cd:   mov    0x8(%rax),%ebx
  0x000077505522e7d0:   movabs $0x800000000,%r10
  0x000077505522e7da:   add    %r10,%rbx
  0x000077505522e7dd:   cmp    0x38(%rbx),%rsi
  0x000077505522e7e1:   jne    0x000077505522e87a
  0x000077505522e7e7:   movabs $0x775020516c28,%rbx         ;   {metadata(method data for {method} {0x0000775020514c50} 'guard-IoAF18A' '(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e7f1:   mov    0x8(%rax),%esi
  0x000077505522e7f4:   movabs $0x800000000,%r10
  0x000077505522e7fe:   add    %r10,%rsi
  0x000077505522e801:   cmp    0x190(%rbx),%rsi
  0x000077505522e808:   jne    0x000077505522e817
  0x000077505522e80a:   addq   $0x1,0x198(%rbx)
  0x000077505522e812:   jmp    0x000077505522e896
  0x000077505522e817:   cmp    0x1a0(%rbx),%rsi
  0x000077505522e81e:   jne    0x000077505522e82d
  0x000077505522e820:   addq   $0x1,0x1a8(%rbx)
  0x000077505522e828:   jmp    0x000077505522e896
  0x000077505522e82d:   cmpq   $0x0,0x190(%rbx)
  0x000077505522e838:   jne    0x000077505522e851
  0x000077505522e83a:   mov    %rsi,0x190(%rbx)
  0x000077505522e841:   movq   $0x1,0x198(%rbx)
  0x000077505522e84c:   jmp    0x000077505522e896
  0x000077505522e851:   cmpq   $0x0,0x1a0(%rbx)
  0x000077505522e85c:   jne    0x000077505522e875
  0x000077505522e85e:   mov    %rsi,0x1a0(%rbx)
  0x000077505522e865:   movq   $0x1,0x1a8(%rbx)
  0x000077505522e870:   jmp    0x000077505522e896
  0x000077505522e875:   jmp    0x000077505522e896
  0x000077505522e87a:   movabs $0x775020516c28,%rbx         ;   {metadata(method data for {method} {0x0000775020514c50} 'guard-IoAF18A' '(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e884:   subq   $0x1,0x180(%rbx)
  0x000077505522e88c:   jmp    0x000077505522ea5b
  0x000077505522e891:   jmp    0x000077505522e896
  0x000077505522e896:   mov    %rax,%rsi                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@23 (line 25)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505522e899:   nopw   0x0(%rax,%rax,1)
  0x000077505522e89f:   call   0x000077505c788680           ; ImmutableOopMap {}
                                                            ;*invokestatic createFailure {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@26 (line 25)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {static_call}
  0x000077505522e8a4:   movabs $0x775020516c28,%rsi         ;   {metadata(method data for {method} {0x0000775020514c50} 'guard-IoAF18A' '(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e8ae:   addq   $0x1,0x1c8(%rsi)
  0x000077505522e8b6:   movabs $0x775020513ea8,%rsi         ;   {metadata(method data for {method} {0x0000775020511630} 'constructor-impl' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'kotlin/Result')}
  0x000077505522e8c0:   mov    0xf4(%rsi),%edi
  0x000077505522e8c6:   add    $0x2,%edi
  0x000077505522e8c9:   mov    %edi,0xf4(%rsi)
  0x000077505522e8cf:   and    $0x1ffffe,%edi
  0x000077505522e8d5:   cmp    $0x0,%edi
  0x000077505522e8d8:   je     0x000077505522ea64
  0x000077505522e8de:   add    $0x80,%rsp
  0x000077505522e8e5:   pop    %rbp
  0x000077505522e8e6:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522e8ed:   ja     0x000077505522ea85
  0x000077505522e8f3:   ret
  0x000077505522e8f4:   movabs $0x775020514aa8,%r10         ;   {metadata({method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e8fe:   mov    %r10,0x8(%rsp)
  0x000077505522e903:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522e90b:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@-1 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522e910:   jmp    0x000077505522e4fa
  0x000077505522e915:   mov    %rdx,%rdx
  0x000077505522e918:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@1 (line 9)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505522e91d:   jmp    0x000077505522e54a
  0x000077505522e922:   movabs $0x7750205157c8,%r10         ;   {metadata({method} {0x00007750205157c8} '<init>' '(Lde/maschmi/blog/Guard;)V' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e92c:   mov    %r10,0x8(%rsp)
  0x000077505522e931:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522e939:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@-1
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522e93e:   jmp    0x000077505522e587
  0x000077505522e943:   mov    0x10(%rax),%edx
  0x000077505522e946:   shl    $0x3,%rdx
  0x000077505522e94a:   cmp    $0x0,%rdx
  0x000077505522e94e:   je     0x000077505522e595
  0x000077505522e954:   mov    %rdx,(%rsp)
  0x000077505522e958:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522e95d:   jmp    0x000077505522e595
  0x000077505522e962:   cmp    $0x0,%rbx
  0x000077505522e966:   je     0x000077505522e5b4
  0x000077505522e96c:   mov    %rax,(%rsp)
  0x000077505522e970:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505522e975:   jmp    0x000077505522e5b4
  0x000077505522e97a:   movabs $0x775020516000,%r10         ;   {metadata({method} {0x0000775020516000} '<init>' '(I)V' in 'kotlin/jvm/internal/Lambda')}
  0x000077505522e984:   mov    %r10,0x8(%rsp)
  0x000077505522e989:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522e991:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Lambda::<init>@-1 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@7
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522e996:   jmp    0x000077505522e5f1
  0x000077505522e99b:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522e9a5:   mov    %r10,0x8(%rsp)
  0x000077505522e9aa:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522e9b2:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - kotlin.jvm.internal.Lambda::<init>@1 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@7
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522e9b7:   jmp    0x000077505522e62e
  0x000077505522e9bc:   movabs $0x775020514c50,%r10         ;   {metadata({method} {0x0000775020514c50} 'guard-IoAF18A' '(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522e9c6:   mov    %r10,0x8(%rsp)
  0x000077505522e9cb:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522e9d3:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@-1 (line 21)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522e9d8:   jmp    0x000077505522e66b
  0x000077505522e9dd:   movabs $0x775020515910,%r10         ;   {metadata({method} {0x0000775020515910} 'invoke' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522e9e7:   mov    %r10,0x8(%rsp)
  0x000077505522e9ec:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522e9f4:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@-1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522e9f9:   jmp    0x000077505522e6b9
  0x000077505522e9fe:   movabs $0x775020515870,%r10         ;   {metadata({method} {0x0000775020515870} 'invoke' '()Ljava/lang/String;' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522ea08:   mov    %r10,0x8(%rsp)
  0x000077505522ea0d:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522ea15:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@-1 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522ea1a:   jmp    0x000077505522e6f6
  0x000077505522ea1f:   call   0x000077505c8295a0           ; ImmutableOopMap {rsi=Oop }
                                                            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000077505522ea24:   movabs $0x775020511630,%r10         ;   {metadata({method} {0x0000775020511630} 'constructor-impl' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'kotlin/Result')}
  0x000077505522ea2e:   mov    %r10,0x8(%rsp)
  0x000077505522ea33:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522ea3b:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.Result::constructor-impl@-1
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@13 (line 23)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522ea40:   jmp    0x000077505522e776
  0x000077505522ea45:   movabs $0x77505522e77e,%r10         ;   {internal_word}
  0x000077505522ea4f:   mov    %r10,0x360(%r15)
  0x000077505522ea56:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522ea5b:   mov    %rax,(%rsp)
  0x000077505522ea5f:   call   0x000077505c82b9a0           ; ImmutableOopMap {}
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@23 (line 25)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000077505522ea64:   movabs $0x775020511630,%r10         ;   {metadata({method} {0x0000775020511630} 'constructor-impl' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'kotlin/Result')}
  0x000077505522ea6e:   mov    %r10,0x8(%rsp)
  0x000077505522ea73:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522ea7b:   call   0x000077505c82e680           ; ImmutableOopMap {rax=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.Result::constructor-impl@-1
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@29 (line 25)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522ea80:   jmp    0x000077505522e8de
  0x000077505522ea85:   movabs $0x77505522e8e6,%r10         ;   {internal_word}
  0x000077505522ea8f:   mov    %r10,0x360(%r15)
  0x000077505522ea96:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522ea9b:   nop
  0x000077505522ea9c:   nop
  0x000077505522ea9d:   mov    0x3d8(%r15),%rax
  0x000077505522eaa4:   movq   $0x0,0x3d8(%r15)
  0x000077505522eaaf:   movq   $0x0,0x3e0(%r15)
  0x000077505522eaba:   add    $0x80,%rsp
  0x000077505522eac1:   pop    %rbp
  0x000077505522eac2:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522eac7:   hlt
  0x000077505522eac8:   hlt
  0x000077505522eac9:   hlt
  0x000077505522eaca:   hlt
  0x000077505522eacb:   hlt
  0x000077505522eacc:   hlt
  0x000077505522eacd:   hlt
  0x000077505522eace:   hlt
  0x000077505522eacf:   hlt
  0x000077505522ead0:   hlt
  0x000077505522ead1:   hlt
  0x000077505522ead2:   hlt
  0x000077505522ead3:   hlt
  0x000077505522ead4:   hlt
  0x000077505522ead5:   hlt
  0x000077505522ead6:   hlt
  0x000077505522ead7:   hlt
  0x000077505522ead8:   hlt
  0x000077505522ead9:   hlt
  0x000077505522eada:   hlt
  0x000077505522eadb:   hlt
  0x000077505522eadc:   hlt
  0x000077505522eadd:   hlt
  0x000077505522eade:   hlt
  0x000077505522eadf:   hlt
[Stub Code]
  0x000077505522eae0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522eae5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522eaef:   jmp    0x000077505522eaef           ;   {runtime_call}
  0x000077505522eaf4:   nop
  0x000077505522eaf5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522eaff:   jmp    0x000077505522eaff           ;   {runtime_call}
[Exception Handler]
  0x000077505522eb04:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522eb09:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522eb13:   and    $0xfffffffffffffff0,%rsp
  0x000077505522eb17:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522eb1c:   hlt
[Deopt Handler Code]
  0x000077505522eb1d:   movabs $0x77505522eb1d,%r10         ;   {section_word}
  0x000077505522eb27:   push   %r10
  0x000077505522eb29:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522eb2e:   hlt
  0x000077505522eb2f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     499  133       4       de.maschmi.blog.Guard::<init> (16 bytes)
 total in heap  [0x000077505ccd5890,0x000077505ccd5c18] = 904
 relocation     [0x000077505ccd59f0,0x000077505ccd5a08] = 24
 main code      [0x000077505ccd5a20,0x000077505ccd5b60] = 320
 stub code      [0x000077505ccd5b60,0x000077505ccd5b78] = 24
 oops           [0x000077505ccd5b78,0x000077505ccd5b88] = 16
 metadata       [0x000077505ccd5b88,0x000077505ccd5b98] = 16
 scopes data    [0x000077505ccd5b98,0x000077505ccd5bc0] = 40
 scopes pcs     [0x000077505ccd5bc0,0x000077505ccd5c10] = 80
 dependencies   [0x000077505ccd5c10,0x000077505ccd5c18] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard'
  # this:     rsi:rsi   = 'de/maschmi/blog/Guard'
  # parm0:    rdx:rdx   = 'de/maschmi/blog/Adapter'
  #           [sp+0x30]  (sp of caller)
  0x000077505ccd5a20:   mov    0x8(%rsi),%r10d
  0x000077505ccd5a24:   movabs $0x800000000,%r11
  0x000077505ccd5a2e:   add    %r11,%r10
  0x000077505ccd5a31:   cmp    %r10,%rax
  0x000077505ccd5a34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd5a3a:   xchg   %ax,%ax
  0x000077505ccd5a3c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd5a40:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd5a47:   push   %rbp
  0x000077505ccd5a48:   sub    $0x20,%rsp
  0x000077505ccd5a4c:   mov    %rsi,%r10
  0x000077505ccd5a4f:   mov    %rdx,%rbx
  0x000077505ccd5a52:   test   %rdx,%rdx
  0x000077505ccd5a55:   je     0x000077505ccd5b2e
  0x000077505ccd5a5b:   cmpb   $0x0,0x38(%r15)
  0x000077505ccd5a60:   jne    0x000077505ccd5aab
  0x000077505ccd5a62:   mov    %rsi,%rbp
  0x000077505ccd5a65:   mov    %rbp,%r10
  0x000077505ccd5a68:   mov    %rbx,%r8
  0x000077505ccd5a6b:   shr    $0x3,%r8
  0x000077505ccd5a6f:   mov    %r8d,0xc(%rbp)
  0x000077505ccd5a73:   mov    %rbx,%r11
  0x000077505ccd5a76:   xor    %r10,%r11
  0x000077505ccd5a79:   shr    $0x16,%r11
  0x000077505ccd5a7d:   test   %r11,%r11
  0x000077505ccd5a80:   je     0x000077505ccd5a98
  0x000077505ccd5a82:   shr    $0x9,%r10
  0x000077505ccd5a86:   movabs $0x7750511a4000,%rdi
  0x000077505ccd5a90:   add    %r10,%rdi
  0x000077505ccd5a93:   cmpb   $0x4,(%rdi)
  0x000077505ccd5a96:   jne    0x000077505ccd5ada           ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::<init>@-1
  0x000077505ccd5a98:   add    $0x20,%rsp
  0x000077505ccd5a9c:   pop    %rbp
  0x000077505ccd5a9d:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd5aa4:   ja     0x000077505ccd5b40
  0x000077505ccd5aaa:   ret
  0x000077505ccd5aab:   mov    %rsi,%rbp
  0x000077505ccd5aae:   mov    0xc(%rsi),%r10d
  0x000077505ccd5ab2:   test   %r10d,%r10d
  0x000077505ccd5ab5:   je     0x000077505ccd5a65
  0x000077505ccd5ab7:   mov    0x20(%r15),%r11
  0x000077505ccd5abb:   mov    %r10,%rdi
  0x000077505ccd5abe:   shl    $0x3,%rdi
  0x000077505ccd5ac2:   test   %r11,%r11
  0x000077505ccd5ac5:   je     0x000077505ccd5b19
  0x000077505ccd5ac7:   mov    0x30(%r15),%r10
  0x000077505ccd5acb:   mov    %rdi,-0x8(%r10,%r11,1)
  0x000077505ccd5ad0:   add    $0xfffffffffffffff8,%r11
  0x000077505ccd5ad4:   mov    %r11,0x20(%r15)
  0x000077505ccd5ad8:   jmp    0x000077505ccd5a65
  0x000077505ccd5ada:   mov    0x40(%r15),%r10
  0x000077505ccd5ade:   mov    0x50(%r15),%r11
  0x000077505ccd5ae2:   lock addl $0x0,-0x40(%rsp)
  0x000077505ccd5ae8:   cmpb   $0x0,(%rdi)
  0x000077505ccd5aeb:   je     0x000077505ccd5a98
  0x000077505ccd5aed:   mov    %r12b,(%rdi)
  0x000077505ccd5af0:   test   %r10,%r10
  0x000077505ccd5af3:   jne    0x000077505ccd5b07
  0x000077505ccd5af5:   mov    %r15,%rsi
  0x000077505ccd5af8:   movabs $0x7750738f1760,%r10
  0x000077505ccd5b02:   call   *%r10
  0x000077505ccd5b05:   jmp    0x000077505ccd5a98
  0x000077505ccd5b07:   mov    %rdi,-0x8(%r11,%r10,1)
  0x000077505ccd5b0c:   add    $0xfffffffffffffff8,%r10
  0x000077505ccd5b10:   mov    %r10,0x40(%r15)
  0x000077505ccd5b14:   jmp    0x000077505ccd5a98
  0x000077505ccd5b19:   mov    %r15,%rsi
  0x000077505ccd5b1c:   movabs $0x7750738f1730,%r10
  0x000077505ccd5b26:   call   *%r10                        ;*putfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::<init>@12 (line 6)
  0x000077505ccd5b29:   jmp    0x000077505ccd5a65
  0x000077505ccd5b2e:   mov    $0xffffff45,%esi
  0x000077505ccd5b33:   mov    %r10,%rbp
  0x000077505ccd5b36:   mov    %rdx,0x8(%rsp)
  0x000077505ccd5b3b:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd5b40:   movabs $0x77505ccd5a9d,%r10         ;   {internal_word}
  0x000077505ccd5b4a:   mov    %r10,0x360(%r15)
  0x000077505ccd5b51:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd5b56:   hlt
  0x000077505ccd5b57:   hlt
  0x000077505ccd5b58:   hlt
  0x000077505ccd5b59:   hlt
  0x000077505ccd5b5a:   hlt
  0x000077505ccd5b5b:   hlt
  0x000077505ccd5b5c:   hlt
  0x000077505ccd5b5d:   hlt
  0x000077505ccd5b5e:   hlt
  0x000077505ccd5b5f:   hlt
[Exception Handler]
  0x000077505ccd5b60:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd5b65:   call   0x000077505ccd5b6a
  0x000077505ccd5b6a:   subq   $0x5,(%rsp)
  0x000077505ccd5b6f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd5b74:   hlt
  0x000077505ccd5b75:   hlt
  0x000077505ccd5b76:   hlt
  0x000077505ccd5b77:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     503  134       4       de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48 (16 bytes)
 total in heap  [0x000077505ccd5c90,0x000077505ccd6250] = 1472
 relocation     [0x000077505ccd5df0,0x000077505ccd5e10] = 32
 main code      [0x000077505ccd5e20,0x000077505ccd5f40] = 288
 stub code      [0x000077505ccd5f40,0x000077505ccd5f58] = 24
 oops           [0x000077505ccd5f58,0x000077505ccd5f68] = 16
 metadata       [0x000077505ccd5f68,0x000077505ccd5fd0] = 104
 scopes data    [0x000077505ccd5fd0,0x000077505ccd60c0] = 240
 scopes pcs     [0x000077505ccd60c0,0x000077505ccd6230] = 368
 dependencies   [0x000077505ccd6230,0x000077505ccd6238] = 8
 nul chk table  [0x000077505ccd6238,0x000077505ccd6250] = 24

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard'
  #           [sp+0x20]  (sp of caller)
  0x000077505ccd5e20:   mov    0x8(%rsi),%r10d
  0x000077505ccd5e24:   movabs $0x800000000,%r11
  0x000077505ccd5e2e:   add    %r11,%r10
  0x000077505ccd5e31:   cmp    %r10,%rax
  0x000077505ccd5e34:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd5e3a:   xchg   %ax,%ax
  0x000077505ccd5e3c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd5e40:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd5e47:   push   %rbp
  0x000077505ccd5e48:   sub    $0x10,%rsp                   ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@-1 (line 9)
  0x000077505ccd5e4c:   mov    0xc(%rsi),%r10d              ;*getfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@4 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e50:   mov    0xc(%r12,%r10,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd5f04
                                                            ;*getfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@7 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e55:   mov    0x8(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x000077505ccd5f10
  0x000077505ccd5e5a:   cmp    $0x1280,%r8d                 ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd5e61:   jne    0x000077505ccd5eea
  0x000077505ccd5e67:   shl    $0x3,%r10                    ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e6b:   mov    0xc(%r10),%r11d              ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e6f:   mov    0x18(%r10),%r9d
  0x000077505ccd5e73:   mov    0x1c(%r10),%ecx              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e77:   mov    %ecx,0x18(%r10)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e7b:   mov    0x14(%r10),%r8d
  0x000077505ccd5e7f:   mov    %r9d,0x14(%r10)              ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e83:   mov    0x20(%r10),%ebx              ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e87:   mov    0x10(%r10),%r9d
  0x000077505ccd5e8b:   mov    %r9d,0xc(%r10)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e8f:   mov    %r8d,0x10(%r10)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e93:   mov    %r11d,%r9d
  0x000077505ccd5e96:   shr    $0x2,%r9d
  0x000077505ccd5e9a:   xor    %r11d,%r9d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5e9d:   mov    %ebx,%r11d
  0x000077505ccd5ea0:   add    $0x587c5,%r11d
  0x000077505ccd5ea7:   mov    %r11d,0x20(%r10)             ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5eab:   mov    %r9d,%ebp
  0x000077505ccd5eae:   shl    %ebp
  0x000077505ccd5eb0:   xor    %r9d,%ebp
  0x000077505ccd5eb3:   xor    %ecx,%ebp
  0x000077505ccd5eb5:   shl    $0x4,%ecx
  0x000077505ccd5eb8:   xor    %ecx,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5eba:   mov    %ebp,0x1c(%r10)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5ebe:   add    %ebx,%ebp
  0x000077505ccd5ec0:   add    $0x587c5,%ebp
  0x000077505ccd5ec6:   shr    $0x1f,%ebp                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::takeUpperBits@5 (line 376)
                                                            ; - kotlin.random.XorWowRandom::nextBits@5 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
  0x000077505ccd5ec9:   test   %ebp,%ebp
  0x000077505ccd5ecb:   jne    0x000077505ccd5ef8           ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@-1 (line 9)
  0x000077505ccd5ecd:   movabs $0x62ae78df0,%rax            ;   {oop("FunctionOne"{0x000000062ae78df0})}
  0x000077505ccd5ed7:   add    $0x10,%rsp
  0x000077505ccd5edb:   pop    %rbp
  0x000077505ccd5edc:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd5ee3:   ja     0x000077505ccd5f1c
  0x000077505ccd5ee9:   ret
  0x000077505ccd5eea:   mov    $0xffffffde,%esi
  0x000077505ccd5eef:   mov    %r10d,%ebp
  0x000077505ccd5ef2:   nop
  0x000077505ccd5ef3:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd5ef8:   mov    $0xffffff45,%esi
  0x000077505ccd5efd:   xchg   %ax,%ax
  0x000077505ccd5eff:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.Random::nextBoolean@5 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd5f04:   mov    $0xfffffff6,%esi
  0x000077505ccd5f09:   xchg   %ax,%ax
  0x000077505ccd5f0b:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd5f10:   mov    $0xfffffff6,%esi
  0x000077505ccd5f15:   xchg   %ax,%ax
  0x000077505ccd5f17:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd5f1c:   movabs $0x77505ccd5edc,%r10         ;   {internal_word}
  0x000077505ccd5f26:   mov    %r10,0x360(%r15)
  0x000077505ccd5f2d:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd5f32:   hlt
  0x000077505ccd5f33:   hlt
  0x000077505ccd5f34:   hlt
  0x000077505ccd5f35:   hlt
  0x000077505ccd5f36:   hlt
  0x000077505ccd5f37:   hlt
  0x000077505ccd5f38:   hlt
  0x000077505ccd5f39:   hlt
  0x000077505ccd5f3a:   hlt
  0x000077505ccd5f3b:   hlt
  0x000077505ccd5f3c:   hlt
  0x000077505ccd5f3d:   hlt
  0x000077505ccd5f3e:   hlt
  0x000077505ccd5f3f:   hlt
[Exception Handler]
  0x000077505ccd5f40:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd5f45:   call   0x000077505ccd5f4a
  0x000077505ccd5f4a:   subq   $0x5,(%rsp)
  0x000077505ccd5f4f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd5f54:   hlt
  0x000077505ccd5f55:   hlt
  0x000077505ccd5f56:   hlt
  0x000077505ccd5f57:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     508  135 %     3       de.maschmi.blog.GuardInlinedKt::main @ 36 (69 bytes)
 total in heap  [0x000077505522ee90,0x0000775055230438] = 5544
 relocation     [0x000077505522eff0,0x000077505522f108] = 280
 main code      [0x000077505522f120,0x000077505522fd40] = 3104
 stub code      [0x000077505522fd40,0x000077505522fdb0] = 112
 oops           [0x000077505522fdb0,0x000077505522fdc0] = 16
 metadata       [0x000077505522fdc0,0x000077505522fe08] = 72
 scopes data    [0x000077505522fe08,0x00007750552300b0] = 680
 scopes pcs     [0x00007750552300b0,0x0000775055230430] = 896
 dependencies   [0x0000775055230430,0x0000775055230438] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt'
  0x000077505522f120:   mov    %eax,-0x14000(%rsp)
  0x000077505522f127:   push   %rbp
  0x000077505522f128:   sub    $0xc0,%rsp
  0x000077505522f12f:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f139:   mov    0xf4(%rdx),%esi
  0x000077505522f13f:   add    $0x2,%esi
  0x000077505522f142:   mov    %esi,0xf4(%rdx)
  0x000077505522f148:   and    $0x7fe,%esi
  0x000077505522f14e:   cmp    $0x0,%esi
  0x000077505522f151:   je     0x000077505522f973           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@0 (line 4)
  0x000077505522f157:   mov    $0x0,%ebx
  0x000077505522f15c:   jmp    0x000077505522f44f           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@2 (line 4)
  0x000077505522f161:   nopl   0x0(%rax)
  0x000077505522f168:   mov    %ebx,0x98(%rsp)
  0x000077505522f16f:   movabs $0x800000a08,%rdx            ;   {metadata('de/maschmi/blog/GuardInlined')}
  0x000077505522f179:   mov    0x108(%r15),%rax
  0x000077505522f180:   lea    0x10(%rax),%rdi
  0x000077505522f184:   cmp    0x118(%r15),%rdi
  0x000077505522f18b:   ja     0x000077505522f994
  0x000077505522f191:   mov    %rdi,0x108(%r15)
  0x000077505522f198:   movq   $0x1,(%rax)
  0x000077505522f19f:   mov    %rdx,%rcx
  0x000077505522f1a2:   movabs $0x800000000,%r10
  0x000077505522f1ac:   sub    %r10,%rcx
  0x000077505522f1af:   mov    %ecx,0x8(%rax)
  0x000077505522f1b2:   xor    %rcx,%rcx
  0x000077505522f1b5:   mov    %ecx,0xc(%rax)
  0x000077505522f1b8:   xor    %rcx,%rcx                    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@8 (line 5)
  0x000077505522f1bb:   movabs $0x800000c18,%rdx            ;   {metadata('de/maschmi/blog/Adapter')}
  0x000077505522f1c5:   mov    %rax,0x90(%rsp)
  0x000077505522f1cd:   mov    0x108(%r15),%rax
  0x000077505522f1d4:   lea    0x10(%rax),%rdi
  0x000077505522f1d8:   cmp    0x118(%r15),%rdi
  0x000077505522f1df:   ja     0x000077505522f9a1
  0x000077505522f1e5:   mov    %rdi,0x108(%r15)
  0x000077505522f1ec:   movq   $0x1,(%rax)
  0x000077505522f1f3:   mov    %rdx,%rcx
  0x000077505522f1f6:   movabs $0x800000000,%r10
  0x000077505522f200:   sub    %r10,%rcx
  0x000077505522f203:   mov    %ecx,0x8(%rax)
  0x000077505522f206:   xor    %rcx,%rcx
  0x000077505522f209:   mov    %ecx,0xc(%rax)
  0x000077505522f20c:   xor    %rcx,%rcx                    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@12 (line 5)
  0x000077505522f20f:   mov    %rax,%rsi
  0x000077505522f212:   movabs $0x7750205171b8,%rdi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f21c:   addq   $0x1,0x158(%rdi)
  0x000077505522f224:   movabs $0x775020513410,%rsi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x000077505522f22e:   mov    0xf4(%rsi),%edi
  0x000077505522f234:   add    $0x2,%edi
  0x000077505522f237:   mov    %edi,0xf4(%rsi)
  0x000077505522f23d:   and    $0x1ffffe,%edi
  0x000077505522f243:   cmp    $0x0,%edi
  0x000077505522f246:   je     0x000077505522f9ae
  0x000077505522f24c:   mov    %rax,%rsi
  0x000077505522f24f:   movabs $0x775020513410,%rdi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x000077505522f259:   addq   $0x1,0x138(%rdi)
  0x000077505522f261:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522f26b:   mov    0xf4(%rsi),%edi
  0x000077505522f271:   add    $0x2,%edi
  0x000077505522f274:   mov    %edi,0xf4(%rsi)
  0x000077505522f27a:   and    $0x1ffffe,%edi
  0x000077505522f280:   cmp    $0x0,%edi
  0x000077505522f283:   je     0x000077505522f9cf
  0x000077505522f289:   movabs $0x775020513410,%rsi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x000077505522f293:   addq   $0x1,0x148(%rsi)
  0x000077505522f29b:   mov    $0x1,%esi                    ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
  0x000077505522f2a0:   mov    %rax,0x88(%rsp)
  0x000077505522f2a8:   nopl   0x0(%rax)
  0x000077505522f2af:   call   0x000077505c788680           ; ImmutableOopMap {[136]=Oop [144]=Oop }
                                                            ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
                                                            ;   {static_call}
  0x000077505522f2b4:   movsbl 0x38(%r15),%esi
  0x000077505522f2b9:   cmp    $0x0,%esi
  0x000077505522f2bc:   mov    0x88(%rsp),%rsi
  0x000077505522f2c4:   jne    0x000077505522f9f0
  0x000077505522f2ca:   mov    %rax,%r10
  0x000077505522f2cd:   shr    $0x3,%r10
  0x000077505522f2d1:   mov    %r10d,0xc(%rsi)
  0x000077505522f2d5:   mov    %rsi,%rdi
  0x000077505522f2d8:   xor    %rax,%rdi
  0x000077505522f2db:   shr    $0x16,%rdi
  0x000077505522f2df:   cmp    $0x0,%rdi
  0x000077505522f2e3:   jne    0x000077505522fa0f           ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
  0x000077505522f2e9:   mov    0x90(%rsp),%rax
  0x000077505522f2f1:   movabs $0x7750205171b8,%rdi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f2fb:   addq   $0x1,0x168(%rdi)
  0x000077505522f303:   movabs $0x7750205138e0,%rdi         ;   {metadata(method data for {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522f30d:   mov    0xf4(%rdi),%ebx
  0x000077505522f313:   add    $0x2,%ebx
  0x000077505522f316:   mov    %ebx,0xf4(%rdi)
  0x000077505522f31c:   and    $0x1ffffe,%ebx
  0x000077505522f322:   cmp    $0x0,%ebx
  0x000077505522f325:   je     0x000077505522fa27
  0x000077505522f32b:   movabs $0x7750205138e0,%rdi         ;   {metadata(method data for {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522f335:   addq   $0x1,0x138(%rdi)
  0x000077505522f33d:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522f347:   mov    0xf4(%rdi),%ebx
  0x000077505522f34d:   add    $0x2,%ebx
  0x000077505522f350:   mov    %ebx,0xf4(%rdi)
  0x000077505522f356:   and    $0x1ffffe,%ebx
  0x000077505522f35c:   cmp    $0x0,%ebx
  0x000077505522f35f:   je     0x000077505522fa48
  0x000077505522f365:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522f36f:   incl   0x138(%rdi)                  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
  0x000077505522f375:   mov    0x90(%rsp),%rax
  0x000077505522f37d:   mov    %rax,%rdi
  0x000077505522f380:   movabs $0x7750205138e0,%rbx         ;   {metadata(method data for {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522f38a:   addq   $0x1,0x148(%rbx)
  0x000077505522f392:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522f39c:   mov    0xf4(%rdi),%ebx
  0x000077505522f3a2:   add    $0x2,%ebx
  0x000077505522f3a5:   mov    %ebx,0xf4(%rdi)
  0x000077505522f3ab:   and    $0x1ffffe,%ebx
  0x000077505522f3b1:   cmp    $0x0,%ebx
  0x000077505522f3b4:   je     0x000077505522fa69
  0x000077505522f3ba:   movsbl 0x38(%r15),%edi
  0x000077505522f3bf:   cmp    $0x0,%edi
  0x000077505522f3c2:   jne    0x000077505522fa8a
  0x000077505522f3c8:   mov    %rsi,%r10
  0x000077505522f3cb:   shr    $0x3,%r10
  0x000077505522f3cf:   mov    %r10d,0xc(%rax)
  0x000077505522f3d3:   mov    %rax,%rdi
  0x000077505522f3d6:   xor    %rsi,%rdi
  0x000077505522f3d9:   shr    $0x16,%rdi
  0x000077505522f3dd:   cmp    $0x0,%rdi
  0x000077505522f3e1:   jne    0x000077505522faa9           ;*putfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::<init>@12 (line 14)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
  0x000077505522f3e7:   mov    %rax,%rsi
  0x000077505522f3ea:   movabs $0x7750205171b8,%rdi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f3f4:   addq   $0x1,0x178(%rdi)
  0x000077505522f3fc:   mov    %rax,%rsi                    ;*invokevirtual functionOneUsingAdapter-d1pmJ48 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@24 (line 6)
  0x000077505522f3ff:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual functionOneUsingAdapter-d1pmJ48 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@24 (line 6)
                                                            ;   {optimized virtual_call}
  0x000077505522f404:   mov    0x98(%rsp),%ebx
  0x000077505522f40b:   inc    %ebx
  0x000077505522f40d:   movabs $0x7750205171b8,%rsi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f417:   mov    0xf8(%rsi),%edi
  0x000077505522f41d:   add    $0x2,%edi
  0x000077505522f420:   mov    %edi,0xf8(%rsi)
  0x000077505522f426:   and    $0x3ffe,%edi
  0x000077505522f42c:   cmp    $0x0,%edi
  0x000077505522f42f:   je     0x000077505522fac1           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@31 (line 4)
  0x000077505522f435:   mov    0x350(%r15),%r10             ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.GuardInlinedKt::main@31 (line 4)
  0x000077505522f43c:   test   %eax,(%r10)                  ;   {poll}
  0x000077505522f43f:   movabs $0x7750205171b8,%rsi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f449:   incl   0x1b0(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@31 (line 4)
  0x000077505522f44f:   cmp    $0xc351,%ebx
  0x000077505522f455:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f45f:   movabs $0x148,%rsi
  0x000077505522f469:   jl     0x000077505522f479
  0x000077505522f46f:   movabs $0x138,%rsi
  0x000077505522f479:   mov    (%rdx,%rsi,1),%rdi
  0x000077505522f47d:   lea    0x1(%rdi),%rdi
  0x000077505522f481:   mov    %rdi,(%rdx,%rsi,1)
  0x000077505522f485:   jl     0x000077505522f168           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@5 (line 4)
  0x000077505522f48b:   mov    $0x0,%ebx
  0x000077505522f490:   jmp    0x000077505522f8f7           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@36 (line 8)
  0x000077505522f495:   data16 xchg %ax,%ax
  0x000077505522f498:   mov    %ebx,0xb0(%rsp)
  0x000077505522f49f:   movabs $0x800003408,%rdx            ;   {metadata('de/maschmi/blog/Guard')}
  0x000077505522f4a9:   mov    0x108(%r15),%rax
  0x000077505522f4b0:   lea    0x10(%rax),%rdi
  0x000077505522f4b4:   cmp    0x118(%r15),%rdi
  0x000077505522f4bb:   ja     0x000077505522fae2
  0x000077505522f4c1:   mov    %rdi,0x108(%r15)
  0x000077505522f4c8:   movq   $0x1,(%rax)
  0x000077505522f4cf:   mov    %rdx,%rcx
  0x000077505522f4d2:   movabs $0x800000000,%r10
  0x000077505522f4dc:   sub    %r10,%rcx
  0x000077505522f4df:   mov    %ecx,0x8(%rax)
  0x000077505522f4e2:   xor    %rcx,%rcx
  0x000077505522f4e5:   mov    %ecx,0xc(%rax)
  0x000077505522f4e8:   xor    %rcx,%rcx                    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@42 (line 9)
  0x000077505522f4eb:   movabs $0x800000c18,%rdx            ;   {metadata('de/maschmi/blog/Adapter')}
  0x000077505522f4f5:   mov    %rax,0xa8(%rsp)
  0x000077505522f4fd:   mov    0x108(%r15),%rax
  0x000077505522f504:   lea    0x10(%rax),%rdi
  0x000077505522f508:   cmp    0x118(%r15),%rdi
  0x000077505522f50f:   ja     0x000077505522faef
  0x000077505522f515:   mov    %rdi,0x108(%r15)
  0x000077505522f51c:   movq   $0x1,(%rax)
  0x000077505522f523:   mov    %rdx,%rcx
  0x000077505522f526:   movabs $0x800000000,%r10
  0x000077505522f530:   sub    %r10,%rcx
  0x000077505522f533:   mov    %ecx,0x8(%rax)
  0x000077505522f536:   xor    %rcx,%rcx
  0x000077505522f539:   mov    %ecx,0xc(%rax)
  0x000077505522f53c:   xor    %rcx,%rcx                    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@46 (line 9)
  0x000077505522f53f:   mov    %rax,%rsi
  0x000077505522f542:   movabs $0x7750205171b8,%rdi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f54c:   addq   $0x1,0x1e8(%rdi)
  0x000077505522f554:   movabs $0x775020513410,%rsi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x000077505522f55e:   mov    0xf4(%rsi),%edi
  0x000077505522f564:   add    $0x2,%edi
  0x000077505522f567:   mov    %edi,0xf4(%rsi)
  0x000077505522f56d:   and    $0x1ffffe,%edi
  0x000077505522f573:   cmp    $0x0,%edi
  0x000077505522f576:   je     0x000077505522fafc
  0x000077505522f57c:   mov    %rax,%rsi
  0x000077505522f57f:   movabs $0x775020513410,%rdi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x000077505522f589:   addq   $0x1,0x138(%rdi)
  0x000077505522f591:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522f59b:   mov    0xf4(%rsi),%edi
  0x000077505522f5a1:   add    $0x2,%edi
  0x000077505522f5a4:   mov    %edi,0xf4(%rsi)
  0x000077505522f5aa:   and    $0x1ffffe,%edi
  0x000077505522f5b0:   cmp    $0x0,%edi
  0x000077505522f5b3:   je     0x000077505522fb1d
  0x000077505522f5b9:   movabs $0x775020513410,%rsi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x000077505522f5c3:   addq   $0x1,0x148(%rsi)
  0x000077505522f5cb:   mov    $0x1,%esi                    ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
  0x000077505522f5d0:   mov    %rax,0xa0(%rsp)
  0x000077505522f5d8:   nopl   0x0(%rax)
  0x000077505522f5df:   call   0x000077505c788680           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
                                                            ;   {static_call}
  0x000077505522f5e4:   movsbl 0x38(%r15),%edx
  0x000077505522f5e9:   cmp    $0x0,%edx
  0x000077505522f5ec:   mov    0xa0(%rsp),%rdx
  0x000077505522f5f4:   jne    0x000077505522fb3e
  0x000077505522f5fa:   mov    %rax,%r10
  0x000077505522f5fd:   shr    $0x3,%r10
  0x000077505522f601:   mov    %r10d,0xc(%rdx)
  0x000077505522f605:   mov    %rdx,%rsi
  0x000077505522f608:   xor    %rax,%rsi
  0x000077505522f60b:   shr    $0x16,%rsi
  0x000077505522f60f:   cmp    $0x0,%rsi
  0x000077505522f613:   jne    0x000077505522fb5d           ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
  0x000077505522f619:   mov    0xa8(%rsp),%rax
  0x000077505522f621:   movabs $0x7750205171b8,%rsi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f62b:   addq   $0x1,0x1f8(%rsi)
  0x000077505522f633:   movabs $0x7750205165b8,%rsi         ;   {metadata(method data for {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x000077505522f63d:   mov    0xf4(%rsi),%edi
  0x000077505522f643:   add    $0x2,%edi
  0x000077505522f646:   mov    %edi,0xf4(%rsi)
  0x000077505522f64c:   and    $0x1ffffe,%edi
  0x000077505522f652:   cmp    $0x0,%edi
  0x000077505522f655:   je     0x000077505522fb75
  0x000077505522f65b:   movabs $0x7750205165b8,%rsi         ;   {metadata(method data for {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x000077505522f665:   addq   $0x1,0x138(%rsi)
  0x000077505522f66d:   movabs $0x775020512670,%rsi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522f677:   mov    0xf4(%rsi),%edi
  0x000077505522f67d:   add    $0x2,%edi
  0x000077505522f680:   mov    %edi,0xf4(%rsi)
  0x000077505522f686:   and    $0x1ffffe,%edi
  0x000077505522f68c:   cmp    $0x0,%edi
  0x000077505522f68f:   je     0x000077505522fb96
  0x000077505522f695:   movabs $0x775020512670,%rsi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522f69f:   incl   0x138(%rsi)                  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
  0x000077505522f6a5:   mov    0xa8(%rsp),%rbx
  0x000077505522f6ad:   mov    %rbx,%rax
  0x000077505522f6b0:   movabs $0x7750205165b8,%rsi         ;   {metadata(method data for {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x000077505522f6ba:   addq   $0x1,0x148(%rsi)
  0x000077505522f6c2:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522f6cc:   mov    0xf4(%rsi),%edi
  0x000077505522f6d2:   add    $0x2,%edi
  0x000077505522f6d5:   mov    %edi,0xf4(%rsi)
  0x000077505522f6db:   and    $0x1ffffe,%edi
  0x000077505522f6e1:   cmp    $0x0,%edi
  0x000077505522f6e4:   je     0x000077505522fbb7
  0x000077505522f6ea:   movsbl 0x38(%r15),%esi
  0x000077505522f6ef:   cmp    $0x0,%esi
  0x000077505522f6f2:   jne    0x000077505522fbd8
  0x000077505522f6f8:   mov    %rdx,%r10
  0x000077505522f6fb:   shr    $0x3,%r10
  0x000077505522f6ff:   mov    %r10d,0xc(%rbx)
  0x000077505522f703:   mov    %rbx,%rax
  0x000077505522f706:   xor    %rdx,%rax
  0x000077505522f709:   shr    $0x16,%rax
  0x000077505522f70d:   cmp    $0x0,%rax
  0x000077505522f711:   jne    0x000077505522fbf7           ;*putfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::<init>@12 (line 6)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
  0x000077505522f717:   mov    %rbx,%rax
  0x000077505522f71a:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f724:   addq   $0x1,0x208(%rdx)
  0x000077505522f72c:   movabs $0x775020516758,%rdx         ;   {metadata(method data for {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522f736:   mov    0xf4(%rdx),%esi
  0x000077505522f73c:   add    $0x2,%esi
  0x000077505522f73f:   mov    %esi,0xf4(%rdx)
  0x000077505522f745:   and    $0x1ffffe,%esi
  0x000077505522f74b:   cmp    $0x0,%esi
  0x000077505522f74e:   je     0x000077505522fc0f
  0x000077505522f754:   movabs $0x800004000,%rdx            ;   {metadata('de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522f75e:   mov    0x108(%r15),%rax
  0x000077505522f765:   lea    0x18(%rax),%rdi
  0x000077505522f769:   cmp    0x118(%r15),%rdi
  0x000077505522f770:   ja     0x000077505522fc30
  0x000077505522f776:   mov    %rdi,0x108(%r15)
  0x000077505522f77d:   movq   $0x1,(%rax)
  0x000077505522f784:   mov    %rdx,%rcx
  0x000077505522f787:   movabs $0x800000000,%r10
  0x000077505522f791:   sub    %r10,%rcx
  0x000077505522f794:   mov    %ecx,0x8(%rax)
  0x000077505522f797:   xor    %rcx,%rcx
  0x000077505522f79a:   mov    %ecx,0xc(%rax)
  0x000077505522f79d:   xor    %rcx,%rcx
  0x000077505522f7a0:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@1 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
  0x000077505522f7a4:   mov    %rax,%rdx
  0x000077505522f7a7:   movabs $0x775020516758,%rsi         ;   {metadata(method data for {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522f7b1:   addq   $0x1,0x138(%rsi)
  0x000077505522f7b9:   movabs $0x775020516928,%rdx         ;   {metadata(method data for {method} {0x00007750205157c8} '<init>' '(Lde/maschmi/blog/Guard;)V' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522f7c3:   mov    0xf4(%rdx),%esi
  0x000077505522f7c9:   add    $0x2,%esi
  0x000077505522f7cc:   mov    %esi,0xf4(%rdx)
  0x000077505522f7d2:   and    $0x1ffffe,%esi
  0x000077505522f7d8:   cmp    $0x0,%esi
  0x000077505522f7db:   je     0x000077505522fc3d
  0x000077505522f7e1:   movsbl 0x38(%r15),%edx
  0x000077505522f7e6:   cmp    $0x0,%edx
  0x000077505522f7e9:   jne    0x000077505522fc5e
  0x000077505522f7ef:   mov    %rbx,%r10
  0x000077505522f7f2:   shr    $0x3,%r10
  0x000077505522f7f6:   mov    %r10d,0x10(%rax)
  0x000077505522f7fa:   mov    %rax,%rdx
  0x000077505522f7fd:   xor    %rbx,%rdx
  0x000077505522f800:   shr    $0x16,%rdx
  0x000077505522f804:   cmp    $0x0,%rdx
  0x000077505522f808:   jne    0x000077505522fc7d           ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@2
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
  0x000077505522f80e:   mov    %rax,%rdx
  0x000077505522f811:   movabs $0x775020516928,%rsi         ;   {metadata(method data for {method} {0x00007750205157c8} '<init>' '(Lde/maschmi/blog/Guard;)V' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522f81b:   addq   $0x1,0x138(%rsi)
  0x000077505522f823:   movabs $0x775020516aa8,%rdx         ;   {metadata(method data for {method} {0x0000775020516000} '<init>' '(I)V' in 'kotlin/jvm/internal/Lambda')}
  0x000077505522f82d:   mov    0xf4(%rdx),%esi
  0x000077505522f833:   add    $0x2,%esi
  0x000077505522f836:   mov    %esi,0xf4(%rdx)
  0x000077505522f83c:   and    $0x1ffffe,%esi
  0x000077505522f842:   cmp    $0x0,%esi
  0x000077505522f845:   je     0x000077505522fc95
  0x000077505522f84b:   mov    %rax,%rdx
  0x000077505522f84e:   movabs $0x775020516aa8,%rsi         ;   {metadata(method data for {method} {0x0000775020516000} '<init>' '(I)V' in 'kotlin/jvm/internal/Lambda')}
  0x000077505522f858:   addq   $0x1,0x138(%rsi)
  0x000077505522f860:   movabs $0x77502024ca78,%rdx         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522f86a:   mov    0xf4(%rdx),%esi
  0x000077505522f870:   add    $0x2,%esi
  0x000077505522f873:   mov    %esi,0xf4(%rdx)
  0x000077505522f879:   and    $0x1ffffe,%esi
  0x000077505522f87f:   cmp    $0x0,%esi
  0x000077505522f882:   je     0x000077505522fcb6
  0x000077505522f888:   mov    %rbx,%rdx
  0x000077505522f88b:   movabs $0x775020516758,%rsi         ;   {metadata(method data for {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522f895:   addq   $0x1,0x180(%rsi)
  0x000077505522f89d:   mov    %rax,%rdx
  0x000077505522f8a0:   mov    %rbx,%rsi                    ;*invokespecial guard-IoAF18A {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
  0x000077505522f8a3:   nopl   0x0(%rax)
  0x000077505522f8a7:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokespecial guard-IoAF18A {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {optimized virtual_call}
  0x000077505522f8ac:   mov    0xb0(%rsp),%ebx
  0x000077505522f8b3:   inc    %ebx
  0x000077505522f8b5:   movabs $0x7750205171b8,%rsi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f8bf:   mov    0xf8(%rsi),%edi
  0x000077505522f8c5:   add    $0x2,%edi
  0x000077505522f8c8:   mov    %edi,0xf8(%rsi)
  0x000077505522f8ce:   and    $0x3ffe,%edi
  0x000077505522f8d4:   cmp    $0x0,%edi
  0x000077505522f8d7:   je     0x000077505522fcd7           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@65 (line 8)
  0x000077505522f8dd:   mov    0x350(%r15),%r10             ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.GuardInlinedKt::main@65 (line 8)
  0x000077505522f8e4:   test   %eax,(%r10)                  ;   {poll}
  0x000077505522f8e7:   movabs $0x7750205171b8,%rsi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f8f1:   incl   0x240(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@65 (line 8)
  0x000077505522f8f7:   cmp    $0xc351,%ebx
  0x000077505522f8fd:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f907:   movabs $0x1d8,%rsi
  0x000077505522f911:   jl     0x000077505522f921
  0x000077505522f917:   movabs $0x1c8,%rsi
  0x000077505522f921:   mov    (%rdx,%rsi,1),%rdi
  0x000077505522f925:   lea    0x1(%rdi),%rdi
  0x000077505522f929:   mov    %rdi,(%rdx,%rsi,1)
  0x000077505522f92d:   jl     0x000077505522f498           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@39 (line 8)
  0x000077505522f933:   add    $0xc0,%rsp
  0x000077505522f93a:   pop    %rbp
  0x000077505522f93b:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505522f942:   ja     0x000077505522fcf8
  0x000077505522f948:   ret                                 ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@68 (line 12)
  0x000077505522f949:   mov    %eax,-0x14000(%rsp)
  0x000077505522f950:   push   %rbp
  0x000077505522f951:   sub    $0xc0,%rsp
  0x000077505522f958:   mov    0x8(%rsi),%ebx
  0x000077505522f95b:   mov    %rsi,%rdi
  0x000077505522f95e:   mov    %ebx,0x9c(%rsp)
  0x000077505522f965:   call   0x0000775073f23700           ;   {runtime_call}
  0x000077505522f96a:   mov    0x9c(%rsp),%ebx
  0x000077505522f971:   jmp    0x000077505522f8f7
  0x000077505522f973:   movabs $0x775020500358,%r10         ;   {metadata({method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522f97d:   mov    %r10,0x8(%rsp)
  0x000077505522f982:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522f98a:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@-1 (line 4)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522f98f:   jmp    0x000077505522f157
  0x000077505522f994:   mov    %rdx,%rdx
  0x000077505522f997:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@8 (line 5)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505522f99c:   jmp    0x000077505522f1bb
  0x000077505522f9a1:   mov    %rdx,%rdx
  0x000077505522f9a4:   call   0x000077505c829e80           ; ImmutableOopMap {[144]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@12 (line 5)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505522f9a9:   jmp    0x000077505522f20f
  0x000077505522f9ae:   movabs $0x7750205014c0,%r10         ;   {metadata({method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x000077505522f9b8:   mov    %r10,0x8(%rsp)
  0x000077505522f9bd:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522f9c5:   call   0x000077505c82e680           ; ImmutableOopMap {[144]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Adapter::<init>@-1 (line 5)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522f9ca:   jmp    0x000077505522f24c
  0x000077505522f9cf:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522f9d9:   mov    %r10,0x8(%rsp)
  0x000077505522f9de:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522f9e6:   call   0x000077505c82e680           ; ImmutableOopMap {[144]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.Adapter::<init>@1 (line 5)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522f9eb:   jmp    0x000077505522f289
  0x000077505522f9f0:   mov    0xc(%rsi),%edi
  0x000077505522f9f3:   shl    $0x3,%rdi
  0x000077505522f9f7:   cmp    $0x0,%rdi
  0x000077505522f9fb:   je     0x000077505522f2ca
  0x000077505522fa01:   mov    %rdi,(%rsp)
  0x000077505522fa05:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522fa0a:   jmp    0x000077505522f2ca
  0x000077505522fa0f:   cmp    $0x0,%rax
  0x000077505522fa13:   je     0x000077505522f2e9
  0x000077505522fa19:   mov    %rsi,(%rsp)
  0x000077505522fa1d:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505522fa22:   jmp    0x000077505522f2e9
  0x000077505522fa27:   movabs $0x775020500b50,%r10         ;   {metadata({method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x000077505522fa31:   mov    %r10,0x8(%rsp)
  0x000077505522fa36:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fa3e:   call   0x000077505c82e680           ; ImmutableOopMap {[144]=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.GuardInlined::<init>@-1
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fa43:   jmp    0x000077505522f32b
  0x000077505522fa48:   movabs $0x77502050df90,%r10         ;   {metadata({method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522fa52:   mov    %r10,0x8(%rsp)
  0x000077505522fa57:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fa5f:   call   0x000077505c82e680           ; ImmutableOopMap {[144]=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@-1 (line 130)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fa64:   jmp    0x000077505522f365
  0x000077505522fa69:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522fa73:   mov    %r10,0x8(%rsp)
  0x000077505522fa78:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fa80:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@7 (line 14)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fa85:   jmp    0x000077505522f3ba
  0x000077505522fa8a:   mov    0xc(%rax),%edi
  0x000077505522fa8d:   shl    $0x3,%rdi
  0x000077505522fa91:   cmp    $0x0,%rdi
  0x000077505522fa95:   je     0x000077505522f3c8
  0x000077505522fa9b:   mov    %rdi,(%rsp)
  0x000077505522fa9f:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522faa4:   jmp    0x000077505522f3c8
  0x000077505522faa9:   cmp    $0x0,%rsi
  0x000077505522faad:   je     0x000077505522f3e7
  0x000077505522fab3:   mov    %rax,(%rsp)
  0x000077505522fab7:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505522fabc:   jmp    0x000077505522f3e7
  0x000077505522fac1:   movabs $0x775020500358,%r10         ;   {metadata({method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522facb:   mov    %r10,0x8(%rsp)
  0x000077505522fad0:   movq   $0x1f,(%rsp)
  0x000077505522fad8:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.GuardInlinedKt::main@31 (line 4)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fadd:   jmp    0x000077505522f435
  0x000077505522fae2:   mov    %rdx,%rdx
  0x000077505522fae5:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@42 (line 9)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505522faea:   jmp    0x000077505522f4eb
  0x000077505522faef:   mov    %rdx,%rdx
  0x000077505522faf2:   call   0x000077505c829e80           ; ImmutableOopMap {[168]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@46 (line 9)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505522faf7:   jmp    0x000077505522f53f
  0x000077505522fafc:   movabs $0x7750205014c0,%r10         ;   {metadata({method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x000077505522fb06:   mov    %r10,0x8(%rsp)
  0x000077505522fb0b:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fb13:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Adapter::<init>@-1 (line 5)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fb18:   jmp    0x000077505522f57c
  0x000077505522fb1d:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522fb27:   mov    %r10,0x8(%rsp)
  0x000077505522fb2c:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fb34:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.Adapter::<init>@1 (line 5)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fb39:   jmp    0x000077505522f5b9
  0x000077505522fb3e:   mov    0xc(%rdx),%esi
  0x000077505522fb41:   shl    $0x3,%rsi
  0x000077505522fb45:   cmp    $0x0,%rsi
  0x000077505522fb49:   je     0x000077505522f5fa
  0x000077505522fb4f:   mov    %rsi,(%rsp)
  0x000077505522fb53:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522fb58:   jmp    0x000077505522f5fa
  0x000077505522fb5d:   cmp    $0x0,%rax
  0x000077505522fb61:   je     0x000077505522f619
  0x000077505522fb67:   mov    %rdx,(%rsp)
  0x000077505522fb6b:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505522fb70:   jmp    0x000077505522f619
  0x000077505522fb75:   movabs $0x7750205149f8,%r10         ;   {metadata({method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x000077505522fb7f:   mov    %r10,0x8(%rsp)
  0x000077505522fb84:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fb8c:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::<init>@-1
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fb91:   jmp    0x000077505522f65b
  0x000077505522fb96:   movabs $0x77502050df90,%r10         ;   {metadata({method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505522fba0:   mov    %r10,0x8(%rsp)
  0x000077505522fba5:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fbad:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@-1 (line 130)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fbb2:   jmp    0x000077505522f695
  0x000077505522fbb7:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522fbc1:   mov    %r10,0x8(%rsp)
  0x000077505522fbc6:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fbce:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.Guard::<init>@7 (line 6)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fbd3:   jmp    0x000077505522f6ea
  0x000077505522fbd8:   mov    0xc(%rbx),%esi
  0x000077505522fbdb:   shl    $0x3,%rsi
  0x000077505522fbdf:   cmp    $0x0,%rsi
  0x000077505522fbe3:   je     0x000077505522f6f8
  0x000077505522fbe9:   mov    %rsi,(%rsp)
  0x000077505522fbed:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522fbf2:   jmp    0x000077505522f6f8
  0x000077505522fbf7:   cmp    $0x0,%rdx
  0x000077505522fbfb:   je     0x000077505522f717
  0x000077505522fc01:   mov    %rbx,(%rsp)
  0x000077505522fc05:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505522fc0a:   jmp    0x000077505522f717
  0x000077505522fc0f:   movabs $0x775020514aa8,%r10         ;   {metadata({method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x000077505522fc19:   mov    %r10,0x8(%rsp)
  0x000077505522fc1e:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fc26:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@-1 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fc2b:   jmp    0x000077505522f754
  0x000077505522fc30:   mov    %rdx,%rdx
  0x000077505522fc33:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@1 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505522fc38:   jmp    0x000077505522f7a4
  0x000077505522fc3d:   movabs $0x7750205157c8,%r10         ;   {metadata({method} {0x00007750205157c8} '<init>' '(Lde/maschmi/blog/Guard;)V' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505522fc47:   mov    %r10,0x8(%rsp)
  0x000077505522fc4c:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fc54:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@-1
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fc59:   jmp    0x000077505522f7e1
  0x000077505522fc5e:   mov    0x10(%rax),%edx
  0x000077505522fc61:   shl    $0x3,%rdx
  0x000077505522fc65:   cmp    $0x0,%rdx
  0x000077505522fc69:   je     0x000077505522f7ef
  0x000077505522fc6f:   mov    %rdx,(%rsp)
  0x000077505522fc73:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505522fc78:   jmp    0x000077505522f7ef
  0x000077505522fc7d:   cmp    $0x0,%rbx
  0x000077505522fc81:   je     0x000077505522f80e
  0x000077505522fc87:   mov    %rax,(%rsp)
  0x000077505522fc8b:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x000077505522fc90:   jmp    0x000077505522f80e
  0x000077505522fc95:   movabs $0x775020516000,%r10         ;   {metadata({method} {0x0000775020516000} '<init>' '(I)V' in 'kotlin/jvm/internal/Lambda')}
  0x000077505522fc9f:   mov    %r10,0x8(%rsp)
  0x000077505522fca4:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fcac:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Lambda::<init>@-1 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@7
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fcb1:   jmp    0x000077505522f84b
  0x000077505522fcb6:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505522fcc0:   mov    %r10,0x8(%rsp)
  0x000077505522fcc5:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505522fccd:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - kotlin.jvm.internal.Lambda::<init>@1 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@7
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fcd2:   jmp    0x000077505522f888
  0x000077505522fcd7:   movabs $0x775020500358,%r10         ;   {metadata({method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505522fce1:   mov    %r10,0x8(%rsp)
  0x000077505522fce6:   movq   $0x41,(%rsp)
  0x000077505522fcee:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.GuardInlinedKt::main@65 (line 8)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505522fcf3:   jmp    0x000077505522f8dd
  0x000077505522fcf8:   movabs $0x77505522f93b,%r10         ;   {internal_word}
  0x000077505522fd02:   mov    %r10,0x360(%r15)
  0x000077505522fd09:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505522fd0e:   nop
  0x000077505522fd0f:   nop
  0x000077505522fd10:   mov    0x3d8(%r15),%rax
  0x000077505522fd17:   movq   $0x0,0x3d8(%r15)
  0x000077505522fd22:   movq   $0x0,0x3e0(%r15)
  0x000077505522fd2d:   add    $0xc0,%rsp
  0x000077505522fd34:   pop    %rbp
  0x000077505522fd35:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000077505522fd3a:   hlt
  0x000077505522fd3b:   hlt
  0x000077505522fd3c:   hlt
  0x000077505522fd3d:   hlt
  0x000077505522fd3e:   hlt
  0x000077505522fd3f:   hlt
[Stub Code]
  0x000077505522fd40:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000077505522fd45:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522fd4f:   jmp    0x000077505522fd4f           ;   {runtime_call}
  0x000077505522fd54:   nop
  0x000077505522fd55:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522fd5f:   jmp    0x000077505522fd5f           ;   {runtime_call}
  0x000077505522fd64:   nop
  0x000077505522fd65:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522fd6f:   jmp    0x000077505522fd6f           ;   {runtime_call}
  0x000077505522fd74:   nop
  0x000077505522fd75:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505522fd7f:   jmp    0x000077505522fd7f           ;   {runtime_call}
[Exception Handler]
  0x000077505522fd84:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000077505522fd89:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x000077505522fd93:   and    $0xfffffffffffffff0,%rsp
  0x000077505522fd97:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505522fd9c:   hlt
[Deopt Handler Code]
  0x000077505522fd9d:   movabs $0x77505522fd9d,%r10         ;   {section_word}
  0x000077505522fda7:   push   %r10
  0x000077505522fda9:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505522fdae:   hlt
  0x000077505522fdaf:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     518  136       3       de.maschmi.blog.GuardInlinedKt::main (69 bytes)
 total in heap  [0x0000775055230490,0x0000775055231a00] = 5488
 relocation     [0x00007750552305f0,0x0000775055230708] = 280
 main code      [0x0000775055230720,0x0000775055231320] = 3072
 stub code      [0x0000775055231320,0x0000775055231390] = 112
 oops           [0x0000775055231390,0x00007750552313a0] = 16
 metadata       [0x00007750552313a0,0x00007750552313e8] = 72
 scopes data    [0x00007750552313e8,0x0000775055231688] = 672
 scopes pcs     [0x0000775055231688,0x00007750552319f8] = 880
 dependencies   [0x00007750552319f8,0x0000775055231a00] = 8

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt'
  #           [sp+0xd0]  (sp of caller)
  0x0000775055230720:   mov    %eax,-0x14000(%rsp)
  0x0000775055230727:   push   %rbp
  0x0000775055230728:   sub    $0xc0,%rsp
  0x000077505523072f:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230739:   mov    0xf4(%rdx),%esi
  0x000077505523073f:   add    $0x2,%esi
  0x0000775055230742:   mov    %esi,0xf4(%rdx)
  0x0000775055230748:   and    $0x7fe,%esi
  0x000077505523074e:   cmp    $0x0,%esi
  0x0000775055230751:   je     0x0000775055230f49           ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@0 (line 4)
  0x0000775055230757:   mov    $0x0,%ebx
  0x000077505523075c:   jmp    0x0000775055230a4f           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@2 (line 4)
  0x0000775055230761:   nopl   0x0(%rax)
  0x0000775055230768:   mov    %ebx,0x98(%rsp)
  0x000077505523076f:   movabs $0x800000a08,%rdx            ;   {metadata('de/maschmi/blog/GuardInlined')}
  0x0000775055230779:   mov    0x108(%r15),%rax
  0x0000775055230780:   lea    0x10(%rax),%rdi
  0x0000775055230784:   cmp    0x118(%r15),%rdi
  0x000077505523078b:   ja     0x0000775055230f6a
  0x0000775055230791:   mov    %rdi,0x108(%r15)
  0x0000775055230798:   movq   $0x1,(%rax)
  0x000077505523079f:   mov    %rdx,%rcx
  0x00007750552307a2:   movabs $0x800000000,%r10
  0x00007750552307ac:   sub    %r10,%rcx
  0x00007750552307af:   mov    %ecx,0x8(%rax)
  0x00007750552307b2:   xor    %rcx,%rcx
  0x00007750552307b5:   mov    %ecx,0xc(%rax)
  0x00007750552307b8:   xor    %rcx,%rcx                    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@8 (line 5)
  0x00007750552307bb:   movabs $0x800000c18,%rdx            ;   {metadata('de/maschmi/blog/Adapter')}
  0x00007750552307c5:   mov    %rax,0x90(%rsp)
  0x00007750552307cd:   mov    0x108(%r15),%rax
  0x00007750552307d4:   lea    0x10(%rax),%rdi
  0x00007750552307d8:   cmp    0x118(%r15),%rdi
  0x00007750552307df:   ja     0x0000775055230f77
  0x00007750552307e5:   mov    %rdi,0x108(%r15)
  0x00007750552307ec:   movq   $0x1,(%rax)
  0x00007750552307f3:   mov    %rdx,%rcx
  0x00007750552307f6:   movabs $0x800000000,%r10
  0x0000775055230800:   sub    %r10,%rcx
  0x0000775055230803:   mov    %ecx,0x8(%rax)
  0x0000775055230806:   xor    %rcx,%rcx
  0x0000775055230809:   mov    %ecx,0xc(%rax)
  0x000077505523080c:   xor    %rcx,%rcx                    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@12 (line 5)
  0x000077505523080f:   mov    %rax,%rsi
  0x0000775055230812:   movabs $0x7750205171b8,%rdi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x000077505523081c:   addq   $0x1,0x158(%rdi)
  0x0000775055230824:   movabs $0x775020513410,%rsi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x000077505523082e:   mov    0xf4(%rsi),%edi
  0x0000775055230834:   add    $0x2,%edi
  0x0000775055230837:   mov    %edi,0xf4(%rsi)
  0x000077505523083d:   and    $0x1ffffe,%edi
  0x0000775055230843:   cmp    $0x0,%edi
  0x0000775055230846:   je     0x0000775055230f84
  0x000077505523084c:   mov    %rax,%rsi
  0x000077505523084f:   movabs $0x775020513410,%rdi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x0000775055230859:   addq   $0x1,0x138(%rdi)
  0x0000775055230861:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505523086b:   mov    0xf4(%rsi),%edi
  0x0000775055230871:   add    $0x2,%edi
  0x0000775055230874:   mov    %edi,0xf4(%rsi)
  0x000077505523087a:   and    $0x1ffffe,%edi
  0x0000775055230880:   cmp    $0x0,%edi
  0x0000775055230883:   je     0x0000775055230fa5
  0x0000775055230889:   movabs $0x775020513410,%rsi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x0000775055230893:   addq   $0x1,0x148(%rsi)
  0x000077505523089b:   mov    $0x1,%esi                    ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
  0x00007750552308a0:   mov    %rax,0x88(%rsp)
  0x00007750552308a8:   nopl   0x0(%rax)
  0x00007750552308af:   call   0x000077505c788680           ; ImmutableOopMap {[136]=Oop [144]=Oop }
                                                            ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
                                                            ;   {static_call}
  0x00007750552308b4:   movsbl 0x38(%r15),%esi
  0x00007750552308b9:   cmp    $0x0,%esi
  0x00007750552308bc:   mov    0x88(%rsp),%rsi
  0x00007750552308c4:   jne    0x0000775055230fc6
  0x00007750552308ca:   mov    %rax,%r10
  0x00007750552308cd:   shr    $0x3,%r10
  0x00007750552308d1:   mov    %r10d,0xc(%rsi)
  0x00007750552308d5:   mov    %rsi,%rdi
  0x00007750552308d8:   xor    %rax,%rdi
  0x00007750552308db:   shr    $0x16,%rdi
  0x00007750552308df:   cmp    $0x0,%rdi
  0x00007750552308e3:   jne    0x0000775055230fe5           ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
  0x00007750552308e9:   mov    0x90(%rsp),%rax
  0x00007750552308f1:   movabs $0x7750205171b8,%rdi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x00007750552308fb:   addq   $0x1,0x168(%rdi)
  0x0000775055230903:   movabs $0x7750205138e0,%rdi         ;   {metadata(method data for {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x000077505523090d:   mov    0xf4(%rdi),%ebx
  0x0000775055230913:   add    $0x2,%ebx
  0x0000775055230916:   mov    %ebx,0xf4(%rdi)
  0x000077505523091c:   and    $0x1ffffe,%ebx
  0x0000775055230922:   cmp    $0x0,%ebx
  0x0000775055230925:   je     0x0000775055230ffd
  0x000077505523092b:   movabs $0x7750205138e0,%rdi         ;   {metadata(method data for {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x0000775055230935:   addq   $0x1,0x138(%rdi)
  0x000077505523093d:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055230947:   mov    0xf4(%rdi),%ebx
  0x000077505523094d:   add    $0x2,%ebx
  0x0000775055230950:   mov    %ebx,0xf4(%rdi)
  0x0000775055230956:   and    $0x1ffffe,%ebx
  0x000077505523095c:   cmp    $0x0,%ebx
  0x000077505523095f:   je     0x000077505523101e
  0x0000775055230965:   movabs $0x775020512670,%rdi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x000077505523096f:   incl   0x138(%rdi)                  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
  0x0000775055230975:   mov    0x90(%rsp),%rax
  0x000077505523097d:   mov    %rax,%rdi
  0x0000775055230980:   movabs $0x7750205138e0,%rbx         ;   {metadata(method data for {method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x000077505523098a:   addq   $0x1,0x148(%rbx)
  0x0000775055230992:   movabs $0x77502024ca78,%rdi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x000077505523099c:   mov    0xf4(%rdi),%ebx
  0x00007750552309a2:   add    $0x2,%ebx
  0x00007750552309a5:   mov    %ebx,0xf4(%rdi)
  0x00007750552309ab:   and    $0x1ffffe,%ebx
  0x00007750552309b1:   cmp    $0x0,%ebx
  0x00007750552309b4:   je     0x000077505523103f
  0x00007750552309ba:   movsbl 0x38(%r15),%edi
  0x00007750552309bf:   cmp    $0x0,%edi
  0x00007750552309c2:   jne    0x0000775055231060
  0x00007750552309c8:   mov    %rsi,%r10
  0x00007750552309cb:   shr    $0x3,%r10
  0x00007750552309cf:   mov    %r10d,0xc(%rax)
  0x00007750552309d3:   mov    %rax,%rdi
  0x00007750552309d6:   xor    %rsi,%rdi
  0x00007750552309d9:   shr    $0x16,%rdi
  0x00007750552309dd:   cmp    $0x0,%rdi
  0x00007750552309e1:   jne    0x000077505523107f           ;*putfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlined::<init>@12 (line 14)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
  0x00007750552309e7:   mov    %rax,%rsi
  0x00007750552309ea:   movabs $0x7750205171b8,%rdi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x00007750552309f4:   addq   $0x1,0x178(%rdi)
  0x00007750552309fc:   mov    %rax,%rsi                    ;*invokevirtual functionOneUsingAdapter-d1pmJ48 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@24 (line 6)
  0x00007750552309ff:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokevirtual functionOneUsingAdapter-d1pmJ48 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@24 (line 6)
                                                            ;   {optimized virtual_call}
  0x0000775055230a04:   mov    0x98(%rsp),%ebx
  0x0000775055230a0b:   inc    %ebx
  0x0000775055230a0d:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230a17:   mov    0xf8(%rdx),%esi
  0x0000775055230a1d:   add    $0x2,%esi
  0x0000775055230a20:   mov    %esi,0xf8(%rdx)
  0x0000775055230a26:   and    $0x3ffe,%esi
  0x0000775055230a2c:   cmp    $0x0,%esi
  0x0000775055230a2f:   je     0x0000775055231097           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@31 (line 4)
  0x0000775055230a35:   mov    0x350(%r15),%r10             ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.GuardInlinedKt::main@31 (line 4)
  0x0000775055230a3c:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055230a3f:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230a49:   incl   0x1b0(%rdx)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@31 (line 4)
  0x0000775055230a4f:   cmp    $0xc351,%ebx
  0x0000775055230a55:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230a5f:   movabs $0x148,%rsi
  0x0000775055230a69:   jl     0x0000775055230a79
  0x0000775055230a6f:   movabs $0x138,%rsi
  0x0000775055230a79:   mov    (%rdx,%rsi,1),%rdi
  0x0000775055230a7d:   lea    0x1(%rdi),%rdi
  0x0000775055230a81:   mov    %rdi,(%rdx,%rsi,1)
  0x0000775055230a85:   jl     0x0000775055230768           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@5 (line 4)
  0x0000775055230a8b:   mov    $0x0,%ebx
  0x0000775055230a90:   jmp    0x0000775055230ef7           ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@36 (line 8)
  0x0000775055230a95:   data16 xchg %ax,%ax
  0x0000775055230a98:   mov    %ebx,0x9c(%rsp)
  0x0000775055230a9f:   movabs $0x800003408,%rdx            ;   {metadata('de/maschmi/blog/Guard')}
  0x0000775055230aa9:   mov    0x108(%r15),%rax
  0x0000775055230ab0:   lea    0x10(%rax),%rdi
  0x0000775055230ab4:   cmp    0x118(%r15),%rdi
  0x0000775055230abb:   ja     0x00007750552310b8
  0x0000775055230ac1:   mov    %rdi,0x108(%r15)
  0x0000775055230ac8:   movq   $0x1,(%rax)
  0x0000775055230acf:   mov    %rdx,%rcx
  0x0000775055230ad2:   movabs $0x800000000,%r10
  0x0000775055230adc:   sub    %r10,%rcx
  0x0000775055230adf:   mov    %ecx,0x8(%rax)
  0x0000775055230ae2:   xor    %rcx,%rcx
  0x0000775055230ae5:   mov    %ecx,0xc(%rax)
  0x0000775055230ae8:   xor    %rcx,%rcx                    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@42 (line 9)
  0x0000775055230aeb:   movabs $0x800000c18,%rdx            ;   {metadata('de/maschmi/blog/Adapter')}
  0x0000775055230af5:   mov    %rax,0xa8(%rsp)
  0x0000775055230afd:   mov    0x108(%r15),%rax
  0x0000775055230b04:   lea    0x10(%rax),%rdi
  0x0000775055230b08:   cmp    0x118(%r15),%rdi
  0x0000775055230b0f:   ja     0x00007750552310c5
  0x0000775055230b15:   mov    %rdi,0x108(%r15)
  0x0000775055230b1c:   movq   $0x1,(%rax)
  0x0000775055230b23:   mov    %rdx,%rcx
  0x0000775055230b26:   movabs $0x800000000,%r10
  0x0000775055230b30:   sub    %r10,%rcx
  0x0000775055230b33:   mov    %ecx,0x8(%rax)
  0x0000775055230b36:   xor    %rcx,%rcx
  0x0000775055230b39:   mov    %ecx,0xc(%rax)
  0x0000775055230b3c:   xor    %rcx,%rcx                    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@46 (line 9)
  0x0000775055230b3f:   mov    %rax,%rsi
  0x0000775055230b42:   movabs $0x7750205171b8,%rdi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230b4c:   addq   $0x1,0x1e8(%rdi)
  0x0000775055230b54:   movabs $0x775020513410,%rsi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x0000775055230b5e:   mov    0xf4(%rsi),%edi
  0x0000775055230b64:   add    $0x2,%edi
  0x0000775055230b67:   mov    %edi,0xf4(%rsi)
  0x0000775055230b6d:   and    $0x1ffffe,%edi
  0x0000775055230b73:   cmp    $0x0,%edi
  0x0000775055230b76:   je     0x00007750552310d2
  0x0000775055230b7c:   mov    %rax,%rsi
  0x0000775055230b7f:   movabs $0x775020513410,%rdi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x0000775055230b89:   addq   $0x1,0x138(%rdi)
  0x0000775055230b91:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055230b9b:   mov    0xf4(%rsi),%edi
  0x0000775055230ba1:   add    $0x2,%edi
  0x0000775055230ba4:   mov    %edi,0xf4(%rsi)
  0x0000775055230baa:   and    $0x1ffffe,%edi
  0x0000775055230bb0:   cmp    $0x0,%edi
  0x0000775055230bb3:   je     0x00007750552310f3
  0x0000775055230bb9:   movabs $0x775020513410,%rsi         ;   {metadata(method data for {method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x0000775055230bc3:   addq   $0x1,0x148(%rsi)
  0x0000775055230bcb:   mov    $0x1,%esi                    ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
  0x0000775055230bd0:   mov    %rax,0xa0(%rsp)
  0x0000775055230bd8:   nopl   0x0(%rax)
  0x0000775055230bdf:   call   0x000077505c788680           ; ImmutableOopMap {[160]=Oop [168]=Oop }
                                                            ;*invokestatic Random {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@6 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
                                                            ;   {static_call}
  0x0000775055230be4:   movsbl 0x38(%r15),%edx
  0x0000775055230be9:   cmp    $0x0,%edx
  0x0000775055230bec:   mov    0xa0(%rsp),%rdx
  0x0000775055230bf4:   jne    0x0000775055231114
  0x0000775055230bfa:   mov    %rax,%r10
  0x0000775055230bfd:   shr    $0x3,%r10
  0x0000775055230c01:   mov    %r10d,0xc(%rdx)
  0x0000775055230c05:   mov    %rdx,%rsi
  0x0000775055230c08:   xor    %rax,%rsi
  0x0000775055230c0b:   shr    $0x16,%rsi
  0x0000775055230c0f:   cmp    $0x0,%rsi
  0x0000775055230c13:   jne    0x0000775055231133           ;*putfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::<init>@9 (line 7)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
  0x0000775055230c19:   mov    0xa8(%rsp),%rax
  0x0000775055230c21:   movabs $0x7750205171b8,%rsi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230c2b:   addq   $0x1,0x1f8(%rsi)
  0x0000775055230c33:   movabs $0x7750205165b8,%rsi         ;   {metadata(method data for {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x0000775055230c3d:   mov    0xf4(%rsi),%edi
  0x0000775055230c43:   add    $0x2,%edi
  0x0000775055230c46:   mov    %edi,0xf4(%rsi)
  0x0000775055230c4c:   and    $0x1ffffe,%edi
  0x0000775055230c52:   cmp    $0x0,%edi
  0x0000775055230c55:   je     0x000077505523114b
  0x0000775055230c5b:   movabs $0x7750205165b8,%rsi         ;   {metadata(method data for {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x0000775055230c65:   addq   $0x1,0x138(%rsi)
  0x0000775055230c6d:   movabs $0x775020512670,%rsi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055230c77:   mov    0xf4(%rsi),%edi
  0x0000775055230c7d:   add    $0x2,%edi
  0x0000775055230c80:   mov    %edi,0xf4(%rsi)
  0x0000775055230c86:   and    $0x1ffffe,%edi
  0x0000775055230c8c:   cmp    $0x0,%edi
  0x0000775055230c8f:   je     0x000077505523116c
  0x0000775055230c95:   movabs $0x775020512670,%rsi         ;   {metadata(method data for {method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055230c9f:   incl   0x138(%rsi)                  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@1 (line 130)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
  0x0000775055230ca5:   mov    0xa8(%rsp),%rbx
  0x0000775055230cad:   mov    %rbx,%rax
  0x0000775055230cb0:   movabs $0x7750205165b8,%rsi         ;   {metadata(method data for {method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x0000775055230cba:   addq   $0x1,0x148(%rsi)
  0x0000775055230cc2:   movabs $0x77502024ca78,%rsi         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055230ccc:   mov    0xf4(%rsi),%edi
  0x0000775055230cd2:   add    $0x2,%edi
  0x0000775055230cd5:   mov    %edi,0xf4(%rsi)
  0x0000775055230cdb:   and    $0x1ffffe,%edi
  0x0000775055230ce1:   cmp    $0x0,%edi
  0x0000775055230ce4:   je     0x000077505523118d
  0x0000775055230cea:   movsbl 0x38(%r15),%esi
  0x0000775055230cef:   cmp    $0x0,%esi
  0x0000775055230cf2:   jne    0x00007750552311ae
  0x0000775055230cf8:   mov    %rdx,%r10
  0x0000775055230cfb:   shr    $0x3,%r10
  0x0000775055230cff:   mov    %r10d,0xc(%rbx)
  0x0000775055230d03:   mov    %rbx,%rax
  0x0000775055230d06:   xor    %rdx,%rax
  0x0000775055230d09:   shr    $0x16,%rax
  0x0000775055230d0d:   cmp    $0x0,%rax
  0x0000775055230d11:   jne    0x00007750552311cd           ;*putfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::<init>@12 (line 6)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
  0x0000775055230d17:   mov    %rbx,%rax
  0x0000775055230d1a:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230d24:   addq   $0x1,0x208(%rdx)
  0x0000775055230d2c:   movabs $0x775020516758,%rdx         ;   {metadata(method data for {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x0000775055230d36:   mov    0xf4(%rdx),%esi
  0x0000775055230d3c:   add    $0x2,%esi
  0x0000775055230d3f:   mov    %esi,0xf4(%rdx)
  0x0000775055230d45:   and    $0x1ffffe,%esi
  0x0000775055230d4b:   cmp    $0x0,%esi
  0x0000775055230d4e:   je     0x00007750552311e5
  0x0000775055230d54:   movabs $0x800004000,%rdx            ;   {metadata('de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x0000775055230d5e:   mov    0x108(%r15),%rax
  0x0000775055230d65:   lea    0x18(%rax),%rdi
  0x0000775055230d69:   cmp    0x118(%r15),%rdi
  0x0000775055230d70:   ja     0x0000775055231206
  0x0000775055230d76:   mov    %rdi,0x108(%r15)
  0x0000775055230d7d:   movq   $0x1,(%rax)
  0x0000775055230d84:   mov    %rdx,%rcx
  0x0000775055230d87:   movabs $0x800000000,%r10
  0x0000775055230d91:   sub    %r10,%rcx
  0x0000775055230d94:   mov    %ecx,0x8(%rax)
  0x0000775055230d97:   xor    %rcx,%rcx
  0x0000775055230d9a:   mov    %ecx,0xc(%rax)
  0x0000775055230d9d:   xor    %rcx,%rcx
  0x0000775055230da0:   mov    %rcx,0x10(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@1 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
  0x0000775055230da4:   mov    %rax,%rdx
  0x0000775055230da7:   movabs $0x775020516758,%rsi         ;   {metadata(method data for {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x0000775055230db1:   addq   $0x1,0x138(%rsi)
  0x0000775055230db9:   movabs $0x775020516928,%rdx         ;   {metadata(method data for {method} {0x00007750205157c8} '<init>' '(Lde/maschmi/blog/Guard;)V' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x0000775055230dc3:   mov    0xf4(%rdx),%esi
  0x0000775055230dc9:   add    $0x2,%esi
  0x0000775055230dcc:   mov    %esi,0xf4(%rdx)
  0x0000775055230dd2:   and    $0x1ffffe,%esi
  0x0000775055230dd8:   cmp    $0x0,%esi
  0x0000775055230ddb:   je     0x0000775055231213
  0x0000775055230de1:   movsbl 0x38(%r15),%edx
  0x0000775055230de6:   cmp    $0x0,%edx
  0x0000775055230de9:   jne    0x0000775055231234
  0x0000775055230def:   mov    %rbx,%r10
  0x0000775055230df2:   shr    $0x3,%r10
  0x0000775055230df6:   mov    %r10d,0x10(%rax)
  0x0000775055230dfa:   mov    %rax,%rdx
  0x0000775055230dfd:   xor    %rbx,%rdx
  0x0000775055230e00:   shr    $0x16,%rdx
  0x0000775055230e04:   cmp    $0x0,%rdx
  0x0000775055230e08:   jne    0x0000775055231253           ;*putfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@2
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
  0x0000775055230e0e:   mov    %rax,%rdx
  0x0000775055230e11:   movabs $0x775020516928,%rsi         ;   {metadata(method data for {method} {0x00007750205157c8} '<init>' '(Lde/maschmi/blog/Guard;)V' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x0000775055230e1b:   addq   $0x1,0x138(%rsi)
  0x0000775055230e23:   movabs $0x775020516aa8,%rdx         ;   {metadata(method data for {method} {0x0000775020516000} '<init>' '(I)V' in 'kotlin/jvm/internal/Lambda')}
  0x0000775055230e2d:   mov    0xf4(%rdx),%esi
  0x0000775055230e33:   add    $0x2,%esi
  0x0000775055230e36:   mov    %esi,0xf4(%rdx)
  0x0000775055230e3c:   and    $0x1ffffe,%esi
  0x0000775055230e42:   cmp    $0x0,%esi
  0x0000775055230e45:   je     0x000077505523126b
  0x0000775055230e4b:   mov    %rax,%rdx
  0x0000775055230e4e:   movabs $0x775020516aa8,%rsi         ;   {metadata(method data for {method} {0x0000775020516000} '<init>' '(I)V' in 'kotlin/jvm/internal/Lambda')}
  0x0000775055230e58:   addq   $0x1,0x138(%rsi)
  0x0000775055230e60:   movabs $0x77502024ca78,%rdx         ;   {metadata(method data for {method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055230e6a:   mov    0xf4(%rdx),%esi
  0x0000775055230e70:   add    $0x2,%esi
  0x0000775055230e73:   mov    %esi,0xf4(%rdx)
  0x0000775055230e79:   and    $0x1ffffe,%esi
  0x0000775055230e7f:   cmp    $0x0,%esi
  0x0000775055230e82:   je     0x000077505523128c
  0x0000775055230e88:   mov    %rbx,%rdx
  0x0000775055230e8b:   movabs $0x775020516758,%rsi         ;   {metadata(method data for {method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x0000775055230e95:   addq   $0x1,0x180(%rsi)
  0x0000775055230e9d:   mov    %rax,%rdx
  0x0000775055230ea0:   mov    %rbx,%rsi                    ;*invokespecial guard-IoAF18A {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
  0x0000775055230ea3:   nopl   0x0(%rax)
  0x0000775055230ea7:   call   0x000077505c788080           ; ImmutableOopMap {}
                                                            ;*invokespecial guard-IoAF18A {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@12 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {optimized virtual_call}
  0x0000775055230eac:   mov    0x9c(%rsp),%ebx
  0x0000775055230eb3:   inc    %ebx
  0x0000775055230eb5:   movabs $0x7750205171b8,%rsi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230ebf:   mov    0xf8(%rsi),%edi
  0x0000775055230ec5:   add    $0x2,%edi
  0x0000775055230ec8:   mov    %edi,0xf8(%rsi)
  0x0000775055230ece:   and    $0x3ffe,%edi
  0x0000775055230ed4:   cmp    $0x0,%edi
  0x0000775055230ed7:   je     0x00007750552312ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@65 (line 8)
  0x0000775055230edd:   mov    0x350(%r15),%r10             ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.GuardInlinedKt::main@65 (line 8)
  0x0000775055230ee4:   test   %eax,(%r10)                  ;   {poll}
  0x0000775055230ee7:   movabs $0x7750205171b8,%rsi         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230ef1:   incl   0x240(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@65 (line 8)
  0x0000775055230ef7:   cmp    $0xc351,%ebx
  0x0000775055230efd:   movabs $0x7750205171b8,%rdx         ;   {metadata(method data for {method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230f07:   movabs $0x1d8,%rsi
  0x0000775055230f11:   jl     0x0000775055230f21
  0x0000775055230f17:   movabs $0x1c8,%rsi
  0x0000775055230f21:   mov    (%rdx,%rsi,1),%rdi
  0x0000775055230f25:   lea    0x1(%rdi),%rdi
  0x0000775055230f29:   mov    %rdi,(%rdx,%rsi,1)
  0x0000775055230f2d:   jl     0x0000775055230a98           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@39 (line 8)
  0x0000775055230f33:   add    $0xc0,%rsp
  0x0000775055230f3a:   pop    %rbp
  0x0000775055230f3b:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x0000775055230f42:   ja     0x00007750552312ce
  0x0000775055230f48:   ret
  0x0000775055230f49:   movabs $0x775020500358,%r10         ;   {metadata({method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x0000775055230f53:   mov    %r10,0x8(%rsp)
  0x0000775055230f58:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055230f60:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@-1 (line 4)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055230f65:   jmp    0x0000775055230757
  0x0000775055230f6a:   mov    %rdx,%rdx
  0x0000775055230f6d:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@8 (line 5)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055230f72:   jmp    0x00007750552307bb
  0x0000775055230f77:   mov    %rdx,%rdx
  0x0000775055230f7a:   call   0x000077505c829e80           ; ImmutableOopMap {[144]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@12 (line 5)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000775055230f7f:   jmp    0x000077505523080f
  0x0000775055230f84:   movabs $0x7750205014c0,%r10         ;   {metadata({method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x0000775055230f8e:   mov    %r10,0x8(%rsp)
  0x0000775055230f93:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055230f9b:   call   0x000077505c82e680           ; ImmutableOopMap {[144]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Adapter::<init>@-1 (line 5)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055230fa0:   jmp    0x000077505523084c
  0x0000775055230fa5:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055230faf:   mov    %r10,0x8(%rsp)
  0x0000775055230fb4:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055230fbc:   call   0x000077505c82e680           ; ImmutableOopMap {[144]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.Adapter::<init>@1 (line 5)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@16 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055230fc1:   jmp    0x0000775055230889
  0x0000775055230fc6:   mov    0xc(%rsi),%edi
  0x0000775055230fc9:   shl    $0x3,%rdi
  0x0000775055230fcd:   cmp    $0x0,%rdi
  0x0000775055230fd1:   je     0x00007750552308ca
  0x0000775055230fd7:   mov    %rdi,(%rsp)
  0x0000775055230fdb:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x0000775055230fe0:   jmp    0x00007750552308ca
  0x0000775055230fe5:   cmp    $0x0,%rax
  0x0000775055230fe9:   je     0x00007750552308e9
  0x0000775055230fef:   mov    %rsi,(%rsp)
  0x0000775055230ff3:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055230ff8:   jmp    0x00007750552308e9
  0x0000775055230ffd:   movabs $0x775020500b50,%r10         ;   {metadata({method} {0x0000775020500b50} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/GuardInlined')}
  0x0000775055231007:   mov    %r10,0x8(%rsp)
  0x000077505523100c:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055231014:   call   0x000077505c82e680           ; ImmutableOopMap {[144]=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.GuardInlined::<init>@-1
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055231019:   jmp    0x000077505523092b
  0x000077505523101e:   movabs $0x77502050df90,%r10         ;   {metadata({method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055231028:   mov    %r10,0x8(%rsp)
  0x000077505523102d:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055231035:   call   0x000077505c82e680           ; ImmutableOopMap {[144]=Oop rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@-1 (line 130)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@3
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505523103a:   jmp    0x0000775055230965
  0x000077505523103f:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055231049:   mov    %r10,0x8(%rsp)
  0x000077505523104e:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055231056:   call   0x000077505c82e680           ; ImmutableOopMap {rsi=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.GuardInlined::<init>@7 (line 14)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@19 (line 5)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505523105b:   jmp    0x00007750552309ba
  0x0000775055231060:   mov    0xc(%rax),%edi
  0x0000775055231063:   shl    $0x3,%rdi
  0x0000775055231067:   cmp    $0x0,%rdi
  0x000077505523106b:   je     0x00007750552309c8
  0x0000775055231071:   mov    %rdi,(%rsp)
  0x0000775055231075:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505523107a:   jmp    0x00007750552309c8
  0x000077505523107f:   cmp    $0x0,%rsi
  0x0000775055231083:   je     0x00007750552309e7
  0x0000775055231089:   mov    %rax,(%rsp)
  0x000077505523108d:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055231092:   jmp    0x00007750552309e7
  0x0000775055231097:   movabs $0x775020500358,%r10         ;   {metadata({method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x00007750552310a1:   mov    %r10,0x8(%rsp)
  0x00007750552310a6:   movq   $0x1f,(%rsp)
  0x00007750552310ae:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.GuardInlinedKt::main@31 (line 4)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552310b3:   jmp    0x0000775055230a35
  0x00007750552310b8:   mov    %rdx,%rdx
  0x00007750552310bb:   call   0x000077505c829e80           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@42 (line 9)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007750552310c0:   jmp    0x0000775055230aeb
  0x00007750552310c5:   mov    %rdx,%rdx
  0x00007750552310c8:   call   0x000077505c829e80           ; ImmutableOopMap {[168]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@46 (line 9)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007750552310cd:   jmp    0x0000775055230b3f
  0x00007750552310d2:   movabs $0x7750205014c0,%r10         ;   {metadata({method} {0x00007750205014c0} '<init>' '()V' in 'de/maschmi/blog/Adapter')}
  0x00007750552310dc:   mov    %r10,0x8(%rsp)
  0x00007750552310e1:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552310e9:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Adapter::<init>@-1 (line 5)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552310ee:   jmp    0x0000775055230b7c
  0x00007750552310f3:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x00007750552310fd:   mov    %r10,0x8(%rsp)
  0x0000775055231102:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505523110a:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.Adapter::<init>@1 (line 5)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@50 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505523110f:   jmp    0x0000775055230bb9
  0x0000775055231114:   mov    0xc(%rdx),%esi
  0x0000775055231117:   shl    $0x3,%rsi
  0x000077505523111b:   cmp    $0x0,%rsi
  0x000077505523111f:   je     0x0000775055230bfa
  0x0000775055231125:   mov    %rsi,(%rsp)
  0x0000775055231129:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505523112e:   jmp    0x0000775055230bfa
  0x0000775055231133:   cmp    $0x0,%rax
  0x0000775055231137:   je     0x0000775055230c19
  0x000077505523113d:   mov    %rdx,(%rsp)
  0x0000775055231141:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055231146:   jmp    0x0000775055230c19
  0x000077505523114b:   movabs $0x7750205149f8,%r10         ;   {metadata({method} {0x00007750205149f8} '<init>' '(Lde/maschmi/blog/Adapter;)V' in 'de/maschmi/blog/Guard')}
  0x0000775055231155:   mov    %r10,0x8(%rsp)
  0x000077505523115a:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055231162:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::<init>@-1
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055231167:   jmp    0x0000775055230c5b
  0x000077505523116c:   movabs $0x77502050df90,%r10         ;   {metadata({method} {0x000077502050df90} 'checkNotNullParameter' '(Ljava/lang/Object;Ljava/lang/String;)V' in 'kotlin/jvm/internal/Intrinsics')}
  0x0000775055231176:   mov    %r10,0x8(%rsp)
  0x000077505523117b:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055231183:   call   0x000077505c82e680           ; ImmutableOopMap {[168]=Oop rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Intrinsics::checkNotNullParameter@-1 (line 130)
                                                            ; - de.maschmi.blog.Guard::<init>@3
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055231188:   jmp    0x0000775055230c95
  0x000077505523118d:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055231197:   mov    %r10,0x8(%rsp)
  0x000077505523119c:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552311a4:   call   0x000077505c82e680           ; ImmutableOopMap {rdx=Oop rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - de.maschmi.blog.Guard::<init>@7 (line 6)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@53 (line 9)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552311a9:   jmp    0x0000775055230cea
  0x00007750552311ae:   mov    0xc(%rbx),%esi
  0x00007750552311b1:   shl    $0x3,%rsi
  0x00007750552311b5:   cmp    $0x0,%rsi
  0x00007750552311b9:   je     0x0000775055230cf8
  0x00007750552311bf:   mov    %rsi,(%rsp)
  0x00007750552311c3:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x00007750552311c8:   jmp    0x0000775055230cf8
  0x00007750552311cd:   cmp    $0x0,%rdx
  0x00007750552311d1:   je     0x0000775055230d17
  0x00007750552311d7:   mov    %rbx,(%rsp)
  0x00007750552311db:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x00007750552311e0:   jmp    0x0000775055230d17
  0x00007750552311e5:   movabs $0x775020514aa8,%r10         ;   {metadata({method} {0x0000775020514aa8} 'functionOneUsingAdapter-d1pmJ48' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard')}
  0x00007750552311ef:   mov    %r10,0x8(%rsp)
  0x00007750552311f4:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552311fc:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@-1 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055231201:   jmp    0x0000775055230d54
  0x0000775055231206:   mov    %rdx,%rdx
  0x0000775055231209:   call   0x000077505c829e80           ; ImmutableOopMap {rbx=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@1 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000077505523120e:   jmp    0x0000775055230da4
  0x0000775055231213:   movabs $0x7750205157c8,%r10         ;   {metadata({method} {0x00007750205157c8} '<init>' '(Lde/maschmi/blog/Guard;)V' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505523121d:   mov    %r10,0x8(%rsp)
  0x0000775055231222:   movq   $0xffffffffffffffff,(%rsp)
  0x000077505523122a:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@-1
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000077505523122f:   jmp    0x0000775055230de1
  0x0000775055231234:   mov    0x10(%rax),%edx
  0x0000775055231237:   shl    $0x3,%rdx
  0x000077505523123b:   cmp    $0x0,%rdx
  0x000077505523123f:   je     0x0000775055230def
  0x0000775055231245:   mov    %rdx,(%rsp)
  0x0000775055231249:   call   0x000077505c82ec80           ;   {runtime_call g1_pre_barrier_slow}
  0x000077505523124e:   jmp    0x0000775055230def
  0x0000775055231253:   cmp    $0x0,%rbx
  0x0000775055231257:   je     0x0000775055230e0e
  0x000077505523125d:   mov    %rax,(%rsp)
  0x0000775055231261:   call   0x000077505c82ef80           ;   {runtime_call g1_post_barrier_slow}
  0x0000775055231266:   jmp    0x0000775055230e0e
  0x000077505523126b:   movabs $0x775020516000,%r10         ;   {metadata({method} {0x0000775020516000} '<init>' '(I)V' in 'kotlin/jvm/internal/Lambda')}
  0x0000775055231275:   mov    %r10,0x8(%rsp)
  0x000077505523127a:   movq   $0xffffffffffffffff,(%rsp)
  0x0000775055231282:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - kotlin.jvm.internal.Lambda::<init>@-1 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@7
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000775055231287:   jmp    0x0000775055230e4b
  0x000077505523128c:   movabs $0x775020000510,%r10         ;   {metadata({method} {0x0000775020000510} '<init>' '()V' in 'java/lang/Object')}
  0x0000775055231296:   mov    %r10,0x8(%rsp)
  0x000077505523129b:   movq   $0xffffffffffffffff,(%rsp)
  0x00007750552312a3:   call   0x000077505c82e680           ; ImmutableOopMap {rbx=Oop rax=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ; - kotlin.jvm.internal.Lambda::<init>@1 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::<init>@7
                                                            ; - de.maschmi.blog.Guard::functionOneUsingAdapter-d1pmJ48@6 (line 9)
                                                            ; - de.maschmi.blog.GuardInlinedKt::main@58 (line 10)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552312a8:   jmp    0x0000775055230e88
  0x00007750552312ad:   movabs $0x775020500358,%r10         ;   {metadata({method} {0x0000775020500358} 'main' '()V' in 'de/maschmi/blog/GuardInlinedKt')}
  0x00007750552312b7:   mov    %r10,0x8(%rsp)
  0x00007750552312bc:   movq   $0x41,(%rsp)
  0x00007750552312c4:   call   0x000077505c82e680           ; ImmutableOopMap {}
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.GuardInlinedKt::main@65 (line 8)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007750552312c9:   jmp    0x0000775055230edd
  0x00007750552312ce:   movabs $0x775055230f3b,%r10         ;   {internal_word}
  0x00007750552312d8:   mov    %r10,0x360(%r15)
  0x00007750552312df:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x00007750552312e4:   nop
  0x00007750552312e5:   nop
  0x00007750552312e6:   mov    0x3d8(%r15),%rax
  0x00007750552312ed:   movq   $0x0,0x3d8(%r15)
  0x00007750552312f8:   movq   $0x0,0x3e0(%r15)
  0x0000775055231303:   add    $0xc0,%rsp
  0x000077505523130a:   pop    %rbp
  0x000077505523130b:   jmp    0x000077505c828380           ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000775055231310:   hlt
  0x0000775055231311:   hlt
  0x0000775055231312:   hlt
  0x0000775055231313:   hlt
  0x0000775055231314:   hlt
  0x0000775055231315:   hlt
  0x0000775055231316:   hlt
  0x0000775055231317:   hlt
  0x0000775055231318:   hlt
  0x0000775055231319:   hlt
  0x000077505523131a:   hlt
  0x000077505523131b:   hlt
  0x000077505523131c:   hlt
  0x000077505523131d:   hlt
  0x000077505523131e:   hlt
  0x000077505523131f:   hlt
[Stub Code]
  0x0000775055231320:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x0000775055231325:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505523132f:   jmp    0x000077505523132f           ;   {runtime_call}
  0x0000775055231334:   nop
  0x0000775055231335:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505523133f:   jmp    0x000077505523133f           ;   {runtime_call}
  0x0000775055231344:   nop
  0x0000775055231345:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505523134f:   jmp    0x000077505523134f           ;   {runtime_call}
  0x0000775055231354:   nop
  0x0000775055231355:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000077505523135f:   jmp    0x000077505523135f           ;   {runtime_call}
[Exception Handler]
  0x0000775055231364:   call   0x000077505c82b380           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000775055231369:   movabs $0x7750741c4f9e,%rdi         ;   {external_word}
  0x0000775055231373:   and    $0xfffffffffffffff0,%rsp
  0x0000775055231377:   call   0x0000775073d39a40           ;   {runtime_call}
  0x000077505523137c:   hlt
[Deopt Handler Code]
  0x000077505523137d:   movabs $0x77505523137d,%r10         ;   {section_word}
  0x0000775055231387:   push   %r10
  0x0000775055231389:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505523138e:   hlt
  0x000077505523138f:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     528  137   !   4       de.maschmi.blog.Guard::guard-IoAF18A (33 bytes)
 total in heap  [0x000077505ccd6290,0x000077505ccd6900] = 1648
 relocation     [0x000077505ccd63f0,0x000077505ccd6418] = 40
 main code      [0x000077505ccd6420,0x000077505ccd6580] = 352
 stub code      [0x000077505ccd6580,0x000077505ccd6598] = 24
 oops           [0x000077505ccd6598,0x000077505ccd65a8] = 16
 metadata       [0x000077505ccd65a8,0x000077505ccd6600] = 88
 scopes data    [0x000077505ccd6600,0x000077505ccd6710] = 272
 scopes pcs     [0x000077505ccd6710,0x000077505ccd68d0] = 448
 dependencies   [0x000077505ccd68d0,0x000077505ccd68d8] = 8
 nul chk table  [0x000077505ccd68d8,0x000077505ccd6900] = 40

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020514c50} 'guard-IoAF18A' '(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;' in 'de/maschmi/blog/Guard'
  # this:     rsi:rsi   = 'de/maschmi/blog/Guard'
  # parm0:    rdx:rdx   = 'kotlin/jvm/functions/Function0'
  #           [sp+0x20]  (sp of caller)
  0x000077505ccd6420:   mov    0x8(%rsi),%r10d
  0x000077505ccd6424:   movabs $0x800000000,%r11
  0x000077505ccd642e:   add    %r11,%r10
  0x000077505ccd6431:   cmp    %r10,%rax
  0x000077505ccd6434:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd643a:   xchg   %ax,%ax
  0x000077505ccd643c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd6440:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd6447:   push   %rbp
  0x000077505ccd6448:   sub    $0x10,%rsp                   ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@-1 (line 21)
  0x000077505ccd644c:   mov    0x8(%rdx),%r11d              ; implicit exception: dispatches to 0x000077505ccd6528
  0x000077505ccd6450:   cmp    $0x4000,%r11d                ;   {metadata('de/maschmi/blog/Guard$functionOneUsingAdapter$1')}
  0x000077505ccd6457:   jne    0x000077505ccd6500           ;*invokeinterface invoke {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd645d:   mov    0x10(%rdx),%r11d             ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd6461:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd6534
                                                            ;*getfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@4 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd6466:   mov    0xc(%r12,%r10,8),%ebp        ; implicit exception: dispatches to 0x000077505ccd6540
                                                            ;*getfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@7 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd646b:   mov    0x8(%r12,%rbp,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd654c
  0x000077505ccd6470:   cmp    $0x1280,%r10d                ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd6477:   jne    0x000077505ccd6510
  0x000077505ccd647d:   lea    (%r12,%rbp,8),%r10           ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd6481:   mov    0xc(%r10),%r8d               ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd6485:   mov    0x18(%r10),%r11d
  0x000077505ccd6489:   mov    0x1c(%r10),%r9d              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd648d:   mov    %r9d,0x18(%r10)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd6491:   mov    0x14(%r10),%ebx
  0x000077505ccd6495:   mov    %r11d,0x14(%r10)             ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd6499:   mov    0x20(%r10),%r11d             ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd649d:   mov    0x10(%r10),%edi
  0x000077505ccd64a1:   mov    %edi,0xc(%r10)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd64a5:   mov    %ebx,0x10(%r10)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd64a9:   mov    %r8d,%ecx
  0x000077505ccd64ac:   shr    $0x2,%ecx
  0x000077505ccd64af:   xor    %r8d,%ecx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd64b2:   mov    %r11d,%ebx
  0x000077505ccd64b5:   add    $0x587c5,%ebx
  0x000077505ccd64bb:   mov    %ebx,0x20(%r10)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd64bf:   mov    %ecx,%ebp
  0x000077505ccd64c1:   shl    %ebp
  0x000077505ccd64c3:   xor    %ecx,%ebp
  0x000077505ccd64c5:   xor    %r9d,%ebp
  0x000077505ccd64c8:   shl    $0x4,%r9d
  0x000077505ccd64cc:   xor    %r9d,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd64cf:   mov    %ebp,0x1c(%r10)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd64d3:   add    %r11d,%ebp
  0x000077505ccd64d6:   add    $0x587c5,%ebp
  0x000077505ccd64dc:   shr    $0x1f,%ebp                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::takeUpperBits@5 (line 376)
                                                            ; - kotlin.random.XorWowRandom::nextBits@5 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd64df:   test   %ebp,%ebp
  0x000077505ccd64e1:   jne    0x000077505ccd651c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.Random::nextBoolean@5 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
  0x000077505ccd64e3:   movabs $0x62ae78df0,%rax            ;   {oop("FunctionOne"{0x000000062ae78df0})}
  0x000077505ccd64ed:   add    $0x10,%rsp
  0x000077505ccd64f1:   pop    %rbp
  0x000077505ccd64f2:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd64f9:   ja     0x000077505ccd6558
  0x000077505ccd64ff:   ret
  0x000077505ccd6500:   mov    $0xffffffde,%esi
  0x000077505ccd6505:   mov    %rdx,%rbp
  0x000077505ccd6508:   data16 xchg %ax,%ax
  0x000077505ccd650b:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokeinterface invoke {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6510:   mov    $0xffffffde,%esi
  0x000077505ccd6515:   xchg   %ax,%ax
  0x000077505ccd6517:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd651c:   mov    $0xffffff45,%esi
  0x000077505ccd6521:   xchg   %ax,%ax
  0x000077505ccd6523:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.Random::nextBoolean@5 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6528:   mov    $0xfffffff6,%esi
  0x000077505ccd652d:   xchg   %ax,%ax
  0x000077505ccd652f:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokeinterface invoke {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6534:   mov    $0xfffffff6,%esi
  0x000077505ccd6539:   xchg   %ax,%ax
  0x000077505ccd653b:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*getfield adapter {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@4 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6540:   mov    $0xfffffff6,%esi
  0x000077505ccd6545:   xchg   %ax,%ax
  0x000077505ccd6547:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd654c:   mov    $0xfffffff6,%esi
  0x000077505ccd6551:   xchg   %ax,%ax
  0x000077505ccd6553:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ; - de.maschmi.blog.Guard::guard-IoAF18A@2 (line 22)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6558:   movabs $0x77505ccd64f2,%r10         ;   {internal_word}
  0x000077505ccd6562:   mov    %r10,0x360(%r15)
  0x000077505ccd6569:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd656e:   hlt
  0x000077505ccd656f:   hlt
  0x000077505ccd6570:   hlt
  0x000077505ccd6571:   hlt
  0x000077505ccd6572:   hlt
  0x000077505ccd6573:   hlt
  0x000077505ccd6574:   hlt
  0x000077505ccd6575:   hlt
  0x000077505ccd6576:   hlt
  0x000077505ccd6577:   hlt
  0x000077505ccd6578:   hlt
  0x000077505ccd6579:   hlt
  0x000077505ccd657a:   hlt
  0x000077505ccd657b:   hlt
  0x000077505ccd657c:   hlt
  0x000077505ccd657d:   hlt
  0x000077505ccd657e:   hlt
  0x000077505ccd657f:   hlt
[Exception Handler]
  0x000077505ccd6580:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd6585:   call   0x000077505ccd658a
  0x000077505ccd658a:   subq   $0x5,(%rsp)
  0x000077505ccd658f:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd6594:   hlt
  0x000077505ccd6595:   hlt
  0x000077505ccd6596:   hlt
  0x000077505ccd6597:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     534  138       4       de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke (5 bytes)
 total in heap  [0x000077505ccd6910,0x000077505ccd6ee8] = 1496
 relocation     [0x000077505ccd6a70,0x000077505ccd6a90] = 32
 main code      [0x000077505ccd6aa0,0x000077505ccd6be0] = 320
 stub code      [0x000077505ccd6be0,0x000077505ccd6bf8] = 24
 oops           [0x000077505ccd6bf8,0x000077505ccd6c08] = 16
 metadata       [0x000077505ccd6c08,0x000077505ccd6c50] = 72
 scopes data    [0x000077505ccd6c50,0x000077505ccd6d30] = 224
 scopes pcs     [0x000077505ccd6d30,0x000077505ccd6ec0] = 400
 dependencies   [0x000077505ccd6ec0,0x000077505ccd6ec8] = 8
 nul chk table  [0x000077505ccd6ec8,0x000077505ccd6ee8] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020515910} 'invoke' '()Ljava/lang/Object;' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1'
  #           [sp+0x20]  (sp of caller)
  0x000077505ccd6aa0:   mov    0x8(%rsi),%r10d
  0x000077505ccd6aa4:   movabs $0x800000000,%r11
  0x000077505ccd6aae:   add    %r11,%r10
  0x000077505ccd6ab1:   cmp    %r10,%rax
  0x000077505ccd6ab4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd6aba:   xchg   %ax,%ax
  0x000077505ccd6abc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd6ac0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd6ac7:   push   %rbp
  0x000077505ccd6ac8:   sub    $0x10,%rsp                   ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@-1 (line 9)
  0x000077505ccd6acc:   mov    0x10(%rsi),%r11d             ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6ad0:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd6b88
                                                            ;*getfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@4 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6ad5:   mov    0xc(%r12,%r10,8),%ebp        ; implicit exception: dispatches to 0x000077505ccd6b94
                                                            ;*getfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@7 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6ada:   mov    0x8(%r12,%rbp,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd6ba0
  0x000077505ccd6adf:   cmp    $0x1280,%r10d                ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd6ae6:   jne    0x000077505ccd6b6f
  0x000077505ccd6aec:   lea    (%r12,%rbp,8),%r10           ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6af0:   mov    0xc(%r10),%r8d               ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6af4:   mov    0x18(%r10),%r11d
  0x000077505ccd6af8:   mov    0x1c(%r10),%r9d              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6afc:   mov    %r9d,0x18(%r10)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b00:   mov    0x14(%r10),%ebx
  0x000077505ccd6b04:   mov    %r11d,0x14(%r10)             ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b08:   mov    0x20(%r10),%r11d             ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b0c:   mov    0x10(%r10),%edi
  0x000077505ccd6b10:   mov    %edi,0xc(%r10)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b14:   mov    %ebx,0x10(%r10)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b18:   mov    %r8d,%ecx
  0x000077505ccd6b1b:   shr    $0x2,%ecx
  0x000077505ccd6b1e:   xor    %r8d,%ecx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b21:   mov    %r11d,%ebx
  0x000077505ccd6b24:   add    $0x587c5,%ebx
  0x000077505ccd6b2a:   mov    %ebx,0x20(%r10)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b2e:   mov    %ecx,%ebp
  0x000077505ccd6b30:   shl    %ebp
  0x000077505ccd6b32:   xor    %ecx,%ebp
  0x000077505ccd6b34:   xor    %r9d,%ebp
  0x000077505ccd6b37:   shl    $0x4,%r9d
  0x000077505ccd6b3b:   xor    %r9d,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b3e:   mov    %ebp,0x1c(%r10)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b42:   add    %r11d,%ebp
  0x000077505ccd6b45:   add    $0x587c5,%ebp
  0x000077505ccd6b4b:   shr    $0x1f,%ebp                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::takeUpperBits@5 (line 376)
                                                            ; - kotlin.random.XorWowRandom::nextBits@5 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
  0x000077505ccd6b4e:   test   %ebp,%ebp
  0x000077505ccd6b50:   jne    0x000077505ccd6b7c           ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@-1 (line 9)
  0x000077505ccd6b52:   movabs $0x62ae78df0,%rax            ;   {oop("FunctionOne"{0x000000062ae78df0})}
  0x000077505ccd6b5c:   add    $0x10,%rsp
  0x000077505ccd6b60:   pop    %rbp
  0x000077505ccd6b61:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd6b68:   ja     0x000077505ccd6bac
  0x000077505ccd6b6e:   ret
  0x000077505ccd6b6f:   mov    $0xffffffde,%esi
  0x000077505ccd6b74:   data16 xchg %ax,%ax
  0x000077505ccd6b77:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6b7c:   mov    $0xffffff45,%esi
  0x000077505ccd6b81:   xchg   %ax,%ax
  0x000077505ccd6b83:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.Random::nextBoolean@5 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6b88:   mov    $0xfffffff6,%esi
  0x000077505ccd6b8d:   xchg   %ax,%ax
  0x000077505ccd6b8f:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*getfield adapter {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@4 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6b94:   mov    $0xfffffff6,%esi
  0x000077505ccd6b99:   xchg   %ax,%ax
  0x000077505ccd6b9b:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6ba0:   mov    $0xfffffff6,%esi
  0x000077505ccd6ba5:   xchg   %ax,%ax
  0x000077505ccd6ba7:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 9)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd6bac:   movabs $0x77505ccd6b61,%r10         ;   {internal_word}
  0x000077505ccd6bb6:   mov    %r10,0x360(%r15)
  0x000077505ccd6bbd:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd6bc2:   hlt
  0x000077505ccd6bc3:   hlt
  0x000077505ccd6bc4:   hlt
  0x000077505ccd6bc5:   hlt
  0x000077505ccd6bc6:   hlt
  0x000077505ccd6bc7:   hlt
  0x000077505ccd6bc8:   hlt
  0x000077505ccd6bc9:   hlt
  0x000077505ccd6bca:   hlt
  0x000077505ccd6bcb:   hlt
  0x000077505ccd6bcc:   hlt
  0x000077505ccd6bcd:   hlt
  0x000077505ccd6bce:   hlt
  0x000077505ccd6bcf:   hlt
  0x000077505ccd6bd0:   hlt
  0x000077505ccd6bd1:   hlt
  0x000077505ccd6bd2:   hlt
  0x000077505ccd6bd3:   hlt
  0x000077505ccd6bd4:   hlt
  0x000077505ccd6bd5:   hlt
  0x000077505ccd6bd6:   hlt
  0x000077505ccd6bd7:   hlt
  0x000077505ccd6bd8:   hlt
  0x000077505ccd6bd9:   hlt
  0x000077505ccd6bda:   hlt
  0x000077505ccd6bdb:   hlt
  0x000077505ccd6bdc:   hlt
  0x000077505ccd6bdd:   hlt
  0x000077505ccd6bde:   hlt
  0x000077505ccd6bdf:   hlt
[Exception Handler]
  0x000077505ccd6be0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd6be5:   call   0x000077505ccd6bea
  0x000077505ccd6bea:   subq   $0x5,(%rsp)
  0x000077505ccd6bef:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd6bf4:   hlt
  0x000077505ccd6bf5:   hlt
  0x000077505ccd6bf6:   hlt
  0x000077505ccd6bf7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     539  139       4       de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke (13 bytes)
 total in heap  [0x000077505ccd6f10,0x000077505ccd74d8] = 1480
 relocation     [0x000077505ccd7070,0x000077505ccd7090] = 32
 main code      [0x000077505ccd70a0,0x000077505ccd71e0] = 320
 stub code      [0x000077505ccd71e0,0x000077505ccd71f8] = 24
 oops           [0x000077505ccd71f8,0x000077505ccd7208] = 16
 metadata       [0x000077505ccd7208,0x000077505ccd7248] = 64
 scopes data    [0x000077505ccd7248,0x000077505ccd7320] = 216
 scopes pcs     [0x000077505ccd7320,0x000077505ccd74b0] = 400
 dependencies   [0x000077505ccd74b0,0x000077505ccd74b8] = 8
 nul chk table  [0x000077505ccd74b8,0x000077505ccd74d8] = 32

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000775020515870} 'invoke' '()Ljava/lang/String;' in 'de/maschmi/blog/Guard$functionOneUsingAdapter$1'
  #           [sp+0x20]  (sp of caller)
  0x000077505ccd70a0:   mov    0x8(%rsi),%r10d
  0x000077505ccd70a4:   movabs $0x800000000,%r11
  0x000077505ccd70ae:   add    %r11,%r10
  0x000077505ccd70b1:   cmp    %r10,%rax
  0x000077505ccd70b4:   jne    0x000077505c787d80           ;   {runtime_call ic_miss_stub}
  0x000077505ccd70ba:   xchg   %ax,%ax
  0x000077505ccd70bc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000077505ccd70c0:   mov    %eax,-0x14000(%rsp)
  0x000077505ccd70c7:   push   %rbp
  0x000077505ccd70c8:   sub    $0x10,%rsp                   ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@-1 (line 10)
  0x000077505ccd70cc:   mov    0x10(%rsi),%r11d             ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@1 (line 10)
  0x000077505ccd70d0:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd7188
                                                            ;*getfield adapter {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@4 (line 10)
  0x000077505ccd70d5:   mov    0xc(%r12,%r10,8),%ebp        ; implicit exception: dispatches to 0x000077505ccd7194
                                                            ;*getfield rnd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@7 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd70da:   mov    0x8(%r12,%rbp,8),%r10d       ; implicit exception: dispatches to 0x000077505ccd71a0
  0x000077505ccd70df:   cmp    $0x1280,%r10d                ;   {metadata('kotlin/random/XorWowRandom')}
  0x000077505ccd70e6:   jne    0x000077505ccd716f
  0x000077505ccd70ec:   lea    (%r12,%rbp,8),%r10           ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd70f0:   mov    0xc(%r10),%r8d               ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@1 (line 40)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd70f4:   mov    0x18(%r10),%r11d
  0x000077505ccd70f8:   mov    0x1c(%r10),%r9d              ;*getfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@36 (line 45)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd70fc:   mov    %r9d,0x18(%r10)              ;*putfield w {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@42 (line 46)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd7100:   mov    0x14(%r10),%ebx
  0x000077505ccd7104:   mov    %r11d,0x14(%r10)             ;*putfield z {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@32 (line 44)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd7108:   mov    0x20(%r10),%r11d             ;*getfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@64 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd710c:   mov    0x10(%r10),%edi
  0x000077505ccd7110:   mov    %edi,0xc(%r10)               ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@16 (line 42)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd7114:   mov    %ebx,0x10(%r10)              ;*putfield y {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@24 (line 43)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd7118:   mov    %r8d,%ecx
  0x000077505ccd711b:   shr    $0x2,%ecx
  0x000077505ccd711e:   xor    %r8d,%ecx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@9 (line 41)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd7121:   mov    %r11d,%ebx
  0x000077505ccd7124:   add    $0x587c5,%ebx
  0x000077505ccd712a:   mov    %ebx,0x20(%r10)              ;*putfield addend {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@70 (line 49)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd712e:   mov    %ecx,%ebp
  0x000077505ccd7130:   shl    %ebp
  0x000077505ccd7132:   xor    %ecx,%ebp
  0x000077505ccd7134:   xor    %r9d,%ebp
  0x000077505ccd7137:   shl    $0x4,%r9d
  0x000077505ccd713b:   xor    %r9d,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@55 (line 47)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd713e:   mov    %ebp,0x1c(%r10)              ;*putfield v {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.XorWowRandom::nextInt@59 (line 48)
                                                            ; - kotlin.random.XorWowRandom::nextBits@1 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd7142:   add    %r11d,%ebp
  0x000077505ccd7145:   add    $0x587c5,%ebp
  0x000077505ccd714b:   shr    $0x1f,%ebp                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - kotlin.random.RandomKt::takeUpperBits@5 (line 376)
                                                            ; - kotlin.random.XorWowRandom::nextBits@5 (line 54)
                                                            ; - kotlin.random.Random::nextBoolean@2 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
  0x000077505ccd714e:   test   %ebp,%ebp
  0x000077505ccd7150:   jne    0x000077505ccd717c           ;*synchronization entry
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@-1 (line 10)
  0x000077505ccd7152:   movabs $0x62ae78df0,%rax            ;   {oop("FunctionOne"{0x000000062ae78df0})}
  0x000077505ccd715c:   add    $0x10,%rsp
  0x000077505ccd7160:   pop    %rbp
  0x000077505ccd7161:   cmp    0x348(%r15),%rsp             ;   {poll_return}
  0x000077505ccd7168:   ja     0x000077505ccd71ac
  0x000077505ccd716e:   ret
  0x000077505ccd716f:   mov    $0xffffffde,%esi
  0x000077505ccd7174:   data16 xchg %ax,%ax
  0x000077505ccd7177:   call   0x000077505c78d600           ; ImmutableOopMap {rbp=NarrowOop }
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd717c:   mov    $0xffffff45,%esi
  0x000077505ccd7181:   xchg   %ax,%ax
  0x000077505ccd7183:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) kotlin.random.Random::nextBoolean@5 (line 163)
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd7188:   mov    $0xfffffff6,%esi
  0x000077505ccd718d:   xchg   %ax,%ax
  0x000077505ccd718f:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*getfield adapter {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) de.maschmi.blog.Guard::access$getAdapter$p@1 (line 6)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@4 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd7194:   mov    $0xfffffff6,%esi
  0x000077505ccd7199:   xchg   %ax,%ax
  0x000077505ccd719b:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual methodToBeGuarded {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd71a0:   mov    $0xfffffff6,%esi
  0x000077505ccd71a5:   xchg   %ax,%ax
  0x000077505ccd71a7:   call   0x000077505c78d600           ; ImmutableOopMap {}
                                                            ;*invokevirtual nextBoolean {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - de.maschmi.blog.Adapter::methodToBeGuarded@10 (line 10)
                                                            ; - de.maschmi.blog.Guard$functionOneUsingAdapter$1::invoke@9 (line 10)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000077505ccd71ac:   movabs $0x77505ccd7161,%r10         ;   {internal_word}
  0x000077505ccd71b6:   mov    %r10,0x360(%r15)
  0x000077505ccd71bd:   jmp    0x000077505c78e700           ;   {runtime_call SafepointBlob}
  0x000077505ccd71c2:   hlt
  0x000077505ccd71c3:   hlt
  0x000077505ccd71c4:   hlt
  0x000077505ccd71c5:   hlt
  0x000077505ccd71c6:   hlt
  0x000077505ccd71c7:   hlt
  0x000077505ccd71c8:   hlt
  0x000077505ccd71c9:   hlt
  0x000077505ccd71ca:   hlt
  0x000077505ccd71cb:   hlt
  0x000077505ccd71cc:   hlt
  0x000077505ccd71cd:   hlt
  0x000077505ccd71ce:   hlt
  0x000077505ccd71cf:   hlt
  0x000077505ccd71d0:   hlt
  0x000077505ccd71d1:   hlt
  0x000077505ccd71d2:   hlt
  0x000077505ccd71d3:   hlt
  0x000077505ccd71d4:   hlt
  0x000077505ccd71d5:   hlt
  0x000077505ccd71d6:   hlt
  0x000077505ccd71d7:   hlt
  0x000077505ccd71d8:   hlt
  0x000077505ccd71d9:   hlt
  0x000077505ccd71da:   hlt
  0x000077505ccd71db:   hlt
  0x000077505ccd71dc:   hlt
  0x000077505ccd71dd:   hlt
  0x000077505ccd71de:   hlt
  0x000077505ccd71df:   hlt
[Exception Handler]
  0x000077505ccd71e0:   jmp    0x000077505c828980           ;   {no_reloc}
[Deopt Handler Code]
  0x000077505ccd71e5:   call   0x000077505ccd71ea
  0x000077505ccd71ea:   subq   $0x5,(%rsp)
  0x000077505ccd71ef:   jmp    0x000077505c78d9a0           ;   {runtime_call DeoptimizationBlob}
  0x000077505ccd71f4:   hlt
  0x000077505ccd71f5:   hlt
  0x000077505ccd71f6:   hlt
  0x000077505ccd71f7:   hlt
--------------------------------------------------------------------------------
[/Disassembly]
